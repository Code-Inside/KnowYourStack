{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29041732346","Type":"PullRequestEvent","CreatedAt":"2023-05-13T03:06:01","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9484","RelatedDescription":"Merged pull request \"Users/lilixie/form label\" (#9484) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add labels to profiles->Organizations->Members\r\n* Add css for related changes\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9482"},{"Id":"29035841159","Type":"PullRequestEvent","CreatedAt":"2023-05-12T18:07:57","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9468","RelatedDescription":"Merged pull request \"Admin panel for adding/remove user email address for password authentication.\" (#9468) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Show list of exception list for password authentication\r\n* Remove/Add email from exception list \r\n* View the user credential if is IsAADorMACredential\r\n\r\n\r\n\r\n[rec-screen (1).webm](https://user-images.githubusercontent.com/64443925/232591126-837e0393-764d-44ef-a783-e7316aabbcbd.webm)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4731"},{"Id":"29025247086","Type":"IssuesEvent","CreatedAt":"2023-05-12T10:21:24","Actor":"kodiceone","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9498","RelatedDescription":"Opened issue \"[Feature]: Adding Azure domain to Trusted Domain\" (#9498) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nAt this moment is not possible to embed in the markdown the Release badge from Azure DevOps Pipeline.\r\nThe domain that hosts the badge is: vsrm.dev.azure.com\r\n\r\nMeanwhile dev.azure.com is in the Trusted Domains, **vsrm**.dev.azure.com is not.\r\n\r\nThank you, best\n\n### The Elevator Pitch\n\nJust adding Release badges in the README.md would be nice ;)\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29015768386","Type":"IssuesEvent","CreatedAt":"2023-05-12T00:28:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9497","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Can't install package, but .net version is right.\" (#9497) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nI want to install PowerShell package by Microsoft in VSCode, but I'm getting this weird error: \r\n```\r\nerror: NU1202: Package PowerShell 7.3.4 is not compatible with net7.0 (.NETCoreApp,Version=v7.0). Package PowerShell 7.3.4 supports: net7.0 (.NETCoreApp,Version=v7.0) / any\r\nerror: NU1212: Invalid project-package combination for PowerShell 7.3.4. DotnetToolReference project style can only contain references of the DotnetTool type \r\nerror: Package 'PowerShell' is incompatible with 'all' frameworks in project 'd:/Projects/Eva/Source/Eva.csproj'.\r\n```\r\n\r\n### Repro Steps\r\n\r\nSteps to reproduce:\r\n1. Open Nuget Gallery\r\n2. Search for PowerShell package.\r\n3. Try to install package\r\n\r\n### Expected Behavior\r\n\r\nPackage should install fine lol\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"28989299216","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:09:24","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9423","RelatedDescription":"Closed issue \"[A11y][ScreenReader]More Information link on search results page is ambiguous\" (#9423) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1745384\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nCheck whether \"More Information\" link is descriptive or not.\r\n\r\nNotes:\r\nIt should be sufficient for us to augment the More Information link to read \"More Information about {PackageId}\""},{"Id":"28989297178","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:09:13","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9422","RelatedDescription":"Closed issue \"[A11y]Screen reader starts over from beginning when applying filters.\" (#9422) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1749979\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\n\"Packages returned for json\" screen gets opened.\r\nTab till filter present at left side of screen and apply any filter.\r\nObserve that screen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nActual Result:\r\nScreen reader is announcing all the details from the beginning when we apply filter.\r\n\r\nExpected Result:\r\nScreen reader should not announce all the details from the beginning when we apply filter, it should only announce the status message that \"812 packages returned for json\"\r\n\r\nNotes:\r\nUnfortunately, I believe this is relatively nontrivial to fix on our side. From my understanding of this issue and the feature, this is caused by the fact that hitting applying appear to redo the search with filters enabled, causing a page refresh. When the page refreshes, context on keyboard nav etc is lost. In theory, it should be possible to pass context to the next page, but I am unsure that this the right fix long term."},{"Id":"28989295575","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:09:05","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9418","RelatedDescription":"Closed issue \"[A11y][ScreenReader]Package Manager tab on Package details reads as both selected and expanded\" (#9418) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744434\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen Reader: JAWS, NVDA\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"PackageReference\" control and hit enter.\r\nObserve whether screen reader should announce only one state as 'selected' or not.\r\n\r\nActual Result:\r\nScreen reader is announcing two states as 'selected and expanded' for \"package reference\" tab item.\r\n\r\nExpected Result:\r\nScreen reader should announce only one states as 'selected' for \"package reference\" tab item.\r\n\r\nNotes:\r\nThese controls appears to have aria-expanded defined on them for some reason. I am unsure why this is the case, but it seems like removing it will address the issue here. However, I don't know what other issues it might introduce."},{"Id":"28989292924","Type":"IssuesEvent","CreatedAt":"2023-05-11T03:08:52","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9421","RelatedDescription":"Closed issue \"[A11y][ScreenReader]Compatible Framework tab does not convery compatible vs computed additional frameworks\" (#9421) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1746058\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: https://dev.nugettest.org/\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\nScreen Reader: JAWS.\r\n\r\nRepro Steps:\r\nHit the URL: https://dev.nugettest.org/\r\n\"NuGet\" screen will open.\r\nTab to search button and press enter.\r\n\"Packages\" screen will open then tab to any package like \"Newtonsoft.Json \" and select it by pressing enter key.\r\n\"Newtonsoft.Json \" package screen will open.\r\nTab to \"Frameworks\" tab and press enter.\r\nObserve whether screen reader is not announcing as a Compatible target framework(s) for dark blue color version.\r\n\r\nActual Result:\r\nScreen reader is not announcing category of framework for version which are differentiated with color. For ex. Compatible target framework(s) for dark blue color version.\r\n\r\nExpected Result:\r\nScreen reader should announce category of framework for version which are differentiated with color.\r\n\r\nNotes:\r\nThe screen reader on this is already fairly verbose. I am unsure how we would do this without making even more verbose. It may be ok to increase the verbosity, but it doesn't feel like a good solution to me."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29035228722","Type":"IssuesEvent","CreatedAt":"2023-05-12T17:34:49","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12586","RelatedDescription":"Opened issue \"Package Source Mapping status for selected package in Details Pane\" (#12586) at NuGet/Home","RelatedBody":"Part of https://github.com/NuGet/Home/issues/11365"},{"Id":"29034066843","Type":"IssuesEvent","CreatedAt":"2023-05-12T16:34:13","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12571","RelatedDescription":"Closed issue \"[Bug]: Msbuild Timeout Exception on NuGet command\" (#12571) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#8703**\r\n- Please respond to @DONAR144-release.\r\n\r\n---\r\n\r\n_From @DONAR144-release on Tuesday, April 25, 2023 11:08:35 AM_\r\n\r\n### Issue Description\r\n\r\nThe NuGet command stage in my DevOps pipelines fails intermittently on the same commits. This behavior is non-deterministic and the pipeline will usually run to completion when triggered again.\r\n\r\n### Steps to Reproduce\r\n\r\nThis has happened across a few of my pipelines all using similar version of the following YAML file. The application is an Azure Function app targeting .NET 6\r\n\r\n\r\ntrigger:\r\n  branches:\r\n    include:\r\n    - main\r\n    - develop\r\n\r\npool:\r\n  vmImage: 'windows-latest'\r\n\r\nvariables:\r\n  solutionGeneralApi: '**/SOLUTIONNAMEREDACTED.sln'\r\n  buildPlatform: 'Any CPU'\r\n  buildConfiguration: 'Release'\r\n\r\nsteps:\r\n- task: NuGetToolInstaller@1\r\n\r\n- task: NuGetCommand@2\r\n  inputs:\r\n    restoreSolution: '$(solutionGeneralApi)'\r\n\r\n- task: DotNetCoreCLI@2\r\n  inputs:\r\n    command: publish\r\n    arguments: '--configuration Release --output publish_output'\r\n    projects: '$(solutionGeneralApi)'\r\n    publishWebProjects: false\r\n    modifyOutputPath: false\r\n    zipAfterPublish: false\r\n\r\n- task: ArchiveFiles@2\r\n  displayName: \"Archive files\"\r\n  inputs:\r\n    rootFolderOrFile: \"$(System.DefaultWorkingDirectory)/publish_output\"\r\n    includeRootFolder: false\r\n    archiveFile: \"$(System.DefaultWorkingDirectory)/GeneralApi.zip\"\r\n\r\n- task: VSTest@2\r\n  inputs:\r\n    platform: '$(buildPlatform)'\r\n    configuration: '$(buildConfiguration)'\r\n\r\n- task: PublishBuildArtifacts@1\r\n  inputs:\r\n    PathtoPublish: '$(System.DefaultWorkingDirectory)/GeneralApi.zip'\r\n    artifactName: 'drop'\r\n\r\n\r\n### Expected Behavior\r\n\r\nRunning restore with 2 concurrent jobs.\r\nReading project file D:\\a\\1\\s\\FOLDERNAMEREDACTED\\SOLUTIONNAMEREDACTED.csproj.\r\nRestoring packages for D:\\a\\1\\s\\FOLDERNAMEREDACTED\\SOLUTIONNAMEREDACTED.csproj...\r\nRestoring packages for .NETCoreApp,Version=v6.0...\r\n\r\n### Actual Behavior\r\n\r\n2023-04-25T09:10:39.1353098Z NuGet Version: 6.5.0.154\r\n2023-04-25T09:10:39.1353546Z MsBuild timeout out while trying to get project to project references.\r\n\r\n### Analysis\r\n\r\n2023-04-25T09:08:27.3804766Z ##[section]Starting: NuGetCommand\r\n2023-04-25T09:08:27.3914860Z ==============================================================================\r\n2023-04-25T09:08:27.3914999Z Task         : NuGet\r\n2023-04-25T09:08:27.3915047Z Description  : Restore, pack, or push NuGet packages, or run a NuGet command. Supports NuGet.org and authenticated feeds like Azure Artifacts and MyGet. Uses NuGet.exe and works with .NET Framework apps. For .NET Core and .NET Standard apps, use the .NET Core task.\r\n2023-04-25T09:08:27.3915278Z Version      : 2.219.1\r\n2023-04-25T09:08:27.3915341Z Author       : Microsoft Corporation\r\n2023-04-25T09:08:27.3915405Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/package/nuget\r\n2023-04-25T09:08:27.3915493Z ==============================================================================\r\n2023-04-25T09:08:29.9355834Z [command]C:\\Windows\\system32\\chcp.com 65001\r\n2023-04-25T09:08:29.9451564Z Active code page: 65001\r\n2023-04-25T09:08:29.9740804Z Detected NuGet version 6.5.0.154 / 6.5.0+069970c727b254636c1ad29c5a7a767081482a9a.069970c727b254636c1ad29c5a7a767081482a9a\r\n2023-04-25T09:08:29.9798151Z [command]C:\\hostedtoolcache\\windows\\NuGet\\6.5.0\\x64\\nuget.exe sources Add -NonInteractive -Name NuGetOrg -Source https://api.nuget.org/v3/index.json -ConfigFile D:\\a\\1\\Nuget\\tempNuGet_1703.config\r\n2023-04-25T09:08:32.8272447Z Package source with Name: NuGetOrg added successfully.\r\n2023-04-25T09:08:32.8299269Z [command]C:\\hostedtoolcache\\windows\\NuGet\\6.5.0\\x64\\nuget.exe restore D:\\a\\1\\s\\SOLUTIONNAMEREDACTED.sln -Verbosity Detailed -NonInteractive -ConfigFile D:\\a\\1\\Nuget\\tempNuGet_1703.config\r\n2023-04-25T09:10:39.1352395Z \r\n2023-04-25T09:10:39.1353098Z NuGet Version: 6.5.0.154\r\n2023-04-25T09:10:39.1353546Z MsBuild timeout out while trying to get project to project references.\r\n2023-04-25T09:10:39.1354369Z MSBuild auto-detection: using msbuild version '17.5.1.16304' from 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\n2023-04-25T09:10:39.1355097Z NuGet.Commands.CommandException: MsBuild timeout out while trying to get project to project references.\r\n2023-04-25T09:10:39.1355292Z MSBuild P2P timeout [ms]: 120000\r\n2023-04-25T09:10:39.1355556Z    at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\r\n2023-04-25T09:10:39.1357058Z C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\wtuzyfc4.dye.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\y4nuxu5n.tse.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:DisableCheckingDuplicateNuGetItems=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\hostedtoolcache\\windows\\NuGet\\6.5.0\\x64\\nuget.exe\" /p:RestoreSolutionDirectory=\"D:\\a\\1\\s\\\\\" /p:RestoreConfigFile=\"D:\\a\\1\\Nuget\\tempNuGet_1703.config\" /p:SolutionDir=\"D:\\a\\1\\s\\\\\" /p:SolutionName=\"SOLUTIONNAMEREDACTED\"\r\n2023-04-25T09:10:39.1358512Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1358727Z NuGet.Commands.CommandException: MsBuild timeout out while trying to get project to project references.\r\n2023-04-25T09:10:39.1359345Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1359749Z    at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\r\n2023-04-25T09:10:39.1361068Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1361402Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1367086Z    at NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext()\r\n2023-04-25T09:10:39.1367304Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1367836Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1369262Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1369857Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1370090Z    at NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext()\r\n2023-04-25T09:10:39.1370444Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1370818Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1371117Z    at NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext()\r\n2023-04-25T09:10:39.1371328Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1371684Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1371911Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1372208Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1372419Z    at NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext()\r\n2023-04-25T09:10:39.1372912Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1387968Z    at NuGet.CommandLine.RestoreCommand.<DetermineRestoreInputsAsync>d__62.MoveNext()\r\n2023-04-25T09:10:39.1388674Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1389157Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1389646Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1390469Z    at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n2023-04-25T09:10:39.1391028Z --- End of stack trace from previous location where exception was thrown ---\r\n2023-04-25T09:10:39.1391500Z    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2023-04-25T09:10:39.1391981Z    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2023-04-25T09:10:39.1392438Z    at NuGet.CommandLine.Command.Execute()\r\n2023-04-25T09:10:39.1392889Z    at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n2023-04-25T09:10:39.1770491Z ##[error]The nuget command failed with exit code(1) and error(MsBuild timeout out while trying to get project to project references.\r\nNuGet.Commands.CommandException: MsBuild timeout out while trying to get project to project references.\r\n   at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<GetDependencyGraphSpecAsync>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineInputsFromMSBuildAsync>d__63.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineRestoreInputsAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args))\r\n2023-04-25T09:10:39.1780867Z ##[error]Packages failed to restore\r\n2023-04-25T09:10:39.1788079Z ##[section]Finishing: NuGetCommand\r\n\r\n### Versions & Configurations\r\n\r\nLocal machine: \r\nMSBuild version 17.4.1+9a89d02ff for .NET Framework\r\n17.4.1.60106\r\n\r\nPipeline: \r\nMSBuild version 17.5.1+f6fdcf537 for .NET\r\n"},{"Id":"29033430269","Type":"IssuesEvent","CreatedAt":"2023-05-12T16:03:37","Actor":"meareindel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12585","RelatedDescription":"Opened issue \"dotnet list package --format json --include-transitive includes project references as transitive packages.\" (#12585) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n7.0.203\n\n### Worked before?\n\nno\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIf I have a project that is referencing another project, then the beforementioned command gives me that referenced project as a transitive package dependency.\r\n\r\nI'm not sure if this is really bug, perhaps it's just a need of some differentiation between project and package in output, for example, additional \"type\" property in transitivePackages item, saying if it's a \"Project\" reference or a \"Package\".\r\n\r\nSteps to reproduce:\r\n1. Download the archive from attachment and unpack it somewhere\r\n2. Run dotnet restore in unpacked folder\r\n3. Run dotnet list package --format json --include-transitive\r\n\r\nThe output says that DotnetListJsonTransitivesIssue project has \"ReferencedProject\" in its transitive packages (or at least doesn't provide an information if this is really a package from some nuget source or just a project). \r\n\r\nAlso, if it should include projects in output, in this very case the \"ReferencedProject\" should be within the \"topLevelPackages\" node\r\n\r\n[DotnetListJsonTransitivesIssue.zip](https://github.com/NuGet/Home/files/11465827/DotnetListJsonTransitivesIssue.zip)\r\n\n\n### Verbose Logs\n\n```shell\n{\r\n  \"version\": 1,\r\n  \"parameters\": \"--include-transitive\",\r\n  \"projects\": [\r\n    {\r\n      \"path\": \"C:/Users/User/source/repos/exp/DotnetListJsonTransitivesIssue/DotnetListJsonTransitivesIssue/DotnetListJsonTransitivesIssue.csproj\",\r\n      \"frameworks\": [\r\n        {\r\n          \"framework\": \"net7.0\",\r\n          \"transitivePackages\": [\r\n            {\r\n              \"id\": \"ReferencedProject\",\r\n              \"resolvedVersion\": \"1.0.0\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"path\": \"C:/Users/User/source/repos/exp/DotnetListJsonTransitivesIssue/ReferencedProject/ReferencedProject.csproj\",\r\n      \"frameworks\": [\r\n        {\r\n          \"framework\": \"net7.0\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\n```\n"},{"Id":"29014165267","Type":"IssuesEvent","CreatedAt":"2023-05-11T22:12:30","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12584","RelatedDescription":"Opened issue \"Warn when ProjectReference conditions may lead to missing assets (`DllNotFoundException`: `The specified module could not be found.`)\" (#12584) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nIt's a known problem that `packages.config` does not support transitivity for runtime assembly references. There is nothing in VS to point out that such a `ProjectReference` is in effect.\n\n### Desired Behavior\n\nConsider a UX that can highlight this scenario to customers before they get into trouble. \r\nSome ideas: \r\n1. a warning stating that a project reference uses PR, while your consuming project uses PC, and this can lead to unexpected behavior. \r\n2. Point to a new docs page with an example of a package where this would occur, and how to workaround it via `dotnet publish`, or similar. Also, can link to the PackageReference migrator instructions in case that's an option for the customer.\n\n### Additional Context\n\nAn example package and exception is below. These .SNI assemblies are runtime dependencies, so t\r\nThe SNI has a targets file that is manually copying them to the output directory.\r\n\r\n> System.DllNotFoundException: 'Unable to load DLL 'Microsoft.Data.SqlClient.SNI.x64.dll': The specified module could not be \r\nfound. (Exception from HRESULT: 0x8007007E)'\r\n\r\nExample ticket: https://developercommunity.visualstudio.com/t/DLL-not-found-for-NuGet-package/10338932"},{"Id":"29010812444","Type":"IssuesEvent","CreatedAt":"2023-05-11T19:10:47","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12583","RelatedDescription":"Opened issue \"Support viewing README files in Visual Studio\" (#12583) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nLast December, it was announced that you can edit and render markdown files now in Visual Studio. \r\n\r\nhttps://devblogs.microsoft.com/visualstudio/write-markdown-without-leaving-visual-studio/\r\n\r\nIt is a regular ask from the developer community to be able to read READMEs of packages while they are inside the PM UI whether browsing or getting started with a NuGet package. \r\n\r\nDevelopers should see a README in a tab similar to the [NuGet.org re-designed tabs](https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/):\r\n\r\n![image](https://github.com/NuGet/Home/assets/1288848/e9f08ccb-2f34-4b25-9d8f-a27e439cc304)\r\n\r\nInside of Visual Studio:\r\n\r\n![image](https://github.com/NuGet/Home/assets/1288848/bb080e1d-5a8f-4be7-b116-660fc193a2ff)\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29009676589","Type":"IssuesEvent","CreatedAt":"2023-05-11T18:15:44","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12582","RelatedDescription":"Closed issue \"Transitive packages don’t show in the “Installed” tab until setting the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable \" (#12582) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.7.0.38\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:   \r\n1. Create a .NET Core Console App project via VS.   \r\n2. Right-click the project in Solution Explorer and select ‘Manage NuGet Packages…’ menu item to open PM UI.   \r\n3. Click “Browse” tab, search a package (e.g. “Microsoft.EntityFrameworkCore”) that has dependencies, select a package version “6.0.4” in the \"Version\" drop-down list in the right panel and click the “Install” button on the right.   \r\n4. Click “OK” button in the “Preview Changes” dialog and click “I Accept” button in the “License Acceptance” dialog.   \r\n5. Go to “Installed” tab.  \r\n\r\n#### Expected:   \r\nTransitive packages should show in the “Installed” tab. “Transitive packages” label is expanded by default and all the transitive packages showed in the “Transitive packages” list (under the “Top-level packages” list).  \r\n\r\n#### Actual:   \r\nTransitive packages don’t show in the “Installed” tab as below screenshot.  \r\n![image](https://github.com/NuGet/Home/assets/84695155/716abd8c-870a-4ddb-aa28-77cb5f76b186)\r\n#### Notes:  \r\n\r\n1. The repro rate is 80%.   \r\n2. The issue will not repro after setting the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable to 1 and reopen the same solution. \r\n3. it also repro on VS Main\\33710.149 + NuGet Client Dev\\6.7.0.36. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-05-13T03:30:24.1939868Z","RunDurationInMilliseconds":1430}