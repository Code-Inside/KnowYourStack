{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14662854238","Type":"IssuesEvent","CreatedAt":"2020-12-29T08:20:10","Actor":"h1213159982","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8365","RelatedDescription":"Opened issue \"Private nuget server cannot upload icon\" (#8365) at NuGet/NuGetGallery","RelatedBody":"我安装Nuget.Server包创建的私有nuget服务器，但是上传的包无法显示图标，nuget.org上可以正常显示\r\n\r\nI install \"Nuget.Server\" Package create private nuget server,But the uploaded package cannot display the icon,\"nuget.org\" it can be displayed normally\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14737136159","Type":"IssuesEvent","CreatedAt":"2021-01-07T00:58:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10403","RelatedDescription":"Closed issue \"_GenerateRestoreProjectPathWalk is too slow.\" (#10403) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nLatest stable dotnet and all previous versions that I know of are affected.\r\nALL OS\r\nALL environments\r\nWorked before? No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Have a complex solution with dependencies all over the place\r\n\r\n2. Execute `dotnet restore /clp:PerformanceSummary SolutionName.sln`\r\n\r\n3. 124286 ms  _GenerateRestoreProjectPathWalk          257 calls\r\n \r\n### Verbose Logs\r\nI can't provide these. \r\n\r\n\r\nI believe this abomination is the reason: https://github.com/NuGet/NuGet.Client/blob/b0fef98e6328948e7669297d6869fa792b39e805/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets#L1050  \r\nI don't know if this sorts the lists, compares sanely, uses keys, hashtables or whatnot properly or not. And I think this repeats some work because I see no way an XML like that is deserialized into an object that understands the context properly. \r\nAnyway, where I come from it takes at most a millisecond to insert ~250 nodes in a dependency tree. not 124 seconds. And I can't understand how on earth a high profile project could let this be. Wasn't there anyone involved in the project that would say \"The dependency resolver is the most interesting part of any build system and I'm gonna science the shit out of it?\"\r\n"},{"Id":"14736671451","Type":"IssuesEvent","CreatedAt":"2021-01-06T23:39:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10346","RelatedDescription":"Closed issue \"Dotnet pack command creates unwanted trash folders on Windows\" (#10346) at NuGet/Home","RelatedBody":"While investigating [issue#5127](https://github.com/NuGet/Home/issues/5127),  I ran `dotnet pack --include-symbols --output '../Nugets'` on my Windows machine. \r\nExpected bevahior is :\r\n1. create `Nugets` folder on upper level \r\n2. Or simply fail due to bad formatted path.\r\n\r\nActual bevahior is: It creates a broken folder for windows without any error message. It seems this command format is for MAC/Linux but nothing prevents it from running on Windows and create unwanted trash folder. Since name is not normal ASCII keys we can't easily delete it. I feel this one is polluting production or work environment, so we need to prevent it happening. It shouldn't  create this one or simply fail stating specified path is not valid.\r\n\r\n![image](https://user-images.githubusercontent.com/8766776/100803581-4055fc80-33e0-11eb-9078-21ff017f4418.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8766776/100678480-1f2ed680-3322-11eb-9033-600a149503ea.png)\r\n![image](https://user-images.githubusercontent.com/8766776/100678531-3e2d6880-3322-11eb-9045-a54887096e46.png)\r\n"},{"Id":"14735915635","Type":"IssuesEvent","CreatedAt":"2021-01-06T21:52:35","Actor":"live-user0001","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10431","RelatedDescription":"Closed issue \"Window\" (#10431) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14735912036","Type":"IssuesEvent","CreatedAt":"2021-01-06T21:52:09","Actor":"live-user0001","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10431","RelatedDescription":"Opened issue \"Window\" (#10431) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"14735831176","Type":"IssuesEvent","CreatedAt":"2021-01-06T21:42:06","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10430","RelatedDescription":"Opened issue \"Nuget restore/package download C# API\" (#10430) at NuGet/Home","RelatedBody":"This was raised during development of dotnet tools. The decision was \"try to use a temp project and restore the package for now\". However, after using this mechanism for 2 years. We still wish to have a C\\# API to do restore, especially considering we would reuse the dotnet tool install component to install dotnet SDK workloads. Dotnet SDK workloads installation experience needs to be bulletproof or the user will be blocked using Xamarin.\r\n\r\n## Issues for existing temp project approach\r\n\r\n1.  Multiple IO operation and process hops caused unreliability and they are very hard to reproduce and resolve. First a file needs to be written to the disk. And a restore in a separate process need to write more files. The following 2 issues are likely caused by race conditions. However, I cannot reproduce them. The cleanup of the temporary files is also tricky.\r\n\r\n    a.  [.NET 5: Unable to install some .NET tools (dotnet tool install) · Issue \\#14547 · dotnet/sdk (github.com)](https://github.com/dotnet/sdk/issues/14547)\r\n\r\n    b.  [Failed to install tool package \\... · Issue \\#11459 · dotnet/sdk (github.com)](https://github.com/dotnet/sdk/issues/11459)\r\n\r\n2.  Hard-to-act-on error messages. Because the communication between SDK and nuget restore is via the command line. When error happens, SDK can only redirect the output of nuget and SDK cannot give a more specific guidance for the user to act on. That results the long list of \"probably this happened.\" <https://docs.microsoft.com/en-us/dotnet/core/tools/troubleshoot-usage-issues#executable-file-not-found>\r\n\r\n3.  Environment leak in. Because there is an explicit msbuild run. Environment variables get leaked in. There is no good way to prevent them.\r\n\r\n    a.  [\\`dotnet tool install \\...\\` fails if environment variable RESTOREPROJECTS is set · Issue \\#10798 · dotnet/sdk (github.com)](https://github.com/dotnet/sdk/issues/10798)\r\n\r\n4.  Escape unescaped madness. Because the communication is done via the command line. SDK need to carefully escape/unescape characters. It is not trivial and error prone.\r\n\r\n## Requirement\r\n\r\nIt should be a replacement for the [temp project](https://github.com/dotnet/sdk/blob/b91b88aec2684e3d2988df8d838d3aa3c6240a35/src/Cli/dotnet/ToolPackage/ToolPackageInstaller.cs#L179). It should select correct TFM and generate asset.json. However, if we can get an API that can simply download package to a specific location, that would fit net6.0 requirement. But it won't help us making tools experience better.\r\n"},{"Id":"14734795238","Type":"IssuesEvent","CreatedAt":"2021-01-06T19:41:41","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5518","RelatedDescription":"Closed issue \"Improve NuGet UI to invert icons to match the current VS theme\" (#5518) at NuGet/Home","RelatedBody":"Observed while working on https://github.com/NuGet/Home/issues/5420\r\n\r\nCurrently we have only one set of NuGet icons for VS. We should add feature to -\r\n\r\n1. Detect current VS theme.\r\n2. Either choose the right icon based on the theme or invert icons in code.\r\n\r\nIt might be possible to leverage existing VS APIs for this - \r\n\r\n```\r\nColor inversion for dark themes\r\n\r\nIn order to make icons appear with the correct contrast ratio in the Visual Studio dark theme, an inversion is applied programmatically. \r\nThe colors in this guide have been chosen in part so that they invert correctly. \r\nRestrict your use of color to this palette, or you will get unpredictable results when the inversion is applied.\r\n```\r\nSource - https://msdn.microsoft.com/en-us/library/mt186350.aspx\r\n"},{"Id":"14733551726","Type":"IssuesEvent","CreatedAt":"2021-01-06T17:37:17","Actor":"NGame1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10429","RelatedDescription":"Opened issue \"Package source path completely ignored in latest NuGet Package Manager versions\" (#10429) at NuGet/Home","RelatedBody":"\r\nHi there, \r\nVS2019 and also the latest V2017 updates for Windows with the new versions of NuGet Package Manager version having an issue with downloading location. \r\n\r\nI specified package source path to \r\nE:\\Nuget but still NuGet package manager save packages to \r\nC:\\Users\\{UserName}\\.nuget\\packages\r\nC:\\Microsoft\\Xamarin\\NuGet\r\nC:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\r\nC:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\r\n\r\nHow can I specify just one path, JUST ONE to store all NuGet packages there?\r\nOr, at least change the default \"C:\\Users\\{UserName}\\.nuget\\packages\" path to my own path? \r\n"},{"Id":"14733496700","Type":"IssuesEvent","CreatedAt":"2021-01-06T17:32:10","Actor":"Paul-N","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10428","RelatedDescription":"Opened issue \"Wrong TFM for PackageReference in Android Class Library\" (#10428) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\nNuGet version: 5.8.0\r\nVS version: VisualStudio.16.Release/16.8.3+30804.86\r\nOS version: Windows 8.1 x64\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create **Android Class Library** in MSVS for Windows\r\n\r\n2. Add a Nuget PackageReference that has several TFMs. In my case it is MvvmCross 7.1.2 that have TFMs:\r\n.NETCoreApp 3.1\r\n.NETFramework 4.6.1\r\n.NETStandard 2.0\r\nMonoAndroid 10.0\r\nTizen 4.0\r\nUAP 10.0.16299\r\nXamarin.iOS 1.0\r\nXamarin.Mac 2.0\r\nXamarin.TVOS 1.0\r\nXamarin.WatchOS 1.0\r\n\r\n3. Use any type that is Android specific (ex. MvxAndroidViewPresenter)\r\n4. Your lib will not compile, type is missing. The reason probably is that _netstandard2.0_ TFM is used instead of _monoandroid10.0_\r\n\r\n\r\n### Sample Project\r\nhttps://github.com/Paul-N/AndroidClassLibDemo"},{"Id":"14724707337","Type":"IssuesEvent","CreatedAt":"2021-01-06T03:07:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9915","RelatedDescription":"Closed issue \"PackageReference restore in Visual Studio should not spam the status bar\" (#9915) at NuGet/Home","RelatedBody":"Today, when restoring in Visual Studio, when doing an actual restore or solution load restore, NuGet writes *a lot* of messages at the status bar. \n\nThere's a bunch of messages such as \"restore packages for\" and \"writing assets file for\" which are pretty equivalent. \nIn extreme cases this can lead up to 3-4 messages per projects, so you sometimes end up with 300 messages in a 15s restore. \n\nIt's difficult to interpret all these messages, they are not very useful from a customer perspective. \n\nMy suggestion is to reduce the number of messages, or potentially removing them completely. \n\ncc @JonDouglas \n\nRelated to this, we considered https://github.com/NuGet/Home/issues/9396, but it has bugs and is not suitable when *restore* is very quick. "},{"Id":"14724293747","Type":"IssuesEvent","CreatedAt":"2021-01-06T02:14:48","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10336","RelatedDescription":"Closed issue \"Cannot open the NuGet Package manager\" (#10336) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Cannot-open-Nuget-browser/1265371)._\n\n---\n[severity:I'm unable to use this version] [regression] [worked-in:16.8.2]\r\nManaging Nuget packages > Browse brings up the following error\n! [image.png] (https://aka.ms/dc/image?name=Bca4ae68667b4419392c520bf946e165d637416996804221774_20201123-144121-image.png&tid=ca4ae68667b4419392c520bf946e165d637416996804221774)\n\nHave restarted computer/VS\n\nVS: 16.8.2 \n! [image.png] (https://aka.ms/dc/image?name=B7bd6f85befdd40a6aa964320715f6281637416997462030978_20201123-144227-image.png&tid=7bd6f85befdd40a6aa964320715f6281637416997462030978)\n\nI did update from VS16.8.1 the other day, not sure if it was part of the upgrade or not\n\nAny help would be appreciated\n\nThanks\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/22/2020, 10:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14724293156","Type":"PullRequestEvent","CreatedAt":"2021-01-06T02:14:43","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10427","RelatedDescription":"Opened pull request \"Clearing an specific package from NuGet cache - Mini spec\" (#10427) at NuGet/Home","RelatedBody":"Mini spec for deleting a single package from cache.\r\n\r\nThis specs cover a part of the design described in https://github.com/NuGet/Home/issues/5713"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-07T05:30:36.3762396Z","RunDurationInMilliseconds":1690}