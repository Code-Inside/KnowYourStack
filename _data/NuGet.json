{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23776122569","Type":"IssuesEvent","CreatedAt":"2022-09-01T21:07:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7447","RelatedDescription":"Closed issue \"Deleting an org doesn't warn that you cannot recreate one with the same name\" (#7447) at NuGet/NuGetGallery","RelatedBody":"There have been cases where users have deleted an org only to find out that they cannot recreate it, similar to deleting user accounts. We should clarify this as part of the delete org workflow.\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/62957041-deb3ee00-bda8-11e9-8ada-485ce78716f2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/62958176-073ce780-bdab-11e9-9875-1caab4e097ed.png)\r\n\r\nThis is just suggested text. We should make it crisper when we pick this up.\r\n"},{"Id":"23776122462","Type":"IssuesEvent","CreatedAt":"2022-09-01T21:07:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9201","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Please fully qualify NuGet\\Install-Package on the installer tab\" (#9201) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nAs a PowerShell Developer, I am excited to see a PowerShell install command on each package. \r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185921310-15f20721-1336-4260-9378-82fd2b81c34d.png)\r\n\r\nBut it always fails because `-Version` does not exist in my `Install-Package` command. Only `-RequiredVersion` exists.\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185921499-5c820107-ed23-485f-aba7-c602fb488a3c.png)\r\n\r\nAfter talking to others who figured this out, I now understand that there are two distinct `Install-Package` commands with incompatible parameters.\n\n### Repro Steps\n\n1. Open up a Windows PowerShell console, not a VS Developer console. \r\n2. Run `Install-Package Microsoft.Playwright -Version 1.25.0`\r\n3. This uses `Install-Package` from Microsoft's `PackageManagement` module\r\n4. Fail\n\n### Expected Behavior\n\nWhatever is provided on NuGet.org should work.\r\n\r\nConsidering the naming convention is problematic, please fully qualify the command on the website so that end-users have a hint that there are two commands from Microsoft with the same name that are different.\r\n\r\n```\r\nNuGet\\Install-Package Microsoft.Playwright -Version 1.25.0\r\n```\r\n\r\nAlternatively, please rename your command to `Install-NuGetPackage` for better alignment and clarity.\r\n\r\nThe \"Package Manager Console\" is also confusing to people who aren't intimately familiar with Visual Studio. Perhaps add a PowerShell tab with the proper syntax right after the Cake tab.\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/185923725-e2141b12-98dc-4e35-929e-0ea4fb58807f.png)\r\n\r\nIn that tab would be\r\n```\r\nPackageManagement\\Install-Package Microsoft.Playwright -RequiredVersion 1.25.0\r\n```\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23776121765","Type":"PullRequestEvent","CreatedAt":"2022-09-01T21:07:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9210","RelatedDescription":"Merged pull request \"Merge branch \"dev\" into main\" (#9210) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"23774891051","Type":"PullRequestEvent","CreatedAt":"2022-09-01T19:54:18","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9181","RelatedDescription":"Merged pull request \"[A11y][ScreenReader] Prevent Screen Reader from reading non-header elements\" (#9181) at NuGet/NuGetGallery","RelatedBody":"Prevent the 'Prefix Reserved' element on a package page from being read when using the 'H' option in the screen reader by setting the element's `aria-hidden` attribute to `true`.\r\n\r\nCurrent Behavior:\r\n![nvda text original](https://user-images.githubusercontent.com/25823466/181644313-8fffa215-639e-4259-a230-88d89bc0686f.jpg)\r\n\r\nNew Behavior:\r\n![nvda text edited](https://user-images.githubusercontent.com/25823466/181644345-d90c0f02-1423-47ca-b6c7-b358c192b887.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9173"},{"Id":"23749840247","Type":"PullRequestEvent","CreatedAt":"2022-08-31T19:29:51","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9217","RelatedDescription":"Merged pull request \"Add api.reuse.software to image allowlist\" (#9217) at NuGet/NuGetGallery","RelatedBody":"After evaluation of api.resue.software, we decide to include this domain to our allowlist\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9200"},{"Id":"23749784762","Type":"IssuesEvent","CreatedAt":"2022-08-31T19:26:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9180","RelatedDescription":"Closed issue \"Forks of my repository are ALSO posted on NuGet\" (#9180) at NuGet/NuGetGallery","RelatedBody":"I have a general question about when people fork one of my repositories, and then post their fork on NuGet.\r\n\r\nFor example, one of my repositories is [Silk](https://www.nuget.org/packages/SoftCircuits.Silk/). This has several forks on GitHub. I don't understand all the details of forks. But one of them also posted their fork on [NuGet](https://www.nuget.org/packages/LbsFeldkirch.Silk/).\r\n\r\nMy question is about this practice. Are there valid reasons for someone to do this? Should there be a way that I can prevent other people from listing my repositories on NuGet? Their fork is getting downloads while I'm trying to attract more attention to my NuGet packages. In fact, it's getting more downloads than mine!"},{"Id":"23742485558","Type":"IssuesEvent","CreatedAt":"2022-08-31T13:32:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9202","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Use an unambiguous or locale (browser context) aware date format on the status page\" (#9202) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nFound by this tweet: https://twitter.com/SimonCropp/status/1559495834445938689\r\n\r\nThe format MM/DD/YYYY is ambiguous across cultures and locales. Using YYYY-MM-DD or the local format w.r.t. to browser context would be more helpful.\r\n![image](https://user-images.githubusercontent.com/94054/185941649-f143f95f-5e7c-47af-8003-4e5d7fca2072.png)\r\n\r\nThis is likely because moment.js isn't loading properly:\r\n![image](https://user-images.githubusercontent.com/94054/185942074-cd42c69c-dc9d-45e5-9d74-c492d14eae90.png)\r\n\n\n### Repro Steps\n\n1. Enable non-US date format, perhaps with steps like these: https://help.gofmx.com/hc/en-us/articles/115001796651-How-to-Change-Your-Date-Format-to-dd-mm-yy-in-Your-FMX-Site\r\n2. Open https://status.nuget.org/\r\n3. Observe the date format\n\n### Expected Behavior\n\nIt should show a format that is appropriate for the browser's culture/locale. For example, UK english should not show MM/DD/YYYY.\r\n\r\nThis works fine on the nuget.org package details page version list.\r\n![image](https://user-images.githubusercontent.com/94054/185942738-c45d23cd-4524-4210-8db9-ab2fede15c5b.png)\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"23732572188","Type":"PullRequestEvent","CreatedAt":"2022-08-31T04:06:43","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8839","RelatedDescription":"Closed pull request \"[README] Improve blockquote styling\" (#8839) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8505\r\n\r\n⚠️ TODO: Get screenshots from DEV\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5286750&view=results\r\nRelease:"},{"Id":"23728686745","Type":"IssuesEvent","CreatedAt":"2022-08-30T22:29:51","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9171","RelatedDescription":"Closed issue \"[A11y][ScreenReader]NVDA is announcing as the Upload package heading twice\" (#9171) at NuGet/NuGetGallery","RelatedBody":"Original: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1554248\r\n\r\nRepro Steps:\r\nHit https://www.nuget.org and press Enter key.\r\nNavigate to \"Sign in\" control and hit Enter key.\r\nNavigate to \"Sign in with Microsoft\" control and hit Enter key.\r\nSelect “Upload Package” from the Profile Dropdown and hit Enter key.\r\nVerify that whether the Upload package heading is announcing as two times or not.\r\n\r\nActual Result:\r\nNVDA is announcing as the Upload package heading as twice when the NVDA focus receives.\r\n\r\nExpected result:\r\nNVDA should be announce the Upload package as once when the NVDA focus should receive.\r\n\r\nUser Impact:\r\nScreen Reader Users may be get confused when the screen reader should announce twice the heading when the focus receives.\r\n\r\nNotes:\r\nUnsure why this is happening. It is likely taht the focused element has content, and that a child element also has the content, and both are being read out. I believe this is a way to mark some information as ignore to screenreaders. Assuming this is the case, marking the child information as do not read should fix this."},{"Id":"23705331492","Type":"PullRequestEvent","CreatedAt":"2022-08-30T00:05:59","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9217","RelatedDescription":"Opened pull request \"Add api.reuse.software to image allowlist\" (#9217) at NuGet/NuGetGallery","RelatedBody":"After evaluation of api.resue.software, we decide to include this domain to our allowlist\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9200"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23779429070","Type":"IssuesEvent","CreatedAt":"2022-09-02T01:57:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12076","RelatedDescription":"Opened issue \"[Bug]: Rename VS NuGet Options \"Clear NuGet Cache(s)\" button\" (#12076) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nall\n\n### Worked before?\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nBefore `PackageReference`, when `packages.config` was the only way to use Nuget, the global packages folder was very similar to a cache (except that nothing ever expired, or got cleaned automatically).\r\n\r\nHowever, since the `PackageReference` feature came out, the global packages folder is where MSBuild, the compiler, and other build tools will read files from. Therefore, it is no longer private storage for NuGet's internal use. As a consequence, the NuGet team has progressively reduced calling the global packages folder a cache, even if many customers still call it the \"NuGet cache\".\r\n\r\nThe NuGet general options page in VS options, there's a button that still says \"Clear Nuget Cache(s)\".  This could be renamed to make it more obvious that clicking the button deletes not only the global packages folder, but other ones as well. Also, it might help slowly de-associate the global packages folder as being \"the cache\".\n\n### Verbose Logs\n\n_No response_"},{"Id":"23775836015","Type":"IssuesEvent","CreatedAt":"2022-09-01T20:50:42","Actor":"mkothapalli418","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12075","RelatedDescription":"Opened issue \"[Bug]: Nuget Restore on Docker \"Dotnet Restore\" fails  .net 6.0 SDK\" (#12075) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet restore\n\n### Worked before?\n\nWorks fine in local but not on gitlab build server\n\n### Impact\n\n_No response_\n\n### Repro Steps & Context\n\nI am using .net 6.0 SDK with my project referring to my company's nuget package source and am copying the local nuget.config file to project location in docker file, but my restore fails(passes sometimes) randomly on docker build in gitlab but works fine locally.\r\n\r\nRandom Error which is not helpful at all:\r\n`build FAILED. \"/src/microservice-fleet-access-api/microservice-fleet-access-api.csproj\" (Restore target) (1) -> (Restore target) -> /usr/share/dotnet/sdk/6.0.400/NuGet.targets(132,5): error MSB4181: The \"RestoreTask\" task returned false but did not log an error. [/src/microservice-fleet-access-api/microservice-fleet-access-api.csproj]`\r\nDocker file:\r\n\r\nWORKDIR /src\r\n```\r\nCOPY [\"myProject.csproj\", \"myProject/\"]\r\nCOPY [\"nuget.config\", \"myProject/nuget.config\"]\r\nRUN dotnet restore \"myProject/myProject.csproj\"\r\n\r\nMore discussion and logs are on this https://github.com/dotnet/dotnet-docker/issues/4052\n\n### Verbose Logs\n\n_No response_"},{"Id":"23773836131","Type":"IssuesEvent","CreatedAt":"2022-09-01T18:51:31","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12067","RelatedDescription":"Closed issue \"nuget.exe help command has unlocalized strings\" (#12067) at NuGet/Home","RelatedBody":"There are strings in help command not localized.\r\n\r\n![image](https://user-images.githubusercontent.com/1192347/187592219-fd345623-236d-44dd-ba00-536c5aa4ae75.png)"},{"Id":"23773576204","Type":"IssuesEvent","CreatedAt":"2022-09-01T18:36:30","Actor":"mmitche","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12074","RelatedDescription":"Opened issue \"TFM trimming, and elimination of net4* targeting in Linux source-build\" (#12074) at NuGet/Home","RelatedBody":"### Description\r\n\r\nTrim away unneeded TFMs, and conditionalize away non-applicable TFMs for Linux source build.\r\n\r\n**Requires** https://github.com/dotnet/source-build/issues/3013. source-build net4* targeting elimination required https://github.com/dotnet/source-build/issues/2974\r\n\r\nThe purpose of this operation is twofold:\r\n- [ ] Reduce the number of TFMs present overall in .NET's build, potentially improving build time.\r\n- [ ] Eliminate framework TFMs, drastically reducing the size of the source build repository size.\r\n\r\nWhen TFMs other than the latest .NET Core TFM are targeted in source-build, the reference assets for that TFM must be provided via a source build reference package. This is a 'text only' package that is assembled from IL at the beginning of the build to satisfy the required reference assets. In Microsoft's build, these would be restored from the internet, but in source build this is not allowed.\r\n\r\nThese SBRPs are large. All told, the total size contribution for just the netframework 4* TFMs is around 3GB. Not only does this have a significant contribution to the source build repo size, but it also affects build time. For Linux source build, we spend large amounts of time building assets that are simply thrown away at the end.\r\n\r\nAn 'ideal' would be a single TFM used throughout all of the .NET build, source build or otherwise. This is not possible. There are legitimate reasons to target older TFMs, especially netstandard. However, we should be able to justify each additional TFM.\r\n\r\nTo complete this work, repositories will use the tooling provided via https://github.com/dotnet/source-build/issues/2901 to identify the TFMs in use in their repository. For each TFM, they should do the following:\r\n- [ ] If the TFM can be eliminated, or upgraded to latest (e.g. target the latest netcore explicitly, or use net472), do so. netframework TFM removal for tools and internal code is likely low hanging fruit.\r\n- [ ] **Requires https://github.com/dotnet/source-build/issues/2974** If the TFM is a framework TFM, it should be conditionalized out in source build for Linux.\r\n\r\nIt is a goal that the form of this conditionalization remain consistent across projects, and used relatively sparingly. How this conditionalization should be done will be designed in https://github.com/dotnet/source-build/issues/2974. Once that is done, this issue will be updated with implementation details."},{"Id":"23771895355","Type":"IssuesEvent","CreatedAt":"2022-09-01T17:04:39","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12073","RelatedDescription":"Opened issue \"Document GlobalPackageReference\" (#12073) at NuGet/Home","RelatedBody":""},{"Id":"23771848110","Type":"IssuesEvent","CreatedAt":"2022-09-01T17:02:16","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12072","RelatedDescription":"Opened issue \"Document NU1507\" (#12072) at NuGet/Home","RelatedBody":"Add documentation for NU1507 and call out why it is logged, how to onboard to package source mapping, and how to suppress it if needed.\r\n\r\nRelated to https://github.com/NuGet/Home/issues/11822"},{"Id":"23770346693","Type":"IssuesEvent","CreatedAt":"2022-09-01T15:47:41","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12021","RelatedDescription":"Closed issue \"[Bug]: \"An item with the same key has already been added\" when migrating to CPM with `ProjectDependencies` in solution file\" (#12021) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n.NET SDK 6.0.400 from AUR\r\n\r\n### Worked before?\r\n\r\nunknown\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. take [sample project](https://github.com/YoshiRulz/Samples/tree/repro-12021/CentralPackageManagementExample) with https://github.com/YoshiRulz/Samples/commit/9a0e83a418d1e18d7cf754e2b8df3e612b51dc09, observe build success\r\n2. take additional commit https://github.com/YoshiRulz/Samples/commit/f66b488896c237db80c36a8960ef95ef8329e133, observe build failure\r\n\r\nIn my real codebase, I use `PrivateAssets=\"all\"` to give every project w/ the `.props` import certain packages without those packages leaking to dependent projects. Specifically, I add `Microsoft.NETFramework.ReferenceAssemblies`, `Nullable`, `System.Resources.Extensions`, and various Analyzers.\r\n\r\n### Verbose Logs\r\n[output of `dotnet build --verbosity diag`](https://gist.github.com/YoshiRulz/373675054d5fff43593e190b6d480907) at second, broken commit edit: I've since updated the .NET SDK but still can't build my main project w/ CPM"},{"Id":"23764870341","Type":"IssuesEvent","CreatedAt":"2022-09-01T12:00:43","Actor":"drieseng","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12071","RelatedDescription":"Opened issue \"[Bug]: \" (#12071) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.3.0\n\n### Worked before?\n\n6.2.1\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nAs of version 6.3.0, NuGet discourages the use of HTTP package sources. While I understand that you want to encourage HTTPS package sources, I think it's a mistake to force this upon users. That is another discussion though.\r\n\r\nCurrently, there are several commands in the command-line client that provide no way to suppress the NU1803 warning.\r\nOne such example is `nuget install`.\r\nIf you use that command to install a package from a HTTP package source, you'll the following warning:\r\n```txt\r\nWARNING: You are running the 'install' operation with an 'http' source, 'http://proget/nuget/nis-unstable/'. Support for 'http' sources will be removed in a future version.\r\n```\r\n\r\nWe are using a local package source (proget), and will not migrate to HTTPS in the coming months (and we wouldn't if not for the decision that the NuGet team forces upon us).  Until then, these warnings will continue to pollute our build logs.\r\n\r\nWould it be possible to add an option suppress this warning. I propose to implement this in such a way that any given warning or (non-critical) error can be suppressed.\r\n\r\nI also think it would have been better to add *NU1803* as prefix in the warning message that is produced.\r\n\r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."},{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":14,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2022-09-02T03:30:26.5809702Z","RunDurationInMilliseconds":1398}