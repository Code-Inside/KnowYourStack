{"Data":{"Blog":{"FeedItems":[{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"28207371363","Type":"IssuesEvent","CreatedAt":"2023-04-04T23:00:07","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9420","RelatedDescription":"Closed issue \"[A11y]Focus order on Organization Management is not correct.\" (#9420) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744473\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “Manage Organizations” from the Profile Dropdown and hit enter.\r\nNavigate to \"Add New\" control and hit enter.\r\nEnter values in \"Organization Name\" and \"Organization Email Address\" and hit enter on \"Add\" Control.\r\nAgain Select “Manage Organizations” from the Profile Dropdown and hit enter.\r\n\"Organizations\" screen gets opened.\r\nNavigate to Member and press enter.\r\nObserve whether the focus order is incorrect after pressing \"View Member Profile\"\r\n\r\nActual Result:\r\nThe focus order is not in left to right order after expanding \"View Member Profile\"\r\n\r\nExpected Result:\r\nKeyboard focus order should move in logical order after pressing tab key \"View member profile, Combo box and then Close button\".\r\n\r\nNotes:\r\nThis is probably due to the order of the elements in the DOM not matching the displayed order, as tab order is handled by browser (unless we explicitly override it)"},{"Id":"28207263190","Type":"IssuesEvent","CreatedAt":"2023-04-04T22:51:01","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9416","RelatedDescription":"Closed issue \"[A11y]Keyboard Focus is not visible in some locations\" (#9416) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1743910\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise Insider Preview\r\nOS build 25275.1000.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter.\r\nEnter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\nNavigate to \"Manage\" control and hit enter.\r\nObserve whether \"edit, Regenerate, delete\" keyboard focus is clearly visible or not visible.\r\n\r\nSimilar issue is observed for below screen also.\r\n\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"Owners\" section present on bottom right of the screen.\r\nObserve whether \"Profile\" keyboard focus is clearly visible or not visible.\r\n\r\nActual Result:\r\nKeyboard focus on \"Edit, Regenerate, delete\" is not clearly visible.\r\n\r\nExpected Result:\r\nKeyboard focus should be completely visible on the control wherever focus lands. It should be visible on all four sides on \"Edit, Regenerate, Delete\".\r\n\r\nNotes:\r\nThe display (inline) and the packing of the elements around these appear to be covering the area that they keyboard focus border is highlighting. Unfortunately, it is not as easy as adding additional padding/margin around the elements as the inline display prevents some of the height changes. We will need to experiment with this a bit more to figure out a view with enough spacing to be able to see our keyboard focus."},{"Id":"28207013386","Type":"PullRequestEvent","CreatedAt":"2023-04-04T22:31:17","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9452","RelatedDescription":"Opened pull request \"[A11y]The focus order is not in left to right order \" (#9452) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n- change the order of html\r\n- change the layout for extra small \r\n\r\nfor extra small\r\nBefore: \r\n![before](https://user-images.githubusercontent.com/64443925/229936752-900d49ed-7f06-4f2b-8c9b-e2c7859fb9fb.png)\r\nAfter: \r\n![Screenshot 2023-04-04 152443](https://user-images.githubusercontent.com/64443925/229936771-412eeec8-1131-4176-943f-1aa8f634ce37.png)\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9450"},{"Id":"28179262378","Type":"IssuesEvent","CreatedAt":"2023-04-04T00:13:33","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9451","RelatedDescription":"Opened issue \"[A11y][TFM]TFM selection filters do not announce expanded/collapsed state\" (#9451) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1751374\r\n\r\nEnvironment Details:\r\nApplication Name: Filtering by Target Frameworks\r\n#URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nWindows Version: Win11\r\nOS Version: 22621.1105\r\nChromium Edge Version: Version 109.0.1518.78 (Official build) (64-bit)\r\nChrome Version: Version 110.0.5481.77 (Official Build) (64-bit)\r\nScreen reader version: Narrator/ NVDA 2022.2\r\n\r\nRepro Steps: \r\nHit the URL: [NuGet Gallery | Packages (nugettest.org)](https://dev.nugettest.org/packages?q=)\r\nTab to Frameworks section.\r\nTab to the collapse/expand buttons present in the Frameworks section.\r\nTurn on Narrator/NVDA.\r\nObserve that screen reader is not announcing the state whether collapsed/expanded or hidden/shown for the control 'shows and hides TFM filter'.\r\n\r\nUser Impact:\r\nScreen reader users will be confused if the state of the control is not announced.\r\n\r\nNotes:\r\nThis would appear to be due to the keyboard focused element not being properly tagged with aria-expanded. Adding this to the proper control element should resolve this."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"28201810542","Type":"IssuesEvent","CreatedAt":"2023-04-04T17:58:17","Actor":"robertson-bauercontrols","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12527","RelatedDescription":"Opened issue \"Packages.lock.json different when built from msbuild versus visuaal studio\" (#12527) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe, NuGet.exe\n\n### Product Version\n\nmsbuild 17.5.1.16304\n\n### Worked before?\n\nnever\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nGiven a solution (such as the one mentioned in this same issue, which was marked as released https://github.com/NuGet/Home/issues/8272).  Use central package management.\r\n\r\nIf you do a msbuild via command line, the packages.lock.json use DLL names for dependancies on a nuget restore.  If you open visual studio and do a build, it uses the Project names, as well as adds more to the packages.lock.json.  \r\n\r\nIn the screenshot below, the left is msbuild, the right is visual studio.\r\n\r\n![image](https://user-images.githubusercontent.com/55808281/229877656-ef8f8fa8-66e6-4c07-8666-456c992f0cd9.png)\r\n\r\nThis issue has been mentioned elsewhere on github, but they're all marked as fixed or closed.  It is definately still an issue for me (VS2022 17.5.3, winforms)\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"28199229911","Type":"IssuesEvent","CreatedAt":"2023-04-04T16:04:38","Actor":"MikeKenyon","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12526","RelatedDescription":"Opened issue \"References Drawn through NuGet do not respect the `required` keyword\" (#12526) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, Visual Studio Package Management UI\n\n### Product Version\n\ndotnet 7.0.100, VS 2022\n\n### Worked before?\n\nNew feature\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nI'm unsure this is the correct place, but it's the best I've been able to come up with.\r\n\r\nCreate a library that provides data types that use the new `required` keyword.\r\n\r\nIf you directly reference that package, the compiler generates errors/warnings indicating that you are not setting properties so marked.\r\n\r\nIf you reference the same DLL via a Nuget Package, no errors are created.\n\n### Verbose Logs\n\n_No response_"},{"Id":"28195365734","Type":"IssuesEvent","CreatedAt":"2023-04-04T13:51:36","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12525","RelatedDescription":"Opened issue \"[Bug]: NuGet.targets(1 32,5): error : Ambiguous project name\" (#12525) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#8628**\r\n- Please respond to @icnocop.\r\n\r\n---\r\n\r\n_From @icnocop on Tuesday, April 4, 2023 2:49:52 AM_\r\n\r\n### Issue Description\n\nHi.\r\n\r\nWhen trying to run the \"Restore\" target on my Visual Studio solution, the following error occurs:\r\n\r\n```\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(1\r\n32,5): error : Ambiguous project name ...\r\n```\r\n\r\nIt happens in Visual Studio 2022 and also when using `msbuild` on the command line.\n\n### Steps to Reproduce\n\n1. Download and unzip \r\n[AmbiguousProjectName.zip](https://github.com/dotnet/msbuild/files/11144097/AmbiguousProjectName.zip)\r\n2. Open a Visual Studio 2022 developer command prompt\r\n3. 'CD' into the folder where the folder was created from the zip\r\n4. Run `msbuild /t:Restore`\r\n\r\nAlternatively, open the sln in Visual Studio 2022 17.5.3, right click on the root `Solution` node in `Solution Explorer` and select `Restore NuGet Packages`.\n\n### Expected Behavior\n\nI expected the command to succeed.\n\n### Actual Behavior\n\nWhen using the msbuild command line:\r\n```\r\nMSBuild version 17.5.1+f6fdcf537 for .NET Framework\r\nBuilding the projects in this solution one at a time. To enable parallel build, please add the \"-m\" switch.\r\nBuild started 4/3/2023 7:36:00 PM.\r\nIncluded response file: C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.rsp\r\n\r\nProject \"C:\\github\\icnocop\\AmbiguousProjectName\\AmbiguousProjectName.sln\" on node 1 (Restore target(s)).\r\nValidateSolutionConfiguration:\r\n  Building solution configuration \"Debug|Any CPU\".\r\n_GetAllRestoreProjectPathItems:\r\n  Determining projects to restore...\r\nRestore:\r\n  X.509 certificate chain validation will use the default trust store selected by .NET.\r\n  X.509 certificate chain validation will use the default trust store selected by .NET.\r\n  Restoring packages for C:\\github\\icnocop\\AmbiguousProjectName\\src\\Common.NuGet\\Common.NuGet.csproj...\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(132\r\n,5): error : Ambiguous project name 'Common'. [C:\\github\\icnocop\\AmbiguousProjectName\\AmbiguousProjectName.sln]\r\nDone Building Project \"C:\\github\\icnocop\\AmbiguousProjectName\\AmbiguousProjectName.sln\" (Restore target(s)) -- FAILED.\r\n\r\n\r\nBuild FAILED.\r\n\r\n\"C:\\github\\icnocop\\AmbiguousProjectName\\AmbiguousProjectName.sln\" (Restore target) (1) ->\r\n(Restore target) ->\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(1\r\n32,5): error : Ambiguous project name 'Common'. [C:\\github\\icnocop\\AmbiguousProjectName\\AmbiguousProjectName.sln]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.03\r\n```\r\n\r\nWhen using Visual Studio 2022 IDE:\r\n```\r\nRestoring NuGet packages...\r\nRunning restore with 12 concurrent jobs.\r\nReading project file C:\\github\\icnocop\\AmbiguousProjectName\\src\\Common.NuGet\\Common.NuGet.csproj.\r\nThe restore inputs for 'Common' have changed. Continuing restore.\r\nRestoring packages for C:\\github\\icnocop\\AmbiguousProjectName\\src\\Common.NuGet\\Common.NuGet.csproj...\r\nNuGet package restore failed. Please see Error List window for detailed warnings and errors.\r\nTime Elapsed: 00:00:00.1047742\r\n========== Finished ==========\r\n\r\n\r\nError occurred while restoring NuGet packages: System.InvalidOperationException: Ambiguous project name 'Common'.\r\n   at NuGet.Commands.RestoreCommand.GetProjectReferences()\r\n   at NuGet.Commands.RestoreCommand.<ExecuteRestoreAsync>d__62.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreCommand.<ExecuteAsync>d__45.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<ExecuteAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<ExecuteAndCommitAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<CompleteTaskAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.<RestoreAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<>c__DisplayClass25_0.<<RestorePackageSpecProjectsAsync>b__2>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.RestoreOperationLogger.<RunWithProgressAsync>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.SolutionRestoreManager.RestoreOperationLogger.<RunWithProgressAsync>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<RestorePackageSpecProjectsAsync>d__25.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<RestoreAsync>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<RestoreAsync>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.SolutionRestoreManager.SolutionRestoreJob.<ExecuteAsync>d__22.MoveNext()\r\n```\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nMSBuild version 17.5.1+f6fdcf537 for .NET Framework\r\n17.5.1.16304\r\n\r\nWindows 10 Enterprise x64\r\nVersion 22H2 (OS Build 19045.2728)\r\n\r\nVisual Studio 2022 Enterprise\r\nVersion 17.5.3"},{"Id":"28186221949","Type":"IssuesEvent","CreatedAt":"2023-04-04T08:00:59","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/3286","RelatedDescription":"Reopened issue \"[Test Failure] The vertical scrollbar is truncated in the default layout of Package Manager UI Window\" (#3286) at NuGet/Home","RelatedBody":"**Repro Steps:**\n1.  New project -> Visual C# -> Web -> ASP.NET Web Application, then uncheck the box for \"Application Insights\".\n2.  Click Web Forms template and check “Web Forms” and “Web API”.\n3.  Change Authentication to “No Authentication” and click OK button.\n4.  Open ‘Manage NuGet Package for Solution…’.\n5.  Click “Browse” tab and click a package.\n\n**Expected Result:**\nThe vertical scrollbar in the right pane show correctly in the default layout of Package Manager UI Window.\n\n**Actual Result:**\nThe vertical scrollbar in the right pane is truncated in the default layout of Package Manager UI Window as below screenshot. It thinner than normal scrollbar, so it is hard to select.\n![verticalscrollbar](https://cloud.githubusercontent.com/assets/20632625/17510336/1554226e-5e51-11e6-911a-145a9cbd5aaa.png)\n**Note:**\n1. It happened on Dev15 Preview4 Willow install+NuGet 3.6.0-Beta1-1738.\n2. It repro on Dev14 U3+NuGet 3.5.0-RTM-1737.\n3. It doesn’t repro on VS2015Update3 w/ NuGet 3.4.4.\n4. It will not repro after you drag the right-boundary of the window to the right side.\n5. The scrollbar will disappear when you drag the right-boundary of the window to the left side.\n"},{"Id":"28186196289","Type":"IssuesEvent","CreatedAt":"2023-04-04T08:00:01","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/4330","RelatedDescription":"Reopened issue \"[Test Failure] The same package source gets two different tooltips\" (#4330) at NuGet/Home","RelatedBody":"**NuGet Version:** NuGet 4.0.0-RTM-2224\r\n**VS Version:** D15Rel 26118.00\r\n**OS Version:** Windows 10 RS1_Release 14393.726.170112-1758\r\n \r\n**Repro Steps:**\r\n1.  Create a new C# Console Application via VS.\r\n2.  Right-click on the project and click ‘Manage NuGet Packages…’.\r\n3.  Hover on ‘Package source’ drop down list on the right-top of PM UI (default is ‘nuget.org’).\r\n4.  Switch to other package source and switch back to ‘nuget.org’.\r\n5.  Hover on ‘Package source’ drop down list again.\r\n\r\n**Expected Result:**\r\nThe same package source gets same tooltips between step3 and step5.\r\n\r\n**Actual Result:**\r\nThe same package source gets two different tooltips as below screenshot.\r\n![differenttooltips](https://cloud.githubusercontent.com/assets/20632625/22099600/f73c8172-de66-11e6-88d7-b6f6f11f8889.png)\r\n\r\n**Note:**\r\n1. It repro on D15Rel 26118.00 (NuGet Client 4.0.0-RC3-2215).\r\n2. It also repro on Dev14 MU3.5 25421.01(NuGet 3.4.4.1321).\r\n"},{"Id":"28186073088","Type":"IssuesEvent","CreatedAt":"2023-04-04T07:55:03","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/7798","RelatedDescription":"Reopened issue \"[Test Failure]Project type showed “unknown” when executing command “Get-Project” in PMC for .NET Core projects\" (#7798) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.0.0.5831\r\nBuild Tools VS Version: D16.0\\28613.55\r\nOS: Windows 10 RS4_Release 17134.1.180410-1804\r\n## Detailed repro steps \r\n1. Create a .NET Core/.NET Standard projects in VS.\r\n2. Open PMC and execute command “Get-Project” in PMC.\r\n## Expected\r\nThe project type showed correctly as below screenshot (e.g. ASP.NET Empty Web Site).\r\n![correcttype](https://user-images.githubusercontent.com/20632625/52775539-e05f5c00-307a-11e9-9e0f-c4249471f759.png)\r\n\r\n## Actual\r\nThe project type showed “unknown” as below screenshot.\r\n![unknowntype](https://user-images.githubusercontent.com/20632625/52775522-d3db0380-307a-11e9-8e5d-0cd799f82d91.png)\r\n\r\n## Note\r\n1. It only repro for .NET Core/.NET Standard projects.\r\n2. It repro on D16.0\\28613.55 (default NuGet Client 5.0.0.5821).\r\n3. It repro on D15.8\\27924.00 (default NuGet Client 4.8.0.5348).\r\n\r\n"},{"Id":"28186014461","Type":"IssuesEvent","CreatedAt":"2023-04-04T07:52:37","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8116","RelatedDescription":"Reopened issue \"[Bug Bash][Accessibility][Test Failure] Resizing the PMC window splitter to left makes the list a mess\" (#8116) at NuGet/Home","RelatedBody":"[658461](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/658461)\r\n\r\nRepro steps: \r\n\r\n1. Launch VS and create a C# Blank App (Universal Windows).\r\n\r\n2. Open “Package Manager Console”.\r\n\r\n3. Drag the PMC window splitter to right.\r\n\r\n4. Type ‘Get-Package -Updates’ in PMC.\r\n\r\n5. Drag the PMC window splitter to left and observe the content in PMC.\r\n\r\nExpected:\r\n\r\nThe list should be wrapped intelligently.\r\n\r\n Actual:\r\n\r\nResizing the PMC window splitter to left makes the list a mess.\r\n\r\n \r\n\r\nNotes:\r\n\r\n1. The issue repro on D16.0stg 28002.3000 (default NuGet Client Release-4.8.0-preview3/4.8.0.5278).\r\n\r\n2. The issue repro on D15.8 28002.3000 + NuGet Client Release-4.8.0-RTM\\4.8.0.5374."},{"Id":"28186006293","Type":"IssuesEvent","CreatedAt":"2023-04-04T07:52:17","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8117","RelatedDescription":"Reopened issue \"[Bug Bash][Test Failure] The ‘ProjectName’ column lost in PMC after resetting window layout\" (#8117) at NuGet/Home","RelatedBody":"[658342](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/658342)\r\n\r\nRepro steps: \r\n\r\n1. Launch VS and create a C# Blank App (Universal Windows).\r\n\r\n2. Open “Package Manager Console”.\r\n\r\n3. Drag the PMC window splitter to right.\r\n\r\n4. Type ‘Get-Package -Updates’ in PMC.\r\n\r\n5. Click “window->Reset Window Layouts”.\r\n\r\n6. Open “Package Manager Console” and type ‘Get-Package -Updates’ in PMC again.\r\n\r\n7. Drag the PMC window splitter to right and observe the package information.\r\n\r\nExpected:\r\n\r\nThe ‘ProjectName’ column should be displayed in step 7 such as step 4.\r\n\r\nActual:\r\n\r\nThe ‘ProjectName’ column lost in step 7 as attachment picture. \r\n\r\nNotes:\r\n\r\n1. The issue repro on D16.0stg 28002.3000 (default NuGet Client Release-4.8.0-preview3/4.8.0.5278).\r\n\r\n2. The issue repro on D15.8 28002.3000 + NuGet Client Release-4.8.0-RTM\\4.8.0.5374."},{"Id":"28185979378","Type":"IssuesEvent","CreatedAt":"2023-04-04T07:51:08","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8118","RelatedDescription":"Reopened issue \"[Bug Bash][Accessibility][Test Failure] Navigation by “Tab” doesn’t work in PMC window\" (#8118) at NuGet/Home","RelatedBody":"NuGet Version: NuGet Client 5.0.0.5371\r\n\r\nVS Version: D16.0stg 27930.3001\r\n\r\nOS Version: Windows 10 RS4_Release 17134.1.180410-1804\r\n\r\n \r\n\r\nInstallation steps: \r\n\r\n1.     Install VS: \\\\cpvsbuild\\drops\\VS\\D16.0stg\\products\\27930.3001\\bootstrappers\\Enterprise\\vs_enterprise.exe\r\n\r\n2.     Install NuGet Client: \\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\dev\\5.0.0.5371\\artifacts\\VS15\\NuGet.Tools.vsix\r\n\r\n \r\n\r\nRepro steps: \r\n\r\n1. Launch VS and create a C# Class Library (.NET Framework).\r\n\r\n2. Navigate to the menu Tools->NuGet Package Manager->Package Manager Console to open the PMC.\r\n\r\n3. Tab through the PMC window.\r\n\r\n \r\n\r\nExpected:\r\n\r\nNavigation by “Tab” works well.\r\n\r\n \r\n\r\nActual:\r\n\r\nNavigation by “Tab” doesn’t work in PMC window as attached screenshot (no rectangle show when hitting ‘Tab’).\r\n\r\n \r\n\r\nNote:\r\n\r\n1. It doesn’t repro on PM UI.\r\n\r\n2. It repro on D16.0stg 27930.3001 (default NuGet Client 4.8.0.5278) and D15.9stg 27930.3001 (default NuGet Client 4.8.0.5348)."},{"Id":"28185935825","Type":"IssuesEvent","CreatedAt":"2023-04-04T07:49:17","Actor":"aelij","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12522","RelatedDescription":"Opened issue \"Restore error summary\" (#12522) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWhen updating a very large legacy monorepo to SDK-style projects, NuGet restore spewed out **thousands** of errors. It was difficult to browse through all the text and identify the root causes. I created a small summary tool using the binlog parser and regex error message grouping (which removed project-specific text), and it proved most helpful:\r\n\r\n```cs\r\n#r \"nuget: MSBuild.StructuredLogger, 2.1.790\"\r\nusing Microsoft.Build.Logging.StructuredLogger;\r\n\r\nvar log = BinaryLog.ReadBuild(@\"msbuild.binlog\");\r\nvar errors = log.FindChildrenRecursive<Error>().DumpAs(t => t.Count);\r\nerrors.GroupBy(c => c.Code).Select(c => (code: c.Key, messages: c.GroupBy(m => ResolveText(c.Key, m.Text), m => m.File))).Dump();\r\n\r\nstatic string ResolveText(string code, string text) => code switch\r\n\t{\r\n\t\t\"NU1602\" => Regex.Match(text, @\"for dependency ([-\\w\\.]+)\\.\").Value,\r\n\t\t\"NU1605\" or \"NU1109\" => Regex.Match(text, @\"Detected package downgrade: ([-\\w\\.]+) from ([-\\w\\.]+) to (centrally defined)? ([-\\w\\.]+)\").Value,\r\n\t\t\"NU1603\" => Regex.Match(text, @\"([-\\w\\.]+) ([-\\w\\.]+) depends on ([-\\w\\.]+) \\(>= ([-\\w\\.]+)\\)\").Value,\r\n\t\t_ => text\r\n\t};\r\n```\r\n\r\nThe output looks something like this:\r\n```\r\n- NU1202\r\n  - Package x.y 1.2.3 is not compatible with ...\r\n    - path/to/p1.csproj\r\n    - path/to/p2.csproj\r\n  - Package a.b 3.4.5 is not compatible with ...\r\n    - path/to/p3.csproj\r\n- NU1605\r\n  - Detected package downgrade: x.y ...\r\n    - path/to/p4.csproj\r\n\r\n```\r\n\r\nI propose that the restore target of a root traversal project optionally emit such a text summary at the end. For error grouping, perhaps use the `ShortenedText` property and remove project-specific data from it.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"28185927454","Type":"IssuesEvent","CreatedAt":"2023-04-04T07:48:56","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8274","RelatedDescription":"Reopened issue \"[Test Failure][Suggestion] Link “https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” should be clickable in migration-failed dialog\" (#8274) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.2stg 29027.113\r\nOS Version: 17763.RS5_Release.180914-1434.\r\nInstall VS: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2806963&view=results\r\nInstall NuGet:       \\\\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\Dev\\5.2.0.6067\\artifacts\\VS15\\NuGet.Tools.vsix\r\n## Detailed repro steps \r\n1. Launch Visual Studio 2019.\r\n2. Create a new C++ Console App project and open PM UI in Solution Explorer window.\r\n3. Install a package (e.g. Netonsoft.json) with “packages.config” format into the project.\r\n4. Right-click the “Reference” node and select the “Migrate packages.config to PackageReference…”.\r\n5. Observe the warning.\r\n## Expected\r\n“https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” should be a link in migration-failed dialog.\r\n## Actual\r\nLink “https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference” does not clickable in migration-failed dialog as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/60334817-f7ba3880-99ce-11e9-860d-80c51b44bd45.png)\r\n\r\n"},{"Id":"28175308431","Type":"IssuesEvent","CreatedAt":"2023-04-03T20:08:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12521","RelatedDescription":"Opened issue \"NuGet should use a different property for the platform version for C++/CLI\" (#12521) at NuGet/Home","RelatedBody":""},{"Id":"28174273889","Type":"IssuesEvent","CreatedAt":"2023-04-03T19:17:56","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12459","RelatedDescription":"Closed issue \"Signing:  raise actionable message on Linux if verification results in untrusted failure\" (#12459) at NuGet/Home","RelatedBody":"When signed package verification fails on Linux, we should raise an actionable message with a link to a document that explains https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification-technical.md#linux and how to curate a sufficiently complete certificate bundle.\r\n\r\nCC @aortiz-msft"},{"Id":"28173804081","Type":"IssuesEvent","CreatedAt":"2023-04-03T18:56:59","Actor":"JD-Robertson","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12520","RelatedDescription":"Opened issue \"dotnet list package returns error if solution includes a docker-compose project\" (#12520) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nThis is likely related to the behavior change described here: https://github.com/NuGet/Home/issues/12479\r\n\r\nMy organization has a pipeline step that lists vulnerable packages for our ASP.NET Core soutions using:\r\n\r\n`dotnet list <soution>.sln package --vulnerable --include-transitive`\r\n\r\nAfter updating our toolchain from dotnet 6 to dotnet 7, this command now returns a non-zero error code for all of our projects even if no vulnerable packages are found. We get an error message:\r\n\r\n`The project <path>\\docker-compose.dcproj` uses package.config for NuGet packages, while the command works only with package reference projects.`\r\n\r\nWhich seems to be the source of the error.\n\n### Desired Behavior\n\nIdeally, there would be some way to tell the tool to ignore the docker-compose.csproj file since it is irrelevant to this scan.\r\n\r\nFailing that, treating the incompatible file as a warning and not an error would allow us to detect actual issues with the tool.\n\n### Additional Context\n\n It's very easy to reproduce this without any custom code.\r\n\r\n1. In Visual Studio 2022, create a new ASP.NET Core Web API project. Include Docker support.\r\n2. A new solution will be created. Right-click on the WebApplication1 project in Solution Explorer and select Add > Container Orchestrator Support. Choose the Docker Compose option. This will create a new docker-compose.csproj file.\r\n3. Open a PowerShell prompt and run `dotnet list <soution>.sln package`. No need to even check for vulnerabilities.\r\n4. Check `$LASTEXITCODE` and see that it is `1`. \r\n\r\nWe have been forced to disable this check due to this behavior. I found an old issue: https://github.com/microsoft/MSBuildSdks/issues/131\r\n\r\nWhich suggests a possible workaround of defining the `RestoreProjectStyle` setting in the problem project. But the workaround is not valid for the docker-compose project, which does not have NuGet dependencies. "},{"Id":"28173422556","Type":"PullRequestEvent","CreatedAt":"2023-04-03T18:37:59","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/12512","RelatedDescription":"Closed pull request \"Rename SECURITY.md to SECURITY.xml\" (#12512) at NuGet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-04-05T03:30:23.6890985Z","RunDurationInMilliseconds":1262}