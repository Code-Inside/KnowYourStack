{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"24178926437","Type":"PullRequestEvent","CreatedAt":"2022-09-23T06:52:51","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9253","RelatedDescription":"Merged pull request \"Add one-time message for claim id, adjust logic on temp id search\" (#9253) at NuGet/NuGetGallery","RelatedBody":"Let's fix that Claim Key message.\r\n\r\nAlso, there's a case in the search logic I wanted to filter out--if a customer uploads a package foo,  without this change it could still be viewed using https://www.nuget.org/packages/foo. This will prevent that case, as if a package has a TemporaryId, it will not be found by its actual ID."},{"Id":"24178716261","Type":"PullRequestEvent","CreatedAt":"2022-09-23T06:37:42","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9253","RelatedDescription":"Opened pull request \"Add one-time message for claim id, adjust logic on temp id search\" (#9253) at NuGet/NuGetGallery","RelatedBody":"Let's fix that Claim Key message.\r\n\r\nAlso, there's a case in the search logic I wanted to filter out--if a customer uploads a package foo,  without this change it could still be viewed using https://www.nuget.org/packages/foo. This will prevent that case, as if a package has a TemporaryId, it will not be found by its actual ID."},{"Id":"24178123489","Type":"PullRequestEvent","CreatedAt":"2022-09-23T05:46:53","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9251","RelatedDescription":"Merged pull request \"Alter landing displaypackage URL to use a temporary ID for anon uploads\" (#9251) at NuGet/NuGetGallery","RelatedBody":"- changes the post-publish URL to use the temporary ID\r\n- changes package lookup to use temporary ID first\r\n- displays temporary ID on Display Package page, while leaving persistent metadata (actual ID, version) in page titles and publish message\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/191873924-49218f24-4045-4cfc-94db-52206da465ce.png)\r\n\r\n\r\n"},{"Id":"24175869843","Type":"IssuesEvent","CreatedAt":"2022-09-23T01:35:55","Actor":"christianliebel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9252","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Add caniuse images via bitsofco.de to trusted image domains\" (#9252) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nWe are offering Blazor wrapper packages for different web APIs. There is a great service called caniuse.com that shows the availability of a particular API on different platforms. Ire Aderinokun offers a service that shows the caniuse.com status data and MDN compat data in a (static) image, e.g.:\r\n\r\nhttps://caniuse.bitsofco.de/image/async-clipboard.png → https://res.cloudinary.com/ireaderinokun/image/upload/v1663850793397/caniuse-embed/all/async-clipboard.png\r\n\r\n![](https://caniuse.bitsofco.de/image/async-clipboard.png)\r\n\r\nThus, I'd like to suggest adding either `caniuse.bitsofco.de` or the resolved version `res.cloudinary.com/ireaderinokun/*/caniuse-embed/all/*.png` to the allowlist.\n\n### Repro Steps\n\nStatus image is currently not shown:\r\n\r\n- https://www.nuget.org/packages/Thinktecture.Blazor.AsyncClipboard\r\n- https://www.nuget.org/packages/Thinktecture.Blazor.WebShare\n\n### Expected Behavior\n\nStatus image is shown.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"24175386647","Type":"PullRequestEvent","CreatedAt":"2022-09-23T00:39:46","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9251","RelatedDescription":"Opened pull request \"Alter landing displaypackage URL to use a temporary ID for anon uploads\" (#9251) at NuGet/NuGetGallery","RelatedBody":"- changes the post-publish URL to use the temporary ID\r\n- changes package lookup to use temporary ID first\r\n- displays temporary ID on Display Package page, while leaving persistent metadata (actual ID, version) in page titles and publish message\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/191873924-49218f24-4045-4cfc-94db-52206da465ce.png)\r\n\r\n\r\n"},{"Id":"24174953300","Type":"PullRequestEvent","CreatedAt":"2022-09-22T23:50:25","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9250","RelatedDescription":"Merged pull request \"If a claim key is present for an anonymously uploaded package, show it\" (#9250) at NuGet/NuGetGallery","RelatedBody":"It could be formatted up a little more nicely, but it follows the convention of other informational lines like min client version."},{"Id":"24174827084","Type":"PullRequestEvent","CreatedAt":"2022-09-22T23:36:48","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9249","RelatedDescription":"Merged pull request \"Adding ClaimKey and TemporaryId\" (#9249) at NuGet/NuGetGallery","RelatedBody":"Generates values for new columns for anonymous upload."},{"Id":"24174327770","Type":"PullRequestEvent","CreatedAt":"2022-09-22T22:47:52","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9250","RelatedDescription":"Opened pull request \"If a claim key is present for an anonymously uploaded package, show it\" (#9250) at NuGet/NuGetGallery","RelatedBody":"It could be formatted up a little more nicely, but it follows the convention of other informational lines like min client version."},{"Id":"24174321827","Type":"PullRequestEvent","CreatedAt":"2022-09-22T22:47:19","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9249","RelatedDescription":"Opened pull request \"Adding ClaimKey and TemporaryId\" (#9249) at NuGet/NuGetGallery","RelatedBody":"Generates values for new columns for anonymous upload."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"24196623176","Type":"IssuesEvent","CreatedAt":"2022-09-24T01:30:56","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12110","RelatedDescription":"Opened issue \"TelemetryUtility.IsVsOfflineFeed fails to correctly identify the local feed with 64-bit windows\" (#12110) at NuGet/Home","RelatedBody":"```cs\r\n\r\n[Fact]\r\n        public void IsVSOfflineFeed_ReturnsTrue()\r\n        {\r\n            TelemetryUtility.IsVsOfflineFeed(new PackageSource(@\"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\")).Should().BeTrue();\r\n        }\r\n\r\n```\r\n\r\nThis test should succeed, but it fails. \r\nThe reason is we are detecting the offline feed based on the bitness of the VS process, but we should be checking for both. \r\n\r\nThis has been broken since 6.0"},{"Id":"24195738002","Type":"IssuesEvent","CreatedAt":"2022-09-23T23:11:39","Actor":"stephenjust","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12109","RelatedDescription":"Opened issue \"[DCR]: Change PackageReference restore algorithm to prevent redundant packages from being downloaded\" (#12109) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nCurrently when doing a package restore, Nuget will download packages that are eclipsed by newer versions if that newer version is not a direct dependency of a parent.\r\n\r\n![image](https://user-images.githubusercontent.com/3144757/192067489-4fcf50a0-43c6-4a5c-b720-6b49e8173f7c.png)\r\n\r\nIn the example above, both LibC 1.0.0 and LibC 1.0.2 will be downloaded (but only 1.0.2 installed). However, LibB 1.0.0 will neither be downloaded nor installed since a newer version is a direct dependency of a parent node.\r\n\r\nIf you use a nuget Lock file, the restore is smarter and only downloads the packages that will be installed.\n\n### Desired Behavior\n\nNuget should only download packages that will be installed, even without the presence of a lock file.\r\n\r\nThis may require changes to package servers to provide additional metadata about dependencies or to optionally do the dependency resolution entirely server-side (verified by the client).\n\n### Additional Context\n\nComponent scanning tools can detect packages downloaded by nuget, even if not installed. This can make it difficult to remove components from a build."},{"Id":"24182693128","Type":"IssuesEvent","CreatedAt":"2022-09-23T10:23:18","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12108","RelatedDescription":"Opened issue \"[Bug]: [Bug Bash][Localization] The translation of string “NuGet storage cleared at (current time)” in Options window is incorrect\" (#12108) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.4.0.97\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Details about Problem\r\nVS Version: Main\\32922.386 (installed “Chinese (Simplified)” language pack)\r\nNuGet Version: Dev\\6.4.0.97\r\nOS Version: Windows-11-Enterprise-21H2 ENU\r\n\r\n#### Detailed repro steps\r\n1. Open VS, click menu Tools->Options->Environment->International Settings and select “中文(简体)” in the “Language” dropdown list and restart VS.\r\n2. Create a “C# Console App (.NET 7.0)” project in VS.\r\n3. Right-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n4. Click the “Browse” tab and install some packages into this project.\r\n5. Click the settings button on the top-right of PM UI to open the Options window.\r\n6. Go to NuGet Package Manager->General tab and click the “Clear All NuGet Storage” button.\r\n\r\n#### Expected\r\nThe translation should be “在9/23/2022 2:09:53 AM已清除NuGet存储”.\r\n\r\n#### Actual \r\nThe translation is incorrect as “已清除 9/23/2022 2:09:53 AM 处的 NuGet 存储” since the “9/23/2022 2:09:53 AM” is a time not a place.\r\n![image](https://user-images.githubusercontent.com/20632625/191941090-07ec2661-c05d-40fb-ac5e-f7234287c440.png)\r\n#### Notes:\r\nIt doesn’t repro on D16.11\\32802.440.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"24182641935","Type":"IssuesEvent","CreatedAt":"2022-09-23T10:20:23","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12107","RelatedDescription":"Opened issue \"[Bug]: [Bug Bash] The info showing in Output window should be consistent with the one showing in Options window when clearing NuGet Storage\" (#12107) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.4.0.97\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Details about Problem\r\nVS Version: Main\\32922.386\r\nNuGet Version: Dev\\6.4.0.97\r\nOS Version: Windows-11-Enterprise-21H2 ENU\r\n\r\n#### Detailed repro steps\r\n1. Create a “C# Console App (.NET 7.0)” project in VS.\r\n2. Right-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n3. Click the “Browse” tab and install some packages into this project.\r\n4. Click the settings button on the top-right of PM UI to open the Options window.\r\n5. Go to NuGet Package Manager->General tab and click the “Clear All NuGet Storage” button.\r\n6. Close the Options window after the clearing completed and go to Output window.\r\n#### Expected\r\nThe info should be “NuGet storage cleared.” In Output window. \r\n#### Actual \r\nThe info is “Local resources cleared” in Output window. That’s inconsistent with the info showing in Options dialog as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/191940479-1fe14a71-b12a-4e86-b0fe-c127ef9f3ed3.png)\r\n#### Notes:\r\nIt is not a regression since it reproes on D16.11\\32802.440.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":126,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2022-09-26T03:30:34.7111262Z","RunDurationInMilliseconds":1398}