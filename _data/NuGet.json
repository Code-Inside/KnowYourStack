{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13727080343","Type":"IssuesEvent","CreatedAt":"2020-10-04T04:07:55","Actor":"f2calv","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8235","RelatedDescription":"Opened issue \".NET 5.0 not .NETFramework 5.0\" (#8235) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWhen viewing dependencies on the web site for a package that targets .NET 5.0 the UI reads '.NETFramework 5.0' which I believe is incorrect.\r\n\r\n### To Reproduce\r\nPublish a package that targets .NET 5.0\r\n\r\n### Expected behavior\r\nShould display \".NET 5.0\" instead of \".NETFramework 5.0\"\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/16097639/95006735-9f2d0e80-0607-11eb-8b15-d3be2f25a535.png)\r\n"},{"Id":"13722262480","Type":"IssuesEvent","CreatedAt":"2020-10-03T02:37:31","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8228","RelatedDescription":"Closed issue \"Fix Orchestrator runtime issue\" (#8228) at NuGet/NuGetGallery","RelatedBody":"Orchestrator fails with error:\r\n\r\n```\r\nCould not load file or assembly 'NuGet.Packaging.Core, Version=5.0.0.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies. The system cannot find the file specified.\r\n```\r\n\r\nSteps to be healthy:\r\n\r\n* [x] Rollback orchestrator https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=829396\r\n* [x] Update Gallery https://github.com/NuGet/NuGetGallery/pull/8229\r\n* [x] Verify Gallery https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=833326\r\n* [x] Publish NuGetGallery.Core https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=4116611&view=logs&j=fd490c07-0b22-5182-fac9-6d67fe1e939b&t=f03d4b0b-5c7f-5a3c-32ca-d79e6a87d689\r\n* [x] Update Orchestrator's NuGetGallery.Core https://github.com/NuGet/NuGet.Jobs/pull/922\r\n* [x] Verify Orchestrator DEV https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=833772"},{"Id":"13721602092","Type":"IssuesEvent","CreatedAt":"2020-10-02T23:35:15","Actor":"heng-liu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8234","RelatedDescription":"Opened issue \"Enable nuget.org to block packages with bad-formatted timestamps\" (#8234) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nSome third party TSA sent out timestamp without following encoding rules.\r\nWe have found several packages on nuget.org.\r\nPls refer to https://github.com/NuGet/Client.Engineering/issues/355 for more details.\r\n\r\n### Describe the solution you'd like\r\nWe would like nuget.org to reject those packages.\r\n\r\n### Additional context\r\n"},{"Id":"13721122241","Type":"IssuesEvent","CreatedAt":"2020-10-02T22:07:22","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7855","RelatedDescription":"Closed issue \"[A11y]Status.NuGet.Org must not use meta refresh\" (#7855) at NuGet/NuGetGallery","RelatedBody":"@ryuyu commented on [Thu Feb 27 2020](https://github.com/NuGet/Engineering/issues/3018)\n\nCurrently, the status page uses a <meta> tag to cause the page to refresh.\r\n\r\nThis is not a11y compliant.\r\nThe page should be updated to use a javascript refresh instead.\n\n"},{"Id":"13719340410","Type":"PullRequestEvent","CreatedAt":"2020-10-02T18:35:03","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8229","RelatedDescription":"Merged pull request \"Update NuGet client libraries to 5.8.0 prerelease\" (#8229) at NuGet/NuGetGallery","RelatedBody":"The Gallery uses an older version of `NuGet.Packaging` that depends on `NuGet.Packaging.Core`. The Orchestrator was updated to use a newer version of `NuGet.Packaging` that no longer depends on `NuGet.Packaging.Core`. The Orchestrator uses assemblies produced from the Gallery, thereby causing runtime issues when these assemblies attempt to reference types from `NuGet.Packaging.Core.dll` which is unavailable.\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4116398&view=results\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=833326\r\n\r\nPart of https://github.com/NuGet/NuGetGallery/issues/8228"},{"Id":"13709906846","Type":"PullRequestEvent","CreatedAt":"2020-10-01T23:26:41","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8233","RelatedDescription":"Merged pull request \"Revert \"[Cookie Compliance] The new cookie compliance pipeline. (#8209)\"\" (#8233) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13709653231","Type":"PullRequestEvent","CreatedAt":"2020-10-01T22:46:28","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8233","RelatedDescription":"Opened pull request \"Revert \"[Cookie Compliance] The new cookie compliance pipeline. (#8209)\"\" (#8233) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"13709347716","Type":"IssuesEvent","CreatedAt":"2020-10-01T22:03:07","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6371","RelatedDescription":"Closed issue \"Move Search backend to Azure Search\" (#6371) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13726927507","Type":"IssuesEvent","CreatedAt":"2020-10-04T03:06:52","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9996","RelatedDescription":"Closed issue \"Fix 'dotnet pack' tests when testing under VS IDE\" (#9996) at NuGet/Home","RelatedBody":"## Details\r\n\r\nThe NuGet Pack artifacts aren't being copied to the test SDK layout, when building/testing under VS IDE locally and not on CI/CLI. This was observed in PR NuGet/NuGet.Client#3270 as the changes were not reflecting in the tests leading to tests passing locally and failing on CI and vice-versa.\r\n\r\n## Repro\r\n\r\n1. Make some drastic changes to NuGet Pack targets (like delete the entire content)\r\n\r\n2. Build and run tests.\r\n\r\n3. Observe that tests do run successfully as the changed target files are not copied into test layout.\r\n\r\n## Issue when implementing a Fix\r\n\r\nIt is straight forward to fix copying the pack assets to the test layout but the current implementation only copies `CoreCLR` assets for testing both the variants. There should be way to determine if the tests are running under Core MSBuild or Full MSBuild, so that we can efficiently test both type of project styles with the same tests. This is a blocker to enable tests on Full MSBuild (with non-sdk style projects) with the pack targets."},{"Id":"13722028529","Type":"IssuesEvent","CreatedAt":"2020-10-03T01:22:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10102","RelatedDescription":"Closed issue \"Pack should validate the case of files referenced by the .nuspec because NuGet.org validation is case sensitive\" (#10102) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n### Pack should validate the case of files referenced by the .nuspec because NuGet.org validation is case sensitive\r\n\r\n#### Background\r\nFor approx 3 months we had been building a NuGet package daily, hosting on an internal NuGet repository and using within Visual Studio. On the day we planned to release our NuGet packages on NuGet.org, they failed validation due to a missing file, when the file was technically present but the file name case did not match the nuspec. This caused us to scramble to rename the file, replace in multiple NuGet packages and re-sign each package in order to keep on track with our release schedule.\r\n\r\nThe Pack operation should have failed due to the case issue. \r\n\r\n#### Details\r\n- Actual file name/case inside the NuGet package: `\\legal\\eula.txt`\r\n- File name/case in the Nuspec reference: `<license type=\"file\">legal/EULA.txt</license>`\r\n- Note NuGet pack did not report any issues in our internal build pipeline\r\n- The package appeared to work OK in Visual Studio when using our internal NuGet server. Or so we thought...\r\n- The package failed NuGet.org validation with the error `The license file 'legal/EULA.txt' does not exist in the package.`\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): NuGet.exe\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): \r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\nN/A\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Take an existing NuGet package\r\n2. Replace a file within the package with a lowercase named version of the same file\r\n3. Attempt to upload to NuGet.org\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n\r\n"},{"Id":"13721864554","Type":"IssuesEvent","CreatedAt":"2020-10-03T00:38:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10103","RelatedDescription":"Closed issue \"Package Manager UI in Visual Studio provides incorrect Report Abuse URL for private feed\" (#10103) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nThis problem is related to the VS Package Management UI. When viewing the details of a package, the UI provides a fallback Report Abuse URL when the feeds service index doesn't contain a report abuse template URI. If the service index does not contain a URI then it should not fallback to using the NuGet URI since this will be incorrect for packages that are not public.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a feed in Azure Artifacts (this feed doesn't return a report abuse template URI).\r\n\r\n2. Point VS at that feed.\r\n\r\n3. Observe that packages in that feed have the incorrect report abuse URI."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":28,"FavoriteCount":19,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-10-04T05:30:37.3365326Z","RunDurationInMilliseconds":1507}