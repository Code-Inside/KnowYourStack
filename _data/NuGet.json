{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20904818424","Type":"PullRequestEvent","CreatedAt":"2022-03-24T00:10:49","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9069","RelatedDescription":"Opened pull request \"Dev advay26 a11y remove recaptcha tabindex\" (#9069) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/nuget/nugetgallery/issues/9052\r\n\r\n**Problem:**\r\n \r\nOn the Forgot Password page, when tab navigating from the 'Email' input field onwards, you expect the focus to move to the 'Send' button, but the focus shifts to the Privacy and Terms links in the ReCAPTCHA element in the bottom-right of the page, before resuming the regular tab stop order from the 'Send' button onwards.\r\n\r\n**Currently:**\r\n![Recaptcha receives focus](https://user-images.githubusercontent.com/82980589/159816300-1c5d5a40-e274-474e-8809-a7a9e76131e6.gif)\r\n\r\nThe parent div that we were loading the ReCAPTCHA element into had a data-tabindex=\"-1\" attribute, but the iframes within this were still receiving tab focus.\r\n\r\n**Fix:**\r\n\r\nTo fix this, I added the tabindex=\"-1\" attribute to all the ReCAPTCHA iframes after they have been loaded into the page.\r\n\r\n![image](https://user-images.githubusercontent.com/82980589/159816635-75a9fe52-8890-40b1-ad51-de691fc13171.png)\r\n\r\n**After the changes:**\r\n![Recaptcha doesn't receive focus](https://user-images.githubusercontent.com/82980589/159816681-c68813e1-e5be-4d59-a39b-a7eea4d800e5.gif)"},{"Id":"20901602560","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:59:22","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9068","RelatedDescription":"Opened issue \"[NuGet.org Bug]: A11y_NuGet Service_coverlet.msbuild_Tab Navigation_Keyboard : Tab items 'Package Manager' , '.NET CLI' , 'PackageReference' etc in the tab lists are navigated using tab key instead of arrow key.\" (#9068) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\n**Actual:**\r\nTab items 'Package Manager' , '.NET CLI' , 'PackageReference' etc in the tab lists are navigated using tab key instead of arrow key.\r\nOn using tab to a \"tab\" item the focus on next tab key moves to the next item rather then the data under it\r\nSimilar issue is observed for the tab list including 'Readme' , 'Dependencies' , 'Used by' and 'Version'.\r\nSimilar issue is observed in through out the application.\r\n\r\n**Expected:**\r\nTab items 'Package Manager' , '.NET CLI' , 'PackageReference' etc in the tab lists should be navigated using arrow key instead of tab key and when focus is on a tab item the tab key focus should go inside the data under that tab item.\r\narrow keys should be used for navigation between tab items and tab key for the data under the tabs\r\n\r\n**User Impact:**\r\nKeyboard users will not be able to access the data under tabs immediately \n\n### Repro Steps\n\n1.  Launch the application URL: https://www.nuget.org/packages/coverlet.msbuild/\r\n2.  \"coverlet.msbuild\" page will get open.\r\n3.  Tab to Tab navigation controls.\r\n4.  Tab to Tab items 'Package Manager' , '.NET CLI' , 'PackageReference' etc in the tab lists and observe it.\n\n### Expected Behavior\n\nTab items 'Package Manager' , '.NET CLI' , 'PackageReference' etc in the tab lists should be navigated using arrow key instead of tab key and when focus is on a tab item the tab key focus should go inside the data under that tab item.\r\narrow keys should be used for navigation between tab items and tab key for the data under the tabs\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20900145454","Type":"PullRequestEvent","CreatedAt":"2022-03-23T18:31:56","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8906","RelatedDescription":"Merged pull request \"Gallery API request count tracking by endpoint as metric\" (#8906) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4133 (without user agent consideration).\r\n\r\nAdded support for client-side metric pre-aggregation as I see no reason to have each individual request tracked as an instance of a metric: AI metrics are not subject for sampling, and we are getting millions of API requests per hour. Non-preaggregated metric would waste resources.\r\n\r\nThere seems to be two options for submitting sample for pre-aggregation:\r\n1. By calling [`Metric.TrackValue`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.applicationinsights.metric.trackvalue?view=azure-dotnet) that has no overload that accepts any kind of list of dimension values.\r\n2. By obtaining a [`MetricSeries`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.applicationinsights.metrics.metricseries?view=azure-dotnet) object by calling [`Metric.TryGetDataSeries`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.applicationinsights.metric.trygetdataseries?view=azure-dotnet) (which does have an overload accepting an *array* of dimension values) and then call its `TrackValue` method.\r\n\r\nNone of those accepts a dictionary of dimensions names and dimension values (I'd guess, order matters in this case and dictionary enumeration does not produce stable sequence of keys). I chose to go with the first approach to provide dictionary-like interface (and eliminate the possibility of mismatching dimension names with values) to add dimensions and not to waste time/memory converting the list of values to an array. Because of that, I had to write that ugly switch of `TrackValue` calls.\r\n\r\nWith pre-aggregation, AI SDK sends pre-aggregated metrics once per minute (default aggregation interval).\r\n\r\nAdded telemetry calls to all public methods of `ODataV1FeedController` and `ODataV2FeedController`."},{"Id":"20883259407","Type":"PullRequestEvent","CreatedAt":"2022-03-23T00:14:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8478","RelatedDescription":"Closed pull request \"[Stats]Faster stats refresh\" (#8478) at NuGet/NuGetGallery","RelatedBody":"Small change to speed up the stats refresh since pipeline updates should allow the report to generate fast enough for this.\r\n\r\nIn theory, this will quadruple the hits on storage through this, and performance impact of this has not been analyzed.\r\nHowever, I do not expect the impact of hitting 6 files 4 times instead of once every hour to be major.\r\n\r\nThis is not a critical change for functionality, and I'm happy to defer it if we so desire."},{"Id":"20883126377","Type":"IssuesEvent","CreatedAt":"2022-03-23T00:01:28","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9066","RelatedDescription":"Closed issue \"[Deployment][2022.03.21]\" (#9066) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\n## Changes\r\n\r\nFI `main` to `dev`:\r\n* https://github.com/NuGet/NuGetGallery/pull/9046 (tracked by https://github.com/NuGet/Engineering/issues/4308)\r\n* https://github.com/NuGet/NuGetGallery/pull/9053 (tracked by https://github.com/NuGet/Engineering/issues/4308)\r\n\r\nRI `dev` to `main`:\r\n* https://github.com/NuGet/NuGetGallery/pull/9043 (tracked by https://github.com/NuGet/NuGetGallery/issues/9042)\r\n* https://github.com/NuGet/NuGetGallery/pull/9049 (tracked by https://github.com/NuGet/Engineering/issues/4309)\r\n* https://github.com/NuGet/NuGetGallery/pull/9050\r\n* https://github.com/NuGet/NuGetGallery/pull/9051(tracked by https://github.com/NuGet/NuGetGallery/issues/9048)\r\n* https://github.com/NuGet/NuGetGallery/pull/9028\r\n* https://github.com/NuGet/NuGetGallery/pull/9055 (tracked by https://github.com/NuGet/Engineering/issues/4269)\r\n* https://github.com/NuGet/NuGetGallery/pull/9058 (tracked by https://github.com/NuGet/Engineering/issues/4315)\r\n* https://github.com/NuGet/NuGetGallery/pull/9059 (tracked by https://github.com/NuGet/NuGetGallery/issues/8988)\r\n* https://github.com/NuGet/NuGetGallery/pull/9062\r\n* https://github.com/NuGet/NuGetGallery/pull/9065 (tracked by https://github.com/NuGet/Engineering/issues/4322)\r\n\r\n\r\n## Progress\r\n* [x] Merge FI PR: https://github.com/NuGet/NuGetGallery/pull/9063\r\n* [x] Merge RI PR: https://github.com/NuGet/NuGetGallery/pull/9064\r\n* [x] Build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5912454&view=results\r\n* [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?releaseId=1292005&_a=release-pipeline-progress\r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD"},{"Id":"20883097060","Type":"PullRequestEvent","CreatedAt":"2022-03-22T23:58:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/6003","RelatedDescription":"Closed pull request \"Added LDAP support\" (#6003) at NuGet/NuGetGallery","RelatedBody":"Fixes #554, #5288\r\n\r\nSince I also needed it, I added support for LDAP / Windows Active Directory. I was only able to test it within our company with our companies AD. To use it, you have to configure the `Auth.LdapUser` block in the `Web.config` file.\r\n\r\nWhen `Auth.LdapUser.Enabled`, the register form is used to check the given credentials (username and password) and if the credentials are valid, it creates a new account with the username as `ldap.user` credentials instead of saving the password with `password.v3` credentials. No password credentials will be created for this account. If you want to use `LdapUser` with the current password as `LocalUser` fallback, you can just add the credentials to the account in `AuthenticationService.cs` right after the `CreateIdentity` was called (around line 252). This may be something to make configurable.\r\n\r\nIf you only want to support LDAP without regular passwords (i.e. when you are setting up a new server), I advise you to set `Auth.LocalUser.Enabled` in `Web.config` to `false`. They can coexist, since they both have an own cookie, but in most cases, you really only want to have either LDAP or local users.\r\n\r\nRight now, there is no migration path to change existing user credentials from `password.v3` to `ldap.user`. In case the NuGet username already matches the LDAP username, the easiest way would be to update the `dbo.Credentials` entries for `password.v3` and set `Type`= `ldap.user` and `Value` = `(SELECT [Username] FROM [Users] WHERE [Key] = [UserKey])`.\r\n\r\n**Tests are currently missing. I didn't want to put in the effort in case that it won't be merged. So I will add them, in case that there are no points speaking against merging.**"},{"Id":"20883002738","Type":"PullRequestEvent","CreatedAt":"2022-03-22T23:47:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/5841","RelatedDescription":"Closed pull request \"Adds machine learning-generated recommendations to each package's page\" (#5841) at NuGet/NuGetGallery","RelatedBody":"Have not built or tested yet, please do not merge.\r\n\r\nContributes to https://github.com/NuGet/NuGetGallery/issues/5751 (since this is hopefully just the initial stage of the feature, I won't write \"fixed\" just yet :wink:)\r\n\r\n/cc @shishirx34 @scottbommarito "},{"Id":"20882979912","Type":"PullRequestEvent","CreatedAt":"2022-03-22T23:45:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/2953","RelatedDescription":"Closed pull request \"Add github information on the package page\" (#2953) at NuGet/NuGetGallery","RelatedBody":"Two node.js applications, one to look at all nuget packages, determine which have github URLs and add these to an azure queue. The second reads from the queue, and uses the github API to retrieve repo information and a rendered readme.\n\nInstructions are provided for installing and running. \n"},{"Id":"20882762652","Type":"IssuesEvent","CreatedAt":"2022-03-22T23:22:09","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9048","RelatedDescription":"Closed issue \"[NuGet.org Bug]: A11y_NuGet Service_Microsoft.Identity.Client_ScreenReader:When we tab to the NuGet packages' table and GitHub repositories table the screen reader is not announcing the column headers name when its read the cell data\" (#9048) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\n**Source:** https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468943\r\n\r\n**Actual:**\r\nWhen we tab to the NuGet packages' table and GitHub repositories table and move to each cell the column header of the respective cell is not read\r\nSimilar issue is also observed in JAWS\r\nSimilar issue is observed in throughout the application\r\n\r\n**Expected:**\r\nEach cell should be read with its name row column number and the column header name it belongs too.\r\n\r\n**User Impact:**\r\nScreen readers users will face difficulty in knowing the column header reference of the cell\n\n### Repro Steps\n\n1. Launch the application URL: https://www.nuget.org/packages/coverlet.msbuild/\r\n2. \"Microsoft.Identity.Client\" page will get open.\r\n3. Tab to 'Used by' tab controls and press enter to select it.\r\n4. Tab to 'NuGet packages' table.\r\n5. Run the NVDA\r\n6. tab to the cells of the table   \n\n### Expected Behavior\n\nEach cell should be read with its name row column number and the column header name it belongs too.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20882758881","Type":"IssuesEvent","CreatedAt":"2022-03-22T23:21:46","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8988","RelatedDescription":"Closed issue \"[NuGet.org Bug]: A11y_NuGet Service_Home_Create .NET apps faster with NuGet_Text Spacing: After applying text spacing 'Versions' text is not visible properly.\" (#8988) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nSource: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468954\n\n### Repro Steps\n\n1. Launch the application URL: https://www.nuget.org/\r\n2. \"Home\" page will get open.\r\n3. Apply text spacing and observe that 'Versions' text is visible properly or not.\r\n\r\nAfter applying text spacing 'Versions' text is not visible properly.\r\n\r\nSimilar issue is observed for \"Packages\" text also.\n\n### Expected Behavior\n\nAfter applying text spacing all the content should be clearly visible.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20882754113","Type":"IssuesEvent","CreatedAt":"2022-03-22T23:21:17","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9042","RelatedDescription":"Closed issue \"[NuGet.org Bug]: A11y_NuGet Service_coverlet.msbuild_Used By-NuGet packages_DeveloperTool : Table name is not set for the 'NuGet packages' table present on the screen.\" (#9042) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nSource: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468937\r\n\r\n\n\n### Repro Steps\n\n1. Launch the application URL: https://www.nuget.org/packages/coverlet.msbuild/\r\n2. \"coverlet.msbuild\" page will get open.\r\n3. Tab to 'Used by' tab controls and press enter to select it.\r\n4. Tab to 'NuGet packages' table.\r\n5. Open developer tool by using ctrl+shift+c and hover over 'NuGet packages' table to check its name. \r\n\r\n**Actual Behavior**:\r\n\r\nTable name is not set for the 'NuGet packages' table present on the screen.\r\n\r\nSimilar issue is observed in through out the application where ever such tables are present.\n\n### Expected Behavior\n\nProper name should be set for the 'NuGet packages' table present on the screen as per the data/purpose of the table \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20882710565","Type":"PullRequestEvent","CreatedAt":"2022-03-22T23:16:44","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9067","RelatedDescription":"Merged pull request \"[A11y] Added aria-labels to tabs on Package Details page\" (#9067) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/nuget/nugetgallery/issues/9061\r\n\r\n**Problem:**\r\n\r\nOn the Package Details page, individual tabs do not have descriptive aria-labels that can be read by screen readers to inform users. We need to describe the purpose of the tab contents to account for cases where it may not be self-evident, like this isolated link in the Release Notes section here:\r\n![image](https://user-images.githubusercontent.com/82980589/159563014-15389a49-8469-4c09-b133-b7544a2cc896.png)\r\n\r\n**Fix:**\r\n\r\nTo fix this, I added aria-label attributes to each of the tab content divs.\r\n"},{"Id":"20880029786","Type":"PullRequestEvent","CreatedAt":"2022-03-22T19:53:12","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9067","RelatedDescription":"Opened pull request \"[A11y] Added aria-labels to tabs on Package Details page\" (#9067) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/nuget/nugetgallery/issues/9061\r\n\r\n**Problem:**\r\n\r\nOn the Package Details page, individual tabs do not have descriptive aria-labels that can be read by screen readers to inform users. We need to describe the purpose of the tab contents to account for cases where it may not be self-evident, like this isolated link in the Release Notes section here:\r\n![image](https://user-images.githubusercontent.com/82980589/159563014-15389a49-8469-4c09-b133-b7544a2cc896.png)\r\n\r\n**Fix:**\r\n\r\nTo fix this, I added aria-label attributes to each of the tab content divs.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20904508814","Type":"IssuesEvent","CreatedAt":"2022-03-23T23:37:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/7012","RelatedDescription":"Reopened issue \"Path to non-existing NuGetPackagesFallback folder generated into .nuget.g.props\" (#7012) at NuGet/Home","RelatedBody":"MSBuild 15.7.179.6572\r\n\r\nMSBuild of an SDK-style project with PackageReference fails because the generated .csproj.nuget.g.props file contains this line:\r\n\r\n```\r\n<NuGetPackageFolders Condition=\" '$(NuGetPackageFolders)' == '' \">C:\\Users\\kirillo\\.nuget\\packages\\;C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackagesFallback\\</NuGetPackageFolders>\r\n```\r\n\r\nThe NuGetPackagesFallback folder doesn't exist on my machine, causing NuGet to fail the build with the exception:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.201\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(172,5): error MSB4018: The \"ResolvePackageDependencies\" task failed unexpectedly.\r\nNuGet.Packaging.Core.PackagingException: Unable to find fallback package folder 'C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackagesFallback\\'.\r\n   at NuGet.Packaging.FallbackPackagePathResolver..ctor(String userPackageFolder, IEnumerable`1 fallbackPackageFolders)\r\n   at Microsoft.NET.Build.Tasks.NuGetPackageResolver.CreateResolver(LockFile lockFile, String projectPath)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.get_PackageResolver()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.ResolvePackagePath(LockFileLibrary package)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.GetPackageAndFileDefinitions()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\monodevelop\\main\\external\\RefactoringEssentials\\RefactoringEssentials\\RefactoringEssentials.csproj]\r\n```\r\n\r\nNone of the nuget.config files on my machine contain anything related to the fallback folder.\r\n\r\nI don't have any environment variables set that start with NuGet*.\r\n\r\nMy VS offline package cache is a similar folder, but without the fallback:\r\n![image](https://user-images.githubusercontent.com/679326/41178607-a6f49062-6b1c-11e8-8b03-052d58ae5c01.png)\r\n\r\nWhy does NuGet decide to generate that non-existing folder into my .g.props files? \r\n\r\nWhere does that value come from?"},{"Id":"20904422614","Type":"IssuesEvent","CreatedAt":"2022-03-23T23:28:41","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6365","RelatedDescription":"Closed issue \"deduplicate wpf test attributes\" (#6365) at NuGet/Home","RelatedBody":"PR  NuGet/NuGet.Client#1902 duplicates some test attributes created in NuGet/NuGet.Client#1512\r\n\r\nThis is a tracking issue to deduplicate the attributes"},{"Id":"20903793495","Type":"IssuesEvent","CreatedAt":"2022-03-23T22:28:46","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7796","RelatedDescription":"Closed issue \"NuGet restore on solution with Visual Studio Installer projects (vdproj) causes MSB4025\" (#7796) at NuGet/Home","RelatedBody":"Solutions with legacy Visual Studio installer projects ( vdproj)  have started failing.\r\n\r\nIt would seem it doesn't result in a non zero exit code, but also doesn't restore all project properly as we MSBuild later fails with 'project.assets.json' not found. Run a NuGet package restore to generate this file.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 4.9.3\r\n\r\nWorked before? If so, with which NuGet version: 4.7.1\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. NuGet.exe restore \"TestSolution.sln\"\r\n\r\n### Verbose Logs\r\n\r\nTestProjectInstaller\\TestProjectInstaller.vdproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, \r\nposition 1.\r\n\r\n### Sample Project\r\n\r\nCommuting right now, but will see if I can get a minimal repo project.\r\n\r\nBut the project causing issues has\r\n1. VDPROJ installer\r\n2. A multitargeted net462 & netstandard1.5 class lib\r\n3. v4.5.2 console app\r\n\r\n"},{"Id":"20901255475","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:37:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9025","RelatedDescription":"Closed issue \"[Centrally managing NuGet packages and versions] Visual Studio - E2E testing\" (#9025) at NuGet/Home","RelatedBody":"Create test matrix for manual execution.\r\nExecute the test matrix. "},{"Id":"20901147521","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:30:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/2387","RelatedDescription":"Reopened issue \"PackageRestoreTest.ps1 E2E tests have disabled since Dev12. Re-enable or Delete them\" (#2387) at NuGet/Home","RelatedBody":"PackageRestoreTest.ps1 E2E tests have disabled since Dev12. Re-enable them or Delete them\n\nCurrently, they were disabled for Dev12 and Dev14. Will disable it for Dev15 as well.\nInvestigate and fix them all when this issue is fixed.\n\nCode to remove is at https://github.com/NuGet/NuGet.Client/blob/dev/test/EndToEnd/NuGet.Tests.psm1#L108\n"},{"Id":"20901137925","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:30:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/2387","RelatedDescription":"Closed issue \"PackageRestoreTest.ps1 E2E tests have disabled since Dev12. Re-enable or Delete them\" (#2387) at NuGet/Home","RelatedBody":"PackageRestoreTest.ps1 E2E tests have disabled since Dev12. Re-enable them or Delete them\n\nCurrently, they were disabled for Dev12 and Dev14. Will disable it for Dev15 as well.\nInvestigate and fix them all when this issue is fixed.\n\nCode to remove is at https://github.com/NuGet/NuGet.Client/blob/dev/test/EndToEnd/NuGet.Tests.psm1#L108\n"},{"Id":"20901039218","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:24:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7207","RelatedDescription":"Closed issue \"NuGet client code needs some refactoring\" (#7207) at NuGet/Home","RelatedBody":"Multiple places in current NuGet code needs refactoring to better align with their meaning. Currently they are poorly named or explained or designed. This is the uber issue to keep track of such instances and look for the opportunity to improve those in future releases.\r\n\r\n- [ ] [LockFile](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.ProjectModel/LockFile/LockFile.cs) which has nothing to do with a lock file instead represent assets file (`project.assets.json` or `project.lock.json`)\r\n\r\n- [ ] [PackageSpec](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.ProjectModel/PackageSpec.cs) which again has nothing to do with a package instead it's kind of projectSpec or all the relevant details about the project NuGet needs for restore\r\n\r\n@NuGet/nuget-client please keep on adding more n more such instances here."},{"Id":"20901028710","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:23:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7258","RelatedDescription":"Closed issue \"Normalize RestoreResult properties\" (#7258) at NuGet/Home","RelatedBody":"Currently there are multiple properties in [`RestoreResult`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Commands/RestoreCommand/RestoreResult.cs) to identify existing assets file vs new assets file along which are used to identify when we need to write the assets file on disk. This has often resulted into more trouble since assets file schema keeps growing and there're always some or the other left over issues with comparison across platforms. Also, there is already `Status` field in this class to indicate whether restore was successful or not which is not effectively defined and utilized to differentiate all the different restore results.\r\n\r\nAs part of `Packages lock file feature` we're adding another field `NewPackagesLockFile` but instead of adding multiple fields, we're only adding single field and the idea is `RestoreCommand` will only populate this field when it either generated or updated as part of current restore.\r\n\r\nSo this is the tracking issue to update existing properties of assets file and cache file consistent with new lock file in dev16 along with:\r\n\r\n- Normalize all existing properties (assets file, cache file, etc...)\r\n- Enhance `Status` field from `boolean` to a better `enum` to represent different states of restore result\r\n- Dont need a separate result class (`NoOpRestoreResult`) for noop, consolidate these different classes into single `RestoreResult`"},{"Id":"20901022641","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:23:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6836","RelatedDescription":"Closed issue \"take a dump of devenv.exe when e2e test times out or apex has a long running test\" (#6836) at NuGet/Home","RelatedBody":"we can detect if a test timed out , which was probably due to a hang . in that case we should use ProcDump to take a dump of the process and analyze why that happened."},{"Id":"20901012766","Type":"IssuesEvent","CreatedAt":"2022-03-23T19:22:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9318","RelatedDescription":"Closed issue \"[CPVM] Enhance the E2E test coverage\" (#9318) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nEnhance the E2E test coverage with more scenarios for:\r\nP2P with combinations of CPVM for each of the projects, same dependencies or different.\r\nMultiple levels of pining transitive dependencies.\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-03-24T03:30:23.8613649Z","RunDurationInMilliseconds":1259}