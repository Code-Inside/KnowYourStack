{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14474368097","Type":"IssuesEvent","CreatedAt":"2020-12-09T23:09:08","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7534","RelatedDescription":"Closed issue \"Implement WCAG 2.1\" (#7534) at NuGet/NuGetGallery","RelatedBody":"There are new accessibility standards that we need to abide by. We need to analyze our site to determine if there are any issues with our analysis of them.\r\n\r\nNote that I have not included the following standards, which do not apply to us:\r\n- MAS 2.1.4: Character Key Shortcuts\r\n    - we don't have any such shortcuts, except those that are implemented by the browser by default\r\n- MAS 2.5.1: Pointer Gestures\r\n    - we don't have any pointer gestures\r\n- MAS 2.5.4: Motion Actuation\r\n    - we don't have any motion controls"},{"Id":"14474315634","Type":"IssuesEvent","CreatedAt":"2020-12-09T23:03:10","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8346","RelatedDescription":"Closed issue \"Having an issue uploading to Nuget.org\" (#8346) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\ni'm trying to upload package using \"Upload\" button at https://www.nuget.org/packages/upload, but i'm receiving \" This package ID has been reserved. Please request access to upload to this reserved namespace from the owner of the reserved prefix, or re-upload the package with a different ID\". \r\nCan you help me with this?."},{"Id":"14474313293","Type":"IssuesEvent","CreatedAt":"2020-12-09T23:02:54","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8347","RelatedDescription":"Closed issue \"Having an issue uploading to Nuget.org\" (#8347) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\nI'm trying to upload package using \"Upload\" button at https://www.nuget.org/packages/upload, but i'm receiving \" This package ID has been reserved. Please request access to upload to this reserved namespace from the owner of the reserved prefix, or re-upload the package with a different ID\".\r\nCan you help me with this?."},{"Id":"14474288595","Type":"IssuesEvent","CreatedAt":"2020-12-09T23:00:14","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8349","RelatedDescription":"Closed issue \"server error while transform a user into an organization\" (#8349) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nI have a user account which has four packages.  I want to convert this user to an organization (let's call it 'A') and assign it to another user account that I control (let's call it 'B').  \r\n\r\n### To Reproduce\r\nThere is a button for this ...\r\n\r\nI add the I add the user 'B' to the test box and and click ok and then dismiss the alert with another affirmative.\r\n\r\nI log in as the admin of the new organization owner and check the organizations view.  The transferred account appears there with an accept (check) and decline (exe).  If I decline everything returns to the previous state (not the desired end state).\r\n\r\nIf I accept control of the new organization - ka-boom  500 server error\r\n\r\n### Expected behavior\r\nThe new administrator should have another organization.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n![There a button for this](https://user-images.githubusercontent.com/2963975/101568808-5136dd00-39a1-11eb-9131-18822fb09615.png)\r\n\r\n![the view from the new admin](https://user-images.githubusercontent.com/2963975/101568976-9b1fc300-39a1-11eb-9526-40b86acb9012.png)\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"14472016145","Type":"IssuesEvent","CreatedAt":"2020-12-09T19:17:04","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8196","RelatedDescription":"Closed issue \"[A11y][ARIA]NVDA/Narrator is reading about the data which is not present on the screen at the table \"Version History\"\" (#8196) at NuGet/NuGetGallery","RelatedBody":"Copied from https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1188406\r\n## Browser Details:\r\nFirefox Version: 79.0 (64 bit)\r\n\r\n## OS Details\r\n\r\nMicrosoft Windows 10 Enterprise  ​\r\n\r\nVersion 2004 (OS Build 19041.450) \r\n\r\n\r\n## Repro Steps:\r\n\r\n    Turn on NVDA\r\n    Hit the URL and login with appropriate credentials\r\n    Tab till \"Profile\" button in the menu bar and press enter\r\n    Tab till any Manage packages\"  and press enter.\r\n    Tab till search bar and search for 'Json' and press enter \r\n    Tab till the first result \"Newtonsoft.Json\" and press enter \r\n    Tab till \"Version\" of any result \r\n    Tab till \"Version history\" and press enter to expand\r\n    Verify whether the NVDA is announcing the blank columns and allows navigation with CTRL + ALT + Arrow keys\r\n\r\n## Actual Results:\r\n\r\nNVDA/Narrator is reading about the data which is not present on the screen at the table \"Version History\"\r\n\r\n   \r\n## Expected Results:\r\nData should be visible on the screen.\r\n\r\nNarrator/NVDA should read correct data which is present in the table and which is visible on the screen\r\n\r\nNote: when data is not present in any column it would be better if screen reader announce it as empty cell.\r\n\r\n## User Impact:\r\n\r\nScreen reader users may not be understand about the columns in the table and also get confused with navigation \r\n\r\n## Notes\r\nIn a surprise twist, we are reading out too much information. This seems most likely connected to the fact that the table has columns that are not visible at all times (status, signature information, deprecation information). For cases where this information isn't present, it should not be in the table either (if it should never be presented). If it could possibly be presented, but it isn't filled in, we should indicate that the cell is empty. "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14475485503","Type":"IssuesEvent","CreatedAt":"2020-12-10T01:44:44","Actor":"caghand","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10373","RelatedDescription":"Opened issue \"No-op restore does not work across dotnet.exe and Visual Studio when there is an \"sdk\" entry in global.json\" (#10373) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: dotnet.exe and VS UI\r\n\r\nNuGet version: 5.8.0.6930\r\n\r\ndotnet.exe --version: 3.1.404\r\n\r\nVS version: 16.8.3\r\n\r\nOS version: win10 v20H2 (19042.630)\r\n\r\nWorked before? If so, with which NuGet version: Unknown\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new .NET Core Class Library project in Visual Studio 2019.\r\n\r\n2. Add a NuGet package to the project.\r\n\r\n3. Save and close the solution.\r\n\r\n4. Next to the \".sln\" file, add a global.json file with the following content:\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"3.1.404\"\r\n  }\r\n}\r\n```\r\n\r\n5. Run `dotnet restore` on the \".sln\" file.  If you run it several times, you will see that no-op restore works perfectly.\r\n\r\n6. Open the solution in Visual Studio 2019.\r\n\r\n7. Run `dotnet restore` on the \".sln\" file again.  You will see that no-op restore does not work.\r\n"},{"Id":"14472910070","Type":"IssuesEvent","CreatedAt":"2020-12-09T20:39:14","Actor":"AArnott","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10372","RelatedDescription":"Opened issue \"NU5017 reported for symbol packages without clarifying this\" (#10372) at NuGet/Home","RelatedBody":"When this property is set (perhaps in a `Directory.Build.props` file somewhere):\r\n\r\n```xml\r\n    <SymbolPackageFormat>snupkg</SymbolPackageFormat>\r\n```\r\n\r\nNuGet packages that only bundle content, build imports, etc. fail to pack in a somewhat bizarre way:\r\n\r\n```\r\n  Microsoft.VisualStudio.SDK.VsixSuppression -> D:\\git\\VSIXSuppression\\bin\\Microsoft.VisualStudio.SDK.VsixSuppression\\Debug\\netstandard2.0\\Microsoft.VisualStudio.SDK.VsixSuppression.dll\r\n  Successfully created package 'D:\\git\\VSIXSuppression\\bin\\Packages\\Debug\\NuGet\\Microsoft.VisualStudio.SDK.VsixSuppression.16.8.0-gfab5d5df6a.nupkg'.\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(207,5): error NU5017: Cannot create a package that has no dependencies nor content. [D:\\git\\VSIXSuppression\\src\\Microsoft.VisualStudio.SDK.VsixSuppression\\Microsoft.VisualStudio.SDK.VsixSuppression.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\nNote it says it packed, then reports errors and breaks the build. No clue as to why.\r\n\r\nEventually I figure out that it's the *symbols* package that failed to build. It doesn't apply in my case, so I can remove the property that says to build a snupkg file. But it would sure save a lot of investigation time if the error message indicated that it was the symbols package that failed and that the property can be cleared to solve the problem.\r\n\r\nSimilar to what @Zastai posted in https://github.com/NuGet/Home/issues/8583#issuecomment-739317581_"},{"Id":"14468242216","Type":"IssuesEvent","CreatedAt":"2020-12-09T14:29:45","Actor":"MagicAndre1981","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10371","RelatedDescription":"Opened issue \"System.InvalidOperationException: The operation failed as details for project foo.App could not be loaded when trying to update nuget packages\" (#10371) at NuGet/Home","RelatedBody":"After updating VS2019 16.9 Preview 1 to Preview 2, I get error messages when working with nuget package manager UI to update packages.\r\n\r\n## Details about Problem\r\n\r\nVS version (if appropriate): VS16.9.0 Preview 2.0\r\n\r\nOS version: Win10 1803, 17134.1902\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. open sln\r\n\r\n2. try to update nuget references\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n```\r\nSystem.InvalidOperationException: The operation failed as details for project foo.App could not be loaded.\r\nat NuGet.PackageManagement.VisualStudio.CpsPackageReferenceProject.GetPackageSpecsAndAdditionalMessagesAsync(DependencyGraphCacheContext context)\r\nat NuGet.PackageManagement.DependencyGraphRestoreUtility.<GetSolutionRestoreSpecAndAdditionalMessages>d__10.MoveNext() \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.DependencyGraphRestoreUtility.<GetSolutionRestoreSpec>d__9.MoveNext() --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at NuGet.PackageManagement.DependencyGraphRestoreUtility.<PreviewRestoreProjectsAsync>d__5.MoveNext() --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)at NuGet.PackageManagement.NuGetPackageManager.<PreviewBuildIntegratedProjectsActionsAsync>d__81.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.NuGetPackageManager.<PreviewBuildIntegratedProjectActionsAsync>d__80.MoveNext() --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\nat NuGet.PackageManagement.NuGetPackageManager.<PreviewUpdatePackagesForBuildIntegratedAsync>d__59.MoveNext() --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.NuGetPackageManager.<>c__DisplayClass56_1.<<PreviewUpdatePackagesAsync>b__1>d.MoveNext() \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)at NuGet.PackageManagement.NuGetPackageManager.<PreviewUpdatePackagesAsync>d__56.MoveNext() \r\n--- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\nat NuGet.PackageManagement.VisualStudio.NuGetProjectManagerService.<>c__DisplayClass19_0.<<GetUpdateActionsAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.VisualStudio.NuGetProjectManagerService.<CatchAndRethrowExceptionAsync>d__26`1.MoveNext()\r\n```"},{"Id":"14465694846","Type":"IssuesEvent","CreatedAt":"2020-12-09T10:57:21","Actor":"ImAMightyPirate","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10370","RelatedDescription":"Opened issue \"NuGet.exe restore intermittently interprets content package folders as target framework versions\" (#10370) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0.6726\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 v1709 (16299.1868)\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. We have a privately hosted NuGet package generated using the following nuspec:-\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata minClientVersion=\"3.3.0\">\r\n    ...\r\n    <contentFiles>\r\n      <files include=\"**\" buildAction=\"None\" copyToOutput=\"false\" />\r\n    </contentFiles>\r\n  </metadata>\r\n  <files>\r\n       <file src=\"_Build\\**\\*.*\" exclude=\"**\\*.pdb;_Build\\None\\**\\*.*;_Build\\CustomActions\\**\\*.*;_Build\\UnitTestUtils\\**\\*.*\" target=\"contentFiles\\any\\any\\CoreBuild\" />\r\n  </files>\r\n</package>\r\n\r\n2. The generated NuGet package has the following folder structure:-\r\n\r\n* contentFiles\\any\\any\\CoreBuild\\Contracts\r\n* contentFiles\\any\\any\\CoreBuild\\Controllers\r\n* contentFiles\\any\\any\\CoreBuild\\Dependencies\r\n* contentFiles\\any\\any\\CoreBuild\\Modules\r\n* contentFiles\\any\\any\\CoreBuild\\Plugins\r\n* contentFiles\\any\\any\\CoreBuild\\Resources\r\n\r\n3. A NuGet.exe restore performed against our solution using NuGet.exe as part of a job on our build server:-\r\n\r\nnuget.exe restore \"<Solution Name>.sln\" -verbosity detailed\r\n\r\n4. The NuGet restore intermittently fails during the job with the following error NU1202:-\r\n\r\n00:25:32  NU1202: <Package Name> is not compatible with net472 (.NETFramework,Version=v4.7.2). Package <Package Name> supports:\r\n00:25:32    - contracts (Contracts,Version=v0.0)\r\n00:25:32    - controllers (Controllers,Version=v0.0)\r\n00:25:32    - dependencies (Dependencies,Version=v0.0)\r\n00:25:32    - modules (Modules,Version=v0.0)\r\n00:25:32    - plugins (Plugins,Version=v0.0)\r\n00:25:32    - resources (Resources,Version=v0.0)\r\n\r\n5. When the NU1202 error occurs the cached copy of the NuGet package in the C:\\Users\\<Username>\\.nuget\\packages\\<PackageName>\\<Version>\\ has the following folder structure:-\r\n\r\n* lib\\Contracts\r\n* lib\\Controllers\r\n* lib\\Dependencies\r\n* lib\\Modules\r\n* lib\\Plugins\r\n* lib\\Resources\r\n\r\n6. We then delete the cached copy from C:\\Users\\<Username>\\.nuget\\packages\\<PackageName>\\<Version>\\\r\n\r\n7. We then re-run the same build server job as previously executed that runs the  'nuget.exe restore \"<Solution Name>.sln\" -verbosity detailed' command.\r\n\r\n8. No error occurs this time, the cached copy of the NuGet package in the C:\\Users\\<Username>\\.nuget\\packages\\<PackageName>\\<Version>\\ has the following folder structure:-\r\n\r\n* contentFiles\\any\\any\\CoreBuild\\Contracts\r\n* contentFiles\\any\\any\\CoreBuild\\Controllers\r\n* contentFiles\\any\\any\\CoreBuild\\Dependencies\r\n* contentFiles\\any\\any\\CoreBuild\\Modules\r\n* contentFiles\\any\\any\\CoreBuild\\Plugins\r\n* contentFiles\\any\\any\\CoreBuild\\Resources\r\n\r\n**Note: The NU1202 error only occurs intermittently, in some instances the first restore of the package is unpacked correctly to the cached folder. **\r\n"},{"Id":"14460072063","Type":"IssuesEvent","CreatedAt":"2020-12-08T23:42:49","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10368","RelatedDescription":"Closed issue \"When a ProjectReference and PackageReference in different TFMs have the same identity/version, Restore throws \"An item with the same key has already been added. [...]\"\" (#10368) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nFull repro details at https://github.com/dagood/repro/tree/repro-restore-ref-same-key. I used the `mcr.microsoft.com/dotnet/sdk:5.0` Docker image to minimally repro, but this also repros the same on my Windows machine.\r\n\r\n```\r\n$ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  5.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\nSystem.Security.Cryptography.Cng.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <Version>5.0.0-rc.2.20475.5</Version>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nSystem.Security.Cryptography.Pkcs.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net5.0;netcoreapp3.1</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'net5.0'\">\r\n    <ProjectReference Include=\"../System.Security.Cryptography.Cng/System.Security.Cryptography.Cng.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.1'\">\r\n    <PackageReference Include=\"System.Security.Cryptography.Cng\" Version=\"5.0.0-rc.2.20475.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAs far as I know I haven't seen this work before.\r\n\r\nWe hit it in source-build while trying to build dotnet/runtime: https://github.com/dotnet/source-build/pull/1845#discussion_r522994234\r\n\r\nThis might not be supported--it doesn't make a *whole* lot of sense to me for a project to intentionally do this--but the error message should be improved at least! 😄 It took a while to figure out what the message was complaining about, work around it in source-build, and write this small repro.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Clone https://github.com/dagood/repro/tree/repro-restore-ref-same-key\r\n   (`git clone -b repro-restore-ref-same-key https://github.com/dagood/repro && cd repro`)\r\n\r\n2. Run `dotnet build ./System.Security.Cryptography.Pkcs/System.Security.Cryptography.Pkcs.csproj /bl`\r\n\r\n3. See this error:\r\n    `/usr/share/dotnet/sdk/5.0.100/NuGet.targets(131,5): error : An item with the same key has already been added. Key: (System.Security.Cryptography.Cng, 5.0.0-rc.2.20475.5) [/work/System.Security.Cryptograp\r\nhy.Pkcs/System.Security.Cryptography.Pkcs.csproj]`\r\n\r\n4. Open `msbuild.binlog` to see full stack trace:\r\n\r\n```\r\nSystem.ArgumentException: An item with the same key has already been added. Key: (System.Security.Cryptography.Cng, 5.0.0-rc.2.20475.5)\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey](List`1 source, Func`2 keySelector, IEqualityComparer`1 comparer)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey](IEnumerable`1 source, Func`2 keySelector, IEqualityComparer`1 comparer)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey](IEnumerable`1 source, Func`2 keySelector)\r\n   at NuGet.Commands.LockFileBuilder.CreateLockFile(LockFile previousLockFile, PackageSpec project, IEnumerable`1 targetGraphs, IReadOnlyList`1 localRepositories, RemoteWalkContext context)\r\n   at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n   at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreContext, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n   at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n```\r\n\r\n### Verbose Logs\r\n\r\nBinlog: [repro-restore-ref-same-key.zip](https://github.com/NuGet/Home/files/5661841/repro-restore-ref-same-key.zip)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-12-10T05:30:37.7864237Z","RunDurationInMilliseconds":1660}