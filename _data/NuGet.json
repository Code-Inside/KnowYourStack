{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20258091885","Type":"IssuesEvent","CreatedAt":"2022-02-15T02:44:28","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8999","RelatedDescription":"Closed issue \"[Deployment] 2022.02.09\" (#8999) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\n## Changes\r\nFI `main` to `dev`:\r\n* https://github.com/NuGet/NuGetGallery/pull/8966 (tracked by https://github.com/NuGet/Engineering/issues/4226)\r\n* https://github.com/NuGet/NuGetGallery/pull/8967 (tracked by https://github.com/NuGet/Engineering/issues/4226)\r\n* https://github.com/NuGet/NuGetGallery/pull/8973 (no tracking issue)\r\n* https://github.com/NuGet/NuGetGallery/pull/8978 (tracked by https://github.com/NuGet/Engineering/issues/4226)\r\n\r\nRI `dev` to `main`:\r\n* https://github.com/NuGet/NuGetGallery/pull/8914 (tracked by https://github.com/NuGet/NuGetGallery/issues/8503)\r\n* https://github.com/NuGet/NuGetGallery/pull/8960 (tracked by https://github.com/NuGet/NuGetGallery/issues/8961)\r\n* https://github.com/NuGet/NuGetGallery/pull/8972 (tracked by https://github.com/NuGet/NuGetGallery/issues/8920)\r\n* https://github.com/NuGet/NuGetGallery/pull/8974 (tracked by https://github.com/NuGet/NuGetGallery/issues/8919)\r\n* [community <3] https://github.com/NuGet/NuGetGallery/pull/8892 (tracked by https://github.com/NuGet/NuGetGallery/issues/8886)\r\n* https://github.com/NuGet/NuGetGallery/pull/8976 (no tracking issue)\r\n* https://github.com/NuGet/NuGetGallery/pull/8874 (tracked by https://github.com/NuGet/NuGetGallery/issues/8868 and https://github.com/NuGet/NuGetGallery/issues/8801)\r\n* https://github.com/NuGet/NuGetGallery/pull/8977 (tracked by https://github.com/NuGet/NuGetGallery/issues/8975)\r\n* https://github.com/NuGet/NuGetGallery/pull/8947 (tracked by https://github.com/NuGet/Engineering/issues/4179)\r\n* https://github.com/NuGet/NuGetGallery/pull/8981 (no tracking issue)\r\n* https://github.com/NuGet/NuGetGallery/pull/8992 (tracked by https://github.com/NuGet/Engineering/issues/4231 and https://github.com/NuGet/Engineering/issues/4225)\r\n* https://github.com/NuGet/NuGetGallery/pull/8985 (tracked by https://github.com/NuGet/Engineering/issues/4229)\r\n* https://github.com/NuGet/NuGetGallery/pull/8993 (no tracking issue)\r\n* https://github.com/NuGet/NuGetGallery/pull/8995 (tracked by https://github.com/NuGet/Engineering/issues/4220)\r\n* https://github.com/NuGet/NuGetGallery/pull/8996 (tracked by https://github.com/NuGet/Engineering/issues/4219)\r\n\r\n\r\n## Progress\r\n* [x] Merge FI PR: https://github.com/NuGet/NuGetGallery/pull/8997\r\n* [x] Merge RI PR: https://github.com/NuGet/NuGetGallery/pull/8998\r\n* [x] Build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5739295\r\n* [x] Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1262852\r\n* [x] DEV Artifacts build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5700986&view=results\r\n* [x] DEV DB Migration - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1255940\r\n* [x] DEV\r\n* [x] INT/PROD Artifacts build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=5739290\r\n* [x] INT DB Migration - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1262800\r\n* [x] INT\r\n* [x] PROD DB Migration\r\n* [x] PROD"},{"Id":"20255258550","Type":"PullRequestEvent","CreatedAt":"2022-02-14T22:20:34","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9001","RelatedDescription":"Merged pull request \"[Bug Fix] Packages with empty descriptions cause HTTP 500 on reflows\" (#9001) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4218\r\n\r\nPackages with empty descriptions (empty string), when reflowed, see their description parsed as `null`, which triggers an HTTP 500 on the Package Details page.\r\n\r\n_NOTE:_ New packages cannot be uploaded with empty descriptions, these packages were already in the system, probably from before these validation checks were enabled."},{"Id":"20254575066","Type":"PullRequestEvent","CreatedAt":"2022-02-14T21:33:51","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9001","RelatedDescription":"Opened pull request \"[Bug Fix] Packages with empty descriptions cause HTTP 500 on reflows\" (#9001) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/4218\r\n\r\nPackages with empty descriptions (empty string), when reflowed, see their description parsed as `null`, which triggers an HTTP 500 on the Package Details page.\r\n\r\n_NOTE:_ New packages cannot be uploaded with empty descriptions, these packages were already in the system, probably from before these validation checks were enabled."},{"Id":"20193134577","Type":"IssuesEvent","CreatedAt":"2022-02-11T08:07:11","Actor":"nickeeex","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9000","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Using nuget.core 2.14.0 with https://www.nuget.org/api/v2 no longer allows finding packages.\" (#9000) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nWe are using NuGet.Core 2.14.0 with https://www.nuget.org/api/v2 and yesterday we started experiencing an error blocking finding packages.\r\n\r\nWe are getting the following exception on almost all packages we try to find using FindPackages(...)\r\nSystem.InvalidOperationException: Response version '3.0' is not supported. The only supported versions are: '1.0', '2.0'.\r\n\r\nWe are in the process of updating to a newer version of nuget it would be nice to get this fixed.\n\n### Repro Steps\n\nYou can also reporduce this manually by for example doing doing a manual request in browser:\r\n\r\n1. https://packages.nuget.org/api/v2/FindPackagesById()?id=Newtonsoft.Json\r\n2. Check Response Headers.\r\n3. DataServiceVersion: 3.0 is returned.\n\n### Expected Behavior\n\nExpected behaviour would be to return a version of DataServices that still works with NuGet.Core 2 when using v2 feed.\n\n### Screenshots\n\nProblem when using NuGet.Core\r\n![image](https://user-images.githubusercontent.com/6636662/153552470-e9d14f01-efdd-4a9c-a17a-4d3ef2f38424.png)\r\n\r\nManual repro:\r\n![image](https://user-images.githubusercontent.com/6636662/153556272-29be80a1-213d-4757-ad40-ddd73843c663.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20187530797","Type":"IssuesEvent","CreatedAt":"2022-02-11T00:22:41","Actor":"jodydonetti","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8979","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Download counters not updating for pre-release packages?\" (#8979) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\n## TL/DR\r\n\r\nIt seems to me that the download counter is not working for versions of packages that are marked as pre-release.\r\n\r\nThe total download for a package that has pre-release versions but also \"normal\" versions seems to work fine, even though each pre-release version is stuck at 0 (zero).\r\n\r\nPlease note that the usual delay of 24/48h for the stats to be updated is already passed, since we are at around 6 days.\r\nAlso, in these 6 days the other downloads seem to have been updated just fine: I'm talking about my **global** downloads, the downloads for each **package as a whole**, and the downloads for each **package version** that is NOT a pre-release version.\r\n\r\n\r\n## The setup\r\n\r\nUp until last week I had 3 packages on nuget.org , all of them had some versions released in the last year, and none of those versions were pre-release (per semantic versioning).\r\n\r\nAll was fine.\r\n\r\nLast week (Jan 27th to be precise) I uploaded 2 completely new packages (both with a pre-release version) and 3 new versions (again, all pre-release) of the 3 existing packages.\r\nSo all of these were in \"alpha1\" version.\r\nThen about 3 days after that i pushed another pre-release version (\"alpha2\") for all of the 5 packages.\r\n\r\nYou can see all 5 of them [here](https://www.nuget.org/profiles/jodydonetti) (screenshot taken 2022-02-02):\r\n\r\n![image](https://user-images.githubusercontent.com/1010086/152252639-1d57cb56-60c9-4d44-8e71-c5548df49e88.png)\r\n\r\n(Now don't be fooled by the 0.1.9 you can see as the \"Latest version\" for the first 3 packages, since what is shown is the latest non-pre-release version, as I'm sure you know)\r\n\r\nSo, all these packages have an actual last version that is pre-release (currently \"alpha2\").\r\n\r\n\r\n## The Problem\r\n\r\nThe problem is that since then, the download counters for each pre-releae version remained stuck at 0 (zero), even though me and other people already downloaded them.\r\n\r\nSee screenshots below for some evidence.\n\n### Repro Steps\n\nHypothetically:\r\n- upload a new pre-release version of an existing package OR upload a completely new package (with a pre-release version)\r\n- make some downloads\r\n- wait a couple of days\r\n- download stats will not increase\n\n### Expected Behavior\n\nDownload stats SHOULD increase.\n\n### Screenshots\n\n## New package\r\n\r\nDownloads for one of the new packages ([this](https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis/0.1.0-alpha2)) after 6 days:\r\n\r\n![image](https://user-images.githubusercontent.com/1010086/152254941-84a73ae1-4146-495c-8c6a-8de0828ef696.png)\r\n\r\n## Existing package\r\n\r\nDownloads for one of the existing packages ([this](https://www.nuget.org/packages/ZiggyCreatures.FusionCache/0.1.9)) after 6 days:\r\n\r\n![image](https://user-images.githubusercontent.com/1010086/152255046-23f4fcda-e4cc-4c13-957e-a64710c3129f.png)\r\n\r\nNote that as, I said above, in the last 6 days the downloads for the v0.1.9 kept increasing.\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20185688802","Type":"IssuesEvent","CreatedAt":"2022-02-10T22:15:17","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8961","RelatedDescription":"Closed issue \"[Feature]: Enhance the NuGetGallery backfill tools to allow a specific set of packages to be reprocessed\" (#8961) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nCurrent the backfill tool only allows the full DB to be reprocess via a \"collect\" command then an \"update\" command.\r\n\n\n### The Elevator Pitch\n\nLet's add a way to provide a big list of package IDs and versions to reprocess. These IDs and versions can be sourced from NuGet.Insights or Gallery DB depending on the situation. \n\n### Additional Context and Details\n\nIt looks like we may have some data issues in the package compatible frameworks data. This will allow us to fix bugs and reprocess select packages which is much faster than a full backfill."},{"Id":"20185688233","Type":"PullRequestEvent","CreatedAt":"2022-02-10T22:15:15","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8998","RelatedDescription":"Merged pull request \"[ReleasePrep][2022.02.09] RI of dev into main\" (#8998) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/NuGetGallery/issues/8999"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20257826571","Type":"IssuesEvent","CreatedAt":"2022-02-15T02:16:13","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10752","RelatedDescription":"Closed issue \"Add caching of the transitive dependencies data pulled from the lockfile (assets file)\" (#10752) at NuGet/Home","RelatedBody":""},{"Id":"20257213299","Type":"IssuesEvent","CreatedAt":"2022-02-15T01:12:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11595","RelatedDescription":"Opened issue \"Can package source mapping configuration be audited for potential misconfiguration\" (#11595) at NuGet/Home","RelatedBody":"The current syntax is powerful, but also may allow you to get yourself in a fragile state with duplicate etc. \r\n\r\nThis is a task to validate things such as prefix reservations etc. "},{"Id":"20256979913","Type":"IssuesEvent","CreatedAt":"2022-02-15T00:51:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11594","RelatedDescription":"Opened issue \"[Feature]: NuGet tooling to view package prefix reservation\" (#11594) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nWith package source mapping, you can establish a 1-N relationship between a package identity and a source. \r\nWhen using package prefix patterns, you may want to consider things like, is this prefix reserved on nuget.org, and use that as a means to make a decision. \r\n\r\nFor example, one would want to know given a package id, where it's prefix is reserved, or if so, which one. \r\n\r\nNote that there might not be easy ways to get this data from the servers, so this might span client + server.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20255626761","Type":"IssuesEvent","CreatedAt":"2022-02-14T22:49:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11551","RelatedDescription":"Closed issue \"Add `--all` option for dotnet list package\" (#11551) at NuGet/Home","RelatedBody":"Currently customer have to make 2 separate queries to find out both `outdated` and `vulnerable` packages with `dotnet list package`, instead we need `--all` which shows all deprecated, vulnerable, and outdated top level and transitive packages\r\n\r\nhttps://github.com/NuGet/Home/pull/11446#discussion_r766860629\r\n\r\nI'm including screenshot given GH is not good at tracking comments/discussion.\r\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/b416b4ff-8189-424a-8aec-e315e8aad49b)\r\n\r\n"},{"Id":"20252151277","Type":"IssuesEvent","CreatedAt":"2022-02-14T19:01:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11501","RelatedDescription":"Closed issue \"[Responsiveness] RestoreOperationLogger blocking large number of thread pool threads trying to get access to the output window pane\" (#11501) at NuGet/Home","RelatedBody":"See [internal issue](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1436217/)."},{"Id":"20252148332","Type":"IssuesEvent","CreatedAt":"2022-02-14T19:00:57","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9539","RelatedDescription":"Reopened issue \"Generate nuget.config file from NuGet CLI\" (#9539) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): `NuGet.exe`\r\n\r\nNuGet version (x.x.x.xxx): `5.5.1.6542`\r\n\r\ndotnet.exe --version (if appropriate): `3.1.201`\r\n\r\nVS version (if appropriate): `Visual Studio 2019`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): `Microsoft Windows [Version 10.0.18363.778]`\r\n\r\nWorked before? If so, with which NuGet version: `No.`\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n`N/A`\r\n\r\n## Other suggested things\r\n\r\nIn `npm`, there is a `npm init -y` command that can generate a default `package.json` file.\r\n\r\nIn `tsc` (TypeScript), there is a `tsc --init` command that can generate a default `tsconfig.json` file.\r\n\r\nI think `nuget` (NuGet CLI) should have something like that to generate a default `nuget.config` file.\r\n\r\nI know .NET Core CLI have something like this: `dotnet new nugetconfig`. But there is no equivalent CLI argument to generate a default `nuget.config` file just like .NET Core did.\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n`N/A`\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n`N/A`\r\n"},{"Id":"20252104530","Type":"IssuesEvent","CreatedAt":"2022-02-14T18:58:14","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11513","RelatedDescription":"Closed issue \"[Bug]: NuGet.Client TopologicalSortUtility Retrieves Dependencies From Wrong Location\" (#11513) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet SDK\n\n### Product Version\n\nNuGet.ProjectModel 6.0.0\n\n### Worked before?\n\ndon't know\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n- NuGet.ProjectModel.DependencyGraphSpec provides static method SortPackagesByDependencyOrder\r\n- this in turn uses NuGet.Packaging.TopologicalSortUtility\r\n- method CalculateRelationships retrieves a package's dependencies via PackageInfo.Package.Dependencies (line 69)\r\n- but these top-level dependencies are always empty, since dependencies are located at each target framework\r\n- see, e.g., [https://www.jerriepelser.com/blog/analyze-dotnet-project-dependencies-part-1/](url)\r\n- so, instead, dependencies should be collected from each target framework (see link)\r\n- the current behaviour leads the topolocial sort utility to believe that no package has any dependencies at all, resulting in a complete arbitrary package order (which is not sorted by dependency order at all)\n\n### Verbose Logs\n\n_No response_"},{"Id":"20248824945","Type":"IssuesEvent","CreatedAt":"2022-02-14T16:01:48","Actor":"doggy8088","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9539","RelatedDescription":"Closed issue \"Generate nuget.config file from NuGet CLI\" (#9539) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): `NuGet.exe`\r\n\r\nNuGet version (x.x.x.xxx): `5.5.1.6542`\r\n\r\ndotnet.exe --version (if appropriate): `3.1.201`\r\n\r\nVS version (if appropriate): `Visual Studio 2019`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): `Microsoft Windows [Version 10.0.18363.778]`\r\n\r\nWorked before? If so, with which NuGet version: `No.`\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n`N/A`\r\n\r\n## Other suggested things\r\n\r\nIn `npm`, there is a `npm init -y` command that can generate a default `package.json` file.\r\n\r\nIn `tsc` (TypeScript), there is a `tsc --init` command that can generate a default `tsconfig.json` file.\r\n\r\nI think `nuget` (NuGet CLI) should have something like that to generate a default `nuget.config` file.\r\n\r\nI know .NET Core CLI have something like this: `dotnet new nugetconfig`. But there is no equivalent CLI argument to generate a default `nuget.config` file just like .NET Core did.\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n`N/A`\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n`N/A`\r\n"},{"Id":"20248632321","Type":"IssuesEvent","CreatedAt":"2022-02-14T15:52:37","Actor":"martinsuchan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11593","RelatedDescription":"Opened issue \"[Bug]: msbuild 17 restores packages.config nugets into different folder than msbuild 16\" (#11593) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild 17.0.0.52104\n\n### Worked before?\n\nmsbuild 16.11\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nI have a .NET 4.6.1 WPF project with packages.config referencing one old nuget DevExpress.Xpf.PivotGrid 14.2.3.\r\nThis nuget has a bug(?) in the nuspec file - it has <version>14.2.3.0</version> there, see that zero at the end.\r\n\r\nWhen I used 'nuget restore oursln' with VS2019/msbuild 16 installed, this package got restored into \r\n**packages/DevExpress.Xpf.PivotGrid.14.2.3**\r\n\r\nbut after installing VS2022/msbuild 17, it's restored into folder\r\n**packages/DevExpress.Xpf.PivotGrid.14.2.3.0**\r\n\r\nThis effectively breaks our solution, it cannot be built with VS2022, because with packages.config all dll paths from nuget packages are explicit in the csproj including the /packages/DevExpress.Xpf.PivotGrid.14.2.3 path.\r\n\r\nI guess this can be solved by switching to PackageReference or SDK style project, but it should be fixed in my opinion to match the behavior of VS2019/msbuild 16.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20218578567","Type":"IssuesEvent","CreatedAt":"2022-02-12T18:56:31","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11592","RelatedDescription":"Opened issue \"[Feature]: Allow PackageSourceMapper to report sources that are unused add configure the minimal set\" (#11592) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nI used the PackageSourceMapper tool on NuGet/Insights. Unknown to me, several of my feeds were not even needed anymore. It would be cool if PackageSourceMapper detected these cases and include the minimal set of `<packageSources>` entries that are needed.\r\n\r\nI did get one hint, like this:\r\n<pre>\r\nStart creating recommendation nugetPackageSourceMapping.config file.\r\n    - NuGet.org packageSource key matching 523 packages created.\r\n    - <b>nuget-build package source didn't match any packages.</b>\r\n    - dotnet-tools packageSource key matching 10 packages created.\r\n    - azure-sdk-for-net packageSource key matching 13 packages created.\r\n    - NuGetPackageExplorer packageSource key matching 2 packages created.\r\n</pre>\r\n\r\nBut in this case my \"azure-sdk-for-net\" source had all of its packages also on NuGet.org and could therefore be removed.\r\n\r\nIdeally it would report that `azure-sdk-for-net` could be removed since the packages fetched from that feed are the same as those fetched from NuGet.org. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"20218431475","Type":"IssuesEvent","CreatedAt":"2022-02-12T18:41:39","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11591","RelatedDescription":"Opened issue \"[Feature]: PackageSourceMapper, configure package ID patterns using original casing\" (#11591) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nI gave the PackageSourceMapper tool a try on NuGet/Insights and it is awesome! Just have some feedback. When it generates `<package pattern=\"...\" />` XML nodes, would it be possible to use the original casing of package IDs? It would make it more readable and would align with what the tooling does for adding PackageReference (original case is used).\r\n\r\nFor example, `BuildBundlerMinifier`, `MessagePackAnalyzer`, and `NuGetPackageExplorer` are all a bit harder to read without capitalization.\n\n### Additional Context and Details\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-02-15T03:30:23.4572732Z","RunDurationInMilliseconds":1485}