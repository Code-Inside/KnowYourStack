{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35465257941","Type":"PullRequestEvent","CreatedAt":"2024-02-07T02:33:44","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9782","RelatedDescription":"Merged pull request \"[Search-by-TFM] New Framework Filter Options UI\" (#9782) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5171\r\n\r\nThis change adds 2 new framework filter options to the search page:\r\n\r\n- **Include Computed Frameworks**\r\n     Checkbox that sets a boolean `true`/`false` value (default is `true`). When this is set to `false`, we filter packages only by their asset frameworks, and only show asset framework badges. When this is set to `true`, we filter packages by asset frameworks + computed frameworks, and we show both types of badges as well.\r\n- **Framework Filter Mode**\r\n     Toggle that chooses between `All` and `Any` (default is `All`). This affects cases when multiple framework or TFM filters are selected. When this is set to `All`, we will show packages matching **all** the framework and TFM filters. If it is set to `Any`, we will show packages matching **any one of** the selected filters.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/f7fb58e7-95f8-4200-aaa4-40af73fff1bf)\r\n\r\nThe changes are behind a feature flag.\r\n\r\nI ran Accessibility FastPass, and it didn't throw up any issues. I also checked color contrast for the new UI elements.\r\n\r\n**NOTE:** I made an additional bug fix for the TFM badges in this PR. The TFM badges link to the frameworks tab on the package details page, but we weren't providing a package version, so the links sometimes took us to the wrong version's page. I've now fixed that.\r\n\r\n### Screenshots/Demos\r\n\r\n<details><summary>Before vs. after </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/06799f14-fbce-43d9-80ca-10ba068d0ce2)\r\nvs. (see top of the Frameworks filter section on the left)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9350ef7d-ed72-45c7-b519-adfb90d8b237)\r\n</details> \r\n\r\n<details><summary>Include computed frameworks demo </summary>\r\n\r\nhttps://github.com/NuGet/NuGetGallery/assets/82980589/285752c9-eb6a-4609-ba9e-e225bbd18039\r\n</details> \r\n\r\n<details><summary>Framework filter mode demo </summary>\r\n\r\nhttps://github.com/NuGet/NuGetGallery/assets/82980589/08d0f892-ae5b-42f7-8917-92a9024bc0bb\r\n\r\nInfo tooltip:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/d6841353-af3a-4c72-9c42-81d0dede62b6)\r\n</details> \r\n\r\n<details><summary>Narrow/mobile screens </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/aface9ca-e8c7-4348-a42d-5a7eb093de8a)\r\n</details> \r\n\r\n"},{"Id":"35454732605","Type":"PullRequestEvent","CreatedAt":"2024-02-06T18:10:23","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9797","RelatedDescription":"Opened pull request \"Update Microsoft.IdentityModel.JsonWebTokens fix vulnerability.\" (#9797) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/5237"},{"Id":"35430123879","Type":"PullRequestEvent","CreatedAt":"2024-02-06T03:51:32","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9796","RelatedDescription":"Merged pull request \"TFM Badges: Fixed focus underline and outline + Added missing tooltip\" (#9796) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9795\r\n\r\nThis fixes:\r\n\r\n1. The TFM badges were showing a trailing underline when someone hovered over it. This has now been removed.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9b788d50-d795-4e9a-aa92-8c0fb52e890c)\r\n\r\n2. When someone brought tab focus to the badges, it showed an outline, but the outline was distorted because the child elements (`<span>`) had different dimensions to the parent (`<a>`). This has been fixed.\r\n\r\n    Previously,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/4710f491-e1ea-4479-bbb3-eee727eab101)\r\n    Now,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/82d68881-5e99-4d8d-a591-80501c56be90)\r\n\r\n3. The TFM badges are supposed to have a tooltip when you hover over them (See the package display page: https://www.nuget.org/packages/Newtonsoft.Json). This tooltip was missing on the search page, but it's been added now.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/c05796ce-b498-4159-bcde-887584f63806)\r\n"},{"Id":"35429443279","Type":"PullRequestEvent","CreatedAt":"2024-02-06T03:09:03","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9796","RelatedDescription":"Opened pull request \"TFM Badges: Fixed focus underline and outline + Added the missing tooltip\" (#9796) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9795\r\n\r\nThis fixes:\r\n\r\n1. The TFM badges were showing a trailing underline when someone hovered over it. This has now been removed.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9b788d50-d795-4e9a-aa92-8c0fb52e890c)\r\n\r\n2. When someone brought tab focus to the badges, it showed an outline, but the outline was distorted because the child elements (`<span>`) had different dimensions to the parent (`<a>`). This has been fixed.\r\n\r\n    Previously,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/4710f491-e1ea-4479-bbb3-eee727eab101)\r\n    Now,\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/82d68881-5e99-4d8d-a591-80501c56be90)\r\n\r\n3. The TFM badges are supposed to have a tooltip when you hover over them (See the package display page: https://www.nuget.org/packages/Newtonsoft.Json). This tooltip was missing on the search page, but it's been added now.\r\n    ![image](https://github.com/NuGet/NuGetGallery/assets/82980589/c05796ce-b498-4159-bcde-887584f63806)\r\n"},{"Id":"35421027909","Type":"IssuesEvent","CreatedAt":"2024-02-05T20:02:34","Actor":"mariaghiondea","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9693","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Obsolete URLs for image hosting (documentation)\" (#9693) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nOther\r\n\r\n### Describe the bug\r\n\r\nOn the [official website](https://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges), about how to package a library, in the \"Allowed domains for images and badges\" section, the following suggested links no longer exist:\r\n\r\n- https://api.bintray.com/ (410 - gone)\r\n- https://api.codeclimate.com/ (blank page)\r\n- api.dependabot.com (404 - Not Found)\r\n- https://api.travis-ci.org/ (`{}`)\r\n- <s>avatars</s>.githubusercontent.com (redirect to github.com)\r\n- https://badges.gitter.im/ (403 - Forbidden)\r\n- bettercodehub.com (Retired)\r\n- camo.githubusercontent.com (404 - Not Found)\r\n- https://cdn.syncfusion.com/ (Access Denied)\r\n- opencollective.com (???)\r\n- raw.github.com (redirect to github.com)\r\n- raw.githubusercontent.com (redirect to github.com)\r\n- user-images.githubusercontent.com (Access Denied)\r\n\r\n### Repro Steps\r\n\r\nJust access these links.\r\n\r\n### Expected Behavior\r\n\r\nUpdate documentation and remove the obsolete links\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35496124548","Type":"IssuesEvent","CreatedAt":"2024-02-07T21:50:34","Actor":"marcpopMSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13226","RelatedDescription":"Opened issue \"Improve NU5039 message and documentation\" (#13226) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI was trying to create a dynamic readme file in a package. What I didn't realize was that `PackageReadmeFile` specifies the location within the nupkg that the readme file will live, NOT the location in my build. So previously my readme was getting packages from the root of my project and I moved it to being packages from the IntermediateOutputFolder. When doing so, I updated the `PackageReadmeFile` to specify the new location not realizing what that value actually meant.\r\n\r\nNeither the error nor documentation for that error make it clear that in my situation, `PackageReadmeFile` should not have included the different path as the file was till packaged into the root of the nupkg.\r\n\r\nThe below will cause the error and I was eventually able to fix it but the error and documentation could be improved.\r\n```\r\n    <PackageReadmeFile>$(IntermediateOutputPath)README.md</PackageReadmeFile>\r\n     <None Include=\"$(PackageReadmeFile)\" Pack=\"true\" PackagePath=\"\\\"/>\r\n```\n\n### Verbose Logs\n\n_No response_"},{"Id":"35484334203","Type":"IssuesEvent","CreatedAt":"2024-02-07T15:01:58","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13225","RelatedDescription":"Opened issue \"CI:  update .NET 8 SDK version\" (#13225) at NuGet/Home","RelatedBody":"[build/DotNetSdkVersions.txt](https://github.com/NuGet/NuGet.Client/blob/f45ff31d06d8254f7a5df017f1a4c54ce706b575/build/DotNetSdkVersions.txt#L2) references a prerelease version of .NET 8 SDK.  .NET 8 SDK GA'd long ago.  We should update the version."},{"Id":"35471037521","Type":"IssuesEvent","CreatedAt":"2024-02-07T07:58:53","Actor":"CiciLi1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13224","RelatedDescription":"Opened issue \"[Bug Bash] Unmatched detailed info is showing on the right panel when typing an invalid package version in the “Version” drop-down box \" (#13224) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nNuGet Client Dev\\6.10.0.28\n\n### Worked before?\n\nIt reproes on D17.8\\34601.278 but it doesn't repro on D16.11\\34601.136 and D17.0\\33829.163 since the feature \"custom version\" was not merged into 16.11 and 17.0.\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:    \r\n\r\n1. Create a C# Console App (.NET core) project.   \r\n2. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open the PM UI.   \r\n\r\n3. Go to the \"Browse\" tab and select a package (for example \"Newtonsoft.Json\").  \r\n\r\n4. Click the \"Version\" drop-down box in the right panel and type an invalid version (e.g. “121”) in it. \r\n\r\n#### Expected:      \r\n\r\nNo detailed info is shown on the right panel. \r\n\r\n#### Actual: \r\n\r\nUnmatched detailed info is showing on the right panel as below: \r\n![MicrosoftTeams-image (5)](https://github.com/NuGet/Home/assets/84695155/9adb4696-8485-437b-9872-ca235208cf9e)\r\n#### Note:     \r\n\r\nThe repro rate is 70%.     \r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"35461392303","Type":"IssuesEvent","CreatedAt":"2024-02-06T22:43:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13223","RelatedDescription":"Opened issue \"Unroll LINQ usage to trim some allocations in AddMSBuildAssets\" (#13223) at NuGet/Home","RelatedBody":""},{"Id":"35458331776","Type":"IssuesEvent","CreatedAt":"2024-02-06T20:29:38","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13211","RelatedDescription":"Closed issue \"Read auditSources from nuget.config files\" (#13211) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet SDK\n\n### The Elevator Pitch\n\nThe first step for being able to use NuGetAudit without adding nuget.org as a package source, is to add `<auditSources>` to the nuget.config file, as specified in the feature spec: https://github.com/NuGet/Home/blob/dev/accepted/2023/NuGetAudit-without-nuget.org-as-packageSource.md\r\n\r\nThe work for this issue is to add APIs to NuGet.Configuration to be able to read the sources from nuget.config files. \n\n### Additional Context and Details\n\nWhen this issue is complete, it does not mean that NuGetAudit, as part of restore, will use these sources yet. See this issue for the complete work:\r\n* https://github.com/NuGet/Home/issues/12698"},{"Id":"35456174831","Type":"PullRequestEvent","CreatedAt":"2024-02-06T19:04:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/pull/13215","RelatedDescription":null,"RelatedBody":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service."},{"Id":"35456174116","Type":"PullRequestEvent","CreatedAt":"2024-02-06T19:04:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13215","RelatedDescription":"Closed pull request \"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning\" (#13215) at NuGet/Home","RelatedBody":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service."},{"Id":"35455450690","Type":"IssuesEvent","CreatedAt":"2024-02-06T18:36:50","Actor":"Erarndt","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13222","RelatedDescription":"Opened issue \"CreateWalkAsync should not be recursive\" (#13222) at NuGet/Home","RelatedBody":"The current implementation of `CreateWalkAsync` has recursive asynchronous calls which can cause a large amount of allocations of async state machine objects.\r\n\r\n![AsyncStateMachineAllocs](https://github.com/NuGet/Home/assets/60519722/7720a1e2-2d2e-4e56-9990-bf59d53fcc0b)\r\n\r\nThe type `<CreateGraphNodeAsync>d__3` is the async state machine object that I'm referring to, and in this trace there are ~1.8GB worth of allocations from this object. This accounts for 11.4% of all allocations during the restore.\r\n\r\nBy switching the implementation to an iterative approach, we can avoid allocating a state machine for each recursive call."},{"Id":"35449777496","Type":"IssuesEvent","CreatedAt":"2024-02-06T15:37:57","Actor":"AR-May","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13221","RelatedDescription":"Opened issue \"[Bug]: PackageReference with Content fails to build rather than warn with NU1701\" (#13221) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#9702**\r\n- Please respond to @edmfgh.\r\n\r\n---\r\n\r\n_From @edmfgh on Thursday, February 1, 2024 7:02:24 PM_\r\n\r\n### Issue Description\n\nGiven a consumer project, ProjectConsumer (with TargetFramework netstandard2.0) that PackageReferences a project with Content, ProjectWithContent, (with TargetFrameworks net48;net6.0) and another project without Content, ProjectWithoutContent, (also with TargetFrameworks net48;net6.0), ProjectConsumer fails to compile with \"error CS0246: The type or namespace name 'ProjectWithContent' could not be found (are you missing a using directive or an assembly.\" On the other hand, ProjectWithoutContent compiles with warning NU1701.\r\n\r\nNote that if ProjectWithContent and ProjectWithoutContent are ProjectReferenced rather than PackageReferenced, ProjectConsumer builds with warning. This leads me to suspect the issue could involve NuGet.\r\n\r\nIf there is a fundamental issue why a project with content cannot be PackageReferenced this way, it would be nice to have a more descriptive error message.\r\n\r\nThanks!\n\n### Steps to Reproduce\n\nSample project to reproduce issue: https://github.com/edmfgh/PackageReferenceBug/tree/main\r\n\r\n1. \"dotnet pack\" both ProjectWithContent and ProjectWithoutContent, e.g., \"dotnet pack .\\ProjectWithContent.csproj\" -o <output folder>\r\n2. Add <output folder> as a NuGet source\r\n3. Ensure ProjectConsumer references ProjectWithContent and ProjectWithoutContent via PackageReference\r\n4. Build ProjectConsumer\n\n### Expected Behavior\n\nProjectConsumer builds with warnings that ProjectWithContent and ProjectWithoutContent may not fully be compatible with your project, ProjectConsumer.\n\n### Actual Behavior\n\nProjectConsumer fails to compile with \"error CS0246: The type or namespace name 'ProjectWithContent' could not be found (are you missing a using directive or an assembly reference?)\"\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nSDK 8.0.101\r\nMSBuild version 17.8.3+195e7f5a3 for .NET, 17.8.3.51904\r\nIDE Agnostic"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-08T03:30:17.3845789Z","RunDurationInMilliseconds":962}