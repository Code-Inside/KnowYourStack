{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"25341968393","Type":"PullRequestEvent","CreatedAt":"2022-11-18T22:45:02","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9315","RelatedDescription":"Opened pull request \"[A11y] Remove aria-hidden attribute for prefix reserved element\" (#9315) at NuGet/NuGetGallery","RelatedBody":"Previous PR addressing the below issued introduced a new accessibility issue in which the prefix reserved checkmark was not accessible to screen readers. This PR removes the aria-hidden attribute associated with the prefix reserved icon and link. This solves the issue of the below a11y bug while also maintaining that the prefix reserved icon is not read aloud along with the package title header.\r\n\r\nPrevious PR: https://github.com/NuGet/NuGetGallery/pull/9314\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9299"},{"Id":"25317656789","Type":"PullRequestEvent","CreatedAt":"2022-11-17T23:22:38","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9314","RelatedDescription":"Merged pull request \"[A11y] Make aria-hidden elements not focusable\" (#9314) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9299"},{"Id":"25316951851","Type":"PullRequestEvent","CreatedAt":"2022-11-17T22:36:36","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9314","RelatedDescription":"Opened pull request \"[A11y] Make aria-hidden elements not focusable\" (#9314) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9299"},{"Id":"25289697892","Type":"IssuesEvent","CreatedAt":"2022-11-16T22:41:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9288","RelatedDescription":"Closed issue \"[Feature]: Make dotnet CLI the default installation method.\" (#9288) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\n.NET continues to evolve into its 3rd major unified release known as .NET 7. However, the default installation method is still \"Package Manager\" which is mostly a Visual Studio / Windows concept.\r\n\r\nThere are some challenges here. The first is the expected tool to use. Developers on Unixy-systems won't have straight-forward access to setting up a powershell instance with the NuGet package provider installed. This makes copy/pasting not so straight-forward for new developers to the platform.\r\n\r\nAnother reason is that much of the Microsoft Learn content uses `dotnet add package` (i.e. https://learn.microsoft.com/en-us/training/modules/dotnet-dependencies/). Seasoned users will generally know the syntax or can use the functionality built in today to return them to their preferred tab.\r\n\r\n<img width=\"861\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1288848/198395683-9f0835e5-fff5-40a6-9bc3-f984fc6cd27d.png\">\r\n\r\nPitch: Change the default to `dotnet CLI` as it's the most cross-platform friendly installation method today.\r\n\n\n### Additional Context and Details\n\n_No response_"},{"Id":"25289676829","Type":"IssuesEvent","CreatedAt":"2022-11-16T22:39:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9295","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Embedded license page returns HTTP 500 when the URL does not have version\" (#9295) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Describe the bug\r\n\r\nIf someone handcrafts the `https://www.nuget.org/packages/{id}/license` URL pattern with a package ID but no package version, and HTTP 500 is returned. We don't link to this page directly (AFAIK) so it's not a huge deal, but we should either 404 or show the version information of the latest package. \r\n\r\n```\r\nSystem.ArgumentException: version\r\n   at NuGetGallery.CorePackageService.FindPackageByIdAndVersionStrict(String id, String version) in D:\\a\\_work\\1\\s\\src\\Gallery\\submodules\\Gallery\\src\\NuGetGallery.Core\\Services\\CorePackageService.cs:line 226\r\n   at NuGetGallery.PackagesController.<License>d__68.MoveNext() in D:\\a\\_work\\1\\s\\src\\Gallery\\submodules\\Gallery\\src\\NuGetGallery\\Controllers\\PackagesController.cs:line 1175\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult)\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass37.<BeginInvokeAsynchronousActionMethod>b__36(IAsyncResult asyncResult)\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()\r\n   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)\r\n```\r\n\r\n### Repro Steps\r\n\r\nCompare the output of these 2 URLs:\r\n```\r\nhttps://www.nuget.org/packages/newtonsoft.json/license\r\n```\r\nHTTP 500\r\n\r\n```\r\nhttps://www.nuget.org/packages/newtonsoft.json/13.0.1/license\r\n``` \r\nWORKS\r\n\r\n### Expected Behavior\r\n\r\nIt should return a 404 or show the license for the latest version, similar to how `https://www.nuget.org/packages/{id}` shows the package details page for the latest version.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/94054/199732239-2d6b43a9-da83-482b-afd1-37888e244235.png)\r\n\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"},{"Id":"25278428862","Type":"PullRequestEvent","CreatedAt":"2022-11-16T14:13:42","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9312","RelatedDescription":"Merged pull request \"Update to latest client SDK to bring .NET 7 support onto the frameworks tab\" (#9312) at NuGet/NuGetGallery","RelatedBody":"I had to modify the TFM resolution code to resolve an Obsolete warning. Existing UT coverage is good and they all passed.\r\nUpdate to latest NuGet SDK and System.Data.SqlClient to resolve CG alerts\r\n\r\nResolve https://github.com/NuGet/NuGetGallery/issues/9313."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"25353463953","Type":"PullRequestEvent","CreatedAt":"2022-11-20T03:01:01","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/11922","RelatedDescription":"Closed pull request \"Spec for PMUI package source mapping\" (#11922) at NuGet/Home","RelatedBody":"Fixes: https://github.com/NuGet/Home/issues/11378"},{"Id":"25344519112","Type":"IssuesEvent","CreatedAt":"2022-11-19T03:36:26","Actor":"moh-hassan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7441","RelatedDescription":"Closed issue \"In Unit Test of netcoreapp2.0 project, Json dependendency file haven't entries for external packages and cause Test Fail\" (#7441) at NuGet/Home","RelatedBody":"Environment:  Vs 2017.8.7 including nuget 4.6.0\r\n\r\nI have two Nunit test projects, Project1.Test and Project2.Test\r\n\r\nBoth project1 and project2 are multi-target project (net45,netcoreapp2.0)   \r\nfor net45 test pass successfully in both project1 and project2\r\n\r\nIn netcoreapp2.0 test success in Project1.Test and Failed in Project2.Test\r\n\r\nProject2.Test failed and raise an exception:\r\n\r\n>System.IO.FileNotFoundException : Could not load file or assembly 'p1, Version=5.8.4.0, Culture=neutral, PublicKeyToken=123456780abcd'\r\n \r\nAfter more investigation, I find the root problem is the failed Project2.Test.deps.json  file haven't entries for the transitive dependencies p1,p2 and p3 packages of a netcoreapp2.0 lib that the test project depends on.\r\n\r\nThe dependency are visualized as in the following  figure:\t\t\r\n\r\nProject1.Test: Test Success (deps.json have entries for p1,p2 and p3 packages, level 2 transitive dependency)\r\nnetcoreapp2.0  (Nunit3 test project)   \r\n   |     |- net_standard2_lib  (netstandard2.0  project)\r\n   |\t     |- p1.dll   (nuget package)\r\n   |\t\t |- p2.dll   (nuget package)\r\n   |\t\t |- p3.dll   (nuget package)\r\n   |_ nunit.dll and others\r\n   \r\nProject2.Test: Test Fail (deps.json haven't entries for p1,p2 and p3 packages,level 3 transitive dependency)\r\nnetcoreapp2.0  (Nunit3 test project)\r\n   |- netcore2_lib  (netcoreapp2.0 project)  $$$ note here netcore2 $$$\r\n   |     |- net_standard2_lib  (netstandard2.0  project)\r\n   |\t     |- p1.dll   (nuget package)\r\n   |\t\t |- p2.dll   (nuget package)\r\n   |\t\t |- p3.dll   (nuget package)\r\n   |_ nunit.dll and others   \r\n\r\n\r\n   Why Project2.Test.deps.json havn't entries for the transitive dependency p1,p2 and p3 package\r\n   While Project1.Test.deps.json have entries for the transitive dependency p1,p2 and p3 package\r\n\r\n   How to to add these dependencies to Project2.Test.deps.json\r\n   "},{"Id":"25341577517","Type":"IssuesEvent","CreatedAt":"2022-11-18T22:15:43","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12257","RelatedDescription":"Opened issue \"PackageReferenceProject.GetInstalledPackagesAsync() is called on UI thread\" (#12257) at NuGet/Home","RelatedBody":"After doing research on GIPA API profiling, I just found out some calls are being made on UI thread.\r\n\r\nCalling GIPA API on UI thread is bad because it can perform considerable work and block UI responsiveness.\r\n\r\nAdding `ThreadHelper.ThrowIfOnUIThread()` to GIPA API causes telemetry faults and breaks solution PM UI.\r\n\r\n![image](https://user-images.githubusercontent.com/1192347/202812055-ca321696-90aa-406d-93f8-5f2c81b145b1.png)\r\n\r\n\r\n"},{"Id":"25337625607","Type":"IssuesEvent","CreatedAt":"2022-11-18T18:16:11","Actor":"strout","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12256","RelatedDescription":"Opened issue \"\"error: Sequence contains no matching element\" when listing outdated packages\" (#12256) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\ndotnet cli 7.0.100, 6.0.300, 5.0.408, 3.1.425 (all I tested)\n\n### Worked before?\n\nno\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. `dotnet new console -o repro`\r\n2. `dotnet add repro package AngleSharp --version 1.0.0-alpha-844` (note: this version was unlisted, the highest still-published version is 0.17.1)\r\n3. (optional) `dotnet add repro package AngleSharp.Css --version 0.16.0` (note: highest released version is 0.16.4)\r\n4. `dotnet list repro package --outdated --highest-minor` (or `--highest-patch`; the equivalent `dotnet nuget` command also fails)\r\n\r\nWhat I expected:\r\n\r\nI would expect the command to complete successfully. At a minimum it should still list the other package that's outdated (AngleSharp.Css 0.16.0 -> 0.16.4) if step 3 is run. It's probably also a good idea to have some kind of warning [like the one on nuget.org](https://www.nuget.org/packages/AngleSharp/1.0.0-alpha-844) about the AngleSharp version being unlisted, with a mention of the highest published version.\r\n\r\nWhat I got:\r\n\r\n```\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n\r\nerror: Sequence contains no matching element\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package list [arguments] [options]\r\n[...]\r\n```\r\n\r\n---\r\n\r\nThis made it more difficult to identify packages that needed I to update (note that `dotnet list repro package --outdated` also does not list AngleSharp) on a project with several dependencies. I hope it can be fixed to save others the same difficulty. Thanks for considering this issue.\n\n### Verbose Logs\n\n```shell\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/index.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/page/0.2.0/0.13.0-alpha-744.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/page/0.13.0-alpha-745/0.16.1-alpha-167.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/page/0.16.1-alpha-168/1.0.0-alpha-844.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp.css/index.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/index.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/page/0.2.0/0.13.0-alpha-744.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/page/0.13.0-alpha-745/0.16.1-alpha-167.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp/page/0.16.1-alpha-168/1.0.0-alpha-844.json\r\n  CACHE https://api.nuget.org/v3/registration5-gz-semver2/anglesharp.css/index.json\r\nerror: Sequence contains no matching element\r\ntrace: System.AggregateException: One or more errors occurred. (Sequence contains no matching element)\r\ntrace:  ---> System.InvalidOperationException: Sequence contains no matching element\r\ntrace:    at System.Linq.ThrowHelper.ThrowNoMatchException()\r\ntrace:    at System.Linq.Enumerable.First[TSource](IEnumerable`1 source, Func`2 predicate)\r\ntrace:    at NuGet.CommandLine.XPlat.ListPackageCommandRunner.GetVersionsFromDictAsync(IEnumerable`1 packages, Dictionary`2 packagesVersionsDict, ListPackageArgs listPackageArgs)\r\ntrace:    at NuGet.CommandLine.XPlat.ListPackageCommandRunner.AddLatestVersionsAsync(IEnumerable`1 packages, ListPackageArgs listPackageArgs)\r\ntrace:    at NuGet.CommandLine.XPlat.ListPackageCommandRunner.ExecuteCommandAsync(ListPackageArgs listPackageArgs)\r\ntrace:    at NuGet.CommandLine.XPlat.ListPackageCommand.<>c__DisplayClass0_1.<<Register>b__1>d.MoveNext()\r\ntrace:    --- End of inner exception stack trace ---\r\ntrace:    at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\ntrace:    at Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(String[] args)\r\ntrace:    at NuGet.CommandLine.XPlat.Program.MainInternal(String[] args, CommandOutputLogger log)\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package list [arguments] [options]\r\n\r\nArguments:\r\n  <PROJECT | SOLUTION>  A path to a project, solution file or directory.\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --framework             Specifies the target framework for which the packages will be listed.\r\n  --deprecated            Displays only the packages marked deprecated by the authors.\r\n  --outdated              Displays only the packages that need updates with the latest version from the sources.\r\n  --vulnerable            Displays only the packages flagged as vulnerable.\r\n  --include-transitive    Includes transitive packages too in the result.\r\n  --include-prerelease    Considers prerelease versions when looking for latest. Works only with `--outdated`.\r\n  --highest-patch         Considers only the versions with matching minor and major. Works only with `--outdated`.\r\n  --highest-minor         Considers only the versions with matching major. Works only with `--outdated`.\r\n  --source                Sources to lookup for latest versions. Works only with `--outdated`.\r\n  --config                A path to a config file to specify sources. Works only with `--outdated`.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  -v|--verbosity          Set the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"25223918809","Type":"IssuesEvent","CreatedAt":"2022-11-14T14:43:41","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Closed issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"25209931462","Type":"IssuesEvent","CreatedAt":"2022-11-14T02:15:16","Actor":"DSBRBrasil","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/66","RelatedDescription":"Opened issue \"Associate microsoft account\" (#66) at NuGet/Announcements","RelatedBody":"Hi, I want to associate my microsoft account to sig in on nuget.\r\nhelp please ... thks"},{"Id":"24695608920","Type":"IssuesEvent","CreatedAt":"2022-10-19T11:53:07","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Closed issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"24531970399","Type":"IssuesEvent","CreatedAt":"2022-10-11T17:13:00","Actor":"kartheekp-ms","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/65","RelatedDescription":"Opened issue \"Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\" (#65) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE-2022-41032 | .NET Elevation of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n\r\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\r\n\r\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\r\n\r\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\r\n\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core 3.1 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Edward Thomson](https://twitter.com/ethomson) \r\n\r\n### External Links\r\n\r\n[CVE 2022-41032](https://www.cve.org/CVERecord?id=CVE-2022-41032)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 11, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-10-11_\r\n"},{"Id":"24368370626","Type":"IssuesEvent","CreatedAt":"2022-10-03T17:00:05","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/64","RelatedDescription":"Opened issue \"Transition from Symantec timestamping service to DigiCert timestamping service\" (#64) at NuGet/Announcements","RelatedBody":"Between October 4th, 2022 and October 24, 2022 we will transition from the deprecated Symantec timestamping service currently in use to the DigiCert timestamping service for both Microsoft author signing and NuGet.org repository signing NuGet packages for new package submissions only.\r\n\r\n*  October 4th – October 24th:  Update NuGet.org repository signing to use http://timestamp.digicert.com/. Although all environments (DEV, INT, and PROD) will be updated during this window, http://nuget.org (PROD) specifically will be updated only near the beginning and end of this window.\r\n*  October 18th – 20th:  Update Microsoft author signing to use http://timestamp.digicert.com/.\r\n \r\nWe expect a smooth and quiet transition; however, if you have questions or concerns, either contact support@nuget.org or post [here](https://github.com/NuGet/NuGetGallery/issues/9259).\r\n \r\nPlease see [dotnet/core#7688](https://github.com/dotnet/core/issues/7688) and [Proposal to re-enable signed NuGet package verification](https://github.com/dotnet/designs/blob/main/accepted/2021/signed-package-verification/re-enable-signed-package-verification.md) for context."},{"Id":"23723590840","Type":"IssuesEvent","CreatedAt":"2022-08-30T17:25:48","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/63","RelatedDescription":"Opened issue \"[Connection] Deprecating legacy cipher suites at www.nuget.org\" (#63) at NuGet/Announcements","RelatedBody":"In order to provide a more secure and compliant environment for our customers, we are planning to deprecate legacy cipher suites and only support the following cipher suites at [www.nuget.org](http://www.nuget.org/):\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\nTLS_RSA_WITH_AES_256_GCM_SHA384\r\n\r\nBetween 08/31/2022 07:00 PM UTC and 09/02/2022 07:00 PM UTC, we will take a test for this deprecation to understand the broken change for our customers. Based on our telemetry, we expect the impact to be minimal, but if you meet any connection issues at [www.nuget.org](http://www.nuget.org/) or have any questions, do reach out to us at [support@nuget.org](mailto:support@nuget.org) or by commenting on the discussion issue: https://github.com/NuGet/NuGetGallery/issues/9216. We will be closely monitoring our communication channels to assess any unexpected impact."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":127,"FavoriteCount":32,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":47,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2022-11-20T03:30:23.8806771Z","RunDurationInMilliseconds":1407}