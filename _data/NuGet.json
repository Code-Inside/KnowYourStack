{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"30792719937","Type":"IssuesEvent","CreatedAt":"2023-07-31T17:22:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9600","RelatedDescription":"Closed issue \"api.nuget.org/v3-flatcontainer/package_name/index.json not working anymore\" (#9600) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nTo keep my Azure Devops feed in sync, I used to use the api https://api.nuget.org/v3-flatcontainer/Azure.Identity/index.json once a day to synchronize both feeds.\r\n\r\nRecently I've noticed, that the api is giving me nothing but 404s anymore. Is there any alternative or is this a temporary issue?\r\n\r\n### Repro Steps\r\n\r\n1. Open the url https://[api.nuget.org/v3-flatcontainer/Azure.Identity/index.json](https://api.nuget.org/v3-flatcontainer/Azure.Identity/index.json\r\n2. 404.\r\n\r\n### Expected Behavior\r\n\r\nI used to get a list of all the package versions. I also used to be able to download the nugets like this:\r\n`var getPackageUrl = $\"https://api.nuget.org/v3-flatcontainer/{package.name}/{version}/{package.name}.{version}.nupkg\";`\r\n\r\n\r\n### Screenshots\r\n\r\n_No response_\r\n\r\n### Additional Context and logs\r\n\r\n> <Error>\r\n> <Code>BlobNotFound</Code>\r\n> <Message>The specified blob does not exist. RequestId:7760f770-f01e-0016-1593-c34b20000000 Time:2023-07-31T09:42:17.4213953Z</Message>\r\n> </Error>"},{"Id":"30780520208","Type":"IssuesEvent","CreatedAt":"2023-07-31T09:41:16","Actor":"janniksam","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9600","RelatedDescription":"Opened issue \"api.nuget.org/v3-flatcontainer/package_name/index.json not working anymore\" (#9600) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nTo keep my Azure Devops feed in sync, I used to use the api https://api.nuget.org/v3-flatcontainer/Azure.Identity/index.json once a day to synchronize both feeds.\r\n\r\nRecently I've noticed, that the api is giving me nothing but 404s anymore. Is there any alternative or is this a temporary issue?\n\n### Repro Steps\n\n1. Open the url https://[api.nuget.org/v3-flatcontainer/Azure.Identity/index.json](https://api.nuget.org/v3-flatcontainer/Azure.Identity/index.json\r\n2. 404.\n\n### Expected Behavior\n\nI used to get a list of all the package versions. I also used to be able to download the nugets like this:\r\n`var getPackageUrl = $\"https://api.nuget.org/v3-flatcontainer/{package.name}/{version}/{package.name}.{version}.nupkg\";`\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"30777078941","Type":"IssuesEvent","CreatedAt":"2023-07-31T07:24:02","Actor":"johnnyqian","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9599","RelatedDescription":"Opened issue \"[Feature]: Please allow badge from https://www.myget.org to be shown.\" (#9599) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nBadge from myget.org is not rendered. \r\nExample: https://www.nuget.org/packages/EnableFontAwesome\n\n### The Elevator Pitch\n\nAccording to this doc,\r\nhttps://learn.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges\r\n\r\nmyget.org is not in the allow list. Consider the impact of myget.org, please help to add it to this allow list.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"30770931218","Type":"IssuesEvent","CreatedAt":"2023-07-30T22:24:03","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9598","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Search results section has a box around it when we apply filters\" (#9598) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThere is a box around the search results when we apply filters or refresh the search page.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/06873348-264d-4c9d-ab8b-2fc2b3e61453)\r\n\r\nIt looks like tab focus is on the search results column when we load the page. We should make this focus box invisible if that's the case.\n\n### Repro Steps\n\n1. Go to nuget.org/package\r\n2. 'Apply' filters or click on the search button\r\n3. There's a black box around the search results\n\n### Expected Behavior\n\nThe focus box on the search results should be invisible.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"30754505350","Type":"PullRequestEvent","CreatedAt":"2023-07-28T23:45:13","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9597","RelatedDescription":"Merged pull request \"Fixing bindings\" (#9597) at NuGet/NuGetGallery","RelatedBody":"The DEV deployment seems to be working now with these binding redirects: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1469494"},{"Id":"30754499599","Type":"PullRequestEvent","CreatedAt":"2023-07-28T23:44:29","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9596","RelatedDescription":"Closed pull request \"Fix binding redirect\" (#9596) at NuGet/NuGetGallery","RelatedBody":"Recent many packages update broke our binding redirect."},{"Id":"30754474217","Type":"PullRequestEvent","CreatedAt":"2023-07-28T23:40:44","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9597","RelatedDescription":"Opened pull request \"Fixing bindings\" (#9597) at NuGet/NuGetGallery","RelatedBody":"The DEV deployment seems to be working now with these binding redirects: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=1469494"},{"Id":"30753179204","Type":"PullRequestEvent","CreatedAt":"2023-07-28T21:34:05","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9594","RelatedDescription":"Closed pull request \"Fix binding redirect after recent package updates\" (#9594) at NuGet/NuGetGallery","RelatedBody":"Recent many packages update broke our binding redirect."},{"Id":"30753154420","Type":"PullRequestEvent","CreatedAt":"2023-07-28T21:32:07","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9596","RelatedDescription":"Opened pull request \"Dev eryondon fix bindingredirect\" (#9596) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Detail 1\r\n* Detail 2\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"30797238479","Type":"IssuesEvent","CreatedAt":"2023-07-31T20:57:00","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12770","RelatedDescription":"Closed issue \"MSBuildSdkResolver failure when attempting to pack non-SDK project\" (#12770) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.6.1.2\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nMicrosoft Visual Studio Enterprise 2022 (64-bit) - Current\r\nVersion 17.6.4\r\n\r\n1. `git clone https://github.com/riverar/repro-933fd2e428de`\r\n2. `cd repro-933fd2e428de`\r\n3. `nuget restore`\r\n4. `dotnet msbuild -t:Build -p:Configuration=Release -p:Platform=\"Any CPU\"`\r\n5. `nuget pack -IncludeReferencedProjects -Properties Configuration=Release .\\WindowsFormsApp1\\WindowsFormsApp1.csproj`\r\n6. Observe error:\r\n\r\n  ```\r\n  Attempting to build package from 'WindowsFormsApp1.csproj'.\r\n  MSBuild auto-detection: using msbuild version '17.6.3.22601' from 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\bin'.\r\n  Packing files from 'C:\\Sources\\repro-933fd2e428de\\WindowsFormsApp1\\bin\\Release'.\r\n  Using 'WindowsFormsApp1.nuspec' for metadata.\r\n  SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.IO.FileNotFoundException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n  File name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n     at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion, String userProfileDir)\r\n     at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext context, SdkResultFactory factory)\r\n     at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.TryResolveSdkUsingSpecifiedResolvers(IList`1 resolvers, Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio, SdkResult& sdkResult, IEnumerable`1& errors, IEnumerable`1& warnings)\r\n  ```\n\n### Verbose Logs\n\n```shell\nNuGet Version: 6.6.1.2\r\nAttempting to build package from 'WindowsFormsApp1.csproj'.\r\nMSBuild auto-detection: using msbuild version '17.6.3.22601' from 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'C:\\Sources\\repro-933fd2e428de\\WindowsFormsApp1\\bin\\Release'.\r\nUsing 'WindowsFormsApp1.nuspec' for metadata.\r\nAdd file 'C:\\Sources\\repro-933fd2e428de\\WindowsFormsApp1\\bin\\Release\\WindowsFormsApp1.exe' to package as 'lib\\net481\\WindowsFormsApp1.exe'\r\nSDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.IO.FileNotFoundException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion, String userProfileDir)\r\n   at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext context, SdkResultFactory factory)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.TryResolveSdkUsingSpecifiedResolvers(IList`1 resolvers, Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio, SdkResult& sdkResult, IEnumerable`1& errors, IEnumerable`1& warnings)\r\n\r\nWRN: Assembly binding logging is turned OFF.\r\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\nNote: There is some performance penalty associated with assembly bind failure logging.\r\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n\"\"  C:\\Sources\\repro-933fd2e428de\\ClassLibrary\\ClassLibrary.csproj\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.IO.FileNotFoundException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion, String userProfileDir)\r\n   at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext context, SdkResultFactory factory)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.TryResolveSdkUsingSpecifiedResolvers(IList`1 resolvers, Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio, SdkResult& sdkResult, IEnumerable`1& errors, IEnumerable`1& warnings)\r\n\r\nWRN: Assembly binding logging is turned OFF.\r\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\nNote: There is some performance penalty associated with assembly bind failure logging.\r\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n\"\"  C:\\Sources\\repro-933fd2e428de\\ClassLibrary\\ClassLibrary.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, Project project, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, ProjectCollection projectCollection)\n```\n"},{"Id":"30797132015","Type":"IssuesEvent","CreatedAt":"2023-07-31T20:51:25","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12713","RelatedDescription":"Closed issue \"CLI Nuget list <search> and nuget search are fundamentally poorly designed\" (#12713) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n6.6.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nUsing the Nuget CLI, using the list or search commands returns incredibly inaccurate, non deterministic, and downright frustrating results. \r\n\r\n1. Same command, different results.\r\n\r\n- Set up a feed in your nuget to Nuget.Org. `nuget sources add -Name Nuget.Org -Source \"<nuget feed>\"`\r\n- Run the command `nuget search system.buffers -Source Nuget.Org`\r\n- Note it returns a large human readable list, the first entry (probably) being the one you asked for.\r\n- Run the command N more times, and compare the results. They're all different. This is because it likely is asyncing the results, and the Take <integer> flag is cutting it off.\r\n- Suggestions: a) Make an exact search option, so System.Buffers is the only one to return. The extra stuff is helpful in some situations but also not in others, so it should be configurable. b) The human readable response would be better if it were programmatic. c) There is no ability via search to locate a particular version of a package, only the package itself.\r\n\r\n2. List search -AllVersions flag does not work.\r\n\r\n- Run the command `nuget list system.buffers -Source Nuget.Org -AllVersions`\r\n- Note the response certainly does not have \"all versions\", but one of each.\r\n- There seemingly isn't a way to try to verify if a package of a different version exists via the CLI command.\r\n- Suggestions: Provide proper list search functionality, adhering to suggestions above.\r\n\r\nI am effectively trying to verify all packages and what source they appear in, but find I'm more or less unable to actually verify many packages. The best i found was running `nuget list -Source <source> -AllVersions` and dumping it into a file (somehow took 20 minutes, looking into that), and then trying to parse that file with a contains, with a formatted string in the name \"<packageName> <version>\". It's a lot. And as stated above, my local testing of -AllVersions using nuget.org as a test doesn't even return any additional versions. I'd like a simple lookup functionality like `nuget search -Package System.Buffers -Version 1.2.3 -Source Nuget.Org` that allows me to simply verify that the feed Nuget.Org contains a package with the exact name System.Buffers with the version 1.2.3.\n\n### Verbose Logs\n\n_No response_"},{"Id":"30797086928","Type":"IssuesEvent","CreatedAt":"2023-07-31T20:49:03","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12769","RelatedDescription":"Closed issue \"dotnet add package doesn't update existing packages when Central Package Management is enabled\" (#12769) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.Net SDK 7.0.3xxx \n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nCenteral Package Management is enabled on my solution and I am trying to update an existing package in the Directory.Packages.props file to the newest version using `dotnet add package`. However when running `dotnet add [PROJECT] package [PACKAGE]`, the package never updates.\r\n\r\n1. Add a Nuget package to the Directory.Packages.props file that is out dated.\r\n2. Run `dotnet add [PROJECT] package [PACKAGE]`\r\n3. Checking the Directory.Package.props file, the package will be the same version it was before running `dotnet add package`.\r\n\r\nI have tried a few different tests. It seems to work if you attach the version to it. `dotnet add [PROJECT] package [PACKAGE] -v [VERSION]`. It also seems to correctly add the package if it didn't exist in the Directory.Packages.props file previously.\n\n### Verbose Logs\n\n_No response_"},{"Id":"30796596156","Type":"IssuesEvent","CreatedAt":"2023-07-31T20:24:41","Actor":"jebriede","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12777","RelatedDescription":"Closed issue \"Unable to use wildcards in nuspec files section\" (#12777) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Version: 5.6.0.6591\r\n\r\n### Worked before?\r\n\r\nNo\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nWe recently updated our `.nuspec` files to use `Path.AltDirectorySeparatorChar` (i.e. `/`) in the `files` section (for the `src` and `exclude` attributes) and NuGet does not seem to handle wildcards properly.\r\n\r\nWith the following `nuspec` file, only `./nuget-content/logo.png` will be copied (and all files inside `folder1` will be ignored - without any warnings in the verbose logs):\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package> \r\n  <metadata> \r\n    <id>MyPackage.Id</id>\r\n    <title>MyPackage - Title</title>\r\n    <version>1.0.0.0</version> \r\n    <authors>Author</authors>\r\n    <description>My package description</description>\r\n    <language>en-US</language>\r\n    <license type=\"expression\">Apache-2.0</license>\r\n    <icon>images/logo.png</icon>\r\n  </metadata> \r\n  <files>\r\n    <file src=\"./nuget-content/logo.png\" target=\"images/\" />\r\n    <file src=\"./folder1/*.dll\" target=\"lib/\" exclude=\"**/Assembly3*\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nHere's the folder structure:\r\n```\r\n│   test.nuspec\r\n│\r\n├───folder1\r\n│       Assembly1.dll\r\n│       Assembly1.pdb\r\n│       Assembly1.xml\r\n│       Assembly2.dll\r\n│       Assembly2.pdb\r\n│       Assembly2.xml\r\n│       Assembly3.dll\r\n│       Assembly3.pdb\r\n│       Assembly3.xml\r\n│\r\n└───nuget-content\r\n        logo.png\r\n```\r\n\r\nNuGet handles the `/` separator just fine, it's the wildcard entries that are being ignored. \r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nPS> NuGet.exe pack .\\test.nuspec -verbosity detailed\r\nNuGet Version: 5.6.0.6591\r\nAttempting to build package from 'test.nuspec'.\r\n\r\nId: MyPackage.Id\r\nVersion: 1.0.0.0\r\nAuthors: Author\r\nDescription: My package description\r\nDependencies: None\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'images/logo.png'.\r\nAdded file 'MyPackage.Id.nuspec'.\r\nAdded file 'package/services/metadata/core-properties/745c43d63898482bb1da7b019fa935c7.psmdcp'.\r\n```\r\n\r\n---\r\n\r\nFor reference, here's the output (which includes the correct files) when using `\\` instead:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package> \r\n  <metadata> \r\n    <id>MyPackage.Id</id>\r\n    <title>MyPackage - Title</title>\r\n    <version>1.0.0.0</version> \r\n    <authors>Author</authors>\r\n    <description>My package description</description>\r\n    <language>en-US</language>\r\n    <license type=\"expression\">Apache-2.0</license>\r\n    <icon>images\\logo.png</icon>\r\n  </metadata> \r\n  <files>\r\n    <file src=\".\\nuget-content\\logo.png\" target=\"images\\\" />\r\n    <file src=\".\\folder1\\*.dll\" target=\"lib\\\" exclude=\"**\\Assembly3*\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\n```\r\nPS> NuGet.exe pack .\\test.nuspec -verbosity detailed\r\nNuGet Version: 5.6.0.6591\r\nAttempting to build package from 'test.nuspec'.\r\n\r\nId: MyPackage.Id\r\nVersion: 1.0.0.0\r\nAuthors: Author\r\nDescription: My package description\r\nDependencies: None\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'images/logo.png'.\r\nAdded file 'lib/Assembly1.dll'.\r\nAdded file 'lib/Assembly2.dll'.\r\nAdded file 'MyPackage.Id.nuspec'.\r\nAdded file 'package/services/metadata/core-properties/d748c67cb50449388cf4791f61f00797.psmdcp'.\r\n```\r\n"},{"Id":"30795641126","Type":"IssuesEvent","CreatedAt":"2023-07-31T19:39:01","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12783","RelatedDescription":"Opened issue \"Consider Package Source Mapping sources for services in `NuGet.PackageManagement.VisualStudio`\" (#12783) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nPM UI uses feeds which directly query sources for package metadata.\r\nThis effectively bypasses Package Source Mapping since it considers all enabled sources.\r\n\r\nExample,\r\nhttps://github.com/NuGet/NuGet.Client/blob/84ba85d08b27afaa38ad4ae4e7e1684c74e9567c/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/PackageFeeds/MultiSourcePackageMetadataProvider.cs#L65\n\n### Desired Behavior\n\nConsider Package Source Mapping sources for services in `NuGet.PackageManagement.VisualStudio`\n\n### Additional Context\n\nLicense Dialog in PM UI was addressed in https://github.com/NuGet/NuGet.Client/pull/5295. While working on this, I discovered the other services which directly interact with package sources."},{"Id":"30794303391","Type":"IssuesEvent","CreatedAt":"2023-07-31T18:35:06","Actor":"vbjay","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12782","RelatedDescription":"Opened issue \"Nuget restore symbolic or hard links to nuget cach\" (#12782) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, Visual Studio Package Management UI, Visual Studio Package Manager Console, MSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\n![image](https://github.com/NuGet/Home/assets/3629489/ebfb40d2-5754-40ba-b64d-d6e017ef9da0)\r\nWhy can't restoring packages create hard/symbolic links and build systems understand the link and use the resolved data?  Why am I required to have package cache files and local project files?  The cache has the files and nuget restore could fixup symbolic links as needed if I copied repo for example.  \n\n### Additional Context and Details\n\n_No response_"},{"Id":"30777634782","Type":"IssuesEvent","CreatedAt":"2023-07-31T07:48:07","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12781","RelatedDescription":"Closed issue \"Changing PackageVulnerabilityInfo severity from int to enum\" (#12781) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nIn NuGet.Protocol 6.7, `PackageVulnerabilityInfo.Severity` is an `int`. This is effectively what the underlying protocol requires, but it makes it harder for developers using NuGet.Protocol (and is a contributing factor for why https://github.com/NuGet/Home/issues/12743 happened)\n\n### Desired Behavior\n\n`.Severity` should be an enum, so that it's easy for developers building tooling around vulnerabilities to know what all the expected values are, and don't make mistakes in mapping to the underlying `int` values.\r\n\r\nHowever, this is a breaking change in NuGet.Protocol.\n\n### Additional Context\n\n_No response_"},{"Id":"30777594218","Type":"IssuesEvent","CreatedAt":"2023-07-31T07:46:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12781","RelatedDescription":"Opened issue \"Changing PackageVulnerabilityInfo severity from int to enum\" (#12781) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nIn NuGet.Protocol 6.7, `PackageVulnerabilityInfo.Severity` is an `int`. This is effectively what the underlying protocol requires, but it makes it harder for developers using NuGet.Protocol (and is a contributing factor for why https://github.com/NuGet/Home/issues/12743 happened)\n\n### Desired Behavior\n\n`.Severity` should be an enum, so that it's easy for developers building tooling around vulnerabilities to know what all the expected values are, and don't make mistakes in mapping to the underlying `int` values.\r\n\r\nHowever, this is a breaking change in NuGet.Protocol.\n\n### Additional Context\n\n_No response_"},{"Id":"30767243183","Type":"IssuesEvent","CreatedAt":"2023-07-30T13:00:56","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12701","RelatedDescription":"Closed issue \"Package restore failed. Rolling back package changes for 'Flagsmith'.\t\t\t\" (#12701) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVS 2022\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\n1. I was trying to add Flagsmith nuget package through visual studio (2019) then I received the below error.\r\n**Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tCould not install package 'Flagsmith 5.0.1'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.5', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.**\t\t\t\t\r\n\r\n2. I tried to add the same package via another VS (2022) then I received different issue now\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tPackage restore failed. Rolling back package changes for 'Flagsmith'.\t\t\t\t\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1108\tCycle detected. \r\n  Flagsmith -> Flagsmith (>= 5.0.1).\tFlagsmith\tC:\\KamernetWeb\\proj\\NetCore\\KamernetAPI\\Flagsmith\\Flagsmith.csproj\t\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"29730541084","Type":"IssuesEvent","CreatedAt":"2023-06-13T19:08:21","Actor":"heng-liu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/69","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\" (#69) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2023-29337 | NuGet Client Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/NuGet/Home/issues/12653\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThis issue only affects Linux systems.\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\r\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-6qmf-mmc7-6c2p)\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\r\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\r\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\r\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\r\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\r\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n[Kalle Niemitalo](https://github.com/KalleOlaviNiemitalo)\r\n\r\n### External Links\r\n\r\n[CVE 2023-29337](https://www.cve.org/CVERecord?id=CVE-2023-29337)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 13, 2023): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2023-06-13_\r\n"},{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-08-01T03:30:23.0047502Z","RunDurationInMilliseconds":1118}