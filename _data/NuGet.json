{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12865105518","Type":"IssuesEvent","CreatedAt":"2020-07-09T23:14:52","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8093","RelatedDescription":"Opened issue \"[2020-07-13] Deployment \" (#8093) at NuGet/NuGetGallery","RelatedBody":"# Catalog2Monitoring \r\n\r\nChanges:\r\n* Log cursor URI with value (https://github.com/NuGet/NuGet.Services.Metadata/pull/799)\r\n\r\nProgress:\r\n* [ ] Merge RI: https://github.com/NuGet/NuGet.Services.Metadata/pull/799\r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"12863644760","Type":"IssuesEvent","CreatedAt":"2020-07-09T19:52:31","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8092","RelatedDescription":"Opened issue \"Auxiliary2AzureSearch and Catalog2AzureSearch do not reload secrets for feature flags\" (#8092) at NuGet/NuGetGallery","RelatedBody":"I rotated the secret for feature flags storage account. This causes some Azure Search jobs to fire a feature flag freshness alert.\r\n![image](https://user-images.githubusercontent.com/94054/87084410-0a22a100-c1e3-11ea-9ce0-646a46896bc4.png)\r\n\r\nRestarting the jobs fixed it.\r\n\r\nWe should support pulling latest secrets within a timely manner (<24 hours)."},{"Id":"12862542093","Type":"IssuesEvent","CreatedAt":"2020-07-09T17:44:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8076","RelatedDescription":"Closed issue \"Auxiliary2AzureSearch can fail if downloads.v1.json is being written\" (#8076) at NuGet/NuGetGallery","RelatedBody":"This is because it used `OpenReadAsync` to get a stream, which, in WindowsAzure.Storage, does sequential range requests with `If-Match`."},{"Id":"12862540598","Type":"IssuesEvent","CreatedAt":"2020-07-09T17:44:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8051","RelatedDescription":"Closed issue \"Jobs using BatchPusher should be resilient to HTTP 412\" (#8051) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nWhen Auxiliary2AzureSearch or Catalog2AzureSearch updates a document in Azure Search, it also updates the version list document, via etags. If another actor has updated the version list since it was read, an HTTP 412 is thrown causing the operation to fail and the job to crash. This is fine because the job will quickly retry and be fine this time (probably).\r\n\r\nIn the case of Catalog2AzureSearch, the amount of work that is re-done is very small. A couple of catalog leaves.\r\n\r\nIn the case of Auxiliary2AzureSearch, the amount of work that is re-done can be very large. If the downloads.v1.json file has changes, this could be thousands of documents that need new download counts. It's not great to start over.\r\n\r\n### Basic example\r\n\r\nSuppose the downloads.v1.json file has changed and Auxiliary2AzureSearch is chomping through the diff pushing all of the new download counts to Azure Search. \r\n\r\nAlso suppose a package owner has pushed a new version of one of the download counts that changed.\r\n\r\nIf Catalog2AzureSearch updates the version list around the same time as Auxiliary2AzureSearch running, Auxiliary2AzureSearch can fail because it sees the version list has changed.\r\n\r\n### Easy fix\r\n\r\nMake the jobs catch the failure and retry one or two times for the set of packages that failed with HTTP 412.\r\n\r\n### Exception text\r\n\r\n```\r\n\"Job Failed to Run\": \"Microsoft.WindowsAzure.Storage.StorageException: The remote server returned an error: (412) The condition specified using HTTP conditional header(s) is not met.. ---> System.Net.WebException: The remote server returned an error: (412) The condition specified using HTTP conditional header(s) is not met..\r\n   at Microsoft.WindowsAzure.Storage.Shared.Protocol.HttpResponseParsers.ProcessExpectedStatusCodeNoException[T](HttpStatusCode expectedStatusCode, HttpStatusCode actualStatusCode, T retVal, StorageCommandBase`1 cmd, Exception ex) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\Common\\Shared\\Protocol\\HttpResponseParsers.Common.cs:line 54\r\n   at Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob.<>c__DisplayClass57.<PutBlobImpl>b__56(RESTCommand`1 cmd, HttpWebResponse resp, Exception ex, OperationContext ctx) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Blob\\CloudBlockBlob.cs:line 3131\r\n   at Microsoft.WindowsAzure.Storage.Core.Executor.Executor.EndGetResponse[T](IAsyncResult getResponseResult) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Executor\\Executor.cs:line 300\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.WindowsAzure.Storage.Core.Util.StorageAsyncResult`1.End() in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Util\\StorageAsyncResult.cs:line 77\r\n   at Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob.EndUploadFromStream(IAsyncResult asyncResult) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Blob\\CloudBlockBlob.cs:line 844\r\n   at Microsoft.WindowsAzure.Storage.Core.Util.AsyncExtensions.<>c__DisplayClass7.<CreateCallbackVoid>b__5(IAsyncResult ar) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Util\\AsyncExtensions.cs:line 120\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGetGallery.CloudBlobWrapper.<UploadFromStreamAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.VersionListDataClient.<ReplaceAsync>d__9.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\VersionList\\VersionListDataClient.cs:line 101\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.BatchPusher.<>c__DisplayClass18_0.<<UpdateVersionListsAsync>b__3>d.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 291\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.BatchPusher.<UpdateVersionListsAsync>d__18.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 298\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.BatchPusher.<PushBatchesAsync>d__16.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 139\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.BatchPusher.<PushBatchesAsync>d__15.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 109\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.BatchPusher.<FinishAsync>d__14.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 103\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.Auxiliary2AzureSearch.UpdateOwnersCommand.<WorkAsync>d__11.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\Auxiliary2AzureSearch\\UpdateOwnersCommand.cs:line 129\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.Services.AzureSearch.Auxiliary2AzureSearch.UpdateOwnersCommand.<ExecuteAsync>d__10.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\Auxiliary2AzureSearch\\UpdateOwnersCommand.cs:line 83\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.Auxiliary2AzureSearch.Auxiliary2AzureSearchCommand.<ExecuteAsync>d__4.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\Auxiliary2AzureSearch\\Auxiliary2AzureSearchCommand.cs:line 43\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.AzureSearch.AzureSearchJob`1.<Run>d__1.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Services.AzureSearch\\AzureSearchJob.cs:line 33\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.JobRunner.<JobLoop>d__14.MoveNext() in E:\\A\\_work\\3286\\s\\src\\NuGet.Jobs.Common\\JobRunner.cs:line 263\r\nRequest Information\r\nRequestID:66ec1c7e-601e-0117-0809-444a5b000000\r\nRequestDate:Tue, 16 Jun 2020 18:11:49 GMT\r\nStatusMessage:The condition specified using HTTP conditional header(s) is not met.\r\nErrorCode:ConditionNotMet\r\nErrorMessage:The condition specified using HTTP conditional header(s) is not met.\r\nRequestId:66ec1c7e-601e-0117-0809-444a5b000000\r\nTime:2020-06-16T18:11:50.2737507Z\r\n\"\r\n```\r\n"},{"Id":"12849518319","Type":"IssuesEvent","CreatedAt":"2020-07-08T15:22:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8062","RelatedDescription":"Closed issue \"Investigate retries in Catalog2Registration\" (#8062) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nCatalog2Registration should have retries on Blob Storage. This exception was logged:\r\n\r\n```\r\n\"Job Failed to Run\": \"Microsoft.WindowsAzure.Storage.StorageException: The client could not finish the operation within specified timeout. ---> System.TimeoutException: The client could not finish the operation within specified timeout.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.WindowsAzure.Storage.Core.Executor.Executor.EndExecuteAsync[T](IAsyncResult result) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Executor\\Executor.cs:line 51\r\n   at Microsoft.WindowsAzure.Storage.Core.Util.AsyncExtensions.<>c__DisplayClass7.<CreateCallbackVoid>b__5(IAsyncResult ar) in c:\\Program Files (x86)\\Jenkins\\workspace\\release_dotnet_master\\Lib\\ClassLibraryCommon\\Core\\Util\\AsyncExtensions.cs:line 121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.AzureStorage.<OnLoadAsync>d__19.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\AzureStorage.cs:line 356\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.Storage.<LoadAsync>d__17.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\Storage.cs:line 107\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.Persistence.Storage.<LoadStringAsync>d__19.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\Persistence\\Storage.cs:line 152\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Services.Metadata.Catalog.DurableCursor.<LoadAsync>d__5.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\Catalog\\DurableCursor.cs:line 34\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Catalog2Registration.Catalog2RegistrationCommand.<ExecuteAsync>d__9.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Catalog2RegistrationCommand.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Catalog2Registration.Catalog2RegistrationCommand.<ExecuteAsync>d__8.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Catalog2RegistrationCommand.cs:line 49\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.Job.<Run>d__1.MoveNext() in C:\\A\\vs2017mb-00000R-1\\_work\\3\\s\\src\\NuGet.Jobs.Catalog2Registration\\Job.cs:line 23\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Jobs.JobRunner.<JobLoop>d__14.MoveNext() in E:\\A\\_work\\3286\\s\\src\\NuGet.Jobs.Common\\JobRunner.cs:line 265\r\nRequest Information\r\nRequestID:\r\nRequestDate:\r\nStatusMessage:\r\nErrorCode:\r\n\"\r\n```\r\n\r\n### To Reproduce\r\n\r\nSee if you can put a delegating handler in the request pipeline.\r\nAdd a host name mapping for the Azure Blob Storage to 192.168.255.255. \r\n\r\n### Expected behavior\r\n\r\nThere should be retries. It's not clear that there are retries implemented in the code. Let's verify retries occur for exceptions like these."},{"Id":"12841317942","Type":"IssuesEvent","CreatedAt":"2020-07-07T22:58:29","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8091","RelatedDescription":"Opened issue \"[A11y] Color contrast issues on package details page, links on the selected version\" (#8091) at NuGet/NuGetGallery","RelatedBody":"Issue: Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds (color-contrast - https://dequeuniversity.com/rules/axe/3.5/color-contrast?application=msftAI)\r\n\r\nTarget application: `NuGet Gallery | Newtonsoft.Json 12.0.3 - https://www.nuget.org/packages/Newtonsoft.Json/`\r\n\r\nElement paths: `a[title=\"\\31 2\\.0\\.3\"]`\r\n\r\nSnippet: `<a href=\"/packages/Newtonsoft.Json/12.0.3\" title=\"12.0.3\"> 12.0.3 </a>`\r\n\r\nElement path: `.bg-info > td:nth-child(4) > a`\r\n\r\nSnippet: `<a href=\"/packages/Newtonsoft.Json/12.0.3/Manage\">Listed</a>`\r\n\r\n![image](https://user-images.githubusercontent.com/94054/86853070-af663980-c06a-11ea-9f94-4ab49b43c88a.png)\r\n\r\n\r\nHow to fix: \r\nFix any of the following:\r\n Element has insufficient color contrast of 3.77 (foreground color: #337ab7, background color: #d9edf7, font size: 12.0pt (16px), font weight: normal). Expected contrast ratio of 4.5:1\r\n\r\nEnvironment: Chrome version 83.0.4103.116\r\n"},{"Id":"12841190748","Type":"IssuesEvent","CreatedAt":"2020-07-07T22:39:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8063","RelatedDescription":"Closed issue \"[Dependents] Polish current UI\" (#8063) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12840492281","Type":"PullRequestEvent","CreatedAt":"2020-07-07T21:09:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8090","RelatedDescription":"Merged pull request \"Update CODEOWNERS\" (#8090) at NuGet/NuGetGallery","RelatedBody":"Adds @drewgillies and @lyndaidaii, removes @scottbommarito "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12863809762","Type":"IssuesEvent","CreatedAt":"2020-07-09T20:12:30","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/2316","RelatedDescription":"Reopened issue \"Single-file packages from external resources\" (#2316) at NuGet/Home","RelatedBody":"_I apologise if this has been requested before. If so could you point me towards the relevant topic?_\n\nInstead of packaging a singular source file for distribution, compiled or as code. I think it would be super useful to configure nuget to fetch a source file from a resource? Examples would be a github gist, raw github or frankly any file at a resource?\n\nHere are some examples:\n1. For super light weight libraries that are often a single file (such as: https://raw.githubusercontent.com/grumpydev/TinyIoC/master/src/TinyIoC/TinyIoC.cs)\n2. Configuration. A local resource can contain configuration for a specific environment. \n3. Scripts. Scripts that can be stored externally to the package.\n\nMy inspiration is features available in Paket and the recommended practices found in [The Twelve Factor App](http://12factor.net/). I look forward to any suggestions..\n"},{"Id":"12863592869","Type":"IssuesEvent","CreatedAt":"2020-07-09T19:46:15","Actor":"pavanupb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9774","RelatedDescription":"Opened issue \"\"TheDateTimeOffset specified cannot be converted into a Zip file timestamp\" with Microsoft.Extensions.DependencyInjection v3.1.0\" (#9774) at NuGet/Home","RelatedBody":"I am getting \"TheDateTimeOffset specified cannot be converted into a Zip file timestamp\" error while trying to build the solution. I am building an analyzer using Roslyn and using Microsoft.Extensions.DependencyInjection V3.1.0. However when I try to build the solution I am getting a build error. The date modified field is null for Microsoft.Extensions.* dll's. \r\nI have installed .Net SDK v3.1.301.\r\n\r\n![image](https://user-images.githubusercontent.com/38906373/87083835-8e9a1180-c22d-11ea-9fa1-1be58a0b7030.png)\r\n"},{"Id":"12862773395","Type":"PullRequestEvent","CreatedAt":"2020-07-09T18:10:38","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9773","RelatedDescription":"Opened pull request \"Create FloatingVersions-In-PMUI.md\" (#9773) at NuGet/Home","RelatedBody":"Issue: https://github.com/NuGet/Home/issues/3788"},{"Id":"12862715735","Type":"IssuesEvent","CreatedAt":"2020-07-09T18:04:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9385","RelatedDescription":"Closed issue \" Request headers must contain only ASCII characters.\" (#9385) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | dotnet.exe):\r\n\r\nNuGet version (5.4.0.2):\r\n\r\ndotnet.exe --version (3.1.102):\r\n\r\nOS version (Win10 v1903 (18362.720)):\r\n\r\n`dotnet nuget delete MyPack 1.0.1 -s https://api.nuget.org/v3/index.json -k apikey`\r\n\r\nSo when I run dotnet nuget `delete `or `push `command with an **apiKey** that generated `nuget.org`, throws an exception:\r\n\r\n> Request headers must contain only ASCII characters.\r\n\r\nIn this stuation, I am trying to recreate the key multiple times until that contains only ASCII charecters.\r\n\r\nFor example trying this key `\"oy2n43fdÄ±q7hx5m5fujqjete2yqazefuxa65bvm2j6Ä±5pu\"` throws exception."},{"Id":"12862648194","Type":"IssuesEvent","CreatedAt":"2020-07-09T17:56:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9387","RelatedDescription":"Closed issue \"PackageRestore fails on nuget packages included in VSIX installer\" (#9387) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nPreviously it was possible to include NuGet packages locally inside the VSIX installer itself. It seems like this scenario is now broken in a major way. Clearly the generated installers are running and respond to various MSBuild config flags, but it's just not possible to have the VSIX source resolve the NuGet packages unless they come from an external pre-configured package source.\r\n\r\nThere is also no way to simply add the package references to the project without trying to resolve them, so item templates in particular are critically broken. This has recently broken a development pipeline that has worked for 8 years so far with no problem, and there seems to be no guidance whatsoever on how to proceed with VSIX-based project and item templates going forward.\r\n\r\nAll relevant details are presented below, and also in the stack overflow question:\r\nhttps://stackoverflow.com/questions/61009788/how-do-you-actually-include-nuget-packages-in-visual-studio-project-templates-vs\r\n\r\nDetailed guidance would be appreciated.\r\n\r\nNuGet product used: VS UI\r\nNuGet version (from package manager console): 5.5.0.6473\r\nVS version (if appropriate): VS 2019 Community\r\nOS version (i.e. win10 v1607 (14393.321)): Win10 \r\n\r\nWorked before? If so, with which NuGet version: VS 2010 through VS 2017\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create an item template project with the following `.vsixtemplate`:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<VSTemplate Version=\"3.0.0\" xmlns=\"http://schemas.microsoft.com/developer/vstemplate/2005\" Type=\"Item\">\r\n  <TemplateData>\r\n...\r\n  </TemplateData>\r\n  <TemplateContent>\r\n    <References />\r\n    <ProjectItem SubType=\"Code\" TargetFileName=\"$fileinputname$.cs\" ReplaceParameters=\"true\">TransformTemplate.cs</ProjectItem>\r\n  </TemplateContent>\r\n  <WizardExtension>\r\n    <Assembly>NuGet.VisualStudio.Interop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>\r\n    <FullClassName>NuGet.VisualStudio.TemplateWizard</FullClassName>\r\n  </WizardExtension>\r\n  <WizardData>\r\n    <packages repository=\"extension\" repositoryId=\"71c04463-bbae-4a14-8b03-624931eb88c9\">\r\n      <package id=\"Rx-Linq\" version=\"2.2.5\" />\r\n    </packages>\r\n  </WizardData>\r\n</VSTemplate>\r\n```\r\n\r\n2. Create a VSIX project with the following `.vsixmanifest`:\r\n\r\n```xml\r\n<?xml version=\"1.0\" ?>\r\n<PackageManifest Version=\"2.0.0\" xmlns=\"http://schemas.microsoft.com/developer/vsx-schema/2011\" xmlns:d=\"http://schemas.microsoft.com/developer/vsx-schema-design/2011\">\r\n  <Metadata>\r\n    <Identity Id=\"71c04463-bbae-4a14-8b03-624931eb88c9\" Version=\"1.0.0\" Language=\"en-US\" Publisher=\"Author\" />\r\n...\r\n  </Metadata>\r\n  <Installation>\r\n    <InstallationTarget Version=\"[16.0,)\" Id=\"Microsoft.VisualStudio.Pro\" />\r\n    <InstallationTarget Version=\"[16.0,)\" Id=\"Microsoft.VisualStudio.Enterprise\" />\r\n    <InstallationTarget Version=\"[16.0,)\" Id=\"Microsoft.VisualStudio.Community\" />\r\n  </Installation>\r\n  <Dependencies>\r\n    <Dependency Id=\"Microsoft.Framework.NDP\" DisplayName=\"Microsoft .NET Framework\" d:Source=\"Manual\" Version=\"[4.7.2,)\" />\r\n  </Dependencies>\r\n  <Assets>\r\n    <Asset Type=\"Microsoft.VisualStudio.ItemTemplate\" d:Source=\"Project\" d:ProjectName=\"CustomItemTemplate\" d:TargetPath=\"|CustomItemTemplate;TemplateProjectOutputGroup|\" Path=\"ItemTemplates\" d:VsixSubPath=\"ItemTemplates\" />\r\n    <Asset Type=\"Rx-Linq.2.2.5.nupkg\" d:Source=\"File\" Path=\"Packages\\Rx-Linq.2.2.5.nupkg\" d:VsixSubPath=\"Packages\" />\r\n  </Assets>\r\n  <Prerequisites>\r\n    <Prerequisite Id=\"Microsoft.VisualStudio.Component.CoreEditor\" Version=\"[15.0,)\" DisplayName=\"Visual Studio core editor\" />\r\n  </Prerequisites>\r\n</PackageManifest>\r\n```\r\n\r\n3. Make sure to include the `.nupkg` files in the Packages folder of the VSIX project, and make sure that the resulting VSIX contains the relevant `.nupkg` in its `Packages` folder.\r\n\r\n4. Install the VSIX package.\r\n\r\n5. Create a new project in VS 2019, **disable every remote package source registered in nuget package manager** (so that the template is forced to resolve the reference using the VSIX as package source) and add an item using the item template.\r\n\r\n6. Verify that the template fails to execute correctly, with the following error:\r\n\r\n![image](https://user-images.githubusercontent.com/5315880/78365198-a753b500-75b6-11ea-8cb7-d2cdca7eb5ef.png)\r\n\r\n7. Verify that the folder indicated in the error message actually exists, and the relevant packages are contained in it.\r\n\r\n...\r\n\r\n## Other suggested things~\r\n\r\nTry to use the item template itself as package source, the folder listed in the error message will change, but behavior will persist.\r\n\r\n\r\n"},{"Id":"12862495052","Type":"IssuesEvent","CreatedAt":"2020-07-09T17:39:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9371","RelatedDescription":"Closed issue \"add language Category filter  support to nuget ?\" (#9371) at NuGet/Home","RelatedBody":"when we search some keyword in nuget,we always got some C# package.\r\nbut maybe we are searching native or other languages(C++....)\r\npls give peoples a Options for filtering language. thanks"},{"Id":"12862428814","Type":"IssuesEvent","CreatedAt":"2020-07-09T17:31:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8546","RelatedDescription":"Closed issue \"Provide constructive CLI message when Dotnet pack is missing MSBuild Target\" (#8546) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWith a .NET Framework project, the dotnet CLI does not have necessary Targets (eg, NuGet.Build.Tasks.Pack) for performing `dotnet pack`. The user gets an error about a missing \"pack\" target. It would be more useful to provide a a constructive message, possibly pointing to the documentation on how to obtain the required Targets. I ran into this during another repro, and found it a bit jarring. Dotnet CLI works for things like Restore, so users may expect Pack to work as well. \r\n\r\nFound an open Docs issue where someone asked for documentation for finding these targets: https://github.com/NuGet/docs.microsoft.com-nuget/issues/986\r\n\r\n@karann-msft noted that the relevant docs are [here](https://docs.microsoft.com/en-us/nuget/create-packages/creating-a-package-msbuild#add-the-nugetbuildtaskspack-package), and agreed that the CLI could be more informative.\r\n\r\nNuGet product used: dotnet.exe\r\ndotnet.exe --version (if appropriate): 3.0.100-preview9-014004\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a .NET Framework project (ie, Class Library)\r\n2. Run `dotnet pack` in the project directory\r\n3. Output is:\r\n\r\n> Microsoft (R) Build Engine version 16.3.0-preview-19426-01+faf5e5d75 for .NET Core\r\n> Copyright (C) Microsoft Corporation. All rights reserved.\r\n> \r\n>   Nothing to do. None of the projects specified contain packages to restore.\r\n> **C:\\<Path>\\myProj.csproj : error MSB4057: The target \"pack\" does not exist in the project.**\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-10T05:30:41.5655436Z","RunDurationInMilliseconds":1607}