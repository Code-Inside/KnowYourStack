{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"44746434675","Type":"PullRequestEvent","CreatedAt":"2024-12-12T23:26:23","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10309","RelatedDescription":"Opened pull request \"Update entity Framework package for vulnerability alets \" (#10309) at NuGet/NuGetGallery","RelatedBody":"EntityFramework 6.4.4 is deprecated with vulnerable, update to latest stable. \r\n\r\nTodo: need check if there are critical changes\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/5732"},{"Id":"44734639046","Type":"PullRequestEvent","CreatedAt":"2024-12-12T16:15:49","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10308","RelatedDescription":"Opened pull request \"[DRAFT] [OIDC] Add token API for trading bearer token for API key\" (#10308) at NuGet/NuGetGallery","RelatedBody":"**I will wait on merging this PR until more validation and review is done.**\r\n\r\nThis adds a new token API for trading a bearer token for an API key. \r\n\r\nA sample request is this:\r\n```http\r\nPOST /api/v2/token HTTP/1.1\r\nHost: www.nuget.org\r\nAuthorization: Bearer {OIDC token}\r\nContent-Type: application/json\r\n\r\n{\r\n    \"token_type\": \"api_key\",\r\n    \"username\": \"{username of the trust policy’s controlling user}\"\r\n}\r\n```\r\n\r\nA sample response is this:\r\n```http\r\nHTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\r\n   \"token_type\": \"api_key\",\r\n   \"expires\": \"{ISO 8601 timestamp of expiration}\",\r\n   \"api_key\": \"{short lived API key in clear text}\"\r\n}\r\n```\r\n\r\nThe endpoint expects no other existing auth mechanism (no cookie auth, no API key auth) and will reject the request if present.\r\n\r\nIn the future, the full `/api/v2/token` URL will be discovered by the client via a new resource in the [service index](https://learn.microsoft.com/en-us/nuget/api/service-index). For now, it will be hard coded in custom client scripts.\r\n\r\nThe `{OIDC token}` in the request message will be an Entra ID token for a service principal. In the future this can be more token types such as GitHub Actions OIDC tokens.\r\n\r\nThe `username` is the username of the trust policy’s controlling user, NOT the package owner scope. This aligns with the current API key design where API keys are only owned by users but can be scoped to either users or organizations. I am not confident on this decision but given this is a \"closed beta\" feature, we can try it and see how it goes, and change later with minimum disruption."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"44773917376","Type":"IssuesEvent","CreatedAt":"2024-12-13T17:49:39","Actor":"aep-sunlife","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13999","RelatedDescription":"Opened issue \"Crashing in Fedora in Docker\" (#13999) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\nnuget 2.8.7\n\n### Worked before?\n\nno\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Install nuget in Fedora (41) in Docker.\r\n2. Try to run nuget.\r\n\r\n```console\r\n# nuget\r\nTYPE: 3\r\nV: ThrowArgumentOutOfRangeException\r\n* Assertion at ../../mono/arch/amd64/../x86/x86-codegen.h:410, condition `offset == (gint32)offset' not met\r\n\r\n\r\n=================================================================\r\n\tNative Crash Reporting\r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n=================================================================\r\n\tNative stacktrace:\r\n=================================================================\r\n\t0x5555556170da - /usr/bin/mono : \r\n\t0x5555555bf6cb - /usr/bin/mono : \r\n\t0x55555560e4cc - /usr/bin/mono : \r\n\t0x7fffff4b0dc0 - /lib64/libc.so.6 : \r\n\t0x7fffff509724 - /lib64/libc.so.6 : \r\n\t0x7fffff4b0d0e - /lib64/libc.so.6 : gsignal\r\n\t0x7fffff498942 - /lib64/libc.so.6 : abort\r\n\t0x55555557167c - /usr/bin/mono : \r\n\t0x55555589d5bd - /usr/bin/mono : \r\n\t0x5555558a0b9b - /usr/bin/mono : monoeg_assertion_message\r\n\t0x5555558a0c5e - /usr/bin/mono : \r\n\t0x5555555dc768 - /usr/bin/mono : \r\n\t0x55555561410f - /usr/bin/mono : \r\n\t0x55555561f4fd - /usr/bin/mono : \r\n\t0x555555577e5f - /usr/bin/mono : \r\n\t0x5555555c2094 - /usr/bin/mono : \r\n\t0x5555555c39c0 - /usr/bin/mono : \r\n\t0x7fffff41e393 - Unknown\r\n\r\n=================================================================\r\n\tTelemetry Dumper:\r\n=================================================================\r\nPkilling 0x140737473803968x from 0x140737476385728x\r\nEntering thread summarizer pause from 0x140737476385728x\r\nFinished thread summarizer pause from 0x140737476385728x.\r\nFailed to create breadcrumb file (null)/crash_hash_0x7ba2171d6\r\n\r\nWaiting for dumping threads to resume\r\n\r\n=================================================================\r\n\tExternal Debugger Dump:\r\n=================================================================\r\nmono_gdb_render_native_backtraces not supported on this platform, unable to find gdb or lldb\r\n\r\n=================================================================\r\n\tBasic Fault Address Reporting\r\n=================================================================\r\nMemory around native instruction pointer (0x7fffff509724):0x7fffff509714  05 00 44 89 f2 89 de 89 c7 b8 ea 00 00 00 0f 05  ..D.............\r\n0x7fffff509724  89 c3 f7 db 3d 00 f0 ff ff b8 00 00 00 00 0f 47  ....=..........G\r\n0x7fffff509734  c3 e9 76 ff ff ff 66 0f 1f 44 00 00 4c 89 ef e8  ..v...f..D..L...\r\n0x7fffff509744  a8 a9 ff ff e9 4a ff ff ff 0f 1f 00 4c 89 ef e8  .....J......L...\r\n\r\n=================================================================\r\n\tManaged Stacktrace:\r\n=================================================================\r\n\t  at <unknown> <0xffffffff>\r\n\t  at System.String:FormatHelper <0x000ab>\r\n\t  at System.String:Format <0x000b7>\r\n\t  at System.TermInfoDriver:TryTermInfoDir <0x00083>\r\n\t  at System.TermInfoDriver:SearchTerminfo <0x0011b>\r\n\t  at System.TermInfoDriver:.ctor <0x00147>\r\n\t  at System.ConsoleDriver:CreateTermInfoDriver <0x00053>\r\n\t  at System.ConsoleDriver:.cctor <0x000d7>\r\n\t  at System.Object:runtime_invoke_void <0x0009d>\r\n\t  at <unknown> <0xffffffff>\r\n\t  at System.Console:SetupStreams <0x00057>\r\n\t  at System.Console:.cctor <0x001b7>\r\n\t  at System.Object:runtime_invoke_void <0x0009d>\r\n\t  at <unknown> <0xffffffff>\r\n\t  at NuGet.Program:Main <0x000b3>\r\n\t  at <Module>:runtime_invoke_int_object <0x000a8>\r\n=================================================================\r\nAborted\r\n```\n\n### Verbose Logs\n\n```shell\n# nuget -verbosity detailed\r\nTYPE: 3\r\nV: ThrowArgumentOutOfRangeException\r\n* Assertion at ../../mono/arch/amd64/../x86/x86-codegen.h:410, condition `offset == (gint32)offset' not met\r\n\r\n\r\n=================================================================\r\n\tNative Crash Reporting\r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n=================================================================\r\n\tNative stacktrace:\r\n=================================================================\r\n\t0x5555556170da - /usr/bin/mono : \r\n\t0x5555555bf6cb - /usr/bin/mono : \r\n\t0x55555560e4cc - /usr/bin/mono : \r\n\t0x7fffff4b0dc0 - /lib64/libc.so.6 : \r\n\t0x7fffff509724 - /lib64/libc.so.6 : \r\n\t0x7fffff4b0d0e - /lib64/libc.so.6 : gsignal\r\n\t0x7fffff498942 - /lib64/libc.so.6 : abort\r\n\t0x55555557167c - /usr/bin/mono : \r\n\t0x55555589d5bd - /usr/bin/mono : \r\n\t0x5555558a0b9b - /usr/bin/mono : monoeg_assertion_message\r\n\t0x5555558a0c5e - /usr/bin/mono : \r\n\t0x5555555dc768 - /usr/bin/mono : \r\n\t0x55555561410f - /usr/bin/mono : \r\n\t0x55555561f4fd - /usr/bin/mono : \r\n\t0x555555577e5f - /usr/bin/mono : \r\n\t0x5555555c2094 - /usr/bin/mono : \r\n\t0x5555555c39c0 - /usr/bin/mono : \r\n\t0x7fffff41e393 - Unknown\r\n\r\n=================================================================\r\n\tTelemetry Dumper:\r\n=================================================================\r\nPkilling 0x140737473803968x from 0x140737476385728x\r\nEntering thread summarizer pause from 0x140737476385728x\r\nFinished thread summarizer pause from 0x140737476385728x.\r\nFailed to create breadcrumb file (null)/crash_hash_0x7ba2171d6\r\n\r\nWaiting for dumping threads to resume\r\n\r\n=================================================================\r\n\tExternal Debugger Dump:\r\n=================================================================\r\nmono_gdb_render_native_backtraces not supported on this platform, unable to find gdb or lldb\r\n\r\n=================================================================\r\n\tBasic Fault Address Reporting\r\n=================================================================\r\nMemory around native instruction pointer (0x7fffff509724):0x7fffff509714  05 00 44 89 f2 89 de 89 c7 b8 ea 00 00 00 0f 05  ..D.............\r\n0x7fffff509724  89 c3 f7 db 3d 00 f0 ff ff b8 00 00 00 00 0f 47  ....=..........G\r\n0x7fffff509734  c3 e9 76 ff ff ff 66 0f 1f 44 00 00 4c 89 ef e8  ..v...f..D..L...\r\n0x7fffff509744  a8 a9 ff ff e9 4a ff ff ff 0f 1f 00 4c 89 ef e8  .....J......L...\r\n\r\n=================================================================\r\n\tManaged Stacktrace:\r\n=================================================================\r\n\t  at <unknown> <0xffffffff>\r\n\t  at System.String:FormatHelper <0x000ab>\r\n\t  at System.String:Format <0x000b7>\r\n\t  at System.TermInfoDriver:TryTermInfoDir <0x00083>\r\n\t  at System.TermInfoDriver:SearchTerminfo <0x0011b>\r\n\t  at System.TermInfoDriver:.ctor <0x00147>\r\n\t  at System.ConsoleDriver:CreateTermInfoDriver <0x00053>\r\n\t  at System.ConsoleDriver:.cctor <0x000d7>\r\n\t  at System.Object:runtime_invoke_void <0x0009d>\r\n\t  at <unknown> <0xffffffff>\r\n\t  at System.Console:SetupStreams <0x00057>\r\n\t  at System.Console:.cctor <0x001b7>\r\n\t  at System.Object:runtime_invoke_void <0x0009d>\r\n\t  at <unknown> <0xffffffff>\r\n\t  at NuGet.Program:Main <0x000b3>\r\n\t  at <Module>:runtime_invoke_int_object <0x000a8>\r\n=================================================================\r\nAborted\n```\n"},{"Id":"44746225221","Type":"IssuesEvent","CreatedAt":"2024-12-12T23:14:48","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13998","RelatedDescription":"Opened issue \"dotnet pack no longer reports the .nupkg path\" (#13998) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\n.NET 9.0.100\r\n![image](https://github.com/user-attachments/assets/0b6d7a09-2a8e-4972-8da4-a4ef6d992b46)\r\n.NET 8.0.404\r\n![image](https://github.com/user-attachments/assets/b851c735-5d0f-44e8-a06a-57082f8468a2)\r\n\n\n### Desired Behavior\n\nIn .NET 6 SDK this worked fine and I thought it used to work in older versions of NET 8 SD, but I don't have one.\r\n\r\n.NET 6.0.428\r\n![image](https://github.com/user-attachments/assets/78879801-54e1-4789-b5bc-8b8077ded7fa)\r\n\r\n\n\n### Additional Context\n\n_No response_"},{"Id":"44738617737","Type":"IssuesEvent","CreatedAt":"2024-12-12T18:17:36","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13997","RelatedDescription":"Opened issue \"Update Microsoft.VisualStudio.Markdown.Platform version to use Daytona\" (#13997) at NuGet/Home","RelatedBody":"Update Microsoft.VisualStudio.Markdown.Platform to 17.13.161, or newer. Implement changes needed so we render using Daytona. "},{"Id":"44722248132","Type":"IssuesEvent","CreatedAt":"2024-12-12T10:38:45","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13996","RelatedDescription":"Opened issue \"[Bug Bash] “Package Details” tab should not show string “View Readme” when inputting invalid custom version in the “Version” dropdown box\" (#13996) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.13.0.95\n\n### Worked before?\n\nIt’s not a regression since it is a new feature. \n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Details about problem\r\nNuGet Version: Dev\\6.13.0.95\r\nVS Version: Main\\35611.73\r\nOS: Windows-11-Enterprise-23H2\r\n\r\n#### Notes:   \r\n1.\tThe repro rate is 100%.  \r\n2.\tIt is not regression since “Package Details” tab is a new feature.\r\n#### Repro Steps:    \r\n1.\tCreate a “C# Console App (.NET 9.0)” project.    \r\n2.\tRight-click the project in Solution Explorer window and select \"Manage NuGet Packages…\" menu item to open the PM UI.   \r\n3.\tSelect the package sources “nuget.org” from “Package source” dropdown box and click any package in the package list. \r\n4.\tInput an invalid string into “Version” dropdown box and observe the “Package Details” tab. \r\n\r\n#### Expected Result:\r\n“Package Details” tab should not show string “View Readme”, all the description items should be empty.\r\n#### Actual Result:\r\n“Package Details” tab shows a string “View Readme” as the screenshot below.\r\n![image](https://github.com/user-attachments/assets/cdd41baa-9dbc-4b21-bc1e-bbbf15a4d25a)\n\n### Verbose Logs\n\n_No response_"},{"Id":"44708843114","Type":"IssuesEvent","CreatedAt":"2024-12-12T01:08:51","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13974","RelatedDescription":"Closed issue \"Add indicator for deprecated and vulnerable packages to Package Details tab header.\" (#13974) at NuGet/Home","RelatedBody":"The vulnerability and deprecated warnings were moved to inside the package details tab. We want to make sure users are aware of the any issues with the packages they have selected so we want to add a warning icon similar to the one on the \"Installed\" tab in the PM UI. "},{"Id":"44704618127","Type":"IssuesEvent","CreatedAt":"2024-12-11T21:40:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7343","RelatedDescription":"Closed issue \"Support metadata on PackageReference items to hide them entirely from installed package list\" (#7343) at NuGet/Home","RelatedBody":"With .NET Core 3.0, we will be using [targeting packs](https://github.com/dotnet/cli/issues/10006) to deliver reference assemblies for the framework.  These targeting packs will not be represented as NuGet packages in the package graph in the way that Microsoft.NETCore.App, Microsoft.AspNetCore.App, and NETStandard.Library currently are.\r\n\r\nWhen a .NET Core 3 project depends on a package that has a dependency on one of these older \"platform\" packages, we want that platform package and its dependencies to be ignored in the NuGet graph, as those APIs are supplied by the platform via other mechanisms (targeting packs at build time and runtime packs for self-contained deployments).\r\n\r\nWe've thought of two possible ways to exclude the platform packages and dependencies from the graph.  This issue is for one of them, and I will file another issue for the other option.\r\n\r\nOne option is for us to produce empty 3.0 versions of these platform packages, and implicitly reference them from .NET Core 3.0 projects.  This would prevent the previous versions of the packages, as well as their dependencies, from being used in the graph.\r\n\r\nHowever, these empty 3.0 packages would be confusing to see in the list of installed packages in the package manager UI.  So if we go with the \"empty package\" option, we'd like a way to entirely exclude these packages from the NuGet UI.  Probably this could be a new piece of metadata on the `PackageReference`, for example `Visible=\"false\"`.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-15T03:30:20.4303954Z","RunDurationInMilliseconds":988}