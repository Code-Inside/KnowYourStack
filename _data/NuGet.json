{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"39520556394","Type":"PullRequestEvent","CreatedAt":"2024-06-22T02:48:24","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10040","RelatedDescription":"Opened pull request \"trim trailing whitespace\" (#10040) at NuGet/NuGetGallery","RelatedBody":"and update editorconfig"},{"Id":"39520516083","Type":"PullRequestEvent","CreatedAt":"2024-06-22T02:43:29","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10039","RelatedDescription":"Opened pull request \"inline out variables\" (#10039) at NuGet/NuGetGallery","RelatedBody":"and update editor config with the setting"},{"Id":"39520286449","Type":"PullRequestEvent","CreatedAt":"2024-06-22T02:13:48","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10038","RelatedDescription":"Opened pull request \"fix some incorrect as usage and better leverage Assert.IsType\" (#10038) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39520244774","Type":"PullRequestEvent","CreatedAt":"2024-06-22T02:07:57","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10008","RelatedDescription":"Merged pull request \"remove un used thirdPartyPackageManager variable\" (#10008) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"39520212192","Type":"PullRequestEvent","CreatedAt":"2024-06-22T02:04:24","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10014","RelatedDescription":"Merged pull request \"discard some variables\" (#10014) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"39531295491","Type":"IssuesEvent","CreatedAt":"2024-06-23T00:54:34","Actor":"WeihanLi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13570","RelatedDescription":"Opened issue \"Support GetAllListedVersions API\" (#13570) at NuGet/Home","RelatedBody":"              The metadata API would not more info than versions, considering for performance, is it possible to support a parameter like `excludeUnlistedPackages` for the `GetAllVersions` API?\r\n\r\n_Originally posted by @WeihanLi in https://github.com/NuGet/Home/issues/12370#issuecomment-2184274421_\r\n            "},{"Id":"39530579279","Type":"IssuesEvent","CreatedAt":"2024-06-22T23:08:10","Actor":"avivanoff","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13569","RelatedDescription":"Opened issue \"The documentation for NU1105 is not up-to-date\" (#13569) at NuGet/Home","RelatedBody":"Documentation for NU1105 should be expanded to include the case of the referenced project not being the part of the current solution. This is the error I am getting for this scenario:\r\n\r\n`error NU1105: Unable to find project information for 'xxx.csproj'. If you are using Visual Studio, this may be because the project is unloaded or not part of the current solution so run a restore from the command-line. Otherwise, the project file may be invalid or missing targets required for restore.\r\n`\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: e7a0653a-ec3b-3b60-ae77-a51fedf1966e\r\n* Version Independent ID: 90a503d7-6d0f-7b9e-4c2c-45f9a9705ac7\r\n* Content: [NuGet Error NU1105](https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu1105)\r\n* Content Source: [docs/reference/errors-and-warnings/NU1105.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/main/docs/reference/errors-and-warnings/NU1105.md)\r\n* Product: **nuget**\r\n* GitHub Login: @zhili1208\r\n* Microsoft Alias: **lzhi**"},{"Id":"39530492705","Type":"IssuesEvent","CreatedAt":"2024-06-22T22:54:51","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13568","RelatedDescription":"Opened issue \"Document NUGET_CONCURRENCY_LIMIT environment variable\" (#13568) at NuGet/Home","RelatedBody":"Needs to be added to the environment variable list table: https://learn.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-environment-variables\r\n\r\nPR adding the environment variable: https://github.com/NuGet/NuGet.Client/pull/5046\r\n"},{"Id":"39530445285","Type":"IssuesEvent","CreatedAt":"2024-06-22T22:47:43","Actor":"MarkKharitonov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13567","RelatedDescription":"Opened issue \"Document NUGET_SCRATCH environment variable\" (#13567) at NuGet/Home","RelatedBody":"Hi,\r\nThe variable has been introduced in this pull request - https://github.com/NuGet/NuGet.Client/pull/4511\r\nThe associated issue should describe the rationale.\r\nThank you."},{"Id":"39523609736","Type":"IssuesEvent","CreatedAt":"2024-06-22T09:05:18","Actor":"dotnet-policy-service[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13427","RelatedDescription":"Closed issue \"Reference not working after migrating to PackageReference\" (#13427) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n.NET SDK Version 8.0.204\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHello, \r\nyesterday I restructured my files and projects a bit and since I did this I have this new errormessage \" Must use PackageReference\".\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/dba9adc6-1c98-4250-bfbf-521c0c6b19f7)\r\n\r\nI quickly found out that I have to migrate the packages.config to PackageReferences to solve this problem. \r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/8cd20f39-b214-4543-950d-ec5c0c4d3b8c)\r\n\r\nSo I did the migration as shown (once with every transitive dependencies checked and once with only the Top-level dependencies).\r\n\r\nThis worked completely fine for all the projects, instead of \"Microsoft.Office.Interop.Excel\". After the migration the reference is bugged and the \"new\" behavior is hard to explain. In general the reference exists:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/559c231d-0b98-4853-9de4-0089961d27b1)\r\n\r\nand I can use it in the using section without any problems:\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/e460708a-360f-4820-b69c-8c3a951d6279)\r\n\r\nBut, without doing anything I have tons of errors because of whatever reason...\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/4fcc65cd-a5b5-44be-be85-743e84c8f604)\r\n\r\nThere are several datatypes that can be resolved but the properties for \"Rows\" and \"Cells\" are not being found.\r\n\r\n![image](https://github.com/NuGet/Home/assets/139776864/006ede65-d197-460f-8f52-950207d6957f)\r\n\r\nI am very curious about this, did I miss something, did the migration miss something? Or might this be a problem with that package?\r\n\r\nI am thankful for every helpful response because I cannot carry on right now...\n\n### Verbose Logs\n\n_No response_"},{"Id":"39521877120","Type":"IssuesEvent","CreatedAt":"2024-06-22T05:36:02","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13493","RelatedDescription":"Closed issue \"Add docs for `NuGetAuditSuppress`\" (#13493) at NuGet/Home","RelatedBody":"We're adding a new item called `NuGetAuditSuppress` that allows users to suppress individual advisories during restore and `dotnet list package --vulnerable`. We'll need to add documentation for this.\r\n\r\nPart of https://github.com/NuGet/Client.Engineering/issues/2425"},{"Id":"39518193632","Type":"IssuesEvent","CreatedAt":"2024-06-21T22:40:59","Actor":"advay26","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13566","RelatedDescription":"Opened issue \"[Epic] 'dotnet nuget why' bugs and improvements\" (#13566) at NuGet/Home","RelatedBody":"- [ ] https://github.com/NuGet/Home/issues/13553\r\n- [ ] https://github.com/NuGet/Home/issues/13552"},{"Id":"39515981008","Type":"IssuesEvent","CreatedAt":"2024-06-21T20:27:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13272","RelatedDescription":"Closed issue \"Audit result caching service should react to solution changes\" (#13272) at NuGet/Home","RelatedBody":""},{"Id":"39513466850","Type":"IssuesEvent","CreatedAt":"2024-06-21T18:28:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6471","RelatedDescription":"Closed issue \"problem with install packages visual studio 2017\" (#6471) at NuGet/Home","RelatedBody":"I'm trying to install new package and get an error \"URI formats are not supported\". Here is package manager log (I use visual studio 2017 version 15.5.2):\r\nAttempting to gather dependency information for package 'jQuery.3.2.1' with respect to project 'tengri-online-book', targeting '.NETFramework,Version=v4.5.1'\r\nGathering dependency information took 286,18 ms\r\nAttempting to resolve dependencies for package 'jQuery.3.2.1' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'jQuery.3.2.1'\r\nResolved actions to install package 'jQuery.3.2.1'\r\nRetrieving package 'jQuery 3.2.1' from 'nuget.org'.\r\nAdding package 'jQuery.3.2.1' to folder 'F:\\projects\\tengri\\sources\\kx-web-tengri\\packages'\r\nAdded package 'jQuery.3.2.1' to folder 'F:\\projects\\tengri\\sources\\kx-web-tengri\\packages'\r\nOverwriting existing file 'Scripts\\jquery-3.2.1.slim.min.map'..\r\nInstall failed. Rolling back...\r\nPackage 'jQuery.3.2.1' does not exist in project 'tengri-online-book'\r\nRemoving package 'jQuery.3.2.1' from folder 'F:\\projects\\tengri\\sources\\kx-web-tengri\\packages'\r\nRemoved package 'jQuery.3.2.1' from folder 'F:\\projects\\tengri\\sources\\kx-web-tengri\\packages'\r\nExecuting nuget actions took 4,14 sec\r\nSystem.ArgumentException: URI formats are not supported.\r\n   at System.IO.Path.LegacyNormalizePath(String path, Boolean fullCheck, Int32 maxPathLength, Boolean expandShortPaths)\r\n   at System.IO.Path.NormalizePath(String path, Boolean fullCheck, Int32 maxPathLength, Boolean expandShortPaths)\r\n   at System.IO.Path.GetFullPathInternal(String path)\r\n   at System.IO.Directory.InternalCreateDirectoryHelper(String path, Boolean checkHost)\r\n   at System.IO.Directory.CreateDirectory(String path)\r\n   at NuGet.ProjectManagement.FileSystemUtility.AddFileCore(String root, String path, Action`1 writeToStream, INuGetProjectContext nuGetProjectContext)\r\n   at NuGet.ProjectManagement.FileSystemUtility.AddFile(String root, String path, Stream stream, INuGetProjectContext nuGetProjectContext)\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem.<>c__DisplayClass29_0.<AddFile>b__1()\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem.AddFileCoreAsync(String path, Action addFile)\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem.<>c__DisplayClass29_0.<<AddFile>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\n   at NuGet.PackageManagement.VisualStudio.VsMSBuildProjectSystem.AddFile(String path, Stream stream)\r\n   at NuGet.ProjectManagement.MSBuildNuGetProjectSystemUtility.<TryAddFileAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.ProjectManagement.MSBuildNuGetProjectSystemUtility.<AddFilesAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.ProjectManagement.MSBuildNuGetProject.<InstallPackageAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteInstallAsync>d__83.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__74.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__74.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__74.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<ExecuteNuGetProjectActionsAsync>d__73.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.UI.UIActionEngine.<ExecuteActionsAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at NuGet.PackageManagement.UI.UIActionEngine.<>c__DisplayClass7_0.<<PerformActionImplAsync>b__0>d.MoveNext()\r\nTime Elapsed: 00:00:04.6500166\r\n========== Finished ==========\r\n\r\nI have packages.config file in project and a lot of packages in it, but they does not apprear under installed packages tab. Get-Package cmd outputs \"No packages installed.\"\r\n\r\nBut I'm able successfully install and upgrade packages if I open the solution in VS2015."},{"Id":"39513457993","Type":"IssuesEvent","CreatedAt":"2024-06-21T18:28:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13565","RelatedDescription":"Closed issue \"[Bug Bash] The package installation with ‘packages.config’ format is blocked after adding a non-existed feed to package source list for non-SDK project \" (#13565) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.11.0.108\r\n\r\n### Worked before?\r\n\r\nIt can be repro on D16.11\\34601.136 and D17.10\\34902.84.\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n#### Repro Steps:    \r\n\r\n1. Create a C# Console App (.NET Framework) project. \r\n\r\n2. Open Tools->Options->NuGet Package Manager->Package Sources and add a non-existed feed (for example: https://packagesource). \r\n\r\n3. Right-click the project in Solution Explorer and select \"Manage NuGet Packages…\" menu item to open PM UI. \r\n\r\n4. Click the settings button (gear) on the top-right of PM UI and check the checkbox: “All format selection on first package install”. \r\n\r\n5. Click “Browse” tab and select the “nuget.org” from Package source drop-down list. \r\n\r\n6. Search \"Newtonsoft.Json\" package in the filter of “Browse” tab, select the package in the package list and click the ‘Install’ button. \r\n\r\n7. Select “packages.config” radio-box and click “OK” button in the prompt “Choose NuGet Package Manager Format” dialog. \r\n\r\n#### Expected:    \r\n\r\nThe package will be installed successfully. \r\n\r\n#### Actual: \r\n\r\nThe package installs fails with the follow error: \r\n![image](https://github.com/NuGet/Home/assets/84695155/06798409-d2d1-469d-b22b-1477d735d8ed)\r\n#### Notes:     \r\n\r\n1. The repro rate is 100%. \r\n\r\n2. It doesn’t repro on SDK project and non-SDK project that install package with “PackageReference” format. \r\n\r\n3. This error shouldn't block the installation of the package because the selected package source is ‘nuget.org’. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-23T03:30:19.9374066Z","RunDurationInMilliseconds":888}