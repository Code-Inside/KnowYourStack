{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12586176726","Type":"IssuesEvent","CreatedAt":"2020-06-10T01:55:20","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8032","RelatedDescription":"Opened issue \"Stats figure trimming doesn't respect locale\" (#8032) at NuGet/NuGetGallery","RelatedBody":"On statistics page, this change (https://github.com/NuGet/NuGetGallery/pull/7990) has unit tests which fail in non-decimal-point locales. So does the actual trimming logic for the number. \r\nExamples:\r\nhttps://dev.azure.com/devdiv/DevDiv/_build/results?buildId=3797637&view=results\r\nhttps://dev.azure.com/devdiv/DevDiv/_build/results?buildId=3794657&view=results\r\nhttps://dev.azure.com/devdiv/DevDiv/_build/results?buildId=3790561&view=results"},{"Id":"12585615055","Type":"PullRequestEvent","CreatedAt":"2020-06-10T00:06:45","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8031","RelatedDescription":"Opened pull request \"Added verified checkmark to packages\" (#8031) at NuGet/NuGetGallery","RelatedBody":"\r\n* On the NuGet packages area of the Used By section, those packages that are verified will have the verified icon (white checkmark enclosed in a blue circle) next to their package name\r\n \r\n![image](https://user-images.githubusercontent.com/63263324/84212512-9be8a280-aaad-11ea-916b-1496eb77007a.png)\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/3221"},{"Id":"12584932273","Type":"IssuesEvent","CreatedAt":"2020-06-09T22:10:48","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7544","RelatedDescription":"Closed issue \"[MSA] Unmanaged tenant login error should have the link to FAQ page\" (#7544) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12584491928","Type":"PullRequestEvent","CreatedAt":"2020-06-09T21:13:14","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8027","RelatedDescription":"Merged pull request \"[ReleasePrep][2020-06-08] RI dev to master\" (#8027) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12584392889","Type":"IssuesEvent","CreatedAt":"2020-06-09T21:01:32","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8030","RelatedDescription":"Opened issue \"JsonConfigurationJob does not cache secrets for longer than job loop\" (#8030) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nThe [`JsonConfigurationJob`](https://github.com/NuGet/NuGet.Jobs/blob/master/src/NuGet.Jobs.Common/JsonConfigurationJob.cs) class does not cache secrets for longer than the job loop. For many jobs, the job loop is very short (e.g. Catalog2AzureSearch which just checks if anything new is in the catalog). This means that we are effectively not caching secrets, even though we are [using a caching secret reader](https://github.com/NuGet/NuGet.Jobs/blob/e3be4cf5dd2aea042983227d0f18d2103b2da754/src/NuGet.Jobs.Common/JsonConfigurationJob.cs#L98-L106).\r\n\r\nThis can lead to transient KeyVault issues bubbling up as job availability issues. Also, we his KeyVault way too much (unmeasured performance impact).\r\n\r\nThis is because the job `Init` method is invoked for every job loop. Ng jobs don't have this problem because the `SecretInjector` is initialized once at the entry point. Validation jobs (Service Bus readers) don't have this problem because the job loop lasts many hours.\r\n\r\n### To Reproduce\r\n\r\n1. Open NuGet.Jobs solution\r\n1. Set a breakpoint in JsonConfigurationJob's `Init` method\r\n1. Launch Gallery.CredentialExpiration (simple job) with DEV configuration\r\n1. Hit the loop once and let the job go through one iteration\r\n1. Set a Windows Firewall rule blocking all traffic to the KeyVault IP\r\n   - Get IP address in PowerShell: `Resolve-DnsName KEYVAULT_NAME.vault.azure.net`\r\n1. Let the job do another iteration\r\n\r\n### Expected behavior\r\n\r\nThere should be no firewall related error because secrets should be cached and used from the previous iteration somehow.\r\n\r\nSecrets should cached for X hours like we specific in the code.\r\n\r\n### Screenshots\r\n\r\nOver the past several days there has been an uptick in KeyVault timeouts (`TaskCanceledExceptions` when getting a secret). This is made manifest by an exception log and increased fail heartbeats.\r\n\r\n```\r\ntraces\r\n| where timestamp > ago(14d)\r\n| where severityLevel > 2\r\n| where message contains \"at Microsoft.Azure.KeyVault.Internal.SecretOperations.<GetAsync>d__f.MoveNext()\"\r\n| where message contains \"TaskCanceledException\"\r\n| summarize count() by bin(timestamp, 1d), tostring(customDimensions.InstanceName)\r\n| render columnchart\r\n```\r\n\r\nThis is the number of task cancelled exceptions from various AI resources:\r\n\r\n#### V3 jobs\r\n![image](https://user-images.githubusercontent.com/94054/84198274-230b2b80-aa58-11ea-8024-71c6847d264b.png)\r\n\r\n#### Stats jobs\r\n![image](https://user-images.githubusercontent.com/94054/84198308-34ecce80-aa58-11ea-84dc-c5a2d41b0b2c.png)\r\n\r\n#### Misc jobs\r\n![image](https://user-images.githubusercontent.com/94054/84198344-433aea80-aa58-11ea-9e00-f26e5438f050.png)\r\n"},{"Id":"12583849019","Type":"PullRequestEvent","CreatedAt":"2020-06-09T19:59:21","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8029","RelatedDescription":"Opened pull request \"Added index for package dependencies table\" (#8029) at NuGet/NuGetGallery","RelatedBody":"- Implemented an up and down for creating indexes and removing indexes in the package dependencies table\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/3220"},{"Id":"12582818207","Type":"PullRequestEvent","CreatedAt":"2020-06-09T18:05:10","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8017","RelatedDescription":"Merged pull request \"Added UI to reverse dependencies\" (#8017) at NuGet/NuGetGallery","RelatedBody":"* Implemented the Used By UI in the package details page, includes the reverse dependencies\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/3143\r\n\r\nBefore:\r\n![Before(Closed)](https://user-images.githubusercontent.com/63263324/83459071-2d736700-a453-11ea-854b-5e5d26383f1c.png)\r\n\r\n![Before(Open)](https://user-images.githubusercontent.com/63263324/83459135-4bd96280-a453-11ea-80bd-95f4048a77fc.png)\r\n\r\nAfter:\r\n\r\n![After(Closed)](https://user-images.githubusercontent.com/63263324/83459214-74615c80-a453-11ea-974b-4cb904558266.png)\r\n\r\n![After(Open)](https://user-images.githubusercontent.com/63263324/83459232-7deac480-a453-11ea-9624-5edec97c72ab.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12586703844","Type":"IssuesEvent","CreatedAt":"2020-06-10T03:32:48","Actor":"cppchuff","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9664","RelatedDescription":"Opened issue \"can't work in vs2019 it can't find namespace\" (#9664) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nMicrosoft.Web.WebView2.Wpf\r\nNuGet version (x.x.x.xxx):\r\n0.9.538\r\ndotnet.exe --version (if appropriate):\r\n.Net Framework 4.6.2\r\nVS version (if appropriate):\r\nVS2019\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nwin10 v1903\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\ninstall Microsoft.Web.WebView2.Wpf\r\n2.\r\nadd \r\nxmlns:wv2=\"clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf\"\r\ninto Mainwindow.xaml\r\n3.run report erro\r\n严重性\t代码\t说明\t项目\t文件\t行\t禁止显示状态\r\n错误\tCS0234\t命名空间“Microsoft”中不存在类型或命名空间名“Web”(是否缺少程序集引用?)\tFairsenseUI\tC:\\Users\\fly\\source\\repos\\FairsenseUI\\FairsenseUI\\obj\\Debug\\MainWindow.g.cs\t13\t活动\r\nand\r\n严重性\t代码\t说明\t项目\t文件\t行\t禁止显示状态\r\n错误\tXLS0418\t未找到程序集“Microsoft.Web.WebView2.Wpf”。请确保不缺少程序集引用并且已生成你的项目和所有引用的程序集。\tFairsenseUI\tMainWindow.xaml\t8\t\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"12585937467","Type":"IssuesEvent","CreatedAt":"2020-06-10T01:09:02","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9663","RelatedDescription":"Opened issue \"OutputConsoleLogger should not access main thread in constructor.\" (#9663) at NuGet/Home","RelatedBody":"## Details about Problem\n\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): _VS UI/Package Manager Console_\nNuGet version (x.x.x.xxx): _Latest_\ndotnet.exe --version (if appropriate): \nVS version (if appropriate): _Latest_\nOS version (i.e. win10 v1607 (14393.321)): _Any_\nWorked before? If so, with which NuGet version: N/A\n\n## Detailed repro steps so we can see the same problem\n\nOutputConsoleLogger is accessing main thread during construction, which is not a good pattern. As it is MEF-composed object, we cannot convert to \"private-ctor-public-async-factory\" model, so we should lazily initialize OutputConsole outside the constructor.\n"},{"Id":"12585132372","Type":"IssuesEvent","CreatedAt":"2020-06-09T22:40:57","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9659","RelatedDescription":"Closed issue \"Auth in VS should not always be interactive\" (#9659) at NuGet/Home","RelatedBody":"When running in VS.Oe, NuGet should not ask credential providers to be interactive."},{"Id":"12581864038","Type":"IssuesEvent","CreatedAt":"2020-06-09T16:26:52","Actor":"omajid","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9662","RelatedDescription":"Opened issue \"Typo in error message. \"administator\" instead of \"administrator\"\" (#9662) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (~~NuGet.exe | VS UI | Package Manager Console |~~ dotnet.exe):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.103\r\n Commit:    6f74c4a1dd\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  32\r\n OS Platform: Linux\r\n RID:         fedora.32-x64\r\n Base Path:   /usr/lib64/dotnet/sdk/3.1.103/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.3\r\n  Commit:  4a9f85e9f8\r\n\r\n.NET Core SDKs installed:\r\n  3.1.103 [/usr/lib64/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.3 [/usr/lib64/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\n```\r\n$ cat /etc/os-release \r\nNAME=Fedora\r\nVERSION=\"32 (Workstation Edition)\"\r\nID=fedora\r\nVERSION_ID=32\r\nVERSION_CODENAME=\"\"\r\nPLATFORM_ID=\"platform:f32\"\r\nPRETTY_NAME=\"Fedora 32 (Workstation Edition)\"\r\nANSI_COLOR=\"0;34\"\r\nLOGO=fedora-logo-icon\r\nCPE_NAME=\"cpe:/o:fedoraproject:fedora:32\"\r\nHOME_URL=\"https://fedoraproject.org/\"\r\nDOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/f32/system-administrators-guide/\"\r\nSUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\nBUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\nREDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\nREDHAT_BUGZILLA_PRODUCT_VERSION=32\r\nREDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=32\r\nPRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\nVARIANT=\"Workstation Edition\"\r\nVARIANT_ID=workstation\r\n```\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. There's a typo in an error message:\r\n\r\n> /usr/share/dotnet/sdk/3.1.101/NuGet.targets(123,5): error : Unable to obtain lock file access on '/tmp/NuGetScratch/lock/foo' for operations on '/home/.../obj/app.csproj.nuget.cache'. This may mean that a different user or administator is holding this lock and that this process does not have permission to access it. If no other process is currently performing an operation on this file it may mean that an earlier NuGet process crashed and left an inaccessible lock file, in this case removing the file '/tmp/NuGetScratch/lock/foo' will allow NuGet to continue. [/home/.../app.csproj]\r\n\r\nThe message says \"adminstator\" instead of \"administrator\". You can see this error message on:\r\n\r\n- https://github.com/dotnet/templating/issues/2232\r\n- https://github.com/NuGet/Home/issues/3897\r\n- https://stackoverflow.com/questions/59674582/can-my-ef-application-connect-to-postgresql-using-user-postgres\r\n- https://stackoverflow.com/questions/55058757/install-pythonnet-on-ubuntu-18-04-python-3-6-7-64-bit-mono-5-16-fails\r\n\r\n"},{"Id":"12581405852","Type":"IssuesEvent","CreatedAt":"2020-06-09T15:45:16","Actor":"johnruck","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9661","RelatedDescription":"Opened issue \"Unable to update with locked version on nuget 5.4/5.6 (works on 4.7.1)\" (#9661) at NuGet/Home","RelatedBody":"NuGet Versions (5.4 and newer) (only tested on 4.71, 5.4, 5.6)\r\n\r\nDiscovered this after Sqlite made a breaking change requiring us to lock down to a specific version of the System.data.sqlite nuget packages.  \r\n\r\nnuget restore works in finding the specific package version without issue\r\n\r\nnuget update fails on 5.4 and 5.6 due to the old version no longer being internally listed\r\n\r\nG:\\git-base\\OfficeTests\\NugetSpecificVersionTest\\NugetSpecificVersionTest>c:\\programdata\\chocolatey\\bin\\nuget update packages.config\r\nMSBuild auto-detection: using msbuild version '15.9.21.664' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\bin'.\r\nFeeds used:\r\n  https://api.nuget.org/v3/index.json\r\n  http://rivendell.silverblazegaming.com:9000\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\n\r\n\r\nAttempting to gather dependency information for multiple packages with respect to project 'G:\\git-base\\OfficeTests\\NugetSpecificVersionTest\\NugetSpecificVersionTest\\NugetSpecificVersionTest.csproj', targeting '.NETFramework,Version=v4.6.1'\r\nGathering dependency information took 6.29 sec\r\nApplying constraint '(= 1.0.112)' defined in 'packages.config'.\r\nUnable to resolve 'System.Data.SQLite'. An additional constraint '(= 1.0.112)' defined in packages.config prevents this operation.\r\n\r\nG:\\git-base\\OfficeTests\\NugetSpecificVersionTest\\NugetSpecificVersionTest>c:\\users\\john\\tools\\nuget update packages.config\r\nMSBuild auto-detection: using msbuild version '15.9.21.664' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\bin'.\r\nFeeds used:\r\n  https://api.nuget.org/v3/index.json\r\n  http://rivendell.silverblazegaming.com:9000\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\n\r\n\r\nAttempting to gather dependency information for multiple packages with respect to project 'G:\\git-base\\OfficeTests\\NugetSpecificVersionTest\\NugetSpecificVersionTest\\NugetSpecificVersionTest.csproj', targeting '.NETFramework,Version=v4.6.1'\r\nGathering dependency information took 4.21 sec\r\nApplying constraint '(= 1.0.112)' defined in 'packages.config'.\r\nApplying constraint '(= 1.0.112.1)' defined in 'packages.config'.\r\nApplying constraint '(= 1.0.112.1)' defined in 'packages.config'.\r\nApplying constraint '(= 1.0.112.1)' defined in 'packages.config'.\r\nAttempting to resolve dependencies for multiple packages.\r\nResolving dependency information took 0 ms\r\nResolving actions install multiple packages\r\nResolution was successful but resulted in no action\r\nThere are no new updates available.\r\nNo package updates are available from the current package source for project 'G:\\git-base\\OfficeTests\\NugetSpecificVersionTest\\NugetSpecificVersionTest\\NugetSpecificVersionTest.csproj'.\r\nExecuting nuget actions took 3.89 ms\r\n\r\nG:\\git-base\\OfficeTests\\NugetSpecificVersionTest\\NugetSpecificVersionTest>\r\n\r\nfor reference - the c:\\users\\john\\tools\\nuget is version 4.71, the other is version 5.6.\r\n\r\nI am attaching a simple project that demonstrates the issue.\r\n\r\n[NugetSpecificVersionTest.zip](https://github.com/NuGet/Home/files/4753197/NugetSpecificVersionTest.zip)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-10T05:30:40.5699739Z","RunDurationInMilliseconds":1981}