{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12341889732","Type":"PullRequestEvent","CreatedAt":"2020-05-14T23:05:41","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7994","RelatedDescription":"Closed pull request \"Update versions in readme\" (#7994) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12332132074","Type":"PullRequestEvent","CreatedAt":"2020-05-14T05:55:24","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7994","RelatedDescription":"Opened pull request \"Update versions in readme\" (#7994) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12331936676","Type":"PullRequestEvent","CreatedAt":"2020-05-14T05:20:56","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7993","RelatedDescription":"Opened pull request \"Append FAQ address to AAD unmanaged tenant authentication error\" (#7993) at NuGet/NuGetGallery","RelatedBody":"Appending a FAQ link to the AAD authentication error when user account is in an unmanaged tenant state. Also added aka.ms to support this.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7544\r\n\r\nResultant error message on page (this change adds the last sentence):\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/81895786-6eb3ec00-95f6-11ea-800f-ae59d949c427.png)"},{"Id":"12331405430","Type":"PullRequestEvent","CreatedAt":"2020-05-14T03:35:08","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7990","RelatedDescription":"Merged pull request \"Force 3 significant figures in Y axis values\" (#7990) at NuGet/NuGetGallery","RelatedBody":"Use adjusted rounding and formatting to get the required significant figures. Added logic to append trailing zeroes for visual alignment.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7972\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/81654992-4783e000-9479-11ea-8fe7-e80315b6589b.png)\r\n"},{"Id":"12331186716","Type":"PullRequestEvent","CreatedAt":"2020-05-14T02:53:13","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7985","RelatedDescription":"Merged pull request \"ListPackages (default packages action) now responds to delete requests with a 405\" (#7985) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/nuget/engineering/issues/2866\r\n\r\nThe default action for packages is method agnostic and can be scoped to Get to fix this.\r\n\r\nNow returning a 405 for Http deletes."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12342188408","Type":"IssuesEvent","CreatedAt":"2020-05-14T23:59:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4350","RelatedDescription":"Closed issue \"Consider merging VSIX assemblies via ILMerge, like NuGet.exe\" (#4350) at NuGet/Home","RelatedBody":""},{"Id":"12342028730","Type":"IssuesEvent","CreatedAt":"2020-05-14T23:29:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7943","RelatedDescription":"Closed issue \"Perf:  sprint work\" (#7943) at NuGet/Home","RelatedBody":""},{"Id":"12342013829","Type":"IssuesEvent","CreatedAt":"2020-05-14T23:27:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8092","RelatedDescription":"Closed issue \"Restore:  investigate no-op restore performance\" (#8092) at NuGet/Home","RelatedBody":""},{"Id":"12340578160","Type":"IssuesEvent","CreatedAt":"2020-05-14T20:11:53","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9569","RelatedDescription":"Opened issue \"Restores caused by VS rebuild are hard to reason about\" (#9569) at NuGet/Home","RelatedBody":"Specifically, none of our metrics currently track it, but we should. \r\n\r\ncc @dominoFire "},{"Id":"12340477548","Type":"IssuesEvent","CreatedAt":"2020-05-14T20:00:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9568","RelatedDescription":"Opened issue \"Understand and improve the batching strategy for implicit restores\" (#9568) at NuGet/Home","RelatedBody":"Related to https://github.com/NuGet/Home/issues/9567 & https://github.com/NuGet/Home/issues/9567.\r\n\r\nSpecifically concerned with start-up scenarios."},{"Id":"12340468474","Type":"IssuesEvent","CreatedAt":"2020-05-14T19:59:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9567","RelatedDescription":"Opened issue \"Analyze the frequency of Implicit restore & potential improvements\" (#9567) at NuGet/Home","RelatedBody":"This is an investigative task to track one of the 3 scenarios in which restore happens. \r\n\r\nQuestions that need answered:\r\n* How frequent is this in the overall picture?\r\n* What is the status distribution?\r\n* Can it be made faster? \r\n* Can it happen less frequently?\r\n\r\nRelated to https://github.com/NuGet/Home/issues/9513. \r\n\r\nGiven that this will happen after https://github.com/NuGet/Home/issues/9513 is completed. It's relevant to think of this problem in the context of those no-op optimizations existing. "},{"Id":"12340455900","Type":"IssuesEvent","CreatedAt":"2020-05-14T19:58:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9566","RelatedDescription":"Opened issue \"Analyze the frequency of OnBuild restore & potential improvements\" (#9566) at NuGet/Home","RelatedBody":"This is an investigative task to track one of the 3 scenarios in which restore happens. \r\n\r\nQuestions that need answered:\r\n* How frequent is this in the overall picture?\r\n* What is the status distribution?\r\n* Can it be made faster? \r\n* Should it happen less frequently/ \r\n\r\nRelated to https://github.com/NuGet/Home/issues/9513. \r\n\r\nGiven that this will happen after https://github.com/NuGet/Home/issues/9513 is completed. It's relevant to think of this problem in the context of those no-op optimizations existing. "},{"Id":"12339919571","Type":"IssuesEvent","CreatedAt":"2020-05-14T18:58:53","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9565","RelatedDescription":"Opened issue \"Replay the warnings for LegacyPackageReference projects\" (#9565) at NuGet/Home","RelatedBody":"A follow up to https://github.com/NuGet/Home/issues/9513. \r\n\r\nPR: https://github.com/NuGet/NuGet.Client/pull/3391\r\nSpec: https://github.com/NuGet/Home/pull/9564\r\n\r\nIn legacy package reference projects, it's NuGet that writes the warnings and errors to the error list. \r\n\r\nAt the beginning of every restore operation in VS we clear the NuGet entries from the error list and add them at the end. \r\nThis creates unnecessary churn.\r\n\r\nDue to this reason only, we cannot enable the optimization mentioned above in legacty projects.\r\n\r\nThis issue covers fixing that scenario."},{"Id":"12339508821","Type":"PullRequestEvent","CreatedAt":"2020-05-14T18:15:06","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9564","RelatedDescription":"Opened pull request \"Visual Studio PackageReference partial restore\" (#9564) at NuGet/Home","RelatedBody":"Design doc for https://github.com/NuGet/Home/issues/9513. "},{"Id":"12338761967","Type":"IssuesEvent","CreatedAt":"2020-05-14T16:57:47","Actor":"logiclrd","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9563","RelatedDescription":"Opened issue \"NuGet Restore on mixed solution with `packages` directory override produces inconsistent `packages` folder\" (#9563) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: `NuGet.exe`\r\nNuGet version (x.x.x.xxx): 5.5.1.6542\r\n\r\nIf NuGet Restore is performed on a solution where some of the projects are based on `packages.config` and some are using `<PackageReference>`, then it effectively performs two separate restore steps: One for the `packages.config` file into the `packages` directory in your project, and one for the `<PackageReference>` elements into the centralized package cache for your user profile. But, if you use `-PackageDirectory` on the command-line, it redirects _both_ of these restore operations, when, I think, it should only set the path for the first one. The result is that the packages restored for `<PackageReference>` that were supposed to go into the central folder for the user profile instead get placed into the `packages` folder in the project. This in turn causes problems because the first phase writes packages to the folder with V2 layout, and the second phase writes them with V3 layout. The result is a `packages` folder that is essentially damaged because of the mixed formats. I observed NuGet Pack to subsequently fail, because it assumes the packages directory it is looking at will be _either_ V2 or V3 but never both, and because of this assumption, the first folder it sees determines what it expects for all other references -- but my `NuGet Pack` operation required it to read a reference restored with V2 format, and the first folder it saw was a V3 folder.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a solution with two projects, one of which uses `packages.config` and the other one `<PackageReference>`. Ensure that each project references at least one NuGet package.\r\n\r\n2. Run `NuGet Restore` on the solution with `-PackageDirectory` overriding the location of the `packages` folder.\r\n\r\nAfter this operation, what I expect you will see is a `packages` folder where some packages are installed into folders like `log4net.2.0.8` while others are installed into folders like `fluentassertions/5.0.3`.\r\n"},{"Id":"12337580144","Type":"IssuesEvent","CreatedAt":"2020-05-14T15:11:29","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9562","RelatedDescription":"Opened issue \"Warnings for existing code in xplat verification branch from CodeAnalysis.FxCopAnalyzer\" (#9562) at NuGet/Home","RelatedBody":"The following warnings are reported by CodeAnalysis.FxCopAnalyzer in the existing code on xplat feature branch, as new overload methods were brought in for new TFM:\r\n\r\n```\r\nSigning\\Timestamp\\Rfc3161TimestampVerificationUtility.cs(40,17): error CA1307: The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.Rfc3161Timestam\r\npVerificationUtility.TryReadTSTInfoFromSignedCms(System.Security.Cryptography.Pkcs.SignedCms, out NuGet.Packaging.Signing.IRfc3161TimestampTokenInfo)' with a call to 'string.Equals(string, System.StringComparison)'. [C:\\repos\\NuGet.Clie\r\nnt\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nRules\\UpholdBuildConventionRule.cs(106,24): error CA1307: The behavior of 'string.Replace(string, string?)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.UpholdBuildConventionRule.Co\r\nnventionViolator.ConventionViolator(string, string, string)' with a call to 'string.Replace(string, string?, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\n\r\nPackageExtraction\\ZipArchiveExtensions.cs(38,20): error CA1307: The behavior of 'string.IndexOf(char)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.ZipArchiveExtensions.UnescapePath(strin\r\ng)' with a call to 'string.IndexOf(char, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nPackageFolderReader.cs(153,20): error CA1307: The behavior of 'string.IndexOf(char)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.PackageFolderReader.IsFileInRoot(string)' with a call to\r\n'string.IndexOf(char, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nPackageCreation\\Authoring\\PackageBuilder.cs(783,60): error CA1307: The behavior of 'string.Replace(string, string?)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.PackageBuilder.WriteFiles\r\n(System.IO.Compression.ZipArchive, System.Collections.Generic.HashSet<string>)' with a call to 'string.Replace(string, string?, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nSigning\\Archive\\EndOfCentralDirectoryRecord.cs(109,17): error CA1307: The behavior of 'string.Replace(string, string?)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.EndOfCentralDi\r\nrectoryRecord.ThrowByteSignatureNotFoundException(byte[])' with a call to 'string.Replace(string, string?, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\n\r\nSigning\\Content\\KeyPairFileReader.cs(76,23): error CA1307: The behavior of 'string.IndexOf(char)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.KeyPairFileReader.GetProperty(string\r\n)' with a call to 'string.IndexOf(char, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nSigning\\DerEncoding\\DerGeneralizedTime.cs(35,32): error CA1307: The behavior of 'string.IndexOf(char)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.DerEncoding.DerGeneralizedTime.\r\nRead(string)' with a call to 'string.IndexOf(char, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nSigning\\Timestamp\\Rfc3161TimestampVerificationUtility.cs(40,17): error CA1307: The behavior of 'string.Equals(string?)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.Rfc3161Timesta\r\nmpVerificationUtility.TryReadTSTInfoFromSignedCms(System.Security.Cryptography.Pkcs.SignedCms, out NuGet.Packaging.Signing.IRfc3161TimestampTokenInfo)' with a call to 'string.Equals(string?, System.StringComparison)'. [C:\\repos\\NuGet.Cl\r\nient\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n\r\nSigning\\Utility\\CertificateUtility.cs(266,20): error CA1307: The behavior of 'string.Replace(string, string?)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.CertificateUtility.GetH\r\nashString(System.Security.Cryptography.X509Certificates.X509Certificate2, NuGet.Common.HashAlgorithmName)' with a call to 'string.Replace(string, string?, System.StringComparison)'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\\r\nNuGet.Packaging.csproj]\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"},{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org â€“ Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-15T05:30:39.9967173Z","RunDurationInMilliseconds":1662}