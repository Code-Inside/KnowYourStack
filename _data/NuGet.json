{"Data":{"Blog":{"FeedItems":[{"Title":"OpenSSF Scorecard for .NET and the NuGet ecosystem","PublishedOn":"2024-11-04T17:07:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"OpenSSF Scorecard is a tool developed by the Open Source Security Foundation (OpenSSF) that provides automated security assessments for open-source projects. The primary goal of the Scorecard project...","Href":"https://devblogs.microsoft.com/nuget/openssf-scorecard-for-net-nuget/","RawContent":null},{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Introduction In November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!   Your feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette. To add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable. In NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"44662342082","Type":"PullRequestEvent","CreatedAt":"2024-12-10T20:49:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10291","RelatedDescription":"Merged pull request \"[OIDC 13] Add audit records for federated credential flows\" (#10291) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10290.\r\n\r\nThis PR adds audit record shapes for federated credential flows. A future PR will update the service layer to emit then audit records. This PR enables us to update our internal auditing layer to handle the new audit records before actually emitting them.\r\n\r\nAs part of this PR I needed to extract the `FederatedCredentialIssuerType` enum as a public enum, so it can enrich the audit entries. Previously it was an implementation detail of the service layer.\r\n\r\nThe following steps of the end-to-end OIDC flow are audited:\r\n1. Creation of a federated credential policy\r\n2. Validating a bearer token against a well-known issuer (e.g. Entra ID OIDC JWT validation)\r\n3. Comparing a bearer token with a policy\r\n4. Rejecting a bearer token accepted via a policy due to replay \r\n5. Exchanging a bearer token for a short-lived API key via a policy \r\n6. Deletion of a policy\r\n\r\nStep 1 is done some time before token exchange, as an onboarding step.\r\n\r\nStep 2 is during the token exchange but could be used anywhere we validate bearer tokens in the future.\r\n\r\nStep 3-5 are done during token exchange (trading an OIDC token for a short-lived API key).\r\n\r\nStep 6 is done some time after a policy is created.\r\n\r\nStep 2 is emitted as an independent \"external security token\" audit record.\r\n\r\nSteps 1 and 3-6 are emitted as \"federated credential policy\" audit records, with a variety of child audit records which will become \"target resource\" relationships in our auditing system.\r\n\r\nI opted to be somewhat verbose in the audit record shapes so we can understand:\r\n- What external credential was provided to our system, an essential information like issuer, identifier and claims.\r\n- Whether that external credential was accepted (allowing federation) or rejected.\r\n- What federated credential policy was compared with the external credential.\r\n- If token replay (re-use) was detected and blocked.\r\n- What API key was generated via the exchange."},{"Id":"44661482066","Type":"PullRequestEvent","CreatedAt":"2024-12-10T20:17:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10290","RelatedDescription":"Merged pull request \"[OIDC 12] Add admin panel for federated credential policies\" (#10290) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/10212.\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/10289.\r\n\r\nThis PR adds a new admin panel for our team to manage federated credential policies on behalf of other users. We will use this to manual onboard users to the OIDC feature.\r\n\r\nThe new option on the admin panel index looks like this:\r\n<img width=\"770\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a8580536-3874-450b-b786-7c8d8af31f3f\">\r\n\r\nThe admin panel looks like this:\r\n![image](https://github.com/user-attachments/assets/77e14180-c1b3-45f3-8b71-85b14205a7d8)\r\n\r\nYou can add a federated credential policy for a user here:\r\n![image](https://github.com/user-attachments/assets/fa01ccac-a806-46bc-952c-7e680e18101a)\r\n\r\nSearch results look like this:\r\n![image](https://github.com/user-attachments/assets/d4a05218-c84a-4fc9-87a5-5bb79a39fddd)\r\n\r\nThere is a \"terminology\" section at the bottom as a reference for the feature.\r\n\r\n> ### Terminology\r\n> **Federated credential**\r\n> A credential from an external system can be traded for a short-lived API key. When a federated credential is used, it is tracked in the database to avoid credential replay (reuse). An example federated credential would be an OpenID Connect (OIDC) token from a trusted external identity provider, such as Entra ID.\r\n>\r\n> **Federated credential policy**\r\n> A set of criteria to determine whether a given federated credential is acceptable to be used to operate on behalf of a specific user. This can be considered a trust policy of an external identity provided, expressed by a user of NuGet Gallery.\r\n>\r\n> **Policy user**\r\n> This is the user account that manages the federated credential policy. This will be the user that the generated short-lived API keys will be owned by.\r\n>\r\n> **Policy package owner**\r\n> This is the user or organization account that the API key will act on behalf of. This is different from the policy user because the package owner can be an organization. The policy package owner will become the owner scope on the short-lived API key created from the policy.\r\n> \r\n> **Policy type**\r\n> This is the type of federated credential that is accepted by the policy. The policy type determines how the policy criteria are interpreted. An example policy type would be an Entra ID service principal policy, which would accept Entra ID OIDC bearer tokens containing a specific tenant ID and object ID referring to a service principal.\r\n> \r\n> **Policy criteria**\r\n> These are criteria specific to a certain policy type and specified by the user. An example of some policy criteria would be a tenant ID and object ID pair for an Entra ID service principal."},{"Id":"44631706113","Type":"IssuesEvent","CreatedAt":"2024-12-10T05:37:29","Actor":"1RJB","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10302","RelatedDescription":"Opened issue \"init.ps1 is not recognized as the name of a cmdlet, function, script file, or operable program\" (#10302) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nError message appears when opening Package Manager Console. Also, unable to run Add-Migration Initial or Update-Database, as get an error due to init.ps1 not being executed.\r\n\r\nWhen open PMC, this error is displayed:\r\n```\r\n& : The term 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\init.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:45\r\n+ ... rgs+=$_}; & 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframework ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\user1\\...\\tools\\init.ps1:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nWhen try running `Add-Migration InitialCreate`, this error is shown:\r\n```\r\nAdd-Migration : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify \r\nthat the path is correct and try again.\r\nAt line:1 char:1\r\n+ Add-Migration InitialCreate\r\n+ ~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-Migration:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nThese errors are fixed after running this command, \r\n`Import-Module \"C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\EntityFrameworkCore.psd1\"`\r\nBut have to run this command everytime when open the project or create a new project.\n\n### Repro Steps\n\n1. Opened Visual Studio Community 2022 (17.12.3).\r\n2. Created a new project using the \"ASP.NET Core Web API\" project template.\r\n3. Leave everything as default on the \"Configure your new project\" page and click Next.\r\n4. Leave everything as default on the \"Additional information\" page and click Next.\r\n5. Using Nuget Package Manager, install Microsoft.EntityFrameworkCore (v8.0.11), Microsoft.EntityFrameworkCore.Tools (v8.0.11), MySql.EntityFrameworkCore (v8.0.8), Swashbuckle.AspNetCore (v7.1.0).\r\n6. Open the Package Manager Console, this error message in the console appears, \r\n```\r\n& : The term 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\init.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:45\r\n+ ... rgs+=$_}; & 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframework ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\user1\\...\\tools\\init.ps1:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n \r\n7. Try running the command `Add-Migration InitialCreate`, but this error message in the console appears,\r\n```\r\nAdd-Migration : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify \r\nthat the path is correct and try again.\r\nAt line:1 char:1\r\n+ Add-Migration InitialCreate\r\n+ ~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-Migration:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n \r\nThese errors are fixed after running this command, \r\n`Import-Module \"C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\EntityFrameworkCore.psd1\"`\r\nBut I have to run this command everytime when I open the project or create a new project.\n\n### Expected Behavior\n\nNew migration named InitialCreate should have been created \n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"44627560777","Type":"IssuesEvent","CreatedAt":"2024-12-10T01:48:13","Actor":"WeihanLi","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10299","RelatedDescription":"Closed issue \"[NuGet.org Bug]: deprecate package not reported when dotnet build/list package\" (#10299) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Describe the bug\r\n\r\nWhen I deprecate a nuget package version on nuget.org, `dotnet build`/`dotnet list packages --deprecated`/`dotnet list package --vulnerable` not reported this package version\r\n\r\n\r\n\r\n### Repro Steps\r\n\r\n1. deprecate a nuget package version on nuget.org\r\n2. reference the deprecated version in a project\r\n3. run `dotnet build`/`dotnet list packages --deprecated`/`dotnet list package --vulnerable` to see whether there's a warning\r\n\r\n### Expected Behavior\r\n\r\nIt should report warning since the package version is vulnerable\r\n\r\n### Screenshots\r\n\r\n\r\n![image](https://github.com/user-attachments/assets/f1cfcbeb-af9d-4053-bbac-3c6e44f94751)\r\n\r\n![image](https://github.com/user-attachments/assets/7d1a8f8d-cb88-4d3c-96f0-1866f37760b2)\r\n\r\n\r\n### Additional Context and logs\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET SDK:\r\n Version:           9.0.101\r\n Commit:            eedb237549\r\n Workload version:  9.0.100-manifests.3068a692\r\n MSBuild version:   17.12.12+1cce77968\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22631\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.101\\\r\n\r\n.NET workloads installed:\r\n [aspire]\r\n   Installation Source: VS 17.13.35507.96\r\n   Manifest Version:    8.2.2/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.2.2\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\nConfigured to use loose manifests when installing new manifests.\r\n\r\nHost:\r\n  Version:      9.0.0\r\n  Architecture: x64\r\n  Commit:       9d5a6a9aa4\r\n\r\n.NET SDKs installed:\r\n  6.0.428 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.206 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.307 [C:\\Program Files\\dotnet\\sdk]\r\n  9.0.100-rc.2.24474.11 [C:\\Program Files\\dotnet\\sdk]\r\n  9.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 9.0.0-rc.2.24474.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 9.0.0-rc.2.24473.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-rc.2.24474.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n```"},{"Id":"44624196403","Type":"IssuesEvent","CreatedAt":"2024-12-09T22:52:54","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10295","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Issue while trying to upload a package with NuGetGallery\" (#10295) at NuGet/NuGetGallery","RelatedBody":"### Impact\r\n\r\nI'm unable to use NuGet.org\r\n\r\n### Describe the bug\r\n\r\nI'm starting with a clean deploy of NuGetGallery.\r\n\r\nWhen a package is submitted in the \"Upload\" page and the upload process is canceled, the upload process remains stucked.\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Repro Steps\r\n\r\n1. Clone the repository\r\n2. Create an empty SQL Express database\r\n3. In the web.config, modify the connectionStrings to point to the database created at point 2\r\n4. Launch build.ps1 from powershell\r\n5. In VS2022 launch the command \"Update-Database -ConfigurationTypeName MigrationsConfiguration\" from the Package Manager Console to apply the migrations\r\n6. Create a new website in IIS\r\n7. Publish with Web Deploy from VS2022 to IIS\r\n8. With a browser, navigate to NugetGallery and register a new user\r\n9. Upload a .nupkg and press the \"Cancel\" button on the bottom of the page\r\n10. From now on I get the \"Cannot upload file because an upload is already in progress.\" when I try to upload another .nupkg (same version, different version o different dll doesn't matter, the error will be displayed regardless)\r\n\r\n### Expected Behavior\r\n\r\nWhen I press \"Cancel\" during the upload process I should be able to upload another package after navigating back to the \"Upload\" page\r\n\r\n### Screenshots\r\n\r\n\r\nThis is the \"Upload\" page when I navigate to it after having canceled an upload process:\r\n![image](https://github.com/user-attachments/assets/ddf7c1d8-361a-4a7e-aea5-f74a151d92e6)\r\n\r\nThis is the same page after browsing for a nuget package:\r\n![image](https://github.com/user-attachments/assets/d849fbed-ca02-48dc-bf5b-8dabc540435d)\r\n\r\n### Additional Context and logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"44666727948","Type":"IssuesEvent","CreatedAt":"2024-12-10T23:59:48","Actor":"Charles-Gagnon","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13995","RelatedDescription":"Opened issue \"[Wiki] Docs for msbuild equivalent property for --force-evaluate not correct\" (#13995) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nN/A\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nThe wiki says that there isn't an msbuild equivalent property for --force-evaluate, but per https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#lock-file-extensibility `RestoreForceEvaluate` does just that.\r\n\r\nhttps://github.com/NuGet/Home/wiki/Enable-repeatable-package-restore-using-lock-file#restore-command-line-options\n\n### Verbose Logs\n\n_No response_"},{"Id":"44666020596","Type":"IssuesEvent","CreatedAt":"2024-12-10T23:20:26","Actor":"1RJB","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13994","RelatedDescription":"Opened issue \"[NuGet.org Bug]: init.ps1 is not recognized as the name of a cmdlet, function, script file, or operable program\" (#13994) at NuGet/Home","RelatedBody":"### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Describe the bug\r\n\r\nError message appears when opening Package Manager Console. Also, unable to run `Add-Migration Initial Create` or `Update-Database`. These errors occur due to the init.ps1 file not being executed.\r\n\r\nWhen open PMC, this error is displayed:\r\n```\r\n& : The term 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\init.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:45\r\n+ ... rgs+=$_}; & 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframework ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\user1\\...\\tools\\init.ps1:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nWhen try running `Add-Migration InitialCreate`, this error is shown:\r\n```\r\nAdd-Migration : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify \r\nthat the path is correct and try again.\r\nAt line:1 char:1\r\n+ Add-Migration InitialCreate\r\n+ ~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-Migration:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n### Repro Steps\r\n\r\n1. Opened Visual Studio Community 2022 (17.12.3).\r\n2. Created a new project using the \"ASP.NET Core Web API\" project template.\r\n3. Leave everything as default on the \"Configure your new project\" page and click Next.\r\n4. Leave everything as default on the \"Additional information\" page and click Next.\r\n5. Using Nuget Package Manager, install Microsoft.EntityFrameworkCore (v8.0.11), Microsoft.EntityFrameworkCore.Tools (v8.0.11), MySql.EntityFrameworkCore (v8.0.8), Swashbuckle.AspNetCore (v7.1.0).\r\n6. Open the Package Manager Console, this error message in the console appears, \r\n```\r\n& : The term 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\init.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:45\r\n+ ... rgs+=$_}; & 'C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframework ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\user1\\...\\tools\\init.ps1:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n \r\n7. Try running the command `Add-Migration InitialCreate`, but this error message in the console appears,\r\n```\r\nAdd-Migration : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify \r\nthat the path is correct and try again.\r\nAt line:1 char:1\r\n+ Add-Migration InitialCreate\r\n+ ~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Add-Migration:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n### Temporary Solution\r\n\r\nThese errors are fixed after running this command, \r\n`Import-Module \"C:\\Users\\user1\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\8.0.11\\tools\\EntityFrameworkCore.psd1\"`\r\nBut have to run this command everytime when open the project or create a new project.\r\n\r\n### Additional Info\r\n\r\nOnly occurs on my laptop, the same project on a different PC doesn't have this issue.\r\nI have uninstalled Visual Studio Community 2022 and reinstalled it. I have uninstalled all Nuget Packages and reinstalled them. I have removed all Nuget Packages cache, uninstalled all the Nuget Packages and reinstalled them."},{"Id":"44665966956","Type":"IssuesEvent","CreatedAt":"2024-12-10T23:17:52","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13603","RelatedDescription":"Closed issue \"Create a documentation for HTTP errors introduced for insecure sources\" (#13603) at NuGet/Home","RelatedBody":"Create a documentation for : https://github.com/NuGet/Home/issues/13289\r\nDiscuss\r\n- The delta\r\n- What's breaking\r\n- How to go back to dotnet 8 level analysis"},{"Id":"44654743819","Type":"IssuesEvent","CreatedAt":"2024-12-10T16:52:33","Actor":"maridematte","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13993","RelatedDescription":"Opened issue \"`Content` project item in `.xproj` when using `CopyToOutputDirectory=Always` does not work in `PackageReference`-based dependencies\" (#13993) at NuGet/Home","RelatedBody":"---\r\n**Issue moved from dotnet/msbuild#11108**\r\n- Please respond to @guillermooo.\r\n\r\n---\r\n\r\n_From @guillermooo on Saturday, December 7, 2024 10:45:40 PM_\r\n\r\n### Issue Description\n\nThe `Content` MSBuild item type together with the `CopyToOutputDirectory` option set to `Always` works differently in Project to Project references (expected result) vs `PackageReference`s (unexpected result).\n\n### Steps to Reproduce\n\n## Pre-requisites\n\n```powershell\ngcm -ErrorAction Stop nuget.exe\n```\n\n## Set up workspace\n\n```powerhell\nmkdir CopyToOutputBug | cd\n\nmkdir .nugetfeed > $null\ndotnet nuget add source .nugetfeed -n TestFeed\n\ndotnet new classlib -o A\ndotnet new classlib -o B\n\ndotnet new sln\ndotnet sln add .\\A\\\ndotnet sln add .\\B\\\n\n'CHANGELOG PROJECT A' > .\\A\\CHANGELOG.txt\n\n.\\A\\A.csproj # Starts with Visual Studio\n```\n\nIn visual Studio, set `.\\A\\CHANGELOG.txt` to **Build Action** `Content`, **Copy to Output Directory** `Always`.  Save VS project.\n\n![Image](https://github.com/user-attachments/assets/8a4afbdc-1df4-4b6a-979d-c15c0f1e7ec9)\n\n```\ncat .\\A\\A.csproj\n```\n\nExpected output:\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <None Remove=\"CHANGELOG.txt\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <Content Include=\"CHANGELOG.txt\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </Content>\n  </ItemGroup>\n\n</Project>\n```\n\n## Scenario #1 - Project to Project reference does the expected\n\n```powerhsell\ndotnet add .\\B\\ reference .\\A\\\n\ndotnet build\n\ncat .\\B\\obj\\project.assets.json | sls -Context 10 CHANGELOG # No output, assumed good.\nls .\\B\\bin\\ -Recurse CHANGELOG.txt # Match expected\n```\n\n## Scenario #2 - PackageReference does not work in the same way, unexpected\n\n```powershell\ndotnet clean\n\ndotnet remove .\\B\\ reference .\\A\\A.csproj\n\ndotnet pack .\\A\\ -o .\nnuget init . .\\.nugetfeed\\\n\ndotnet add .\\B\\ package a\n\ndotnet build\n\ncat .\\B\\obj\\project.assets.json | sls -Context 10 CHANGELOG # Matches expected, wrong configuration\n```\n\nThe property `copyToOutput` is set to `false`, while `true` was expected based on `<CopyToOutputDirectory>Always</CopyToOutputDirectory>`.\n\n```powershell\nls .\\B\\bin\\ -Recurse CHANGELOG.txt # No matches, buggy\n```\n\n## Workaraound for Scenario #2\n\nBy editing `nuget.spec` manually in the generated package and adding `file copyToOutput=true` where required, the expected result can be achieved.\n\n\n### Expected Behavior\n\nThe `Content` files should always be copied to the output directory in the consuming project when `CopyToOutputDirectory` is set to a value other than `Never`.\n\n### Actual Behavior\n\nThe `Content` files using `CopyToOutputDirectory=Always` are not copied to the output directory in the consuming proejct when the dependency is declared as a `PackageReference`.\n\nIn this case, the corresponding `nuget.spec` `file` element lacks a `copyToOutput` property set to `true`, so the default `false` applies. It is expected that the `copyToOutput` property is set to `true` in this case.\n\nBy manually editing `nuget.spec` after package creation and adding `copyToOutput=true` for `file` elements, the desired behavior can be achieved using the otherwise exactly same package.\n\n## References\n\n* https://devblogs.microsoft.com/nuget/nuget-contentfiles-demystified/#other-options\n* https://learn.microsoft.com/en-us/nuget/reference/nuspec#using-the-contentfiles-element-for-content-files\n* https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2022#content\n\n### Analysis\n\n* Lacking documentation does not explain how to obtain the desired result in a NuGet package when using `Content` in a `.xproj` file to always output files to the consuming project's output directory.\n* Bug in `Content` when `CopyToOutputDirectory` is set to a value other than `Never` in `PackageReferece`-based dependency declarations.\n* Missing `CopyToOutput` boolean property in `Content` that mirrors `file>copyToOutput` property in `nuget.spec`. (Seems redundant when `CopyToOutputDirectory` exists.)\n\nHowever, given that the expected result can be obtained when using Project to Project references, this issue appears to be a bug.\n\n### Versions & Configurations\n\n## .NET info\n\n```powershell\ndotnet --info\n```\n\nOutput:\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.c6f19616\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22631\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100\\\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: x64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n**Note:** The same problem can be observed in earlier versions of .NET."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-12T03:30:21.3238508Z","RunDurationInMilliseconds":928}