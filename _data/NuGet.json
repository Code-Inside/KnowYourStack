{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12802670201","Type":"IssuesEvent","CreatedAt":"2020-07-02T22:01:22","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8083","RelatedDescription":"Opened issue \"[Search] Investigate how to use recent downloads from statistics pipeline\" (#8083) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12802665092","Type":"IssuesEvent","CreatedAt":"2020-07-02T22:00:32","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8082","RelatedDescription":"Opened issue \"[Search] Ramp up on NDCG\" (#8082) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12802596597","Type":"IssuesEvent","CreatedAt":"2020-07-02T21:48:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7987","RelatedDescription":"Closed issue \"GitHubIndexer is failing to find rate limit reset header (X-RateLimit-Reset)\" (#7987) at NuGet/NuGetGallery","RelatedBody":"## Describe the bug\r\n\r\nGitHubIndexer in DEV is failing with this error:\r\n```\r\nSystem.IO.InvalidDataException: X-RateLimit-Reset is required to compute the throttling time.\r\n```\r\n\r\n### To Reproduce\r\n\r\nRun the GitHubIndexer job.\r\n\r\n### Expected behavior\r\n\r\nWe should see the `X-Ratelimit-Reset` headers as the same as `X-RateLimit-Reset`.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/94054/81586075-e28d9480-9369-11ea-9902-d847c89b80b7.png)\r\n\r\n\r\n### Additional context\r\n\r\nPer HTTP spec, we should treat HTTP headers as case-insensitive."},{"Id":"12802573558","Type":"IssuesEvent","CreatedAt":"2020-07-02T21:44:57","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8055","RelatedDescription":"Closed issue \"Make TotalDownloadCount sortable in Search Service\" (#8055) at NuGet/NuGetGallery","RelatedBody":"Make the field sortable to be able to rebuild the search index to support future changes "},{"Id":"12802078870","Type":"IssuesEvent","CreatedAt":"2020-07-02T20:32:22","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8054","RelatedDescription":"Closed issue \"[2020-06-26] Deployment\" (#8054) at NuGet/NuGetGallery","RelatedBody":"### GitHub Indexer Job ### \r\nFix to make the GitHub Indexer Job handle http headers in a case-insensitive way.\r\n\r\nChanges:\r\n- GitHub API response in the SearchWrapper now handles headers in a case-insensitive way #7987 \r\n\r\nProgress:\r\n- [x] Merge RI: https://github.com/NuGet/NuGet.Jobs/pull/899\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD"},{"Id":"12801576173","Type":"IssuesEvent","CreatedAt":"2020-07-02T19:25:58","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8005","RelatedDescription":"Closed issue \"Document search jobs \" (#8005) at NuGet/NuGetGallery","RelatedBody":"`db2auxiliarysearch`, `auxiliary2azuresearch`, `catalog2azuresearch`"},{"Id":"12801393928","Type":"IssuesEvent","CreatedAt":"2020-07-02T19:02:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7911","RelatedDescription":"Closed issue \"[Package Renames] Reduce popularity transfer propagation times\" (#7911) at NuGet/NuGetGallery","RelatedBody":"Popularity transfers depend on the following things to propagate to search:\r\n\r\n* auxiliary2azuresearch job - This recalculates the packages' popularity scores and saves the popularity transfers to an auxiliary file. This runs once every 30 minutes.\r\n* Search auxiliary files reload - This reloads the popularity transfers information, which is what the Gallery uses to detect whether a popularity transfer has propagated to search. This runs once every hour.\r\n\r\nAs a result, it may take up to 1.5 hours for popularity transfers to fully take effect. We increase the job and reload cadences to speed up popularity transfers.\r\n\r\nThis issue must be done before we can add the end-to-end tests: https://github.com/NuGet/NuGetGallery/issues/7904"},{"Id":"12801392839","Type":"IssuesEvent","CreatedAt":"2020-07-02T19:02:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7910","RelatedDescription":"Closed issue \"[Package Renames] Add message for pending popularity transfers on \"Manage Package\" page\" (#7910) at NuGet/NuGetGallery","RelatedBody":"Popularity transfer may take over an hour to propagate to search. The customers should see an alert on the \"Manage Package\" page that the popularity transfers are pending.\r\n\r\nDepends on:\r\n* [NuGetGallery#7908](https://github.com/NuGet/NuGetGallery/issues/7908) - Add Package Renames form to \"Manage Package\" page\r\n* [NuGetGallery#7903](https://github.com/nuget/nugetgallery/issues/7903) - Expose popularity transfers in search\r\n\r\nThe work to \"speed up\" popularity transfers is tracked by: https://github.com/NuGet/NuGetGallery/issues/7911"},{"Id":"12801391980","Type":"IssuesEvent","CreatedAt":"2020-07-02T19:02:38","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7909","RelatedDescription":"Closed issue \"[Package Renames] Add Gallery API for end-to-end testing\" (#7909) at NuGet/NuGetGallery","RelatedBody":"The end-to-end tests should be able to use the Gallery API to rename a package."},{"Id":"12801391074","Type":"IssuesEvent","CreatedAt":"2020-07-02T19:02:32","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7908","RelatedDescription":"Closed issue \"[Package Renames] Add Package Renames form to \"Manage Package\" page\" (#7908) at NuGet/NuGetGallery","RelatedBody":"The \"Manage Package\" page should have a new form to rename packages:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/79151662-b0474200-7d7f-11ea-96c6-f97362afbbcf.png)\r\n\r\nThe following pieces are tracked in separate issues:\r\n* The message for pending popularity transfers. Tracked by: https://github.com/nuget/nugetgallery/issues/7910\r\n* Add the \"Learn more\" documentation link. Tracked by: https://github.com/NuGet/NuGetGallery/issues/7943"},{"Id":"12801390183","Type":"IssuesEvent","CreatedAt":"2020-07-02T19:02:26","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7904","RelatedDescription":"Closed issue \"[Package Renames] Add end-to-end test\" (#7904) at NuGet/NuGetGallery","RelatedBody":"Test that the package rename feature works as expected:\r\n\r\n1. Upload a package\r\n1. Rename it using the Gallery API\r\n1. Check that search API lists its renames\r\n\r\nThis depends on:\r\n* [NuGetGallery#7909](https://github.com/nuget/nugetgallery/issues/7909) - Add Gallery API for end-to-end testing\r\n* [NuGetGallery#7903](https://github.com/nuget/nugetgallery/issues/7903) - Expose popularity transfers in search\r\n* [NuGetGallery#7911](https://github.com/nuget/nugetgallery/issues/7911) - Reduce popularity transfer propagation times\r\n    * This is necessary as it takes up to 1.5 hours to propagate popularity transfers"},{"Id":"12801174074","Type":"IssuesEvent","CreatedAt":"2020-07-02T18:35:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7594","RelatedDescription":"Closed issue \"Surface PackageType query parameter in the NuGet.org search API\" (#7594) at NuGet/NuGetGallery","RelatedBody":"Users can specify a package type - https://docs.microsoft.com/en-us/nuget/create-packages/set-package-type\r\n\r\nIt should be possible to search for all DotnetCliTool packages on NuGet.org\r\n\r\n**Proposal**\r\n* Expose a new query parameter called  `packageType`\r\n* This will map to the `packageType` in the nuspec\r\n* For example, the following query would return all dotnet CLI tools on NuGet.org that match the search term\r\n   ```\r\n   https://azuresearch-usnc.nuget.org/query?q=codegenerator&packageType=DotnetCliTool\r\n   ```"},{"Id":"12791712386","Type":"PullRequestEvent","CreatedAt":"2020-07-01T23:29:17","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8079","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.06.30]RI of dev into master\" (#8079) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12791348754","Type":"IssuesEvent","CreatedAt":"2020-07-01T22:32:21","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8081","RelatedDescription":"Opened issue \"[Advanced search] Update engineering documentation\" (#8081) at NuGet/NuGetGallery","RelatedBody":"We need to update this documentation: https://github.com/NuGet/NuGet.Services.Metadata/blob/master/src/NuGet.Services.SearchService/README.md\r\n\r\nWe should update V2 API reference to include the new `sortBy` values and `packageType` filter."},{"Id":"12788579433","Type":"PullRequestEvent","CreatedAt":"2020-07-01T17:05:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8080","RelatedDescription":"Merged pull request \"Remove non-existent endpoints from robots.txt\" (#8080) at NuGet/NuGetGallery","RelatedBody":"The `/packages/*/*/Contents` route does not exist\r\nThanks for the heads up @xavierdecoster"},{"Id":"12788096149","Type":"PullRequestEvent","CreatedAt":"2020-07-01T16:14:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8080","RelatedDescription":"Opened pull request \"Remove non-existent endpoints from robots.txt\" (#8080) at NuGet/NuGetGallery","RelatedBody":"The `/packages/*/*/Contents` route does not exist\r\nThanks for the heads up @xavierdecoster"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12804466255","Type":"IssuesEvent","CreatedAt":"2020-07-03T04:40:14","Actor":"captmomo","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9743","RelatedDescription":"Opened issue \"NuGet appending extra '.' to feedurl\" (#9743) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nusing  dotnet test, when the project builds and restores packages, Nuget adds an extra '.' to the feed url:\r\n{\"count\":1,\"value\":{\"Message\":\"No HTTP resource was found that matches the request URI 'https://pkgs.dev.azure.com/_packaging/MicroserviceAPIHelper/nuget/v3/index.json.'.\"}}\r\n\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\nYes, I'm using the same YAML for different projects. Only this one fails.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"12803928109","Type":"IssuesEvent","CreatedAt":"2020-07-03T02:37:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/5184","RelatedDescription":"Reopened issue \"[Consider] Keep track of a source which contains a package\" (#5184) at NuGet/Home","RelatedBody":"We should allow users to correlate a package with a source. This will prevent the initial discovery phase and the corresponding http calls to all the sources till the package is pulled down into the cache.\r\n\r\nPossible solutions (In the order of preference)- \r\n\r\n1. Allow users to correlate a source with packages in `NuGet.Config` files.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n\r\n  <packageDependencies>\r\n    <nuget.org>\r\n      <package id=\"PackageThatIsOnlyOnNuGet.Org\"/>\r\n    </nuget.org>\r\n  </packageDependencies>\r\n  \r\n</configuration>\r\n\r\n```\r\n2. Create a new restore graph file.\r\n3. Write the information into the `NuGet.Cache` file that will be added with restore no-op work.\r\n2. Write down this info into the assets file and make restore use that. "},{"Id":"12803924786","Type":"IssuesEvent","CreatedAt":"2020-07-03T02:37:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5184","RelatedDescription":"Closed issue \"[Consider] Keep track of a source which contains a package\" (#5184) at NuGet/Home","RelatedBody":"We should allow users to correlate a package with a source. This will prevent the initial discovery phase and the corresponding http calls to all the sources till the package is pulled down into the cache.\r\n\r\nPossible solutions (In the order of preference)- \r\n\r\n1. Allow users to correlate a source with packages in `NuGet.Config` files.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n\r\n  <packageDependencies>\r\n    <nuget.org>\r\n      <package id=\"PackageThatIsOnlyOnNuGet.Org\"/>\r\n    </nuget.org>\r\n  </packageDependencies>\r\n  \r\n</configuration>\r\n\r\n```\r\n2. Create a new restore graph file.\r\n3. Write the information into the `NuGet.Cache` file that will be added with restore no-op work.\r\n2. Write down this info into the assets file and make restore use that. "},{"Id":"12803911700","Type":"IssuesEvent","CreatedAt":"2020-07-03T02:34:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9675","RelatedDescription":"Closed issue \"Smart refreshing of the consolidate tab\" (#9675) at NuGet/Home","RelatedBody":""},{"Id":"12803541845","Type":"IssuesEvent","CreatedAt":"2020-07-03T01:09:59","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5660","RelatedDescription":"Closed issue \"VSSolutionManager blocks thread pool threads\" (#5660) at NuGet/Home","RelatedBody":"Using Visual Studio 2017 (15.3 Preview 6) to load Roslyn.sln (time from process start to when the initial project load is done and the Solution Explorer shows up).\r\n\r\n:memo: If any of these are not obvious and/or previously known, let me know and I can provide more information to facilitate a resolution. :smile:\r\n\r\n### `get_IsSolutionOpen()`: 4.2 seconds with this trace\r\n\r\n```\r\nnuget.packagemanagement.visualstudio!VSSolutionManager.get_IsSolutionOpen\r\nnuget.packagemanagement.visualstudio!VSSettings.ResetSolutionSettings\r\nnuget.packagemanagement.visualstudio!VSSettings.GetValue\r\nnuget.configuration!SettingsUtility.GetRepositoryPath\r\nnuget.packagemanagement!PackagesFolderPathUtility.GetPackagesFolderPath\r\nnuget.packagemanagement!PackagesFolderPathUtility.GetPackagesFolderPath\r\nnuget.packagemanagement!NuGet.PackageManagement.NuGetPackageManager..ctor(class NuGet.Protocol.Core.Types.ISourceRepositoryProvider,class NuGet.Configuration.ISettings,class NuGet.PackageManagement.ISolutionManager,class NuGet.PackageManagement.IDeleteOnRestartManager,bool)\r\nnuget.visualstudio.implementation!VsPackageInstallerServices.InitializePackageManagerAndPackageFolderPath\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0+<<GetInstalledPackages>b__0>d.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.__Canon].Start(!!0&)\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0.<GetInstalledPackages>b__0()\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.ExecuteJob[System.__Canon](System.Func`1, Microsoft.VisualStudio.Threading.JoinableTask)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.RunAsync[System.__Canon](System.Func`1>, Boolean, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[System.__Canon](System.Func`1>, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nnuget.visualstudio.implementation!VsPackageInstallerServices.GetInstalledPackages\r\nmicrosoft.visualstudio.testwindow.core!UnitTestExtensionDiscoverer.GetAllEnabledExtensions\r\nmicrosoft.visualstudio.testwindow.core!TestPlatformProvider.UpdateTestPlatform\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.OpenOperation+<ExecuteInternal>d__8.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.Boolean].Start(!!0&)\r\nmicrosoft.visualstudio.testwindow.core!OpenOperation.ExecuteInternal\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.Operation.<ExecuteWithEvents>b__38_0()\r\n```\r\n\r\n### `get_SolutionDirectory()`: 6.7 seconds with this stack trace\r\n\r\n:memo: 2.1 seconds of this are in `get_IsSolutionOpen()`, time which is *not* included in the above trace.\r\n\r\n```\r\nnuget.packagemanagement.visualstudio!VSSolutionManager.get_SolutionDirectory\r\nnuget.packagemanagement!PackagesFolderPathUtility.GetPackagesFolderPath\r\nnuget.packagemanagement!NuGet.PackageManagement.NuGetPackageManager..ctor(class NuGet.Protocol.Core.Types.ISourceRepositoryProvider,class NuGet.Configuration.ISettings,class NuGet.PackageManagement.ISolutionManager,class NuGet.PackageManagement.IDeleteOnRestartManager,bool)\r\nnuget.visualstudio.implementation!VsPackageInstallerServices.InitializePackageManagerAndPackageFolderPath\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0+<<GetInstalledPackages>b__0>d.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.__Canon].Start(!!0&)\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0.<GetInstalledPackages>b__0()\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.ExecuteJob[System.__Canon](System.Func`1, Microsoft.VisualStudio.Threading.JoinableTask)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.RunAsync[System.__Canon](System.Func`1>, Boolean, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[System.__Canon](System.Func`1>, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nnuget.visualstudio.implementation!VsPackageInstallerServices.GetInstalledPackages\r\nmicrosoft.visualstudio.testwindow.core!UnitTestExtensionDiscoverer.GetAllEnabledExtensions\r\nmicrosoft.visualstudio.testwindow.core!TestPlatformProvider.UpdateTestPlatform\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.OpenOperation+<ExecuteInternal>d__8.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.Boolean].Start(!!0&)\r\nmicrosoft.visualstudio.testwindow.core!OpenOperation.ExecuteInternal\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.Operation.<ExecuteWithEvents>b__38_0()\r\n```\r\n\r\n### `GetNuGetProjects()`: 0.8 seconds with this trace\r\n\r\n```\r\nnuget.packagemanagement.visualstudio!VSSolutionManager.GetNuGetProjects\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0+<<GetInstalledPackages>b__0>d.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.__Canon].Start(!!0&)\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0.<GetInstalledPackages>b__0()\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.ExecuteJob[System.__Canon](System.Func`1, Microsoft.VisualStudio.Threading.JoinableTask)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.RunAsync[System.__Canon](System.Func`1>, Boolean, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[System.__Canon](System.Func`1>, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nnuget.visualstudio.implementation!VsPackageInstallerServices.GetInstalledPackages\r\nmicrosoft.visualstudio.testwindow.core!UnitTestExtensionDiscoverer.GetAllEnabledExtensions\r\nmicrosoft.visualstudio.testwindow.core!TestPlatformProvider.UpdateTestPlatform\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.OpenOperation+<ExecuteInternal>d__8.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.Boolean].Start(!!0&)\r\nmicrosoft.visualstudio.testwindow.core!OpenOperation.ExecuteInternal\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.Operation.<ExecuteWithEvents>b__38_0()\r\n```\r\n\r\n### `get_SolutionDirectory()`: 0.3 seconds with this trace\r\n\r\n```\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0+<<GetInstalledPackages>b__0>d.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.__Canon].Start(!!0&)\r\nnuget.visualstudio.implementation!NuGet.VisualStudio.VsPackageInstallerServices+<>c__DisplayClass7_0.<GetInstalledPackages>b__0()\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.ExecuteJob[System.__Canon](System.Func`1, Microsoft.VisualStudio.Threading.JoinableTask)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.RunAsync[System.__Canon](System.Func`1>, Boolean, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nmicrosoft.visualstudio.threading.ni!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[System.__Canon](System.Func`1>, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions)\r\nnuget.visualstudio.implementation!VsPackageInstallerServices.GetInstalledPackages\r\nmicrosoft.visualstudio.testwindow.core!UnitTestExtensionDiscoverer.GetAllEnabledExtensions\r\nmicrosoft.visualstudio.testwindow.core!TestPlatformProvider.UpdateTestPlatform\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.OpenOperation+<ExecuteInternal>d__8.MoveNext()\r\nmscorlib!System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[System.Boolean].Start(!!0&)\r\nmicrosoft.visualstudio.testwindow.core!OpenOperation.ExecuteInternal\r\nmicrosoft.visualstudio.testwindow.core!Microsoft.VisualStudio.TestWindow.Controller.Operation.<ExecuteWithEvents>b__38_0()\r\n```"},{"Id":"12803460086","Type":"IssuesEvent","CreatedAt":"2020-07-03T00:50:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9577","RelatedDescription":"Closed issue \"IVsPackageInstallerServices should be async\" (#9577) at NuGet/Home","RelatedBody":"Related:\r\n\r\nhttps://github.com/NuGet/Home/issues/8872\r\n\r\n[1116789](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1116789)\r\n[1040578](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1040578)\r\n[1040753](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1040753)\r\n\r\nWe need to make all our services async + Codespaces capable. \r\n\r\nWe should also look into reliability issues and neatly document all expected scenarios. \r\n\r\nSee: https://github.com/dotnet/roslyn/issues/44335"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-07-05T05:30:39.9411238Z","RunDurationInMilliseconds":1793}