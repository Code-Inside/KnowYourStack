{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12545633231","Type":"PullRequestEvent","CreatedAt":"2020-06-05T19:16:59","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8021","RelatedDescription":"Merged pull request \"Fix unit test failed due to localized culture and line ending (#7779)\" (#8021) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes:\r\n\r\n* Change to Assert.StartWith instead of Assert.Equal, avoid checking localized 'parameter'  \r\n* Add new class called 'UseInvariantCultureAttribute', change thread UI culture before test, and reset \r\n   after test\r\n* Addressed those unit test:  1.NuGetGallery.Packaging.PackageMetadataFacts.ThrowsForEmptyAndNonEmptyDuplicatesWhenDuplicateMetadataElementsDetectedAndParsingIsNotStrict\r\n2. NuGetGallery.Packaging.PackageMetadataFacts.ThrowsWhenInvalidMinClientVersion\r\n3.NuGetGallery.PackagesControllerFacts+TheUploadFileActionForPostRequests.WillRejectBrokenZipFiles  NuGetGallery.PackagesControllerFacts+TheUploadFileActionForPostRequests.WillShowViewWithErrorsIfPackageIdIsBreaksParsing\r\n4.NuGetGallery.Authentication.AuthenticationServiceFacts+TheAuthenticateMethod.GivenPasswordCredential_ItThrowsArgumentException\r\n5.NuGetGallery.Diagnostics.DiagnosticsServiceFacts+TheGetSourceMethod.RequiresNonNullOrEmptyName\r\n6.NuGetGallery.Services.ContentServiceFacts+TheGetContentItemMethod.GivenANullOrEmptyName_ItShouldThrow\r\n \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"12536676562","Type":"PullRequestEvent","CreatedAt":"2020-06-05T00:52:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8024","RelatedDescription":"Merged pull request \"[Hotfix] Update banner message\" (#8024) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12536496517","Type":"PullRequestEvent","CreatedAt":"2020-06-05T00:16:06","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8024","RelatedDescription":"Opened pull request \"[Hotfix] Update banner message\" (#8024) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12525077869","Type":"PullRequestEvent","CreatedAt":"2020-06-04T01:32:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8023","RelatedDescription":"Merged pull request \"[Hotfix] Black Lives Matter\" (#8023) at NuGet/NuGetGallery","RelatedBody":"Full width:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/83702238-f4590500-a5c0-11ea-9b1d-c3cdecbe91a1.png)\r\n\r\nSmall window:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/83702289-24080d00-a5c1-11ea-9abc-36a7b7b42eb2.png)\r\n"},{"Id":"12524792457","Type":"PullRequestEvent","CreatedAt":"2020-06-04T00:38:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8023","RelatedDescription":"Opened pull request \"Black Lives Matter\" (#8023) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/83702238-f4590500-a5c0-11ea-9b1d-c3cdecbe91a1.png)\r\n"},{"Id":"12519977385","Type":"IssuesEvent","CreatedAt":"2020-06-03T15:11:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8022","RelatedDescription":"Opened issue \"Detect disconnected client when package upload fails and return 4XX\" (#8022) at NuGet/NuGetGallery","RelatedBody":"### Bug description\r\n\r\nWhen the client disconnects during package push (perhaps Ctrl + C on nuget.exe) we get an exception and return 500. Even though the client has disconnected, this gets recorded as a 500, affecting SLO/success metrics.\r\n\r\n### Reproduction steps\r\n\r\n1. Run latest gallery locally.\r\n1. Push a very large package to your local gallery.\r\n1. While gallery is reading the upload, terminate the upload on the client side.\r\n\r\n### Expected behavior\r\n\r\nA 400-level status code should be recorded since the client caused the error.\r\n\r\n### Actual behavior\r\n\r\nA `PackagePushFailure` metric is recorded and HTTP 500 is returned.\r\n\r\nFor recent instances in PROD (500 such requests in past 7 days) look for problem ID: `System.Runtime.InteropServices.COMException at NuGetGallery.ApiController.ReadPackageFromRequest`.\r\n\r\nThis 500 shows up in our failure reporting even though it was not a failure witnessed by the user and is not caused by our app or our dependencies.\r\n\r\n### Additional context\r\n\r\nIt seems like we can detect this case with `Response.IsClientConnected`.\r\nhttps://stackoverflow.com/a/12386676"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12548387507","Type":"IssuesEvent","CreatedAt":"2020-06-06T02:02:06","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9654","RelatedDescription":"Opened issue \"Reduce XAML Code Behind in favor of ViewModels & Business objects for testability\" (#9654) at NuGet/Home","RelatedBody":"We have a lot of logic in our `*.xaml.cs` code behind.\r\nThis is generally a bad practice, and leads to difficulty in testing even simple things.\r\n\r\nFor example, to attempt to test whether the PMUI Search logic throws an `OperationCanceledException`, I had to start down the winding road, shown in: https://github.com/NuGet/NuGet.Client/commit/0c6a20b8aff7b31ba3ec20d35fd18bc21c6de716\r\n\r\nI propose we begin migrating logic away from XAML so we can get better quality testing, without having to jump through hoops. This is a long-term improvement."},{"Id":"12546638332","Type":"IssuesEvent","CreatedAt":"2020-06-05T21:06:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9513","RelatedDescription":"Closed issue \"Visual Studio partial restore for PR projects (noop++) prototype\" (#9513) at NuGet/Home","RelatedBody":""},{"Id":"12546617393","Type":"IssuesEvent","CreatedAt":"2020-06-05T21:04:02","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9653","RelatedDescription":"Opened issue \"Save the order of Nuget-Packag-Feeds\" (#9653) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1062565/save-the-order-of-nuget-packag-feeds.html)._\n\n---\nYou can add multiple Nuget-Feed-Sources with VisualStudio which is then save to \"%AppData%\\NuGet\\NuGet.Config\".\nIn VisualStudio you can change the order of that sources but the order is not saved into the config. After a VS restart the order has not changed.\nWorkaround: Editing the file manually.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/3/2020, 01:57 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"12546614143","Type":"IssuesEvent","CreatedAt":"2020-06-05T21:03:40","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9652","RelatedDescription":"Opened issue \"nuget.exe, install-package, install-module: newtonsoft being used by another process\" (#9652) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1064525/nugetexe-install-package-install-module-newtonsoft.html)._\n\n---\n[regression] [worked-in:16.6.0]\r\nThe process cannot access the file Newtonsoft.Json.dll because it is being used by another process.\n\n* VS2019 16.6.1 - Manage Nuget Packages (Install button), Package Manager Console (Install-Package)\n* Powershell 7.1 command line: Install-Module\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/3/2020, 11:42 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"12546582555","Type":"IssuesEvent","CreatedAt":"2020-06-05T21:00:02","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9240","RelatedDescription":"Closed issue \"net5.0-<TargetPlatformIdentifier><TargetPlatformVersion> support\" (#9240) at NuGet/Home","RelatedBody":"A continuation of the work started here: https://github.com/nuget/home/issues/9089\r\nSpec is still under some discussion. (eta for spec draft is 3/6/2020)\r\n"},{"Id":"12546490924","Type":"IssuesEvent","CreatedAt":"2020-06-05T20:49:08","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9651","RelatedDescription":"Opened issue \"Update Visual Studio dependency file versions\" (#9651) at NuGet/Home","RelatedBody":"Need to update our Visual Studio dependencies:\r\nVSFrameworkVersion\r\nServiceHub.Framework\r\nTelemetry\r\nUtilities"},{"Id":"12545900231","Type":"IssuesEvent","CreatedAt":"2020-06-05T19:45:22","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9650","RelatedDescription":"Opened issue \"net5.0 VsFrameworkCompatibility API\" (#9650) at NuGet/Home","RelatedBody":"Because of the addition of a platform component to .NET tfms since 5.0 (https://github.com/NuGet/NuGet.Client/pull/3339), any APIs relying on `FrameworkName` have become mostly incompatible with net5.0.\r\n\r\nIn particular, the VsFrameworkCompatibility APIs rely on these objects. We need to come up with guidance for customers who can't use the extensibility framework APIs to work around this.\r\n\r\nWe also need to figure out the impact of this change on folks who might be using this."},{"Id":"12543211377","Type":"IssuesEvent","CreatedAt":"2020-06-05T15:11:10","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9649","RelatedDescription":"Opened issue \"determine requirements for uicontexts\" (#9649) at NuGet/Home","RelatedBody":"if you look for vsconstants.uicontext - you'll find we use 6-7 different uicontexts in our vsix code.\r\n\r\nplease determine which scenarios don't currently work for our uses in the N.VS.OE.C.dll scenarios.\r\nand work with VS IDE team to ensure our needs are met.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-08T05:30:40.6158901Z","RunDurationInMilliseconds":2511}