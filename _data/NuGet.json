{"Data":{"Blog":{"FeedItems":[{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14930913533","Type":"PullRequestEvent","CreatedAt":"2021-01-25T04:22:28","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8363","RelatedDescription":"Closed pull request \"Show vulnerability alerts on manage packages page\" (#8363) at NuGet/NuGetGallery","RelatedBody":"Note: this PR must be merged first: https://github.com/NuGet/NuGetGallery/pull/8362\r\n\r\nAddresses remainder of https://github.com/NuGet/NuGetGallery/issues/8361\r\n\r\nThis change decorates all packages, of which any version is vulnerable, in the manage packages view with a bang and tooltip indicating to go to the details page. This applies to listed and unlisted groups of packages.\r\n\r\n![image](https://user-images.githubusercontent.com/14225979/102944030-59e0f480-4505-11eb-8798-915d27807607.png)"},{"Id":"14930912768","Type":"PullRequestEvent","CreatedAt":"2021-01-25T04:22:19","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8362","RelatedDescription":"Closed pull request \"Expand view models for vulnerabilities in manage packages page\" (#8362) at NuGet/NuGetGallery","RelatedBody":"Addresses view model portion of https://github.com/NuGet/NuGetGallery/issues/8361 (I split the PR as best as is practical because it's large-ish). Full description of change to customer experience in PR (view changes) on this issue."},{"Id":"14930841980","Type":"IssuesEvent","CreatedAt":"2021-01-25T04:09:16","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8391","RelatedDescription":"Opened issue \"Update PackageRegistrations.HasVulnerableVersion when package version listed/unlisted\" (#8391) at NuGet/NuGetGallery","RelatedBody":"Supports https://github.com/NuGet/NuGetGallery/issues/8361"},{"Id":"14930834686","Type":"IssuesEvent","CreatedAt":"2021-01-25T04:07:53","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8390","RelatedDescription":"Opened issue \"Update PackageRegistrations.HasVulnerableVersion on package version delete\" (#8390) at NuGet/NuGetGallery","RelatedBody":"Supports https://github.com/NuGet/NuGetGallery/issues/8361"},{"Id":"14930818319","Type":"IssuesEvent","CreatedAt":"2021-01-25T04:04:56","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8389","RelatedDescription":"Opened issue \"Set PackageRegistrations.HasVulnerableVersion on GitHub data ingress\" (#8389) at NuGet/NuGetGallery","RelatedBody":"Supports https://github.com/NuGet/NuGetGallery/issues/8361"},{"Id":"14930802102","Type":"IssuesEvent","CreatedAt":"2021-01-25T04:02:12","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8388","RelatedDescription":"Opened issue \"Add PackageRegistrations.HasVulbnerableVersion\" (#8388) at NuGet/NuGetGallery","RelatedBody":"Add field to PackageRegistrations, type bit, name HasVulnerableVersion. Migrate db.\r\n\r\nSupports this UX change: https://github.com/NuGet/NuGetGallery/issues/8361"},{"Id":"14930224099","Type":"IssuesEvent","CreatedAt":"2021-01-25T02:17:52","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8387","RelatedDescription":"Opened issue \"Add TFM list to package details page in Gallery\" (#8387) at NuGet/NuGetGallery","RelatedBody":"Include a list of TFMs in package details page, supported by updated TFM logic"},{"Id":"14930210559","Type":"IssuesEvent","CreatedAt":"2021-01-25T02:15:21","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8386","RelatedDescription":"Opened issue \"Replace TM logic in Gallery package service\" (#8386) at NuGet/NuGetGallery","RelatedBody":"Replace the logic that populates this field with a nupkg lib folders-based approach. This will give us a mostly-accurate quick win on displaying TFMs supported by a package."},{"Id":"14919841959","Type":"PullRequestEvent","CreatedAt":"2021-01-23T01:38:27","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8380","RelatedDescription":"Merged pull request \"[Stats]Enable Alternate storage for downloads.v1.json\" (#8380) at NuGet/NuGetGallery","RelatedBody":"Enables (behind a feature flag) support for allowing an alternate location for downloads.v1.json source."},{"Id":"14918291101","Type":"IssuesEvent","CreatedAt":"2021-01-22T21:24:36","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8366","RelatedDescription":"Closed issue \"Nuget.Server Routes are not working with IIS Express in 2021\" (#8366) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nRoutes are not working\r\n\r\n  - https://localhost:44380/nuget/Packages\r\n  - https://localhost:44380/nuget/clear-cache\r\n\r\n=> HTTP Error 404.0 - Not Found\r\nThe site seems to be looking for static files instead of being redirected to the corresponding conrollers.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n  - Follow the procedure [here](https://docs.microsoft.com/fr-fr/nuget/hosting-packages/nuget-server).\r\n  - Run the site and try to browse your packages or clear the cache.\r\n\r\n### Expected behavior\r\nI should be able to see my packages.\r\n\r\n### Screenshots\r\n"},{"Id":"14918254570","Type":"IssuesEvent","CreatedAt":"2021-01-22T21:20:23","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8378","RelatedDescription":"Closed issue \"Getting messages as package id is reserved contact the owner when uploading new packages\" (#8378) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\n I am trying to upload a new package which starts with IBM.Data.Db2.NET5 but keep getting messages something like \r\n\" This package ID has been reserved. Please request access to upload to this reserved namespace from the owner of the reserved prefix, or re-upload the package with a different ID.\"\r\nWe are the owners of these namespace (IBM.Data.DB2  series) and its not sure who could reserve these names and how to get them back. \r\nThe other variants of the above name also did not succeed.\r\n\r\nThanks and regards\r\nVishwa\r\n"},{"Id":"14907321730","Type":"PullRequestEvent","CreatedAt":"2021-01-22T02:51:19","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8385","RelatedDescription":"Merged pull request \"Add icons to project to ensure bundling\" (#8385) at NuGet/NuGetGallery","RelatedBody":"Despite the name of this branch, this change removes the target=\"_blank\" attribute, because it's ignored by chromium browsers, and we don't do it in other anchors for 3rd party site.\r\n\r\nBut the important thing is that this change fixes a bug where the icons for the FuGet links aren't bundled--they weren't appearing on the deployed webapp. This completes this work: https://github.com/NuGet/NuGetGallery/issues/7850"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14928776687","Type":"IssuesEvent","CreatedAt":"2021-01-24T20:33:51","Actor":"gh-andre","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10479","RelatedDescription":"Opened issue \"NuGet is missing package revision management\" (#10479) at NuGet/Home","RelatedBody":"This is a feature request, so no steps, logs, etc.\r\n\r\nMost NuGet packages are created not by the software maintainers, but rather by people consuming those packages or making them available for consumption for other projects. This creates a significant problem with the non-existing package versioning in NuGet, as opposed to the packaged software versioning. NuGet only supports the latter, making it impossible to cleanly repackage applications.\r\n\r\nIf you look at other packaging formats, such as [RPM](http://ftp.rpm.org/max-rpm/ch-rpm-file-format.html), [RPM/RedHat](https://docs.fedoraproject.org/en-US/packaging-guidelines/Versioning/), [Debian](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-version), you will see that there is an upstream version, which is the software version, as assigned by the software maintainers, and there's a package version, which is denoted as _release_ in RPM or _debian_revision_ for Debian, which is assigned by package maintainers. This additional revision allows package maintainers to release new packages with the same software version, which is missing from NuGet.\r\n\r\nI've been packaging with NuGet 3rd-party libraries for while and more often than not a package needs to be updated throughout the lifetime of the consuming project, but the change is often in how *the same software version* is integrated into the project, not in the enclosed software version. For example, I may need to change user macros in a package or may move files in packaged directories or even rebuild *the same version* of the packaged software with new compile flags or even a patch, if the upstream maintainer didn't provide one.\r\n\r\nSoftware version does not change in any of the steps described above, package does, but the only way today to handle this is to use the prerelease version, which produces a nasty warning that it's a pre-release version in the package registry, even if it has nothing to do with the package software pre-release.\r\n\r\nIf NuGet supported package versions, this problem would be nicely solved and people could update packages in a predictable way without resorting to pre-release hacks, etc. \r\n\r\nFor example, using loose Fedora/Debian notation (I'm actually not suggesting the syntax, only the concept - actual syntax will take some thinking) and the last dash denotes the version of the package, then my package file with the version `18.1.25` of the enclosed library might look like this:\r\n\r\n* `MyOrg.BerkeleyDB.DLL.vs2017.CRT.Dynamic.18.1.25-5.nupkg`\r\n\r\nIf the upstream maintainer wanted to make a pre-release, they could continue using the Semantic Versioning, like the following, because the last dash would always mean the package revision:\r\n\r\n* `MyOrg.BerkeleyDB.DLL.vs2017.CRT.Dynamic.18.1.25-beta.2-5.nupkg`\r\n\r\nYou can probably run a quick query against the package repository to see how many _owners_ match _authors_, and any difference in those will show you how many people are using hacky ways to package software. \r\n\r\nI hope this makes sense."},{"Id":"14927290597","Type":"IssuesEvent","CreatedAt":"2021-01-24T14:56:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10461","RelatedDescription":"Closed issue \"When restoring at normal verbosity, log which source a package is being restored from\" (#10461) at NuGet/Home","RelatedBody":"Currently, when restoring at normal verbosity, I get an error message when a package is being installed, but it doesn't say from where. It might be implied if it's downloaded from an HTTP source, but if it's found on a local source, there's nothing in the log to explain where it came from.\r\n\r\nCurrently:\r\n\r\n```text\r\nRestoring packages for C:\\src\\NuGet.Client\\build\\bootstrap.proj...\r\nInstalling Newtonsoft.Json 9.0.1\r\nCommitting restore...\r\nWriting assets file to disk. Path: C:\\src\\NuGet.Client\\packages\\obj\\project.assets.json\r\nRestored C:\\src\\NuGet.Client\\build\\bootstrap.proj (in 679 ms).\r\n```\r\n\r\nDesired: the \"installing\" line should read:\r\n\r\n```text\r\nInstalling Newtonsoft.Json 9.0.1 from C:\\src\\nupkgs\\.\r\n```\r\n\r\n\r\nNote, https://github.com/NuGet/NuGet.Client/pull/3700 https://github.com/NuGet/Home/issues/3055 added the source to diagnostic verbosity, but this request is for \"normal\" verbosity."},{"Id":"14923993733","Type":"IssuesEvent","CreatedAt":"2021-01-23T21:31:31","Actor":"huoyaoyuan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10418","RelatedDescription":"Closed issue \"Unexpected build assets picked for net5.0-windows\" (#10418) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used: Visual Studio\r\n\r\nVS version (if appropriate): 16.8.3/16.9P2\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): 19042\r\n\r\nWorked before? N/A\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nContext: https://github.com/dotnet/reactive/issues/1461\r\n\r\nPackage: System.Reactive 5.0.0\r\n\r\nThe package structure:\r\n```\r\nlib\\\r\n- (Other frameworks)\r\n- netcoreapp3.1\\...\r\n- net5.0\\...\r\n- net5.0-windows10.0.19041\\...\r\nbuild\\\r\n- netcoreapp3.1\\...\r\n- net5.0\\...\r\n\r\n(no build\\net5.0-windows10.0.19041 present)\r\n```\r\n\r\nWhen installing into `net5.0-windows10.0.18362`, `lib\\net5.0` and `build\\net5.0` are selected, as expected. But when installing into `net5.0-windows10.0.19041`, `lib\\net5.0-windows10.0.19041` is selected with `build\\netcoreapp3.1`, results in incompatible behavior. `lib\\net5.0-windows10.0.19041` is expected to work with `build\\net5.0`.\r\n\r\nPlease confirm if this is a bug, or a counter-intuitive behavior.\r\n\r\nNote: the VS project system UI doesn't show the targets from `build\\netcoreapp3.1`, but displays a warning icon.\r\nWinUI project can only be built with VS build, not `dotnet build`."},{"Id":"14919925344","Type":"IssuesEvent","CreatedAt":"2021-01-23T02:00:52","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10478","RelatedDescription":"Opened issue \"Implementation - Add new telemetries to track events related to PMC and Powershell usage follow up.\" (#10478) at NuGet/Home","RelatedBody":"For [issue#10142](https://github.com/NuGet/Home/issues/10142) I received PR reviews right after I merged my [PR#3755](https://github.com/NuGet/NuGet.Client/pull/3755).\nAddress 3 comments left by @nkolev92 \n"},{"Id":"14919763018","Type":"IssuesEvent","CreatedAt":"2021-01-23T01:18:41","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10142","RelatedDescription":"Closed issue \"Implementation - Add new telemetries to track events related to PMC and Powershell usage.\" (#10142) at NuGet/Home","RelatedBody":"Child of https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1167790.\r\n\r\nRecently decided not to act on decrease PMC usage issue. We suspect it's highly unlikely problem to happen. \r\nThis one is for actual implementation for adding telemetry to Nuget.Client according to spec from [Issue#10069](https://github.com/NuGet/Home/issues/10069)."},{"Id":"14919505910","Type":"IssuesEvent","CreatedAt":"2021-01-23T00:22:00","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10412","RelatedDescription":"Closed issue \"UninstallPackageFromUI is flaky\" (#10412) at NuGet/Home","RelatedBody":"NuGetUITestCase.UninstallPackageFromUI is extremely flaky. \r\n\r\nIt fails because of loading the PM UI control. Instictively this sounds like something that *should not* be specific to this test, but it's always the same one, despite the fact that many tests do the same thing."},{"Id":"14917331941","Type":"IssuesEvent","CreatedAt":"2021-01-22T19:41:16","Actor":"omajid","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10477","RelatedDescription":"Opened issue \"NuGet.Client code calls string.Replace and ignores the return value\" (#10477) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet.Client's `src/NuGet.Core/NuGet.PackageManagement/Utility/PackagesConfigLockFileUtility.cs` calls `string.Replace` and doesn't do anything with the return value.\r\n\r\n```csharp\r\nif (Path.DirectorySeparatorChar != '/')\r\n{\r\n    lockFileRelativePath.Replace('/', Path.DirectorySeparatorChar);\r\n}\r\n```\r\n\r\n`string.Replace` doesn't modify the instance; it returns a new string. We should either store the returned value somewhere, or not call `string.Replace` at all.\r\n\r\nProduct version: \r\n\r\nWorked before? Not sure.\r\n\r\n## Repro steps and/or sample project\r\n\r\nPlease see the source code.\r\n\r\n### Verbose Logs"},{"Id":"14916228013","Type":"IssuesEvent","CreatedAt":"2021-01-22T17:52:59","Actor":"omajid","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10476","RelatedDescription":"Opened issue \"Null checking errors in NuGet.Client code\" (#10476) at NuGet/Home","RelatedBody":"I ran a static analyzer over the NuGet.Client sources and it caught some strange null checks. We should fix those to make this code more robust and avoid surprises.\r\n"},{"Id":"14912140416","Type":"IssuesEvent","CreatedAt":"2021-01-22T12:11:51","Actor":"HavenDV","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10475","RelatedDescription":"Opened issue \"dotnet nuget push with --skip-duplicate pushes .snupkg constantly and causes validation to fail.\" (#10475) at NuGet/Home","RelatedBody":"I use a command like this to push all .nupkg files at once inside Github Actions:\r\n```yml\r\n- name: Publish\r\n  run: dotnet nuget push\r\n    src\\**.nupkg\r\n    --api-key ${{ secrets.NUGET_KEY }}\r\n    --source https://api.nuget.org/v3/index.json\r\n    --skip-duplicate\r\n```\r\nWhen I update only one library out of many in a commit, it updates all .snupkg files and fails validation. In my opinion --skip-duplicate should not load the .snupkg file if the .nupkg file with that version already exists in the source. Or .snupkg must be versioned too.\r\nIf this is the correct behavior, I would like to know if there is a way to get around this without radically complicating it?\r\n\r\nI have also tried deterministic build, with \r\n```xml\r\n<Deterministic>true</Deterministic>\r\n```\r\nand\r\n```yml\r\n- name: Build\r\n  run: dotnet build\r\n    --configuration Release\r\n    --nologo\r\n    /p:ContinuousIntegrationBuild=true\r\n    /p:DeterministicSourcePaths=true\r\n```\r\nBut it also was unsuccessful.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1349825493265231872","CreatedAt":"2021-01-14T21:07:30+00:00","UserScreenname":"nuget","Text":"Thanks for the birthday wishes everyone! 🥳🥳🥳\n\nThank you to all of the team members (past and present), external con… https://t.co/mWYE55Bh9b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-25T05:30:37.3151889Z","RunDurationInMilliseconds":1543}