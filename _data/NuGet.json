{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"29141871076","Type":"PullRequestEvent","CreatedAt":"2023-05-17T21:16:48","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9507","RelatedDescription":"Opened pull request \"minClientVersion update\" (#9507) at NuGet/NuGetGallery","RelatedBody":"NuGet.exe 6.6.0 was released. Updating Gallery to support it."},{"Id":"29141433756","Type":"PullRequestEvent","CreatedAt":"2023-05-17T20:53:00","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9502","RelatedDescription":"Merged pull request \"Fix unit test that fails locally\" (#9502) at NuGet/NuGetGallery","RelatedBody":"This UT fails locally, I believe due to a newer version of .NET Framework. Generally apostrophes should be URL encoded so I modified the test to avoid this behavior change."},{"Id":"29141427062","Type":"PullRequestEvent","CreatedAt":"2023-05-17T20:52:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9503","RelatedDescription":"Merged pull request \"Fix minor unlisted + locked metadata issue on package details page\" (#9503) at NuGet/NuGetGallery","RelatedBody":"For the locked + unlisted case, the release notes tab is shown when none of the other tabs are. This is something I missed from a previous PR (https://github.com/NuGet/NuGetGallery/pull/9490)."},{"Id":"29139439663","Type":"PullRequestEvent","CreatedAt":"2023-05-17T19:08:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9506","RelatedDescription":"Opened pull request \"Adjust deprecation API slightly to prepare for public preview\" (#9506) at NuGet/NuGetGallery","RelatedBody":"- No-op the last edit update if there are no changes (reduces V3 load)\r\n- Require user agent and include the full UA as a custom dimension in App Insights\r\n- Return 400 not 404 when the alternate package is missing Require user agent for the deprecation endpoint\r\n- These changes are backwards compatible with the known integrations with the Deprecation API\r\n\r\nDepends on https://github.com/NuGet/NuGetGallery/pull/9505.\r\n\r\nAlign the API with the design changes described here: https://github.com/NuGet/Engineering/pull/4709 (internal PR now, will be public after public preview begins)."},{"Id":"29137359798","Type":"PullRequestEvent","CreatedAt":"2023-05-17T17:29:23","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9505","RelatedDescription":"Opened pull request \"Don't use the default error page on API responses since this can hide essential error details\" (#9505) at NuGet/NuGetGallery","RelatedBody":"For HTTP 404 and HTTP 500 errors, we have a default response page, which is a pretty HTML thing. It looks like this:\r\n404: https://dev.nugettest.org/dsfsdfseg\r\n500: https://dev.nugettest.org/pages/simulate-error?type=Exception\r\n\r\nUnfortunately, this is returned for API response pages. The effect of this is that if we try to return an HTTP 404 from an API response (such as the unlist API or the deprecate API), we get the HTML page for that 404 instead of a response message that has the reason phrase containing the error details. In other words, the pretty HTML page clobbers code that we put in there intentionally.\r\n\r\nExample for unlist before the change (note the HTML response body and no helpful reason phrase)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/099aaba8-9953-4ee7-92ba-86f25ca69b18)\r\n\r\nAfter my change:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/0bc82aca-d944-4b86-ab66-f748b3ac0c30)\r\n\r\nEssentially the reason phrase (nice error message) provided here became useless long ago when we added pretty default error pages:\r\nhttps://github.com/NuGet/NuGetGallery/blob/912cd3bd73432f6edf8a9e20106d3cc635ca99df/src/NuGetGallery/Controllers/ApiController.cs#L876-L877\r\n\r\nI made the change for HTTP 500 as well since I don't believe a full rich HTML page should be returned for exceptions on API endpoints. The alternative (a simple, small text response without full exception details) is better, and tested in the functional test suite also included in this PR.\r\n\r\nThis can be shown in the client's support for reason phrase error messages:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/7e92aad3-0c29-45c4-8bb9-d2528e3ed947)\r\n\r\nResolves https://github.com/NuGet/NuGetGallery/issues/9504"},{"Id":"29137333138","Type":"IssuesEvent","CreatedAt":"2023-05-17T17:28:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9504","RelatedDescription":"Opened issue \"[NuGet.org Bug]: 404 reason phrase is not properly returned for package unlist\" (#9504) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nThe reason phrase we configure in gallery for API 404 responses is clobbered by our default pretty 404 error page. As you can see this just has the default \"Not found\" here:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/94054/ce926e92-58c5-40f1-84db-570b27494110)\r\n\r\nIt should be showing this string:\r\nhttps://github.com/NuGet/NuGetGallery/blob/912cd3bd73432f6edf8a9e20106d3cc635ca99df/src/NuGetGallery/Controllers/ApiController.cs#L876-L877\r\n\r\nOther status codes like 400 work properly.\n\n### Repro Steps\n\nTry to unlist a package using `nuget.exe delete` that does not exist and check the error response. It just says \"not found\" not a full message.\r\n\r\nIt says `Response status code does not indicate success: 404 (Not Found).`\n\n### Expected Behavior\n\nIt should say `\"Response status code does not indicate success: 404 (A package with ID 'does-not-exist' and version '1.0.0' does not exist.).\"`\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"29136649865","Type":"PullRequestEvent","CreatedAt":"2023-05-17T16:58:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9503","RelatedDescription":"Opened pull request \"Fix minor unlisted + locked metadata issue on package details page\" (#9503) at NuGet/NuGetGallery","RelatedBody":"For the locked + unlisted case, the release notes tab is shown when none of the other tabs are. This is something I missed from a previous PR (https://github.com/NuGet/NuGetGallery/pull/9490)."},{"Id":"29136623923","Type":"PullRequestEvent","CreatedAt":"2023-05-17T16:57:23","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9502","RelatedDescription":"Opened pull request \"Fix unit test that fails locally\" (#9502) at NuGet/NuGetGallery","RelatedBody":"This UT fails locally, I believe due to a newer version of .NET Framework. Generally apostrophes should be URL encoded so I modified the test to avoid this behavior change."},{"Id":"29112571841","Type":"PullRequestEvent","CreatedAt":"2023-05-16T20:42:08","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9501","RelatedDescription":"Opened pull request \"[2FA] Avoid new accounts coming to the Register page.\" (#9501) at NuGet/NuGetGallery","RelatedBody":"# Changes\r\n* Add `noindex` for `Register` (signup) and `SignInNugetAccount` (LogOnNuGetAccount) to avoid displaying them on search engines\r\n* `Register` page now redirects to `Sign In`.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"29143331197","Type":"IssuesEvent","CreatedAt":"2023-05-17T23:00:04","Actor":"s-t-e-v-e-c","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12593","RelatedDescription":"Opened issue \"nuget pack is ignoring dependencies when using PackageReference instead of packages.config - and cannot use MSBuild /t:pack\" (#12593) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nNuGet.exe\n\n### Product Version\n\n.NET 7.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nSimilar to issue 5979 except the proposed solution of running MSBuild /t:pack is not an option since the assembly is obfuscated after compilation, and then a nuget package is created.  MSBuild /t:pack attempts to do this as part of building which prevents the intermediate step of obfuscation.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29142564145","Type":"IssuesEvent","CreatedAt":"2023-05-17T22:01:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12586","RelatedDescription":"Closed issue \"Package Source Mapping status for selected package in Details Pane\" (#12586) at NuGet/Home","RelatedBody":"Part of https://github.com/NuGet/Home/issues/11365"},{"Id":"29141665890","Type":"IssuesEvent","CreatedAt":"2023-05-17T21:05:29","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12592","RelatedDescription":"Opened issue \"Signing:  consider enabling `X509Chain.Build(...)` retry behavior by default\" (#12592) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, dotnet.exe\n\n### Current Behavior\n\nAs of NuGet 6.0, NuGet has an environment variable which can be used to opt-in to `X509Chain.Build(...)` retry behavior on Windows only when the only failure is that the root certificate is untrusted.  See https://github.com/NuGet/NuGet.Client/pull/4259 for more context.\n\n### Desired Behavior\n\nWe should enable this retry behavior by default with reasonable values and the same restrictions (i.e.:  untrusted status on Windows) while still allowing users to override or opt-out of the default.\r\n\r\nFor example, if we choose `3,1000` as the default, a user could override by setting the environment variable with different values:\r\n\r\n```\r\nset NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY=10,3000\r\n```\r\n\r\nA user could also opt out (meaning, no retry at all) with a different value (TBD, but possibly just `0`):\r\n\r\n```\r\nset NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY=0\r\n```\r\n\r\nA [GitHub search](https://github.com/search?q=NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY&type=code) reveals `3,1000` as the most common value, with `9,2000` being next most common.\n\n### Additional Context\n\nThe root problem is that a particular API call isn't retried, and it should be.  Whether or not Windows adds a retry, retrying is the only mitigation.  We can broadly mitigate this issue for NuGet users by retrying by default.\r\n\r\nCC @joelverhagen"},{"Id":"29137132057","Type":"IssuesEvent","CreatedAt":"2023-05-17T17:19:12","Actor":"dainizzz","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12477","RelatedDescription":"Closed issue \"[Feature]: add command dotnet config unset\" (#12477) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nFeature for #12469  \r\nThis command will remove the key-value pair from a specified NuGet configuration setting, following [this spec](https://github.com/NuGet/Home/blob/dev/proposed/2022/dotnet-nuget-config-spec.md#unset).\n\n### Additional Context and Details\n\n_No response_"},{"Id":"29125026771","Type":"IssuesEvent","CreatedAt":"2023-05-17T09:47:45","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12591","RelatedDescription":"Opened issue \"The “top-level packages” node doesn’t show when searching an installed top-level package in the “Installed” tab\" (#12591) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nDev\\6.7.0.42\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n#### Repro Steps:\r\n1. Set the “NUGET_TRANSITIVE_DEPENDENCIES_IN_PMUI” environment variable to “1”.\r\n2. Create an F# Console App (.NET Framework 4.8.1) project in VS.\r\n3. Right-Click the project in the Solution Explorer window and select ‘Manage NuGet Packages…’.\r\n4. Click “Browse” tab and select the “nuget.org” from Package source drop-down list. \r\n5. Search “FSharp.Net.Http” package in the filter of “Browse” tab, select version “1.0.0” in the “Version” drop-down box and click the “Install” button on the right panel.  \r\n6. Click OK button in the “Preview Changes” dialog and click the “Installed” tab. \r\n\r\n#### Expected:\r\nThe package “FSharp.Net.Http” shows under the “top-level packages” node in the “Installed” tab. The “transitive packages” node shows correctly when searching for an installed transitive package as below.\r\n![image](https://github.com/NuGet/Home/assets/20632625/82a7d3f1-2dd5-4772-ba69-bbc64519dbad)\r\n#### Actual:\r\nThe “top-level packages” node doesn’t show as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/20632625/035d3f7b-f7a8-4ec1-b488-f69db52c576d)\r\n#### Note:\r\nWe will update the regression info after investigating.\n\n### Verbose Logs\n\n_No response_"},{"Id":"29123834164","Type":"IssuesEvent","CreatedAt":"2023-05-17T09:02:50","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12590","RelatedDescription":"Opened issue \"NuGetAudit should check direct PackageReferences by default\" (#12590) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\n`NuGetAudit`, that first became available in .NET 8 preview 5, checks all (direct and transitive) packages for known vulnerabilities.\n\n### Desired Behavior\n\nAdd a new MSBuild property `<NuGetAuditMode>` with allowed values `direct` and `transitive`.\r\n\r\n* Direct\r\n\r\nCheck packages that are directly referenced by the project. This includes not only `<PackageReference` items in the project file, but any `<PackageReference` that might be in a *Directory.Build.props*, or even any \"implicit\" packages that SDKs and project systems add. Finally, the way that Central Package Management's transitive pinning works is by elevating any transitive package to a direct reference when a pinned version is avaiable, and as a consequence these packages will also be checked for known vulnerabilities.\r\n\r\n* Transitive\r\n\r\nAll NuGet packages in the project's restore graph will be checked for known vulnerabilities, whether those packages are directly referenced by the project, or are transitive packages (dependencies of another package).\r\n\r\n\r\nExample:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <NuGetAudit>true</NuGetAudit>\r\n    <NuGetAuditMode>transitive</NuGetAuditMode>\r\n  <PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"PackageWithDependencies\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\n\n### Additional Context\n\n_No response_"},{"Id":"29121593521","Type":"IssuesEvent","CreatedAt":"2023-05-17T07:34:44","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12589","RelatedDescription":"Opened issue \"Pack should use different directories when UseArtifactsOutput=true\" (#12589) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nCurrently the NuspecOutputPath is [set to](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L75) `$(BaseIntermediateOutputPath)$(Configuration)\\`.\n\n### Desired Behavior\n\nWhen using the artifacts output path, this folder may not be used for anything else, as the artifacts output path constructs the path differently and also converts the `Configuration` to lower-case.\n\n### Additional Context\n\nhttps://github.com/dotnet/sdk/issues/31882#issuecomment-1518107660\r\n\r\nhttps://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-3/#simplified-output-path\r\n\r\n"},{"Id":"29080225371","Type":"IssuesEvent","CreatedAt":"2023-05-15T18:29:52","Actor":"azerios","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12576","RelatedDescription":"Closed issue \"Impossible to get Nuget dependency tree\" (#12576) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n6.0.14\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nDear,\r\n\r\nI'm using .netcore 6 version 6.0.14 in my project and I wanted to extract the dependency tree of Nuget packages like here : https://stackoverflow.com/questions/44944172/net-core-dependency-tree\r\n\r\nUnfortunatly since 3-4 months these changes are not working and export an empty tree.\r\n\r\nIs it possible to check if it's not only me who have this issue ?\r\nI can't update to .netcore 7 or 8 because my company only use LTS versions\r\n\r\nRegards\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-05-18T03:30:23.8181939Z","RunDurationInMilliseconds":1487}