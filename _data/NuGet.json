{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null},{"Title":"Introducing Transitive Dependencies in Visual Studio","PublishedOn":"2022-08-09T19:59:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We heard from you that direct dependencies are easy to track, but that you struggle with tracking transitive dependencies. We want to make that easier for the day-to-day management of your NuGet...","Href":"https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/","RawContent":null},{"Title":"HTTPS everywhere","PublishedOn":"2022-08-09T19:59:24+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Safety guaranteed\nAs an ongoing effort to make HTTPS everywhere a reality for NuGet, we have taken a number of steps to help protect your everyday package management experiences.\nEarlier this year, a...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere/","RawContent":null},{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"28879511196","Type":"PullRequestEvent","CreatedAt":"2023-05-05T16:21:28","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9493","RelatedDescription":"Merged pull request \"Removed EF dependency from NuGet.Services.Entities project\" (#9493) at NuGet/NuGetGallery","RelatedBody":"Removed EF-specific data annotations from NuGet.Services.Entities and replaced them with fluent API equivalents in `EntitiesContext` (which lives in a different assembly).\r\n\r\nThis should allow us to reuse entity models in EF core when we decide to switch.\r\n\r\nChecked that the change has no effect on migrations: running `Add-Migration` produces empty migration."},{"Id":"28861619251","Type":"IssuesEvent","CreatedAt":"2023-05-04T22:56:06","Actor":"JonDouglas","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9494","RelatedDescription":"Opened issue \"[Feature]: Provide filters for deprecated/vulnerable on package version list.\" (#9494) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\n_No response_\n\n### The Elevator Pitch\n\nFor some packages, there is an extensive package version history that expands an entire screen. Many older packages may be considered deprecated or vulnerable in some fashion which can take up majority of the space of what is a \"usable\" package in various situations.\r\n\r\nThe pitch would be to add deprecated/vulnerable filters on the package `versions` tab to make this easier to manage viewing.\r\n\r\nHere's an example of a package that has usable versions for different versions of the .NET Framework / Core that could benefit from such filtering:\r\n\r\nhttps://www.nuget.org/packages/Microsoft.AspNetCore.DataProtection.StackExchangeRedis\r\n\r\n<img width=\"1863\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1288848/236347162-f7bce332-45cc-4d23-8a02-440d9260213a.png\">\r\n\r\nOther filters that could be helpful here are: Date, SemVer, preview, downloads, etc\r\n\r\n**Credit:** Artak Mkrtchyan for the excellent suggestion\n\n### Additional Context and Details\n\n_No response_"},{"Id":"28823062159","Type":"IssuesEvent","CreatedAt":"2023-05-03T14:21:49","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9486","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Some stats pages return empty results\" (#9486) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe following stats pages show empty results:\r\n\r\n[awssdk.core](https://www.nuget.org/stats/packages/awssdk.core?groupby=Version&groupby=ClientName&groupby=ClientVersion) [awssdk.dynamodbv2](https://www.nuget.org/stats/packages/awssdk.dynamodbv2?groupby=Version&groupby=ClientName&groupby=ClientVersion) [awssdk.s3](https://www.nuget.org/stats/packages/awssdk.s3?groupby=Version&groupby=ClientName&groupby=ClientVersion) [awssdk.secretsmanager](https://www.nuget.org/stats/packages/awssdk.secretsmanager?groupby=Version&groupby=ClientName&groupby=ClientVersion) [awssdk.securitytoken](https://www.nuget.org/stats/packages/awssdk.securitytoken?groupby=Version&groupby=ClientName&groupby=ClientVersion) [awssdk.sqs](https://www.nuget.org/stats/packages/awssdk.sqs?groupby=Version&groupby=ClientName&groupby=ClientVersion) [csvhelper](https://www.nuget.org/stats/packages/csvhelper?groupby=Version&groupby=ClientName&groupby=ClientVersion) [fluentvalidation](https://www.nuget.org/stats/packages/fluentvalidation?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.entityframeworkcore](https://www.nuget.org/stats/packages/microsoft.entityframeworkcore?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.entityframeworkcore.abstractions](https://www.nuget.org/stats/packages/microsoft.entityframeworkcore.abstractions?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.configuration.abstractions](https://www.nuget.org/stats/packages/microsoft.extensions.configuration.abstractions?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.configuration.binder](https://www.nuget.org/stats/packages/microsoft.extensions.configuration.binder?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.dependencyinjection](https://www.nuget.org/stats/packages/microsoft.extensions.dependencyinjection?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.dependencyinjection.abstractions](https://www.nuget.org/stats/packages/microsoft.extensions.dependencyinjection.abstractions?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.logging](https://www.nuget.org/stats/packages/microsoft.extensions.logging?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.logging.abstractions](https://www.nuget.org/stats/packages/microsoft.extensions.logging.abstractions?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.options](https://www.nuget.org/stats/packages/microsoft.extensions.options?groupby=Version&groupby=ClientName&groupby=ClientVersion) [microsoft.extensions.primitives](https://www.nuget.org/stats/packages/microsoft.extensions.primitives?groupby=Version&groupby=ClientName&groupby=ClientVersion) [njsonschema](https://www.nuget.org/stats/packages/njsonschema?groupby=Version&groupby=ClientName&groupby=ClientVersion) [nlog](https://www.nuget.org/stats/packages/nlog?groupby=Version&groupby=ClientName&groupby=ClientVersion) [restsharp](https://www.nuget.org/stats/packages/restsharp?groupby=Version&groupby=ClientName&groupby=ClientVersion) [uno.ui](https://www.nuget.org/stats/packages/uno.ui?groupby=Version&groupby=ClientName&groupby=ClientVersion) \r\n\r\nThis is because the response body exceeds `JsonResult.MaxJsonLength`. For example AWSSDK.Core wants to return a 5,434,369 byte response which exceeds the default 4 MB.\n\n### Repro Steps\n\nGo to any of the stats pages linked above.\n\n### Expected Behavior\n\nA chart show be displayed, instead of an error page.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/94054/235183913-32f31398-3008-48dd-9b15-a75ce976eefc.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"28806974313","Type":"IssuesEvent","CreatedAt":"2023-05-02T22:57:58","Actor":"theot12","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9415","RelatedDescription":"Closed issue \"[A11y]Ensure Aria Attributes are allowed for an element's role\" (#9415) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1743237\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise Insider Preview\r\nOS build 25275.1000\r\nChrome version: 109.0.5414.120 (Official Build) (64-bit)\r\n\r\nRepro Steps:\r\nHit the URL:https://www.nuget.org/\r\n Navigate to \"Sign in\" control and hit enter.\r\n Navigate to \"Sign in with Microsoft\" control and hit enter.\r\n Select “API Keys” from the Profile Dropdown and hit enter.\r\n Navigate to \"Create\" button and hit enter and Unselect Push Checkbox.\r\nRun AI4W and observe that Ensures ARIA attributes are allowed for an element's role (#create-container)\r\nSimilar issue is observed for below screen also.\r\n\r\nHit the URL:https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSelect “API Keys” from the Profile Dropdown and hit enter.\r\nNavigate to \"Create\" button and hit enter.\r\nEnter Values in \"Key Name\" and \"Glob Pattern\" field and hit enter on Create button.\r\nNavigate to \"Manage\" control and hit enter.\r\nNote: Similar issue observed in throughout application.\r\n\r\nIssue: \r\nEnsures ARIA attributes are allowed for an element's role (aria-allowed-attr - https://accessibilityinsights.io/info-examples/web/aria-allowed-attr)\r\n\r\nNotes:\r\nWe have had to fix this kind of issue in the past. The best thing to do here is likely going to be to select an aria-role that will correctly allow assistive technologies to identify this as a control and not a div. See https://www.w3.org/TR/wai-aria/#roles_categorization"},{"Id":"28804280390","Type":"IssuesEvent","CreatedAt":"2023-05-02T20:14:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9424","RelatedDescription":"Closed issue \"[A11y]Tooltip for \"Package has Vulnerabilities\" icon in version list renders offscreen when screen is narrow\" (#9424) at NuGet/NuGetGallery","RelatedBody":"Url: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1744522\r\n\r\nEnvironment Details:\r\nApp name: NuGet Service\r\n#URL: [https://www.nuget.org](https://nam06.safelinks.protection.outlook.com/?url=https:%2f%2fwww.nuget.org%2f&data=05%7c01%7cv-nitipi%40microsoft.com%7c9a84307e7aa744a4b24208dafa5ca2fe%7c72f988bf86f141af91ab2d7cd011db47%7c1%7c0%7c638097573052590837%7cUnknown%7cTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7c3000%7c%7c%7c&sdata=C8Eab3i6ixAmqsOjG4AxNT36z9WZQiXPbjDDkMcS5ME%3D&reserved=0)\r\n\r\nOS and Browser Details:\r\nEdition Windows 11 Enterprise\r\nOS build 22621.1105.\r\nChrome version:  109.0.5414.120 (Official Build) (64-bit)\r\n\r\nPre-Requisites:\r\nPress \"Ctrl+Shift+I\" to open developer tool.\r\nNow in dock side click on \"undock into separate window\" so that developer tool will get open in separate window.\r\nZoom the browser of the screen to be tested to 200%.\r\nAdjust the screen to 320px*256px.\r\n\r\nRepro Steps:\r\nHit the URL: https://www.nuget.org/\r\nNavigate to \"Sign in\" control and hit enter.\r\nNavigate to \"Sign in with Microsoft\" control and hit enter.\r\nSearch for a key term (say “json”) from search box.\r\nClick on \"Newtonsoft.json\" control and hit enter.\r\nNavigate to \"Version History\" control and hit enter.\r\nApply reflow and observe whether \"Version history\" tooltip is not visible.\r\n\r\nActual Result:\r\nOn applying reflow, Version history tooltip in \"Version\" tab is not visible.\r\n\r\nExpected Result:\r\nOn applying reflow, \"Version history\" tooltip in \"Version\" tab content should be completely visible.\r\n\r\nNotes:\r\nThis tooltip is a custom (I believe Bootstrap) control and thus doesn't always follow browser expectation when rendering. As such, I believe it is rendering outside of the viewport when it renders on a narrow screen. Not 100% sure what the best option here is. One option is to have it render on the other side (left instead of right) when screen is narrow)."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"28880235075","Type":"IssuesEvent","CreatedAt":"2023-05-05T16:58:56","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12559","RelatedDescription":"Closed issue \"[Cross-platform Dotnet NuGet Sign] A redundant warning NU3018 shows after signing an already signed package with another trusted certificate on Linux\" (#12559) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK Version: 7.0.203\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n**Note:** It is an extended scenario instead of original test case\r\n\r\n#### Repro Steps:\r\n1. [Patched dotnet SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7b8a3c6685-1661-47f4-8807-b765ca62aea1%7d&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703).\r\n2. On Windows: Create a new test **certificate1**:  `.\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile` (in the powershell \"Developer Command Prompt\"). \r\n    On Linux: Copy the .cer file (should be generated under the same path with .pfx file) and the .pfx file from the above Windows machine to Linux machine.\r\n3. On Windows: Create another test **certificate2**:  `.\\CreateTestCertificate.ps1 -AddAsTrustedRootAuthority -Password password -GenerateCerFile` (in the powershell \"Developer Command Prompt\"). \r\n    On Linux: Copy the .cer file (should be generated under the same path with .pfx file) and the .pfx file from the above Windows machine to Linux machine.\r\n4. Where <CertificateFilePath> is the file path to the created two certificates (in step2 & step3) .cer or .pem file and <VersionedSdkDirectoryPath> is the directory path for the patched versioned .NET SDK directory (e.g.:  ./patchedSDK/sdk/7.0.100), add trust for **the two certificates:** \r\n    On Linux:  `./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFile1Path> -vsd <VersionedSdkDirectoryPath> `\r\n    On Linux: ` ./dotnet run --project ./Entropy/TrustTestCert/TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFile2Path> -vsd <VersionedSdkDirectoryPath> `\r\n5. Use the patched \"dotnet.exe\" to sign a package for the first time. Where <PackageFilePath> is the test package path and <PfxFilePath> is the file path to the .pfx file of the **first** trusted certificate, sign the test package: \r\n    On Linux: ` ./patchedSDK ./dotnet nuget sign <PackageFilePath> --certificate-path <PfxFilePath> --certificate-password password --timestamper http://timestamp.digicert.com/ -v n `\r\n6. Verify that the package is signed successfully in the output, with no warnings and no errors.\r\n   Package(s) signed successfully. \r\n7. Use the patched \"dotnet.exe\" to sign the package for the second time. Where <PackageFilePath> is the test package path and <PfxFilePath> is the file path to the .pfx file of the **second** trustedccertificate, sign the test package: \r\n    On Linux:  `./patchedSDK./dotnet nuget sign <PackageFilePath> --certificate-path <PfxFilePath> --certificate-password password --timestamper http://timestamp.digicert.com/ -v n `\r\n\r\n#### Expected:\r\nVerify that the second signing failed for 1 error in the output: \r\nError: NU3001: The package already contains a signature. Please remove the existing signature before adding a new signature. \r\n\r\n#### Actual:\r\nA redundant warning NU3018 shows as below screenshot. The warning doesn't make sense because the second certificate has been trusted.\r\n![image](https://user-images.githubusercontent.com/20632625/234220912-3395caff-c073-4c32-a082-4e4390da1579.png)\r\n\r\n#### Notes:\r\n1.It only reproes on Linux platform, doesn’t repro on Mac & Windows.\r\n2.It is not a regression since the scenario is extended case instead of original case.\r\n3.It doesn’t repro in the original test case: [Dotnet nuget sign command:  sign an already signed package without overwriting](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc={8a3c6685-1661-47f4-8807-b765ca62aea1}&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FDotnet%20nuget%20sign%20command%20%20sign%20an%20already%20signed%20package%20%7Cee4f9421-a04f-4e96-a23b-49039e069cd3%2F%29&wdorigin=703) (sign two times with the same trusted certificate)\n\n### Verbose Logs\n\n_No response_"},{"Id":"28867910502","Type":"IssuesEvent","CreatedAt":"2023-05-05T07:54:06","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5004","RelatedDescription":"Closed issue \"X-NuGet-Warning doesn't work when using proxy due to missing ServerWarningLogHandler\" (#5004) at NuGet/Home","RelatedBody":"The code that sets up ProxyAuthenticationHandler is missing ServerWarningLogHandler: https://github.com/NuGet/NuGet.Client/blob/7645448a1fbeff4bc17b9c74be115aa92c5b9b4a/src/NuGet.Core/NuGet.Protocol/HttpSource/HttpHandlerResourceV3Provider.cs#L55\r\n\r\nAs such, X-NuGet-Warning doesn't work when using a proxy (even fiddler)."},{"Id":"28856652086","Type":"IssuesEvent","CreatedAt":"2023-05-04T18:21:43","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12575","RelatedDescription":"Opened issue \"Allow package authors to run all NuGet.org validations locally through the NuGet/DotNet CLI.\" (#12575) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nAuthors want to be able to run validations on their packages before uploading to NuGet.org.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"28856071790","Type":"IssuesEvent","CreatedAt":"2023-05-04T17:55:32","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12574","RelatedDescription":"Opened issue \"Investigate using Analyzer for the explicit/implicit type Coding Guideline\" (#12574) at NuGet/Home","RelatedBody":"Ideally, we wouldn't need a coding guideline if we have analyzers which enforce a standard for using implicit/explicit types.\r\nBesides consistency, the goal is reducing PR Review time identifying and responding to feedback on this guideline.\r\n\r\nInvestigate [IDE0007 and IDE0008: 'var' preferences - .NET | Microsoft Learn](https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008) and see the impact on our codebase. \r\n\r\nIf this works for the team, come up with a plan to implement it at once, or over time using suppressions. "},{"Id":"28855069366","Type":"IssuesEvent","CreatedAt":"2023-05-04T17:10:04","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12475","RelatedDescription":"Closed issue \"[Feature]: add command dotnet config get\" (#12475) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nFeature for #12469  \r\nThis command will get the NuGet configuration settings that will be applied, following [this spec](https://github.com/NuGet/Home/blob/dev/proposed/2022/dotnet-nuget-config-spec.md#get).\n\n### Additional Context and Details\n\n_No response_"},{"Id":"28837800419","Type":"IssuesEvent","CreatedAt":"2023-05-04T04:30:20","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12570","RelatedDescription":"Closed issue \"Add nullable annotations to NuGet.Frameworks\" (#12570) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nCurrently NuGet.Frameworks doesn't have annotations to allow the compiler to work with the compiler's \"nullable reference types\" feature.\n\n### Desired Behavior\n\nAdd null annotations, so the compiler knows when null might be returned, and when it's definitely not.\n\n### Additional Context\n\nAnyone using NuGet.Frameworks in their project might find that upgrading to the newer version of NuGet.Frameworks might result in compiler warnings or errors, depending on if your project opts into nullable checks.\r\n\r\nAdditionally, it may be that while annotating the project that null-related bugs are found and fixed. Any app that depends on the behaviour considered buggy might find their app behaves differently since NuGet.Frameworks might throw exceptions when it previously didn't, or have a different result for the same inputs."},{"Id":"28831908845","Type":"IssuesEvent","CreatedAt":"2023-05-03T20:40:27","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12572","RelatedDescription":"Closed issue \"Changing TFM breaks restore in VS, but works from dotnet.exe\" (#12572) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nVersion 17.7.0 Preview 2.0 [33630.43.main\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\nAlso filed internal issue with video recording of repro: https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1812703\r\n\r\n1. Create an ASP.NET (C#, Net Framework) Web App, Empty Template, targeting .NET Framework 4.8.\r\n1. Create a C# Class Library targeting .NET Standard 2.1\r\n1. In the Class Library, install a package (eg, 'Microsoft.Data.SqlClient (5.1.1).\r\n1. In the Web App, reference the ClassLibrary.\r\n1. Change the Class Library's Target Framework to .NET Standard 2.0. \r\n1. Build and observe the following error:\r\n```\r\nSeverity\tCode\tProject\tDescription\tFile\tSuppression State\tLine\r\nError\tNETSDK1005\tClassLibrary1\tAssets file 'C:\\repos\\WebApplication1\\ClassLibrary1\\obj\\project.assets.json' doesn't have a target for 'netstandard2.0'. Ensure that restore has run and that you have included 'netstandard2.0' in the TargetFrameworks for your project.\tC:\\Program Files\\dotnet\\sdk\\7.0.400-preview.23225.8\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t\t266\r\n\r\n```\r\n7. Attempting to Restore using the VS context menu results in the same error.\r\n8. Attempting to Close VS, then delete the obj/bin folders, then reopen and repeat the Restore in VS results in a missing assets file error:\r\n```\r\nSeverity\tCode\tProject\tDescription\tFile\tSuppression State\tLine\r\nError\tNETSDK1004\tClassLibrary1\tAssets file 'C:\\source\\repos\\WebApplication1\\ClassLibrary1\\obj\\project.assets.json' not found. Run a NuGet package restore to generate this file.\tC:\\Program Files\\dotnet\\sdk\\7.0.400-preview.23225.8\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t\t266\r\n\r\n\r\n```\r\n9. Running `dotnet restore` on the Class Library from the CLI, the restore succeeds.\r\n```\r\nC:\\repos\\WebApplication1\\ClassLibrary1>dotnet restore\r\n  Determining projects to restore...\r\n  Restored C:\\repos\\WebApplication1\\ClassLibrary1\\ClassLibrary1.csproj (in 252 ms).\r\n```\r\n10. After the dotnet.exe restore, VS shows the restored dependencies.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"28820697687","Type":"IssuesEvent","CreatedAt":"2023-05-03T13:01:02","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12032","RelatedDescription":"Closed issue \"[Bug]: VS2022: Random NU1301 error on restore packages\" (#12032) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVersion 17.2.1+52cd2da31\n\n### Worked before?\n\nVersion 16.11.2+f32259642\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nCurrently we move from VS2019 16.11.x to VS2022 17.2.x. When running a pipeline on a build agent (ADOS 2020 On-Prem and VS2022 17.2.x) we face a NU1301 **randomly, but frequent in always different solutions/projects**:\r\n\r\n```\r\n##[error]xxx\\xxx.csproj(0,0): Error NU1301: Fehler beim Überprüfen des Stammverzeichnisses der lokalen Quelle \"https://packages.repo.xxx.de/artifactory/api/nuget/nuget-powershellgallery-proxy/\". \r\n1167>c:\\tb\\1\\s\\xxx\\xxx.csproj : error NU1301: Fehler beim Überprüfen des Stammverzeichnisses der lokalen Quelle \"https://packages.repo.xxx.de/artifactory/api/nuget/nuget-powershellgallery-proxy/\". [c:\\tb\\1\\s\\xxx\\subsystemxxx.sln]\r\n```\r\n\r\nCorresponding translation for the error message above should be `Failed to verify the root directory of local source`.  The error also occurs randomly with another package URI `https://packages.repo.xxx.de/artifactory/api/nuget/nuget-thirdparty-repo/`.\r\n\r\nUnfortunately I haven't been able to get a verbose log with this error until now. Also we don't see this kind of error at all on our build agents with VS2019 16.11.x. \r\n\r\nQuestions:  \r\n- Is this a new behavior for 17.2 that this type of error will get raised, while in previous versions of msbuild they have been suppressed (like stated in #11862)?\r\n- Since package URI `https://packages.repo.xxx.de/artifactory/api/nuget/nuget-powershellgallery-proxy/` looks quite OK for me,  are there any tips of how to track down the real cause of the error?\r\n\r\nWe are also using Jfrog Artifactory 7.41.7 as proxy for some official NuGet package sources.\r\n\r\nAny help is very appreciated, since the issue blocks us to move to VS2022, because of the frequent build breaks. \r\n\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"28861759967","Type":"IssuesEvent","CreatedAt":"2023-05-04T23:06:51","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Closed issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"},{"Id":"27557007112","Type":"IssuesEvent","CreatedAt":"2023-03-07T18:44:23","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Closed issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27423335680","Type":"IssuesEvent","CreatedAt":"2023-03-01T18:16:58","Actor":"dnfadmin","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/68","RelatedDescription":"Opened issue \"Moving to the new .NET Foundation CLA service\" (#68) at NuGet/Announcements","RelatedBody":"Hello everyone\r\nThe .NET Foundation is transitioning to a new CLA service and I'm posting here to let you know it's happening. Some background info:\r\n\r\nThe new CLA service is based off of https://github.com/microsoft/ContributorLicenseAgreement, except it uses the dotnet-policy-service app\r\n\r\n- Current contributors do not need to sign the CLA again\r\n- The CLA agreement itself is not changing\r\n- As part of the install/configuration process, the following work items will be completed\r\n\r\n1. Create a .github repo if it doesn't exist already\r\n2. Install the dotnet-policy-service app\r\n3. Create PRs for the platformcontext.xml and cla.yml files\r\n4. Disable the existing CLA webhook\r\n5. Push the PRs to enable the new CLA service\r\n\r\nThat's all there is to it. I'll update this issue once the work is complete\r\n\r\nThanks\r\nChris\r\n.NET Foundation Operations team"},{"Id":"27174265829","Type":"IssuesEvent","CreatedAt":"2023-02-17T22:51:59","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/60","RelatedDescription":"Closed issue \"NuGet.org migration towards a new multi-CDN infrastructure\" (#60) at NuGet/Announcements","RelatedBody":"In the coming weeks, nuget.org will be migrating towards a new multi-CDN infrastructure that will improve the experience of our users. This change allows our team flexibility to switch to a back-up provider in the case that one CDN is down, which will broaden coverage for our users.\r\n\r\nSome changes are coming for older TLS cipher suites, which may result in connectivity issues. From our data we believe this will affect only a small percentage of requests. We will be monitoring all feedback channels during the migration to assess impact and adjust our roll-out timeline as needed.\r\n\r\nBelow, we provide resources to determine whether you will be affected by this change. This utilizes the [.NET CLI](https://dotnet.microsoft.com/) to install a package from our pre-production (INT) environment which tests connectivity:\r\n\r\n\r\n```\r\nmkdir cdn-test\r\ncd cdn-test\r\ndotnet new classlib\r\ndotnet add package BaseTestPackage.NetStandard --source https://apiint.nugettest.org/v3/index.json\r\n```\r\n\r\nIf you are experiencing connectivity issues while connecting to nuget.org or restoring packages from https://api.nuget.org/v3/index.json, such as:\r\n\r\n\"The SSL connection could not be established\"\r\n\r\nPlease ensure that TLS 1.2 and any of the following cipher suites have been enabled on your machine:\r\n\r\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\nTLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n\r\nIf you have any questions, do reach out to us at support@nuget.org or by commenting on the discussion issue: NuGet/Home#11058"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1631370937248481281","CreatedAt":"2023-03-02T19:08:35+00:00","UserScreenname":"nuget","Text":"Your package's README is your chance to showcase your hard work and make a great first impression. Here are some ti… https://t.co/SU8480LbkL","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1630609651275382793","CreatedAt":"2023-02-28T16:43:30+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.5 📦\n\n🧰 Visual Studio Support for Central Package Management\n🔁 Use server-provided Retry-After… https://t.co/FsMPajDT1u","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1625612488216649729","CreatedAt":"2023-02-14T21:46:34+00:00","UserScreenname":"nuget","Text":"📦 Search by Target Framework on https://t.co/F9kiKfvqkS 📦\n\n🔭 Improved package compatibility discovery\n📊 New sorts a… https://t.co/Xojm66sLar","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":35,"FavoriteCount":22,"RawContent":null},{"Id":"1600604140564058117","CreatedAt":"2022-12-07T21:32:19+00:00","UserScreenname":"nuget","Text":"We're excited to announce our proposal for auditing projects for package vulnerabilities! This will help ensure the… https://t.co/nSLELXfv9A","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"1590088546899329024","CreatedAt":"2022-11-08T21:07:06+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.4 📦\n\n✅ Central Package Management is production ready\n🌎 Use a PackageReference everywhere with… https://t.co/AaPbNKIxGA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1575911013328863252","CreatedAt":"2022-09-30T18:10:39+00:00","UserScreenname":"nuget","Text":"🎁NuGet Season of Giving🎁\n\n👍 Working on highly requested features.\n🎃 Hacktoberfest\n🧊 Closing stale issues\n\nWe hope y… https://t.co/OIX6HAnPte","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1566762590335893505","CreatedAt":"2022-09-05T12:18:05+00:00","UserScreenname":"nuget","Text":"At approximately 11:11 AM UTC (~1 hour ago) we began to see increased errors for https://t.co/MK66n2mmT6 in some ge… https://t.co/Hha9zOVSst","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"1564312481488592903","CreatedAt":"2022-08-29T18:02:13+00:00","UserScreenname":"nuget","Text":"Announcing syntax highlighting for READMEs on https://t.co/F9kiKfvqkS.\n\n👩‍💻 Automatic language detection.\n✍️ Multi-… https://t.co/4cZeND2aZC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":128,"FavoriteCount":31,"RawContent":null},{"Id":"1557411889466023936","CreatedAt":"2022-08-10T17:01:44+00:00","UserScreenname":"nuget","Text":"🎉 Introducing Transitive Dependencies in Visual Studio 🎉\n\n👀 View transitive dependencies\n🔺 Promote transitive depen… https://t.co/strnTenOBB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"1557099052700925958","CreatedAt":"2022-08-09T20:18:38+00:00","UserScreenname":"nuget","Text":"📦 Announcing NuGet 6.3 📦\n\n🐛 Consume pdbs from packages in PackageReference\n👀 View transitive dependencies in Visual… https://t.co/OYMsZ2IBTa","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1554953163576586241","CreatedAt":"2022-08-03T22:11:38+00:00","UserScreenname":"nuget","Text":"We’ve RCA'ed our recent connectivity issues, and in brief the cause was an inability to handle sudden large spikes… https://t.co/AB6FJRiRbz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2023-05-06T03:30:22.7094292Z","RunDurationInMilliseconds":1305}