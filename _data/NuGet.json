{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"21818728812","Type":"IssuesEvent","CreatedAt":"2022-05-16T21:32:28","Actor":"LoxleyColourDev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9117","RelatedDescription":"Closed issue \"[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\" (#9117) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nIn Visual Studio 2022\r\n\r\nManage NuGet packages for solution.\r\n\r\nBrowse gives the following error:\r\n\r\n[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\nAn error occurred while sending the request.\r\n  The underlying connection was closed: An unexpected error occurred on a send.\r\n  Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n  An existing connection was forcibly closed by the remote host\r\n\n\n### Repro Steps\n\nSee above.\r\nI also wrote a console app:\r\nvar response = await client.GetAsync(\"https://api.nuget.org/v3/index.json\");\r\nSame error.\n\n### Expected Behavior\n\nThis should return without errror.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/7057224/168332965-56b1e7a1-4250-4bc2-8c8b-dafc9081b71c.png)\r\n\n\n### Additional Context and logs\n\nMicrosoft Visual Studio Professional 2022\r\nVersion 17.1.6\r\nVisualStudio.17.Release/17.1.6+32421.90\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nNuGet Package Manager   6.1.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nWindows 10\r\nLocation: Edinburgh, Scotland\r\nNo firewall or proxy.\r\nHome broadband."},{"Id":"21814704093","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:29:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6054","RelatedDescription":"Closed issue \"[Statistics] Automatically split large CDN log files\" (#6054) at NuGet/NuGetGallery","RelatedBody":"Today, the on-call engineer has to split large large CDN log files before requeueing it. The job that generates these log files could be smarter by automatically splitting large files."},{"Id":"21814656762","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:26:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7053","RelatedDescription":"Closed issue \"Download counts are going backwards again\" (#7053) at NuGet/NuGetGallery","RelatedBody":"I've opened several tickets in the past about download counts doing weird things. Today the download count went backward again.\r\n\r\nFri, 5-Apr-2019 | 579,211 | 3,925\r\n-- | -- | -- \r\nSat, 6-Apr-2019 | 573,753 | -5,458\r\n\r\nI suspect stats have been slightly off for a while, because I see consistently high download counts on weekends, when historically those days have been much, much lower. It almost feels like the stats jobs are \"catching up\" on the weekends with stats they didn't count during the week. I didn't report it, because I didn't have anything concrete to say aside from \"This seems off.\"\r\n\r\nToday it's concrete: download counts went backwards."},{"Id":"21814580415","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:22:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7217","RelatedDescription":"Closed issue \"package provides  in nuspec/nuget pkgs. \" (#7217) at NuGet/NuGetGallery","RelatedBody":"while this is a nicety for chocolatey ...  which consumes nuget... \r\nI could see Other uses..  ie MSI/msix , install , Nuget to dynamically update sub packages. \r\nie vendor  powershell modules  (ie VMware/Azure /Google etc.)  , then have nuget periodically update.. \r\n\r\npackage Say Anaconda , (https://www.anaconda.com/distribution/) \r\n_insted of depends_ , **Package provides** Depend Python 3.7 , \r\nprovides xyz , 100 other python modules , of which could be referenced against new installs , \r\n and can document all the bundled in depends.. it will install. \r\n\r\n**package C**: now wants python,  _anaconda checks off the box , as python is installed by_ Anaconda..  while useful for chocolatey/nuget  for sure , i'm sure other bundlers could use to make self updating MSI , ie update registry of etc.. , so even if needing repair , the new map file will now use nuget to verify updates have not corrupted etc. \r\n**package D**:  wants Python & py modules : setuptools-git , etc to support a git gui client.. \r\nas they are tracked... , those  now , wont need to be installed less , they are required to upgrade. \r\n\r\nAPP B needs =or less than <  5.2 can add to its folders.. else , can reduce adding more deps ...\r\nvia a larger MSI bundle.  , however making an added install of pkg dep to an app folder if required else will just use the depends provided by a bundler or things.. ie Anaconda , has over 100 pkgs included... \r\n\r\nLinux also has known Package Provides DEP A, B or C buddled in.. , also keeps it managed as to not clobber deps the main package provided and or handles upgrades  cleanly .. ie ELK services, needs Kibinana > or = to X but not lower than W.... \r\n\r\n\r\nany rate , I'm not sure were to put a feature suggestions.. but \r\nadding a provides these depends field could be of use.. \r\nAs for documenting packages provided insted of depends ... i've seen zilch for documentation.. \r\n\r\nwelcome to move to the suggestions box ... "},{"Id":"21814558529","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:21:16","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7282","RelatedDescription":"Closed issue \"Revoke NuGet.org API keys published to GitHub using token scanning\" (#7282) at NuGet/NuGetGallery","RelatedBody":"Leverage [GitHub’s token scanning partnership program](https://developer.github.com/partnerships/token-scanning/) such that whenever you commit or push a change to GitHub in a public repository and an NuGet.org API key is found, it is sent to NuGet.org for validation. If it’s valid, we should revoke it and notify the user of this action."},{"Id":"21814473997","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:16:28","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7620","RelatedDescription":"Closed issue \"Packages with high download counts overwhelm packages that match all terms\" (#7620) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\n When i search using this keyword **asp.net core datagrid** this means patform name(**asp.net core**) and control name(**Datagrid**).\r\n\r\nHow this package **Microsoft.AspNetCore.Http** shows in top. this package does not contains search keyword in package name and tags. also download count was lesser than second package.\r\n\r\n![Sample Screenshot](https://user-images.githubusercontent.com/56252418/66626422-cf6ce780-ec15-11e9-93e6-f76b0f5eacaa.png)\r\n\r\nCan you please explain, in which basis this package(Microsoft.AspNetCore.Http) shows in top? and how this keyword match with that package?"},{"Id":"21814431983","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:14:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7786","RelatedDescription":"Closed issue \"[Azure Search] Implement SearchIndexClient factory to allow automatic secret rotation\" (#7786) at NuGet/NuGetGallery","RelatedBody":"1. Query (read-only) key was rotated at T-48H\r\n1. Old query key was invalided at T-0H\r\n1. Service started failing all requests.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/71222960-37c7ed00-2287-11ea-9784-f43d687ac5ef.png)\r\n\r\nThis is due to how the Azure Search team recommends using it's SDK in a web app. In short, they recommend a long-lived singleton. This singleton, at activation time, holds the API key to access Azure Search. This means there is no way to change the API key in this instance after it is initialized.\r\n\r\nSee: https://stackoverflow.com/a/59690929\r\n\r\n> Implementing your own factory/pool for `SearchIndexClient` instances is the way to go. Unfortunately this kind of functionality isn't included in the SDK, so you'll have to roll your own.\r\n\r\nFor now, we just have to redeploy the app after rotating the secret in KeyVault."},{"Id":"21814374871","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:10:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7947","RelatedDescription":"Closed issue \"[Search] Opt-out of Azure Search's relevancy changes\" (#7947) at NuGet/NuGetGallery","RelatedBody":"⚠️ This will block search index rebuilds after July 15, 2020!\r\n\r\nFrom Azure Search's documentation: https://docs.microsoft.com/en-us/azure/search/index-ranking-similarity\r\n\r\n> Starting July 15, 2020, newly created search services will use the BM25 ranking function, which has proven in most cases to provide search rankings that align better with user expectations than the current default ranking. ... With this change, you will most likely see slight changes in the ordering of your search results. \r\n>\r\n> For services created before July 15, 2020: If the similarity is omitted or set to null, the index will use the old classic similarity algorithm.\r\n> \r\n> For services created after July 15, 2020: If the similarity is omitted or set to null, the index will use the new BM25 similarity algorithm.\r\n> \r\n> You can also explicitly set the similarity value to be one of the following two values: \"#Microsoft.Azure.Search.ClassicSimilarity\" or \"#Microsoft.Azure.Search.BM25Similarity\".\r\n\r\nWe should opt-out of `BM25Similarity` until we have validated that these change improve relevancy for NuGet's search."},{"Id":"21814324739","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:08:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8176","RelatedDescription":"Closed issue \"Still SSL/TLS issues from Visual Studio using Nuget\" (#8176) at NuGet/NuGetGallery","RelatedBody":"In issue https://github.com/NuGet/NuGetGallery/issues/7705#issuecomment-558822690 it was suggested that if the problem persisted, a report was welcome. \r\n\r\nUnless you use the workaround provided in the issue, the error does persist, as shown in https://github.com/dotnet/fsharp/issues/10039, and by others in issue #7705. In particular, the following errors are still thrown:\r\n\r\n```\r\nUnable to load the service index for source https://api.nuget.org/v3/index.json.\r\nAn error occurred while sending the request.\r\nThe request was aborted: Could not create SSL/TLS secure channel.\r\n```\r\n\r\n### To Reproduce\r\nIt appears to happen after updating Visual Studio, which re-enabled protocol TLS 1.3 (which is probably a good thing, but slightly annoying is recreates this issue). \r\n\r\n### Expected behavior\r\nAs mentioned in the other issue, it was assumed that this was fixed for NuGet client tools, but as far as I can tell, it isn't. The linked F# issue uses NuGet from FSI (F# Interactive) as installed with Visual Studio.\r\n\r\n### Additional context\r\nAt the moment this issue occurs, the mentioned registry settings are absent on my machine (Windows 7). It has been reported that on other machines it is present and the issue does not arise.\r\n\r\nThe problem only occurs in .NET Framework scenarios.\r\n\r\nSo: there's a workaround, but the issue isn't fixed. Considering very recent activity in the comments on this SO issue, suggests that it is certainly still happening in the wild: https://stackoverflow.com/questions/41185443/nuget-connection-attempt-failed-unable-to-load-the-service-index-for-source.\r\n\r\n### Other info\r\n\r\nWhat makes this issue particularly taxing is that it appears to happen intermittently, though the larger the resource, the larger the chance there is that the above error is displayed. For instance, in FSI (which uses MSBuild Nuget), where I give the second `nuget` command half an hour later:\r\n\r\n```\r\n> #r \"nuget:System.Memory\";;\r\n> 1;;\r\nMicrosoft (R) Build Engine version 16.7.0+b89cb5fde for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 30-8-2020 18:32:38.\r\nProject \"C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj\" on node 1 (Restore target(s)).\r\n_GetAllRestoreProjectPathItems:\r\n  Determining projects to restore...\r\nRestore:\r\n  Restoring packages for C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj...\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(128,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(128,5): error :   An error occurred while sending the request. [C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(128,5): error :   The request was aborted: Could not create SSL/TLS secure channel. [C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj]\r\nDone Building Project \"C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n\"C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj\" (Restore target) (1) ->\r\n(Restore target) -> \r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(128,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(128,5): error :   An error occurred while sending the request. [C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(128,5): error :   The request was aborted: Could not create SSL/TLS secure channel. [C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.35\r\nval it : int = 42\r\n\r\n> #r \"nuget:System.Memory\";;\r\n> 1;;\r\n[Loading C:\\Users\\Abel\\AppData\\Local\\Temp\\nuget\\13012--231c4591-2c45-4ecc-8264-1503061f34f6\\Project.fsproj.fsx]\r\nnamespace FSI_0019.Project\r\n```\r\n\r\n~The same issue can occasionally be seen when loading NuGet packages through PM, but that seems to happen much rarer.~ EDIT: not observed anymore."},{"Id":"21814227037","Type":"IssuesEvent","CreatedAt":"2022-05-16T17:02:42","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8674","RelatedDescription":"Closed issue \"Not able to upload any packages\" (#8674) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nNot able to upload any packages on nuget.org - nothing happens.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to https://www.nuget.org/packages/manage/upload\r\n2. Upload package\r\n3. Observe 404's in the console\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\n![Screenshot 2021-07-10 10 27 40 AM](https://user-images.githubusercontent.com/110988/125157469-74aa4c00-e16b-11eb-9b09-db8e027948fd.png)\r\n\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"21814131986","Type":"IssuesEvent","CreatedAt":"2022-05-16T16:57:27","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8770","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Inconsistent download statistics\" (#8770) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe download statistics are inconsistent between viewing a package in the search results and in the view of the particular package. This also seems to affect [shields.io](https://shields.io/) badges where the number of downloads displayed are incorrect.\r\n\r\nAs to my specific problem:\r\n\r\n- https://www.nuget.org/packages?q=AwsSignatureVersion4 shows 294,585 total downloads\r\n- https://www.nuget.org/packages/AwsSignatureVersion4 shows 433,432 total downloads\n\n### Repro Steps\n\nhttps://www.nuget.org/packages?q=AwsSignatureVersion4 and https://www.nuget.org/packages/AwsSignatureVersion4 shows different download statistics.\n\n### Expected Behavior\n\nThe number of downloads should be the same, indifferent of how I view the package.\n\n### Screenshots\n\n![image](https://user-images.githubusercontent.com/8513095/131253438-8e595d6f-733c-46db-a71d-71c5a2e0a16c.png)\r\n![image](https://user-images.githubusercontent.com/8513095/131253449-1baf64b2-3214-4e83-a657-6570bf982161.png)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"21814069703","Type":"IssuesEvent","CreatedAt":"2022-05-16T16:54:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8895","RelatedDescription":"Closed issue \"Total downloads bug\" (#8895) at NuGet/NuGetGallery","RelatedBody":"Total downloads still view incorrect value in next page https://www.nuget.org/packages?q=ukrguru\r\nand Ctrl+F5 not helped. see more  in screenshots. thanks,\r\n\r\n![image](https://user-images.githubusercontent.com/53341568/142729236-1afc603c-9cc6-4c5e-93e5-1ad4ca9f7fa4.png)\r\n![image](https://user-images.githubusercontent.com/53341568/142729273-97fc741e-29b5-4fcd-ac4e-bf0f9a8a96d4.png)\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"21820960199","Type":"PullRequestEvent","CreatedAt":"2022-05-17T00:53:20","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11821","RelatedDescription":"Opened pull request \"Move issue triaging policy to accepted folder\" (#11821) at NuGet/Home","RelatedBody":"Since https://github.com/NuGet/Home/pull/11719 is approved, I'd move the issue triaging policy from \"proposed\" folder to \"accepted\" folder."},{"Id":"21818787082","Type":"IssuesEvent","CreatedAt":"2022-05-16T21:36:35","Actor":"a98c14","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11819","RelatedDescription":"Closed issue \"[Feature]: Support for specific suffix after wildcard version using floating notation\" (#11819) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCurrently, NuGet package versions support floating notation, e.g `1.5.*-*`, `*-*`. However, it does not support a specific version suffix after a floating version like `1.5.*-beta`. I want to be able to always use the beta version despite whatever version number I am on for my package.\n\n### Additional Context and Details\n\nHere is the error message you get when you try to use the `1.8.*-beta` notation.\r\n\r\n```\r\n error : '1.8.*-beta' is not a valid version string.\r\n```"},{"Id":"21818579200","Type":"IssuesEvent","CreatedAt":"2022-05-16T21:22:18","Actor":"a98c14","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/11819","RelatedDescription":"Reopened issue \"[Feature]: Support for specific suffix after wildcard version using floating notation\" (#11819) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCurrently, NuGet package versions support floating notation, e.g `1.5.*-*`, `*-*`. However, it does not support a specific version suffix after a floating version like `1.5.*-beta`. I want to be able to always use the beta version despite whatever version number I am on for my package.\n\n### Additional Context and Details\n\nHere is the error message you get when you try to use the `1.8.*-beta` notation.\r\n\r\n```\r\n error : '1.8.*-beta' is not a valid version string.\r\n```"},{"Id":"21818524675","Type":"IssuesEvent","CreatedAt":"2022-05-16T21:18:33","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11798","RelatedDescription":"Closed issue \"PackageDownload multiple versions doesn't work in Visual Studio. \" (#11798) at NuGet/Home","RelatedBody":"Originally changed in https://github.com/NuGet/NuGet.Client/commit/ef9eb47e886cd5abe7e5d3160cc48312274b1c06, works on the commandline, but doesn't work in VS. \r\n\r\nBug here: https://github.com/NuGet/NuGet.Client/blob/f52a83999070237288d7e1c8ec5934a65eda77ac/src/NuGet.Clients/NuGet.SolutionRestoreManager/VSNominationUtilities.cs#L123\r\n\r\nExample failure: \r\n\r\n> Severity Code Description Project File Line Suppression State\r\nError NU1105 Unable to read project information for 'EntityDesignBootstrapPackage': '[5.0.0];[6.2.0]' is not a valid version string. EntityDesignBootstrapPackage C:\\dev\\ef6tools\\src\\EFTools\\EntityDesignBootstrapPackage\\EntityDesignBootstrapPackage.csproj 1\r\n"},{"Id":"21818477755","Type":"IssuesEvent","CreatedAt":"2022-05-16T21:15:27","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10759","RelatedDescription":"Closed issue \"Create experimentation metrics to measure engagement of transitive dependencies\" (#10759) at NuGet/Home","RelatedBody":""},{"Id":"21818444400","Type":"IssuesEvent","CreatedAt":"2022-05-16T21:13:17","Actor":"a98c14","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11819","RelatedDescription":"Closed issue \"[Feature]: Support for specific suffix after wildcard version using floating notation\" (#11819) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCurrently, NuGet package versions support floating notation, e.g `1.5.*-*`, `*-*`. However, it does not support a specific version suffix after a floating version like `1.5.*-beta`. I want to be able to always use the beta version despite whatever version number I am on for my package.\n\n### Additional Context and Details\n\nHere is the error message you get when you try to use the `1.8.*-beta` notation.\r\n\r\n```\r\n error : '1.8.*-beta' is not a valid version string.\r\n```"},{"Id":"21818093477","Type":"PullRequestEvent","CreatedAt":"2022-05-16T20:51:23","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/11820","RelatedDescription":"Opened pull request \"For C++/CLI projects, NuGet ignores the TargetPlatformMoniker\" (#11820) at NuGet/Home","RelatedBody":"Design update for https://github.com/NuGet/Home/issues/11808."},{"Id":"21812200883","Type":"IssuesEvent","CreatedAt":"2022-05-16T15:20:38","Actor":"a98c14","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11819","RelatedDescription":"Opened issue \"[Feature]: Support for specific suffix after wildcard version using floating notation\" (#11819) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nCurrently, NuGet package versions support floating notation, e.g `1.5.*-*`, `*-*`. However, it does not support a specific version suffix after a floating version like `1.5.*-beta`. I want to be able to always use the beta version despite whatever version number I am on for my package.\n\n### Additional Context and Details\n\nHere is the error message you get when you try to use the `1.8.*-beta` notation.\r\n\r\n```\r\n error : '1.8.*-beta' is not a valid version string.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":249,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":173,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":164,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null}]}},"RunOn":"2022-05-17T03:30:23.4440972Z","RunDurationInMilliseconds":1428}