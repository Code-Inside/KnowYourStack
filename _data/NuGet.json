{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41193591658","Type":"PullRequestEvent","CreatedAt":"2024-08-21T00:52:11","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10144","RelatedDescription":"Opened pull request \"[ReleasePrep][2024.08.20] RI dev to main\" (#10144) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"41193461802","Type":"PullRequestEvent","CreatedAt":"2024-08-21T00:42:55","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10143","RelatedDescription":"Merged pull request \"Statistics and Auditing storage access update.\" (#10143) at NuGet/NuGetGallery","RelatedBody":"Apparently, it was missed during the migration. Added an option to use MSI for statistics and auditing storage access.\r\n\r\nExtracted the code that creates `CloudBlobClientWrapper` in different ways depending on configuration into a method of its own and reused it for statistics and audit storage."},{"Id":"41191002107","Type":"PullRequestEvent","CreatedAt":"2024-08-20T22:05:28","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10143","RelatedDescription":"Opened pull request \"Statistics and Auditing storage access update.\" (#10143) at NuGet/NuGetGallery","RelatedBody":"Apparently, it was missed during the migration. Added an option to use MSI for statistics and auditing storage access."},{"Id":"41186760593","Type":"PullRequestEvent","CreatedAt":"2024-08-20T19:06:33","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10141","RelatedDescription":"Merged pull request \"Merge branch main into dev \" (#10141) at NuGet/NuGetGallery","RelatedBody":"This carries the hotfix https://github.com/NuGet/NuGetGallery/pull/10140 to `dev` branch."},{"Id":"41186056604","Type":"IssuesEvent","CreatedAt":"2024-08-20T18:40:11","Actor":"michael-hawker","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/10142","RelatedDescription":"Opened issue \"[Feature]: Filter Account Packages List\" (#10142) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nLooking at the https://www.nuget.org/account/Packages view of packages on our account, we have 128 in varying states. I need to update some of them to point to others...\r\n\r\nWhile I can sort, I can't filter this list to look for a common root. Or I can't separate it out based on deprecated or non-deprecated packages like I can with listed/unlisted packages...\n\n### The Elevator Pitch\n\nIt'd be nice as a package owner to have a greater ability to view a subset of packages that I need to work on either by filtering out by a search term within the page and by removing entirely deprecated packages from my view like I can with unlisted ones.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"41185815882","Type":"PullRequestEvent","CreatedAt":"2024-08-20T18:31:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10141","RelatedDescription":"Opened pull request \"Merge branch main into dev \" (#10141) at NuGet/NuGetGallery","RelatedBody":"This carries the hotfix https://github.com/NuGet/NuGetGallery/pull/10140 to `dev` branch."},{"Id":"41185791941","Type":"PullRequestEvent","CreatedAt":"2024-08-20T18:30:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10140","RelatedDescription":"Merged pull request \"Hotfix: add UTF-8 BOM for package details page Razor\" (#10140) at NuGet/NuGetGallery","RelatedBody":"Before:\r\n![image](https://github.com/user-attachments/assets/bfe9db99-3be5-4260-a723-d1ad528d66c4)\r\n\r\nAfter:\r\n![image](https://github.com/user-attachments/assets/a88f4089-2805-4d64-98e6-25a68b0dfa7c)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41194927889","Type":"IssuesEvent","CreatedAt":"2024-08-21T02:17:12","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13726","RelatedDescription":"Opened issue \"Show RID specific dependencies in VS Solution Explorer's Dependency Node\" (#13726) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### The Elevator Pitch\n\nPackageReference allows packages to have per-RID dependencies. However, these packages are not shown in the dependencies graph in Visual Studio's Solution Explorer.\r\n\r\nConsider a customer who gets a restore message saying a package has a known vulnerability, but when they search for the package, it's not displayed. It gives customers a false impression that NugetAudit may be wrong.\n\n### Additional Context and Details\n\nThis issue was created while investigating [a VS feedback ticket](https://developercommunity.visualstudio.com/t/NuGet-vulnerability-warnings-for-NET-St/10726330)\r\n"},{"Id":"41194841879","Type":"IssuesEvent","CreatedAt":"2024-08-21T02:12:20","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13725","RelatedDescription":"Opened issue \"Visual Studio Package Manager UI should show RID specific packages\" (#13725) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nWith PackageReference, some packages can bring in different dependencies per Runtime Identifier (RID). Now that NuGetAudit is available, it's more useful than ever to be able to see the packages that are used by the project, so that I can make it a direct dependency and increase the version to avoid known vulnerabilities.\r\n\r\nConsider the scenario where NuGetAudit reports a package with a known vulnerability, so the customer opens PM UI in order to update it to a newer version, but the package ID isn't displayed, even in the transitive packages list.\n\n### Additional Context and Details\n\nThis issue was created while investigating a [VS feedback ticket](https://developercommunity.visualstudio.com/t/NuGet-vulnerability-warnings-for-NET-St/10726330)\r\n\r\nThis issue is not quite the same thing as:\r\n* https://github.com/NuGet/Home/issues/5712\r\n\r\nThat other issue about multi-targeting projects, whereas it's possible to have a single targeting project with RID specific packages, which this issue is about.  However, the multi-targeting issue will be a prerequisite for being able to install packages with rid-specific conditions. This issue should be scoped to displaying the packages, even if the install scenario requires manual editing of the project file."},{"Id":"41192697148","Type":"IssuesEvent","CreatedAt":"2024-08-20T23:51:25","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13724","RelatedDescription":"Opened issue \"Set NuGetLockFilePath defaults in the targets to allow it to be used SDK for exclusion \" (#13724) at NuGet/Home","RelatedBody":"See https://github.com/dotnet/sdk/issues/25294#issuecomment-2287097354"},{"Id":"41187990656","Type":"PullRequestEvent","CreatedAt":"2024-08-20T19:54:14","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/13723","RelatedDescription":"Opened pull request \"Move Owner Author Spec to Implemented folder\" (#13723) at NuGet/Home","RelatedBody":""},{"Id":"41184967079","Type":"IssuesEvent","CreatedAt":"2024-08-20T18:00:35","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13722","RelatedDescription":"Opened issue \"LINQ exception (Value cannot be null. Parameter name: source) thrown in VS when NuGet Restore is disabled\" (#13722) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nVersion 17.12.0 Preview 2.0 [35218.33.main]\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nMy nuget.config had restore disabled. When I opened a new VSIX Project in VS and tried opening NuGet PM UI, I was faced with a cryptic error below caused by [GetInstalledAndTransitivePackagesAsync](https://github.com/NuGet/NuGet.Client/blame/11d7ba57371b61c8167a956cd7b97e0cd355e88b/src/NuGet.Clients/NuGet.PackageManagement.VisualStudio/Projects/PackageReferenceProject.cs#L181):\r\nError: `Value cannot be null. Parameter name: source`\r\n![image](https://github.com/user-attachments/assets/346bd9ad-de70-403e-975a-1a52358a15f8)\r\n\r\nWith some debugging, I found this LINQ error when trying to access installed transitive packages:\r\n![image](https://github.com/user-attachments/assets/9f9039ce-79dd-4615-a314-9dad94002f32)\r\n\r\nIt would be better for customers to show a specific message indicating that Restore is disabled, rather than breaking LINQ extension methods with a null collection.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41184547686","Type":"IssuesEvent","CreatedAt":"2024-08-20T17:45:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13721","RelatedDescription":"Opened issue \"Tests PushCommand_PushToServer_GetCredentialFromPlugin and NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServerBasicAuth are flaky\" (#13721) at NuGet/Home","RelatedBody":"Test: `NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_GetCredentialFromPlugin`\r\n\r\n# Error message\r\n```\r\nSystem.TimeoutException : D:\\a_work\\1\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\bin\\Debug\\net472\\NuGet\\NuGet.exe push D:\\a_work\\1\\s.test\\work\\069e972e\\32b73562\\testPackage1.1.1.0.nupkg -Source http://localhost:51787/177ea0de-4a2f-4569-895b-83147357bd3a/nuget timed out after 10.03 seconds\r\n```\r\n\r\n\r\n# Stack trace\r\n```\r\n   at NuGet.Test.Utility.RetryRunner.RunWithRetries[T,E](Func`1 func, Int32 maxRetries, ITestOutputHelper logger) in D:\\a\\_work\\1\\s\\test\\TestUtilities\\Test.Utility\\RetryRunner.cs:line 29\r\n   at NuGet.Test.Utility.CommandRunner.Run(String filename, String workingDirectory, String arguments, Int32 timeOutInMilliseconds, Action`1 inputAction, IDictionary`2 environmentVariables, ITestOutputHelper testOutputHelper, Int32 timeoutRetryCount) in D:\\a\\_work\\1\\s\\test\\TestUtilities\\Test.Utility\\CommandRunner.cs:line 32\r\n   at NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServer_GetCredentialFromPlugin() in D:\\a\\_work\\1\\s\\test\\NuGet.Clients.Tests\\NuGet.CommandLine.Test\\NuGetPushCommandTest.cs:line 975\r\n```\r\n\r\nThis test does not capture output 😢 "},{"Id":"41183974588","Type":"IssuesEvent","CreatedAt":"2024-08-20T17:24:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13712","RelatedDescription":"Closed issue \"LockFileUtils.CreateLockFileTargetProject allocates a lot\" (#13712) at NuGet/Home","RelatedBody":"CreateLockFileTargetProject allocates a lot due to the fact that it assumes that projects can provide their own assets. \r\nWhile that may be true with project.json iterations, that's not really possible with PackageReference."},{"Id":"41182846901","Type":"PullRequestEvent","CreatedAt":"2024-08-20T16:45:25","Actor":"JonDouglas","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/pull/12704","RelatedDescription":null,"RelatedBody":"This proposal introduces two new ways to filter and sort packages in Visual Studio's NuGet Package Manager experience.\r\n\r\n[Rendered Proposal](https://github.com/NuGet/Home/blob/6225561b2aa85ddfe55024344155c7ec82ff8973/proposed/2023/vs-filters.md)\r\n\r\nPlease 👍 or 👎 this comment to help us with the direction of this feature & leave as much feedback/questions/concerns as you'd like on this issue itself and we will get back to you shortly.\r\n\r\nThank You 🎉"},{"Id":"41172218751","Type":"IssuesEvent","CreatedAt":"2024-08-20T11:45:26","Actor":"SoyDiego","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13717","RelatedDescription":"Closed issue \"dotnet build/restore/run is not working\" (#13717) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\n8.0.107\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nHi I was running my project using `dotnet run` and downloading the nugets from Azure doing `dotnet restore --interactive` but today I found some problems and I don't know what is happening... \r\n\r\n![image](https://github.com/user-attachments/assets/b3049dc3-7331-4bee-99c2-81a9b8b383fc)\r\n\r\nAfter that command nothing is happening. And If I cancel the command I'm receiving this warnings:\r\n\r\n![image](https://github.com/user-attachments/assets/7673c400-d9d9-4537-b1d1-160bc7346aea)\r\n\r\nAfter 10 minutes, you can see this errors:\r\n\r\n```sh\r\n Determining projects to restore...\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Data/CitizenPortal.Data.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Services/CitizenPortal.Services.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Common.Data/CitizenPortal.Common.Data.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api/CitizenPortal.Api.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Tests/CitizenPortal.Tests.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Crosscutting/CitizenPortal.Crosscutting.csproj : error NU1301: Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api.sln]\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Common.Data/CitizenPortal.Common.Data.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Crosscutting/CitizenPortal.Crosscutting.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Services/CitizenPortal.Services.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Api/CitizenPortal.Api.csproj (in 10.09 min).\r\n  Failed to restore /home/diego/Repos/CitizenPortal/CitizenPortalApi/CitizenPortal.Data/CitizenPortal.Data.csproj (in 10.09 min).\r\n  ```\r\n\r\n### `dotnet restore --interactive -v detailed` ([I'm using Artifacts Credential Provider)](https://github.com/Microsoft/artifacts-credprovider) :\r\n\r\nI have created a **[gist](https://gist.github.com/SoyDiego/8cfc7fa94f4da76ceb8c44a2f30fc9f2)** because was too long and I couldn't share pasting here: https://gist.github.com/SoyDiego/8cfc7fa94f4da76ceb8c44a2f30fc9f2\r\n\r\nI don't know what more I can try.\r\n\r\nBecause is with every commmand:\r\n- `dotnet restore`\r\n- `dotnet build`\r\n- `dotnet run`\r\n\r\n## I have tried:\r\n- Cloning my projects again\r\n- Logout and login in Azure again\r\n- Cleaning using `dotnet nuget locals all --clear` and `dotnet clear`\r\n\r\n## `dotnet info`\r\n\r\n```\r\n.NET SDK:\r\n Version:           8.0.107\r\n Commit:            1bdaef7265\r\n Workload version:  8.0.100-manifests.43c23f91\r\n\r\nRuntime Environment:\r\n OS Name:     manjaro\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         arch-x64\r\n Base Path:   /usr/share/dotnet/sdk/8.0.107/\r\n\r\n.NET workloads installed:\r\n Workload version: 8.0.100-manifests.43c23f91\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.7\r\n  Architecture: x64\r\n  Commit:       2aade6beb0\r\n\r\n.NET SDKs installed:\r\n  3.1.426 [/usr/share/dotnet/sdk]\r\n  7.0.120 [/usr/share/dotnet/sdk]\r\n  8.0.107 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.32 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.20 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.32 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.20 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  ```\r\n  \r\n  Any help here or someone with the same problem?\r\n  Or any idea what more can I try, please?\r\n  \r\n  Thanks!!\n\n### Verbose Logs\n\n_No response_"},{"Id":"41163741709","Type":"IssuesEvent","CreatedAt":"2024-08-20T07:21:03","Actor":"georg-eckert-zeiss","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13720","RelatedDescription":"Opened issue \"NuGetAuditSuppress is ignored by dotnet list package\" (#13720) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK:  Version:           8.0.401  Commit:            811edcc344  MSBuild version:   17.11.4+37eb419ad\n\n### Worked before?\n\nno\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nAdding `NuGetAuditSuppress` should suppress warnings about vulnerable packages. It does so for `dotnet restore` but not for `dotnet list package --vulnerable --include-transitive`.\r\n\r\nNot sure if this is intended or if the feature has been changed on the way. The [original proposal](https://github.com/NuGet/Home/blob/9d98231d88d70b18e61b37079f725e410ee0e6a0/accepted/2023/NuGetAudit-supress-advisory.md) looks like this was originally planned stating as summary:\r\n\r\n> Provide a syntax that allows developers to give a list of URLs that NuGet will no longer warn about in restore (NuGetAudit) or dotnet list package --vulnerable.\r\n\r\nI know there is FR #11926 - but there it looks like this behavior is expected, too.\r\n\r\n### To Reproduce\r\n\r\n+ Use the following project file and reference a package with a known vulnerability\r\n+ list the known advisories to be ignored\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n      <PackageReference Include=\"IdentityServer4\" Version=\"4.1.2\" />\r\n  </ItemGroup>\r\n\r\n  <!--<ItemGroup>\r\n    <NuGetAuditSuppress Include=\"https://github.com/advisories/GHSA-ff4q-64jc-gx98\" />\r\n    <NuGetAuditSuppress Include=\"https://github.com/advisories/GHSA-55p7-v223-x366\" />\r\n  </ItemGroup>-->\r\n\r\n</Project>\r\n```\r\n\r\nThen run:\r\n\r\n`dotnet list package --vulnerable --include-transitive`\r\n\r\nThis gets us the following output:\r\n\r\n```\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n   C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nProject `AuditSuppressTest` has the following vulnerable packages\r\n   [net8.0]:\r\n   Top-level Package      Requested   Resolved   Severity   Advisory URL\r\n   > IdentityServer4      4.1.2       4.1.2      Moderate   https://github.com/advisories/GHSA-ff4q-64jc-gx98\r\n                                                 Moderate   https://github.com/advisories/GHSA-55p7-v223-x366\r\n\r\n   Transitive Package                           Resolved   Severity   Advisory URL\r\n   > Microsoft.IdentityModel.JsonWebTokens      5.6.0      Moderate   https://github.com/advisories/GHSA-59j7-ghrg-fj52\r\n   > Newtonsoft.Json                            12.0.2     High       https://github.com/advisories/GHSA-5crp-9r3c-p9vr\r\n   > System.IdentityModel.Tokens.Jwt            5.6.0      Moderate   https://github.com/advisories/GHSA-59j7-ghrg-fj52\r\n   > System.Text.Encodings.Web                  4.7.0      Critical   https://github.com/advisories/GHSA-ghhp-997w-qr28\r\n```\r\n\r\nI expected it to be silent there as well.\r\n\r\nBest regards.\r\n\r\nPS:\r\n\r\nOpened it on [dotnet SDK](https://github.com/dotnet/sdk/issues/42832) first. They pointed me here.\n\n### Verbose Logs\n\n_No response_"},{"Id":"41163430452","Type":"IssuesEvent","CreatedAt":"2024-08-20T07:10:13","Actor":"wuweiran","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13719","RelatedDescription":"Opened issue \"Version in GlobalPackageReference is resolved incorrectly for legacy-style csproj projects\" (#13719) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n6.11.0.122\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Target the legacy csproj to .Net Framework 4.7.2 with `<TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>`\r\n2. Specify in Directory.Packages.props:\r\n   ```\r\n    <ItemGroup>\r\n      <GlobalPackageReference Include=\"IDisposableAnalyzers\" Version=\"3.4.15\" />\r\n      <GlobalPackageReference Include=\"Microservice.CodeAnalyzers\" version=\"1.1.23\" />\r\n      <GlobalPackageReference Include=\"Microsoft.CodeAnalysis.NetAnalyzers\" Version=\"8.0.0\" />\r\n      <GlobalPackageReference Include=\"Microsoft.VisualStudio.SlnGen\" Version=\"4.2.5\" />\r\n      <GlobalPackageReference Include=\"Microsoft.VisualStudio.Threading.Analyzers\" Version=\"17.0.64\" />\r\n      <GlobalPackageReference Include=\"Microsoft.Build.Telemetry\" Version=\"1.0.17\" />\r\n    </ItemGroup>\r\n   ```\r\n3. Manage NuGet packages for the legacy csproj, you will see all of 6 packages resolved into wrong versions: IDisposableAnalyzers > 1.0.0; Microservice.CodeAnalyzers > 1.1.4; Microsoft.CodeAnalysis.NetAnalyzers > 5.0.0; Microsoft.VisualStudio.SlnGen > 3.0.16; Microsoft.VisualStudio.Threading.Analyzers > 15.0.240; Microsoft.Build.Telemetry > 1.0.0\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41156467960","Type":"IssuesEvent","CreatedAt":"2024-08-20T00:31:21","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13718","RelatedDescription":"Opened issue \"dotnet nuget why should check RID specific packages\" (#13718) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nAdd any package which eventually adds `System.Runtime` as a depenedncy. For example, `System.Collections.Specialized`. Restore will warn you about `System.Private.Uri` having a known vulnerability (when NuGetAuditMode is set to `all`, which is default from .NET 9).  However, `dotnet nuget why my.csproj System.Private.Uri` will tell you that the package is not used by the project\n\n### Desired Behavior\n\n`dotnet nuget why` should tell me why this package is being restored.\n\n### Additional Context\n\nLooking at the assets file, the package is being included due to RID-specific (Runtime IDentifier) dependencies. Therefore, `dotnet nuget why` appears to be looking only at the \"RIDless\" package graph in the assets file."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-21T03:30:19.4418828Z","RunDurationInMilliseconds":922}