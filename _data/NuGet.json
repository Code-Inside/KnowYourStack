{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14662854238","Type":"IssuesEvent","CreatedAt":"2020-12-29T08:20:10","Actor":"h1213159982","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8365","RelatedDescription":"Opened issue \"Private nuget server cannot upload icon\" (#8365) at NuGet/NuGetGallery","RelatedBody":"我安装Nuget.Server包创建的私有nuget服务器，但是上传的包无法显示图标，nuget.org上可以正常显示\r\n\r\nI install \"Nuget.Server\" Package create private nuget server,But the uploaded package cannot display the icon,\"nuget.org\" it can be displayed normally\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14724707337","Type":"IssuesEvent","CreatedAt":"2021-01-06T03:07:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9915","RelatedDescription":"Closed issue \"PackageReference restore in Visual Studio should not spam the status bar\" (#9915) at NuGet/Home","RelatedBody":"Today, when restoring in Visual Studio, when doing an actual restore or solution load restore, NuGet writes *a lot* of messages at the status bar. \n\nThere's a bunch of messages such as \"restore packages for\" and \"writing assets file for\" which are pretty equivalent. \nIn extreme cases this can lead up to 3-4 messages per projects, so you sometimes end up with 300 messages in a 15s restore. \n\nIt's difficult to interpret all these messages, they are not very useful from a customer perspective. \n\nMy suggestion is to reduce the number of messages, or potentially removing them completely. \n\ncc @JonDouglas \n\nRelated to this, we considered https://github.com/NuGet/Home/issues/9396, but it has bugs and is not suitable when *restore* is very quick. "},{"Id":"14724293747","Type":"IssuesEvent","CreatedAt":"2021-01-06T02:14:48","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10336","RelatedDescription":"Closed issue \"Cannot open the NuGet Package manager\" (#10336) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Cannot-open-Nuget-browser/1265371)._\n\n---\n[severity:I'm unable to use this version] [regression] [worked-in:16.8.2]\r\nManaging Nuget packages > Browse brings up the following error\n! [image.png] (https://aka.ms/dc/image?name=Bca4ae68667b4419392c520bf946e165d637416996804221774_20201123-144121-image.png&tid=ca4ae68667b4419392c520bf946e165d637416996804221774)\n\nHave restarted computer/VS\n\nVS: 16.8.2 \n! [image.png] (https://aka.ms/dc/image?name=B7bd6f85befdd40a6aa964320715f6281637416997462030978_20201123-144227-image.png&tid=7bd6f85befdd40a6aa964320715f6281637416997462030978)\n\nI did update from VS16.8.1 the other day, not sure if it was part of the upgrade or not\n\nAny help would be appreciated\n\nThanks\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/22/2020, 10:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"14724293156","Type":"PullRequestEvent","CreatedAt":"2021-01-06T02:14:43","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/10427","RelatedDescription":"Opened pull request \"Clearing an specific package from NuGet cache - Mini spec\" (#10427) at NuGet/Home","RelatedBody":"Mini spec for deleting a single package from cache.\r\n\r\nThis specs cover a part of the design described in https://github.com/NuGet/Home/issues/5713"},{"Id":"14723154050","Type":"IssuesEvent","CreatedAt":"2021-01-05T23:52:30","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10365","RelatedDescription":"Closed issue \"Add GenerateRestoreGraphFile in static graph restore to improve debugability. \" (#10365) at NuGet/Home","RelatedBody":"Related: https://github.com/NuGet/Home/issues/10307\r\n\r\nCompleting this task also makes `NuGet.exe static graph` possible.  https://github.com/NuGet/Home/issues/9824"},{"Id":"14722732070","Type":"IssuesEvent","CreatedAt":"2021-01-05T23:03:37","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10062","RelatedDescription":"Closed issue \"Add telemetry for NuGet's VS extensibility API faults\" (#10062) at NuGet/Home","RelatedBody":"NuGet's [VS extensibility APIs](https://docs.microsoft.com/en-us/nuget/visual-studio-extensibility/nuget-api-in-visual-studio) usually should not throw exceptions. Currently, we have no visibility when they do throw, and require customers to report problems to us.\r\n\r\nThis is particularly an issue for the new [brokered services](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.VisualStudio.Contracts/NuGetServices.cs), because all exceptions get deserialized as a single exception type, and the stack trace is lost, so customers are unable to report detailed failures to us."},{"Id":"14722365867","Type":"IssuesEvent","CreatedAt":"2021-01-05T22:25:37","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10426","RelatedDescription":"Closed issue \"Enable dotnet.exe integration tests to run cross platform\" (#10426) at NuGet/Home","RelatedBody":"Most of tests in Dotnet.Integration.Test project are configured to run in Windows. We need to me some adjustments to run those tests on all platforms dotnet.exe supports: Windows, Mac, Linux.\r\n"},{"Id":"14722218243","Type":"IssuesEvent","CreatedAt":"2021-01-05T22:11:09","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8867","RelatedDescription":"Closed issue \"Pack includes content brought in through dependency packages into the current project's package (SDK based projects only)\" (#8867) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS 2019 \r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\nVS version (if appropriate): 16.3.8\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10.0.14393 x64\r\n\r\nWorked before? If so, with which NuGet version: -\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nI have been using the `PrivateAssets=\"all\"` option for a long time. It works great for `PackageReference`. Now I needed to use some content file in my project and I could not achieve the desired behavior with `PrivateAssets=\"all\"`. I want to build \"base\" package with one file `data.json` which should be consumed in \"top\" package but should not be exposed further to consumers of the \"top\" package.\r\n\r\nMy \"base\" package:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <IncludeBuildOutput>false</IncludeBuildOutput>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"data.json\">\r\n      <PackagePath>contentFiles/any/any/data.json</PackagePath>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nThe result seems to be good for me:\r\n![image](https://user-images.githubusercontent.com/21261007/69996708-a573d980-1563-11ea-8069-bb275803e1fb.png)\r\n\r\nMy \"top\" package:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"BasePackage\" Version=\"1.0.0\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe Result is unexpected for me:\r\n![image](https://user-images.githubusercontent.com/21261007/69997235-bc66fb80-1564-11ea-8c80-23e46bfa7cdb.png)\r\n\r\nWhy is the file again in the content section? This file is a development dependency, some sort of settings file. The \"base\" package is a package with Roslyn analyzers and the settings file - `data.json`. I do not present the analyzers used for clarity. For them, `PrivateAssets` works as it should - they do not fall into the dependencies of the \"base\" package. But for the settings file - `data.json`, I can’t get the same behavior.\r\n\r\nI spent a lot of time resolving this issue and it seems to me that I do not see any obvious solution, which is somewhere nearby. I will be very grateful for the advice.\r\n\r\n"},{"Id":"14722186972","Type":"IssuesEvent","CreatedAt":"2021-01-05T22:08:07","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10426","RelatedDescription":"Opened issue \"Enable dotnet.exe integration tests to run cross platform\" (#10426) at NuGet/Home","RelatedBody":"Most of tests in Dotnet.Integration.Test project are configured to run in Windows. We need to me some adjustments to run those tests on all platforms dotnet.exe supports: Windows, Mac, Linux.\r\n"},{"Id":"14720799003","Type":"IssuesEvent","CreatedAt":"2021-01-05T20:03:53","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10425","RelatedDescription":"Opened issue \"NVDA/Narrator is not reading \"License\" label for \"Apache-2.0\" link\" (#10425) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1240645\r\nCheck out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier\r\nEnvironment Details:​\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.8 Preview 6.0\r\nOS Details:\r\nWindows 10 Enterprise\r\n\r\nVersion : 20H2\r\n\r\nBuild: 19042.572\r\n\r\nRe-pro Steps:​\r\nStart Narrator/NVDA andOpen Visual Studio Enterprise 2019 Preview (Version 16.8.0 Preview 6.0)\r\nCreate a new \"Grpc\" project\r\nTab till “Solution Explorer” and open \"Context Menu\".\r\nNavigate to \"Manage Nuget Packages for Solution\" and press enter on it.\r\nNavigate to \"Update\"  tab using arrow key.\r\nSearch for \"gRPC\" packages.\r\nTab to \"Apache - 2.0\" link present in description section and verify NVDA/Narrator is reading the corresponding label \"License\".\r\nActual Result:​\r\nNVDA/Narrator is not reading \"License\" label for \"Apache-2.0\" link\r\n\r\nExpected Result:​\r\nNVDA/Narrator should read information that \"Apache - 2.0\" link is related to License.\r\n\r\nUser Impact:​\r\nScreen Reader will not get the completing information about controls if screen reader is not reading the labels.\r\n\r\nMAS Reference:​\r\nMAS 1.3.1 -- Info and Relationships\r\n"},{"Id":"14720339650","Type":"IssuesEvent","CreatedAt":"2021-01-05T19:24:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9623","RelatedDescription":"Closed issue \"NU1004 when restoring a solution that has mixed Legacy and netstandard2 projects from cmd line with LockedMode\" (#9623) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n\r\nNuGet product used: nuget.client\r\n\r\nNuGet version Several, but exists in prod 5.4, 5.5, 5.5.1 and 5.6 as well as 5.7 preview 1\r\n\r\nVS version: 2019 16.7 Preview 1\r\n\r\nOS version: Windows 10 19635.1\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new dotnet core library (default is fine)\r\n2. Add anew .net 4.7.2 library (with packages.config but also fails with PackageReference)\r\n3. Add some legacy framework librarys to th e.net 4.7.2 library (i chose Google.Apis)\r\n4. Add a project reference from .net core library to legacy framework library (no actual code reference needed)\r\n5. install nuget.exe (i used chocolatey, installed prod 5.6.0)\r\n6. open a command prompt, navigate to your solution foldeer\r\n7. type \"nuget.exe restore <your project>.sln -UseLockFile\" (succeeds)\r\n8. type \"nuget.exe restore <your project>.sln -LockedMode (fails, with NU1004) (also fails if both flags are combined)\r\n\r\nNOTE: Some observations\r\n- Project builds fine in VS without error. \r\n- multi-targeting netstandard2 and net472 produces the same failed results.\r\n- the generated packages.lock.json file looks reasonably correct to me.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n```\r\nC:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1>nuget restore ClassLibrary1.sln -LockedMode -verbosity detailed\r\nNuGet Version: 5.4.0.6315\r\nMSBuild auto-detection: using msbuild version '16.7.0.22806' from 'C:\\PROGRA~2\\MICROS~1\\2019\\Preview\\MSBuild\\Current\\Bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\PROGRA~2\\MICROS~1\\2019\\Preview\\MSBuild\\Current\\Bin\\msbuild.exe \"C:\\Users\\ErikFunkenbusch\\AppData\\Local\\Temp\\NuGetScratch\\aegggkrs.jgg.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\ErikFunkenbusch\\AppData\\Local\\Temp\\NuGetScratch\\pirmklvn.dnv.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\ProgramData\\chocolatey\\lib\\NuGet.CommandLine\\tools\\nuget.exe\" /p:RestoreSolutionDirectory=\"C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\\\\" /p:SolutionDir=\"C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\\\\" /p:SolutionName=\"ClassLibrary1\" /p:RestoreLockedMode=\"True\"\r\n\r\nAll packages listed in packages.config are already installed.\r\nRunning restore with 16 concurrent jobs.\r\nReading project file C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\ClassLibrary1.csproj.\r\nThe restore inputs for 'ClassLibrary1' have changed. Continuing restore.\r\nPersisting no-op dg to C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\obj\\ClassLibrary1.csproj.nuget.dgspec.json\r\nNU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Disable the RestoreLockedMode MSBuild property or pass an explicit --force-evaluate option to run restore to update the lock file.\r\nCommitting restore...\r\nAssets file has not changed. Skipping assets file writing. Path: C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\obj\\project.assets.json\r\nWriting cache file to disk. Path: C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\obj\\ClassLibrary1.csproj.nuget.cache\r\nWriting packages lock file at disk. Path: C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\packages.lock.json\r\nRestore failed in 83.46 ms for C:\\Users\\ErikFunkenbusch\\source\\repos\\ClassLibrary1\\ClassLibrary1\\ClassLibrary1.csproj.\r\n\r\nNuGet Config files used:\r\n    C:\\Users\\ErikFunkenbusch\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n\r\nFeeds used:\r\n    C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n    https://api.nuget.org/v3/index.json\r\n\r\n```\r\n\r\n### Sample Project\r\n\r\n[ClassLibrary1.zip](https://github.com/NuGet/Home/files/4699515/ClassLibrary1.zip)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-06T05:30:37.4095199Z","RunDurationInMilliseconds":2199}