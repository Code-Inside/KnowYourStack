{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"41357778861","Type":"PullRequestEvent","CreatedAt":"2024-08-26T22:41:35","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10158","RelatedDescription":"Merged pull request \"[NewSDK]Update ValidateCertificate and ProcessSignature for new SDK\" (#10158) at NuGet/NuGetGallery","RelatedBody":"Updates to ValidateCertificate and ProcessSignature to use new SDK stuff and support ManagedIdentity authenciation."},{"Id":"41357707230","Type":"PullRequestEvent","CreatedAt":"2024-08-26T22:37:29","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10160","RelatedDescription":"Merged pull request \"Update System.Formats.Asn1 package\" (#10160) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/Engineering/issues/5532\r\nMissed in https://github.com/NuGet/NuGetGallery/pull/10098"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"41361730448","Type":"IssuesEvent","CreatedAt":"2024-08-27T02:49:03","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13739","RelatedDescription":"Opened issue \"Document source-only packages\" (#13739) at NuGet/Home","RelatedBody":"I couldn't find any official documentation on source level packages (source only packages?) What are they even called officially?\r\n\r\nThe best I found was:\r\n * https://andrewlock.net/creating-source-only-nuget-packages/\r\n * https://medium.com/@attilah/source-code-only-nuget-packages-8f34a8fb4738\r\n\r\nWe also need some guidelines on naming (how to always name them? Package.Name.Source?)\r\n"},{"Id":"41359686280","Type":"IssuesEvent","CreatedAt":"2024-08-27T00:40:32","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13738","RelatedDescription":"Opened issue \"Navigation telemetry for Owner Profile URLs in PM UI\" (#13738) at NuGet/Home","RelatedBody":"Enable the navigation telemetry so we can track usage of the Owner Profile URL feature on the PM UI Packages List and the Details Pane."},{"Id":"41359426237","Type":"IssuesEvent","CreatedAt":"2024-08-27T00:23:30","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13737","RelatedDescription":"Opened issue \"ProjectReference causing PM UI to error with \"Value cannot be null. Parameter name: frameworkIdentifier\"\" (#13737) at NuGet/Home","RelatedBody":"Framework is null on projectReference resulting in ArgumentNullException: \"Value cannot be null. Parameter name: frameworkIdentifier\"\r\n\r\n\r\n![image](https://github.com/user-attachments/assets/f3b91263-28f0-48c0-af33-1f5513b254e7)\r\n\r\n> NuGet.Frameworks.NuGetFramework.NuGetFramework(frameworkIdentifier = null, frameworkVersion = {System.Version}, profile = \"\", platform = \"\", platformVersion = {System.Version}) Line 59\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Frameworks\\NuGetFramework.cs(59)\r\n> NuGet.Frameworks.NuGetFramework.NuGetFramework(frameworkIdentifier = null, frameworkVersion = {System.Version}, platform = \"\", platformVersion = {System.Version}) Line 53\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Frameworks\\NuGetFramework.cs(53)\r\n> NuGet.Frameworks.NuGetFramework.NuGetFramework(framework = null, version = {System.Version}) Line 35\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Frameworks\\NuGetFramework.cs(35)\r\n> NuGet.Frameworks.NuGetFramework.NuGetFramework(framework = null) Line 30\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Core\\NuGet.Frameworks\\NuGetFramework.cs(30)\r\n> NuGet.PackageManagement.VisualStudio.PackageReferenceProject<System.Collections.Generic.Dictionary<string, NuGet.PackageManagement.VisualStudio.Utility.ProjectInstalledPackage>, System.Collections.Generic.KeyValuePair<string, NuGet.PackageManagement.VisualStudio.Utility.ProjectInstalledPackage>>.GetInstalledAndTransitivePackagesAsync(includeTransitivePackages = true, includeTransitiveOrigins = true, token = IsCancellationRequested = false) Line 229\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Projects\\PackageReferenceProject.cs(229)\r\n> [Async Call Stack]\r\n> [Async] NuGet.PackageManagement.VisualStudio.PackageReferenceProject<System.Collections.Generic.Dictionary<string, NuGet.PackageManagement.VisualStudio.Utility.ProjectInstalledPackage>, System.Collections.Generic.KeyValuePair<string, NuGet.PackageManagement.VisualStudio.Utility.ProjectInstalledPackage>>.GetInstalledAndTransitivePackagesAsync(includeTransitiveOrigins = true, token = IsCancellationRequested = false) Line 120\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Projects\\PackageReferenceProject.cs(120)\r\n> [External Code]\r\n> [Async] NuGet.PackageManagement.VisualStudio.NuGetProjectManagerService.GetInstalledAndTransitivePackagesAsync(projectIds = {string[1]}, includeTransitiveOrigins = true, cancellationToken = IsCancellationRequested = false) Line 190\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Services\\NuGetProjectManagerService.cs(190)\r\n> [External Code]\r\n> [Async] NuGet.PackageManagement.VisualStudio.IProjectContextInfoExtensions.GetInstalledAndTransitivePackagesAsync(projectContextInfo = {NuGet.VisualStudio.Internal.Contracts.ProjectContextInfo}, serviceBroker = \"Process view\", includeTransitiveOrigins = true, cancellationToken = IsCancellationRequested = false) Line 75\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Common\\IProjectContextInfoExtensions.cs(75)\r\n> [External Code]\r\n> [Async] NuGet.PackageManagement.VisualStudio.PackageCollection.GetInstalledAndTransitivePackagesAsync(serviceBroker = \"Process view\", projectContextInfos = {NuGet.VisualStudio.Internal.Contracts.IProjectContextInfo[1]}, includeTransitiveOrigins = true, cancellationToken = IsCancellationRequested = false) Line 74\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Common\\PackageCollection.cs(74)\r\n> [Async] NuGet.PackageManagement.VisualStudio.NuGetPackageSearchService.CreatePackageFeedAsync(projectContextInfos = {NuGet.VisualStudio.Internal.Contracts.IProjectContextInfo[1]}, targetFrameworks = {string[1]}, itemFilter = Installed, isSolution = false, recommendPackages = false, sourceRepositories = Count = 1, cancellationToken = IsCancellationRequested = false) Line 453\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Services\\NuGetPackageSearchService.cs(453)\r\n> [Async] NuGet.PackageManagement.VisualStudio.NuGetPackageSearchService.SearchAsync(projectContextInfos = {NuGet.VisualStudio.Internal.Contracts.IProjectContextInfo[1]}, packageSources = {NuGet.VisualStudio.Internal.Contracts.PackageSourceContextInfo[1]}, targetFrameworks = {string[1]}, searchText = \"\", searchFilter = {NuGet.Protocol.Core.Types.SearchFilter}, itemFilter = Installed, isSolution = false, useRecommender = false, cancellationToken = IsCancellationRequested = false) Line 267\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.VisualStudio\\Services\\NuGetPackageSearchService.cs(267)\r\n> [External Code]\r\n> [Async] NuGet.PackageManagement.UI.PackageItemLoader.SearchAsync(cancellationToken = IsCancellationRequested = false) Line 228\r\n> \tat C:\\NuGet.Client\\src\\NuGet.Clients\\NuGet.PackageManagement.UI\\PackageItemLoader.cs(228)\r\n> "},{"Id":"41352448578","Type":"IssuesEvent","CreatedAt":"2024-08-26T19:01:03","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13611","RelatedDescription":"Closed issue \"Create a code path checklist for restore\" (#13611) at NuGet/Home","RelatedBody":"Restore has multiple code paths. Create a doc describing these code paths and have a checklist that asserts all of them are satisfied."},{"Id":"41298772900","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:40:53","Actor":"jaredpar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13734","RelatedDescription":"Opened issue \"Explicitly enabling NuGet audit leads to incorrect NU1008 errors\" (#13734) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n9.0.100-preview.5.24307.\n\n### Worked before?\n\nUnknown\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nClone roslyn: https://github.com/dotnet/roslyn. Then add the following to `Directory.Packages.props`\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\r\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\r\n\r\n    <!-- Add these three lines -->    \r\n    <NugetAuditMode>all</NuGetAuditMode>\r\n    <NugetAuditLevel>moderate</NugetAuditLevel>\r\n    <NugetAudit>true</NuGetAudit>\r\n\r\n  </PropertyGroup>\r\n  <Import Project=\"eng\\Directory.Packages.props\" />\r\n</Project>\r\n\r\n```\r\n\r\nNow run `dotnet restore Rosyln.sln` and it will produce several hundred NU1008 errors. \r\n\r\n> C:\\Users\\jaredpar\\code\\roslyn-2\\src\\Compilers\\Test\\Resources\\Core\\Microsoft.CodeAnalysis.Compiler.Test.Resources.csproj : error NU1008: Projects that use central package version management should not define the version on the PackageReference items but on the PackageVersion items: Microsoft.CodeAnalysis.NetAnalyzers;Roslyn.Diagnostics.Analyzers;Microsoft.VisualStudio.Threading.Analyzers;Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers;RichCodeNav.EnvVarDump.\r\n\r\nThese errors are incorrect as none of the `PackageReference` involved have explicit versions. The repo already uses CPM so this error would've been firing already. Its' the addition of the nuget audit properties that triggers this to happen. \r\n\r\n\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"41297264396","Type":"PullRequestEvent","CreatedAt":"2024-08-23T21:07:00","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13680","RelatedDescription":"Closed pull request \"[One Pager] Transitive origins paths in PM UI\" (#13680) at NuGet/Home","RelatedBody":"One pager for https://github.com/NuGet/Home/issues/13574"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"41298441972","Type":"IssuesEvent","CreatedAt":"2024-08-23T22:18:02","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Closed issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."},{"Id":"41149312432","Type":"IssuesEvent","CreatedAt":"2024-08-19T18:48:41","Actor":"zhhyu","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/73","RelatedDescription":"Opened issue \"Scream Test Impacting Alpine Linux Customers on 08/20/2024\" (#73) at NuGet/Announcements","RelatedBody":"On **August 20, 2024**, NuGet.org will conduct a **scream test** that may affect **Alpine Linux** customers. The test is scheduled to begin at **EDT 01:00 PM** and is expected to last between **24 to 72 hours**. We will adjust the test duration based on customer feedback.\r\n\r\nDuring the scream test, **Alpine Linux** customers may encounter **DNS failures** from the [V3 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) due to this [issue](https://github.com/NuGet/NuGetGallery/issues/9736). To mitigate, we recommend that Alpine Linux customers migrate to **Alpine Linux 3.18.0** or a newer version. These newer versions support **TCP fallback** in the DNS resolver.\r\n\r\nTo ensure uninterrupted service during the test, please use the [V2 API](https://learn.microsoft.com/nuget/nuget-org/overview-nuget-org#api-endpoint-for-nugetorg) instead.\r\n\r\nIf you have any **feedback**, **concerns**, or **questions**, feel free to reach out to us at support@nuget.org or by commenting on the discussion issue: [NuGet/Home#12985](https://github.com/NuGet/Home/discussions/12985)."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-27T03:30:18.9746431Z","RunDurationInMilliseconds":853}