{"Data":{"Blog":{"FeedItems":[{"Title":"Quickly Map Your NuGet Packages to Sources","PublishedOn":"2022-05-04T17:22:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Package Source Mapper\nWhen we introduced Package Source Mapping late last year, we noticed a certain challenge to make onboarding to using the feature easier. Could there be a way for us to...","Href":"https://devblogs.microsoft.com/nuget/quickly-map-your-nuget-packages-to-sources/","RawContent":null},{"Title":"Introducing Central Package Management","PublishedOn":"2022-04-12T16:37:51+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Central Package Management\nDependency management is a core feature of NuGet. Managing dependencies for a single project can be easy. Managing dependencies for multi-project solutions can prove to be...","Href":"https://devblogs.microsoft.com/nuget/introducing-central-package-management/","RawContent":null},{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org will begin requiring two-factor authentication for accounts starting March 8th.\nThe post Requiring two-factor authentication on NuGet.org appeared first on The NuGet Blog.","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We're happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come from by...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we're excited to announce that you can pack a `README.md` file in your NuGet package and have it fully rendered on NuGet.org!\nThe post Add a README to Your NuGet Package appeared first on The...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"23144276523","Type":"PullRequestEvent","CreatedAt":"2022-07-28T21:59:54","Actor":"camigthompson","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9181","RelatedDescription":"Opened pull request \"[A11y][ScreenReader] Prevent Screen Reader from reading non-header elements\" (#9181) at NuGet/NuGetGallery","RelatedBody":"Prevent the 'Prefix Reserved' element on a package page from being read when using the 'H' option in the screen reader by setting the element's `aria-hidden` attribute to `true`.\r\n\r\nCurrent Behavior:\r\n![nvda text original](https://user-images.githubusercontent.com/25823466/181644313-8fffa215-639e-4259-a230-88d89bc0686f.jpg)\r\n\r\nNew Behavior:\r\n![nvda text edited](https://user-images.githubusercontent.com/25823466/181644345-d90c0f02-1423-47ca-b6c7-b358c192b887.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/9173"},{"Id":"23141761284","Type":"IssuesEvent","CreatedAt":"2022-07-28T19:13:40","Actor":"SoftCircuits","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9180","RelatedDescription":"Opened issue \"Forks of my repository are ALSO posted on NuGet\" (#9180) at NuGet/NuGetGallery","RelatedBody":"I have a general question about when people fork one of my repositories, and then post their fork on NuGet.\r\n\r\nFor example, one of my repositories is [Silk](https://www.nuget.org/packages/SoftCircuits.Silk/). This has several forks on GitHub. I don't understand all the details of forks. But one of them also posted their fork on [NuGet](https://www.nuget.org/packages/LbsFeldkirch.Silk/).\r\n\r\nMy question is about this practice. Are there valid reasons for someone to do this? Should there be a way that I can prevent other people from listing my repositories on NuGet? Their fork is getting downloads while I'm trying to attract more attention to my NuGet packages."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"23146133205","Type":"IssuesEvent","CreatedAt":"2022-07-29T01:08:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5218","RelatedDescription":"Closed issue \"have option to cancel restore/Install/Uninstall in VS UI\" (#5218) at NuGet/Home","RelatedBody":""},{"Id":"23146101051","Type":"IssuesEvent","CreatedAt":"2022-07-29T01:04:57","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3788","RelatedDescription":"Closed issue \"PackageReference with a star in version is displayed under the updates tab/incorrectly represented in the installed tab\" (#3788) at NuGet/Home","RelatedBody":"### Steps\r\n1. File > New Project > NETCore console app\r\n2. Add a package reference with a star\r\n3. Open the NuGet UI and go to the installed tab\r\n### Expected\r\n\r\nNo updates displayed, and the correct package info is shown\r\n### Actual\r\n\r\nAn update is displayed and no package info\r\n\r\n``` xml\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.*</Version>\r\n    </PackageReference>\r\n```\r\n\r\n![capture](https://cloud.githubusercontent.com/assets/6381138/19752314/3b52d558-9bb1-11e6-9326-19bc09ffa8ee.PNG)\r\n\r\nAnother customer report: \r\nhttps://developercommunity.visualstudio.com/content/problem/277887/nuget-package-manager-doesnt-respect-package-refer.html\r\n\r\nAnother scenario: https://github.com/NuGet/Home/issues/3101\r\n\r\n[SPEC]\r\nhttps://github.com/NuGet/Home/wiki/%5BSpec%5D-NuGet-Build-Integrated-Project-handling-of-floating-versions-and-ranges-in-Visual-Studio-Client\r\n"},{"Id":"23145923519","Type":"IssuesEvent","CreatedAt":"2022-07-29T00:46:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5525","RelatedDescription":"Closed issue \"Specify exact version of a project dependency\" (#5525) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet.exe\r\n\r\ndotnet.exe --version (if appropriate): 2.0.0-preview2-006497 / 1.0.4\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 enterprise\r\n\r\nWorked before? If so, with which NuGet version: works with .nuspec files\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nRight now we have `.nuspec` files that reference a package built from the same solution. We set the version to be an exact version.\r\n\r\nExample:\r\n\r\n```\r\nSolution.sln\r\n | - Project.Web.csproj\r\n \\ - Project.Core.csproj\r\n```\r\n\r\nOld `Project.Web.nuspec`:\r\n```\r\n<package xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <metadata xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n    <id>Project.Web</id>\r\n    <version>$version$</version>\r\n    <dependencies>\r\n      <dependency id=\"Project.Core\" version=\"[$version$]\" />\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n**Is there a way to specify this in csproj with a project included via `ProjectReference`?**\r\n\r\nE.g. using `Project.Web.csproj`\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net462</TargetFramework>\r\n    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>\r\n    <DebugType>full</DebugType>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Project.Core\\Project.Core.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nwhen we `dotnet pack Solution.sln /p:Version=1.2.3`, we want the generated `Project.Web.nuspec` (inside `Project.Web.nupkg`) to have:\r\n```\r\n    <version>1.2.3</version>\r\n    <dependencies>\r\n      <dependency id=\"Project.Core\" version=\"[1.2.3]\" />\r\n    </dependencies>\r\n```\r\n\r\nbut currently it has:\r\n```\r\n    <version>1.2.3</version>\r\n    <dependencies>\r\n      <dependency id=\"Project.Core\" version=\"1.2.3\" />\r\n    </dependencies>\r\n```"},{"Id":"23145720590","Type":"IssuesEvent","CreatedAt":"2022-07-29T00:24:33","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3336","RelatedDescription":"Closed issue \"NuGet Install flags/behaviors\" (#3336) at NuGet/Home","RelatedBody":"NuGet install today will produce random results when a package has multiple TFMs. The behavior is random, and with the advent of netstandard this becomes much more of a standard practice for package authors.\n### Suggestion\n1. Warn when there are multiple TFMs anywhere in the package graph\n2. Allow for passing a -tfm and -rid flags to the package\n3. Allow for -ignoreDepenencies flag, to allow downloading just the specific package.\n4. [Low Pri] Allow for -All TFMs. This flag will walk all the possible dependency group and restore for them, basically allowing to mirror a full package graph for all possible scenarios.\n### Concern\n\n-ExcludeVersion flag will break side by side scenarios, that are required for running multiple TFMs and in some cases even for restoring a single package graph.\n"},{"Id":"23145666954","Type":"IssuesEvent","CreatedAt":"2022-07-29T00:18:33","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7374","RelatedDescription":"Closed issue \"Current approach to packaging x86 and x64 assemblies \" (#7374) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nCannot find any documentation on how to release x86 and x64 assemblies in a single package. I \r\n\r\nThe [supporting-multiple-target-frameworks](https://docs.microsoft.com/en-us/nuget/create-packages/supporting-multiple-target-frameworks):\r\n> If you have architecture-specific assemblies, that is, separate assemblies that target ARM, x86, and x64, you must place them in a folder named **runtimes** (...)\r\n\r\nThe [nuspec](https://docs.microsoft.com/en-us/nuget/reference/nuspec) reference does not even once mention **runtimes** location\r\n\r\nFrom what I have seen after evaluation of few native packages those are stored under **build\\native\\$(architecture)** or **build\\native\\bin\\$(architecture)** and consumption is supported by .targets\r\n\r\nThe [nuspec](https://docs.microsoft.com/en-us/nuget/reference/nuspec) reference mentions **native** location next to **build** not inside it, but this is not supported by nuget package explorer \r\n\r\nMy current gut feeling is that I should go with **build\\native\\x64** and **build\\native\\x86** but it would be great if I could support it with something more than the gut\r\n\r\nThanks\r\nJ\r\n\r\n\r\n"},{"Id":"23145661066","Type":"IssuesEvent","CreatedAt":"2022-07-29T00:17:53","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11997","RelatedDescription":"Opened issue \"Migrate non-nource-gen comands to System.CommandLine source-gen commands\" (#11997) at NuGet/Home","RelatedBody":"There are commands whose CLI plumbing code is created manually.\r\n\r\nThere's value in migrating those commands using source-gen approach to ensure consistency across all NuGet commands shipped in dotnet.exe\r\n\r\nAlso, in the future, _all_ nuget.exe commands can be migrated using this approach."},{"Id":"23145624767","Type":"IssuesEvent","CreatedAt":"2022-07-29T00:13:43","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11996","RelatedDescription":"Opened issue \"Add source-gen commands to System\" (#11996) at NuGet/Home","RelatedBody":"In our prototype branch, we have migrated some commands to System.CommandLine\r\n\r\nThe goal of this issue is to source-gen those already migrated commands and fix all tests broken during migration."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"22334696634","Type":"IssuesEvent","CreatedAt":"2022-06-14T17:23:29","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE 2022-30184 | .NET Information Disclosure Vulnerability\" (#62) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory  CVE 2022-30184 | .NET Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org credential could be leaked.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/nuget/home/issues. (TBD)\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.2.0 version or earlier.\r\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\r\n\r\n### .NET SDK(s)\r\n\r\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\r\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet.exe, NuGet package, or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version 4.9.5, 5.7.2, 5.9.2, 5.11.2, 6.0.2, 6.2.1). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nIf you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v5.7.2/nuget.exe.\r\n\r\nIf you're using NuGet.exe 5.2.0 or lower, you should download and install 5.2.1 from https://dist.nuget.org/win-x86-commandline/v5.2.1/nuget.exe.\r\n\r\nIf you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nIf you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\nIf you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1\r\n\r\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET 5 or .NET 6.0, please email details to [secure@microsoft.com](secure@microsoft.com). Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at [https://github.com/NuGet/NuGet.Client](https://github.com/NuGet/NuGet.Client). The [Announcements repo](https://github.com/NuGet/Announcements/issues) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2022-30184](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30184)\r\n\r\n### Revisions\r\n\r\nV1.0 (June 14, 2022): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2022-06-14_\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1546878617199804418","CreatedAt":"2022-07-12T15:26:16+00:00","UserScreenname":"nuget","Text":"Imagine you're using the .NET CLI and want to know why a package is included in the dependency graph. What command… https://t.co/jAvoRP7L5w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1545037921455153155","CreatedAt":"2022-07-07T13:32:00+00:00","UserScreenname":"nuget","Text":"What would you name this feature for Central Package Management?\n\nhttps://t.co/WH5iIJ6OtI\n\nOr something else entire… https://t.co/NZGQ8fAmTE","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":1,"RawContent":null},{"Id":"1539709411618193409","CreatedAt":"2022-06-22T20:38:24+00:00","UserScreenname":"nuget","Text":"Notice: https://t.co/KVB7werYQh will be read-only from Friday June 24 08:00 PM PDT until 11:59 PM for maintenance.… https://t.co/flURnlZJkk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":14,"RawContent":null},{"Id":"1523796925275054081","CreatedAt":"2022-05-09T22:47:52+00:00","UserScreenname":"nuget","Text":"Happy Monday friends. Fun proposal this week.🎉\n\nGlobal Package Reference for central package management(CPM).… https://t.co/Qb6rqL0e8K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1521905957651066885","CreatedAt":"2022-05-04T17:33:50+00:00","UserScreenname":"nuget","Text":"📦Quickly Map Your NuGet Packages to Sources📦\n\n🔧 dotnet tool available today on https://t.co/F9kiKfvqkS.\n📍 Single co… https://t.co/vL4fx6HVLt","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1514312671931346950","CreatedAt":"2022-04-13T18:40:50+00:00","UserScreenname":"nuget","Text":"📦Introducing Central Package Management📦\n\n📥 Manage dependencies in a central location.\n📌 Transitive package version… https://t.co/koNbWTt5m2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":247,"FavoriteCount":75,"RawContent":null},{"Id":"1511771370253864962","CreatedAt":"2022-04-06T18:22:36+00:00","UserScreenname":"nuget","Text":"Hi friends,\n\nTwo fun proposals this week!\n\nPack ProjectReferences - https://t.co/Mvu8bTaq5D 📦\n\nIssue Triage Policy… https://t.co/dTbIa9McB2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2022-07-29T03:30:23.4184194Z","RunDurationInMilliseconds":1462}