{"Data":{"Blog":{"FeedItems":[{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"13434389360","Type":"IssuesEvent","CreatedAt":"2020-09-07T11:17:42","Actor":"Sergio0694","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8201","RelatedDescription":"Opened issue \"Poor/unrelated search results when not using the exact package name\" (#8201) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nSearching for the [`Microsoft.Toolkit.HighPerformance` package](https://www.nuget.org/packages/Microsoft.Toolkit.HighPerformance/) displays unrelated search results. This happens both on nuget.org and when searching through Visual Studio. It's almost impossible to find that package unless you actually know the exact name.\r\n\r\nNot exactly the same, but possibly related to https://github.com/NuGet/NuGetGallery/issues/8130?\r\n\r\n### To Reproduce\r\nHere's some search results I tried:\r\n\r\n⛔ \"microsoft high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381423-1eafe680-f10b-11ea-9c3d-6e11c3a8ce57.png)), the package is nowhere to be found\r\n⛔ \"microsoft highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381483-3a1af180-f10b-11ea-8c25-4a05e83bd5bb.png)), same as above\r\n⛔ \"Microsoft HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381513-4acb6780-f10b-11ea-9a3a-7192e410befe.png)), same\r\n⛔ \"microsoft toolkit high performance\" ([screen](https://user-images.githubusercontent.com/10199417/92381544-5a4ab080-f10b-11ea-8a11-24d6600a4e38.png)), same\r\n⛔ \"microsoft toolkit highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381566-68003600-f10b-11ea-8a7d-f5ec4d5dc4bd.png)), same\r\n\r\n✅ \"microsoft.toolkit.highperformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381616-7e0df680-f10b-11ea-8e86-b99fc8fb4a61.png)), works\r\n✅ \"Microsoft.Toolkit.HighPerformance\" ([screen](https://user-images.githubusercontent.com/10199417/92381692-9a119800-f10b-11ea-820b-113cde208b39.png)), works too\r\n\r\n### Expected behavior\r\nThe `Microsoft.Toolkit.HighPerformance` should be the first result for all these various search queries.\r\n\r\n### Screenshots\r\nAttached a screen next to each tested query above.\r\n\r\n### Additional context\r\nIn case it helps, right now we have the following tags in the package:\r\n\r\n> UWP Toolkit Windows core standard unsafe span memory string array stream buffer extensions helpers parallel performance\r\n\r\nThough I'd expect the search results to display that package as first result even just based on the package name, as all those sample queries are an exact match for the package name, once tokenized with the `.` and converted to lowercase.\r\nI wouldn't expect users to search for the package by the exact name (which is also more verbose to type), especially if they just are not aware the package exists at all, so the way the search results are returned right now doesn't help with discoverability.\r\n\r\nThanks! 😊"},{"Id":"13417444076","Type":"IssuesEvent","CreatedAt":"2020-09-04T21:17:34","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8200","RelatedDescription":"Opened issue \"[V3 monitoring] Avoid using obsolete search clients\" (#8200) at NuGet/NuGetGallery","RelatedBody":"The V3 metadata monitoring job uses the obsoleted [`RawSearchResourceV3`](https://github.com/NuGet/NuGet.Client/blob/e97d556a83750bb4f8017e3640bc699d04832657/src/NuGet.Core/NuGet.Protocol/Resources/RawSearchResourceV3.cs#L17-L18) type to monitor specific search instances (see [this](https://github.com/NuGet/NuGet.Jobs/blob/dd26676619c5901c9924fc9b3286ba263c41a446/src/NuGet.Services.Metadata.Catalog.Monitoring/Validation/Test/ValidationContext.cs#L128-L129)). The client team has no immediate plans to delete this type, however, they will delete the `RawSearchResourceV3` if/when they replace Newtonsoft.Json with System.Text.Json.\r\n\r\nWe use the \"raw\" resource as we need to specify the search URLs to monitor. When we rebuild the search index, we need to monitor search URLs that aren't listed in the service index yet. The non-raw resource does not support specifying the search URLs directly."},{"Id":"13416439822","Type":"PullRequestEvent","CreatedAt":"2020-09-04T19:34:31","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8199","RelatedDescription":"Merged pull request \"Don't show missing version warning for absoluteLatest\" (#8199) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8198"},{"Id":"13415912599","Type":"PullRequestEvent","CreatedAt":"2020-09-04T18:39:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8199","RelatedDescription":"Opened pull request \"Don't show missing version warning for absoluteLatest\" (#8199) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/8198"},{"Id":"13415144406","Type":"IssuesEvent","CreatedAt":"2020-09-04T17:21:37","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8198","RelatedDescription":"Opened issue \"/absoluteLatest now shows warning of \"version not found\"\" (#8198) at NuGet/NuGetGallery","RelatedBody":"https://www.nuget.org/packages/Microsoft.Extensions.Logging/absoluteLatest\r\n\r\n![image](https://user-images.githubusercontent.com/94054/92268791-e2288480-ee97-11ea-96e9-4beaf22284a9.png)\r\n\r\nFor \"magic\" version strings like this, we should not show the warning. The warning is meant for a version that actually does not exist, like this:\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Logging/5.0.0-zzz\r\n\r\nThis is a regression from https://github.com/NuGet/NuGetGallery/pull/8155\r\n\r\nThis is also affected:\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Logging/latest/prerelease/preview1\r\n\r\nStrangely this is not affected:\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Logging/latest"},{"Id":"13414343956","Type":"PullRequestEvent","CreatedAt":"2020-09-04T16:07:20","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8158","RelatedDescription":"Merged pull request \"package list can be sorted by ID, owners, downloads and version\" (#8158) at NuGet/NuGetGallery","RelatedBody":"This adds support for ordering the \"Published Packages\" and \"Unlisted Packages\" tables on the \"Manage my packages\" screen, eg:\r\n\r\n![sorting](https://user-images.githubusercontent.com/2829865/90201003-e7585d80-de1c-11ea-97f4-63af32948f99.gif)\r\n\r\nClicking on any of the column headers sorts by that column. I am by no means a JS guru but hopefully this does what we want and works for most people.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7806"},{"Id":"13406135322","Type":"IssuesEvent","CreatedAt":"2020-09-04T02:09:28","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8154","RelatedDescription":"Closed issue \"Symbol server when hosted on prem?\" (#8154) at NuGet/NuGetGallery","RelatedBody":"Is there some documentation for enabling the symbols server functionality when hosted on prem? Or is this not possible?"},{"Id":"13405618628","Type":"IssuesEvent","CreatedAt":"2020-09-04T00:49:31","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8197","RelatedDescription":"Opened issue \"Remove SHA-1 verification in package signature job \" (#8197) at NuGet/NuGetGallery","RelatedBody":"When NuGet client v5.8 is released, upgrade. "},{"Id":"13405563505","Type":"PullRequestEvent","CreatedAt":"2020-09-04T00:39:48","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8158","RelatedDescription":null,"RelatedBody":"This adds support for ordering the \"Published Packages\" and \"Unlisted Packages\" tables on the \"Manage my packages\" screen, eg:\r\n\r\n![sorting](https://user-images.githubusercontent.com/2829865/90201003-e7585d80-de1c-11ea-97f4-63af32948f99.gif)\r\n\r\nClicking on any of the column headers sorts by that column. I am by no means a JS guru but hopefully this does what we want and works for most people.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7806"},{"Id":"13405327119","Type":"PullRequestEvent","CreatedAt":"2020-09-04T00:00:49","Actor":"rocklan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8158","RelatedDescription":"Closed pull request \"package list can be sorted by ID, owners, downloads and version\" (#8158) at NuGet/NuGetGallery","RelatedBody":"This adds support for ordering the \"Published Packages\" and \"Unlisted Packages\" tables on the \"Manage my packages\" screen, eg:\r\n\r\n![sorting](https://user-images.githubusercontent.com/2829865/90201003-e7585d80-de1c-11ea-97f4-63af32948f99.gif)\r\n\r\nClicking on any of the column headers sorts by that column. I am by no means a JS guru but hopefully this does what we want and works for most people.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7806"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"13454046186","Type":"IssuesEvent","CreatedAt":"2020-09-09T02:39:42","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9441","RelatedDescription":"Closed issue \"net5 tfm: produce error when missing TPV\" (#9441) at NuGet/Home","RelatedBody":"Produce an error when a OS flavored .NET 5 TFM is consumed but the package has no TPV in either folder name of the manifest. Is this supposed to be during restore??"},{"Id":"13453305749","Type":"IssuesEvent","CreatedAt":"2020-09-09T00:33:01","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10011","RelatedDescription":"Opened issue \"nuget verify ignores NuGet.Config file or trusted-signers list\" (#10011) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx): 5.7.0\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 v19041\r\n\r\nWorked before? If so, with which NuGet version: No.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Generated a self-signed certificate using script found in [docs](https://docs.microsoft.com/en-us/nuget/create-packages/sign-a-package#create-a-test-certificate)\r\n\r\n2. Executed following command to sign the package\r\n\r\n`nuget sign \"<Package-Path>\" -CertificateStoreLocation CurrentUser -CertificateStoreName My -CertificateSubjectName 'NuGet Test Developer' -OutputDirectory \"<Output-Path>\" -verbosity detailed`\r\n\r\n3. Added a [trusted signer](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-trusted-signers) using CLI command to NuGet.Config file (path = `%AppData%\\NuGet\\NuGet.Config`). `allowUntrustedRoot` is set to `true`.\r\n``` xml\r\n  <trustedSigners>\r\n    <author name=\"ClassLibrary16\">\r\n      <certificate fingerprint=\"<Removed>\" hashAlgorithm=\"SHA256\" allowUntrustedRoot=\"true\" />\r\n    </author>\r\n  </trustedSigners>\r\n```\r\n4. Executed `nuget verify \"<Package-Path>\" -Signatures -ConfigFile \"<Path to Config File>\"` and `nuget verify \"<Package-Path>\" -Signatures` commands which failed to verify the package with the following error message.\r\n\r\n```\r\nSignature Hash Algorithm: SHA256\r\nWARNING: NU3027: The signature should be timestamped to enable long-term signature validity after the certificate has expired.\r\nSignature type: Author\r\nVerifying the author primary signature with certificate:\r\n  Subject Name: CN=NuGet Test Developer, OU=Use for testing purposes ONLY\r\n  SHA1 hash: <Removed>\r\n  SHA256 hash: <Removed>\r\n  Issued by: CN=NuGet Test Developer, OU=Use for testing purposes ONLY\r\n  Valid from: <Removed>\r\n\r\nNU3018: The author primary signature found a chain building issue: UntrustedRoot: A certificate chain processed but terminated in a root certificate which is not trusted by the trust provider.\r\nThe author primary signature's certificate chain validation failed with error(s): UntrustedRoot\r\nFinished with 1 error and 1 warning.\r\n``` \r\n@heng-liu pointed me to a similar issue reported in [stackoverflow ](https://stackoverflow.com/questions/59179504/cant-verify-signatures-with-nuget)\r\n\r\n/cc @dtivel @zkat @aortiz-msft"},{"Id":"13452932783","Type":"IssuesEvent","CreatedAt":"2020-09-08T23:28:06","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9753","RelatedDescription":"Closed issue \"Design for displaying floating versions in the NuGet package Manager UI (project and solution level)\" (#9753) at NuGet/Home","RelatedBody":"@nkolev92 commented on [Mon Jul 06 2020](https://github.com/NuGet/Client.Engineering/issues/399)\n\nDesign for https://github.com/NuGet/Home/issues/3788\n\n"},{"Id":"13451971142","Type":"IssuesEvent","CreatedAt":"2020-09-08T21:12:45","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9991","RelatedDescription":"Closed issue \"PM UI:  does not automatically refresh after install, uninstall, or update\" (#9991) at NuGet/Home","RelatedBody":"This regression applies to the dev-feature-OE.PMUI feature branch only."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12779263648","Type":"IssuesEvent","CreatedAt":"2020-06-30T21:31:53","Actor":"t-mog-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/46","RelatedDescription":"Opened issue \"Advanced Search on NuGet.org\" (#46) at NuGet/Announcements","RelatedBody":"The spec for 'Advanced Search on NuGet.org' is ready for **review**:\r\n\r\n| Spec wiki | Discussion issue |\r\n| :----------:| :----------------: |\r\n| [Advanced Search on NuGet.org](https://github.com/NuGet/Home/wiki/Advanced-Search-on-NuGet.org) | [NuGet/NuGetGallery#2636](https://github.com/NuGet/NuGetGallery/issues/2636) |"},{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":18,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2020-09-09T05:30:37.5094639Z","RunDurationInMilliseconds":1755}