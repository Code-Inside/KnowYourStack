{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20165441952","Type":"PullRequestEvent","CreatedAt":"2022-02-10T03:30:01","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8996","RelatedDescription":"Merged pull request \"[TFM Display][Bug] Any framework fix as supported framework.\" (#8996) at NuGet/NuGetGallery","RelatedBody":"* TFM data now allows a package that contains `any` framework to collect all their asset frameworks and store them in DB.\r\n* `PackageFrameworkCompatibilityFactory` filters `any` framework, this won't show on the package details page.\r\n* `BackfillTfmMetadataCommand` now supports adding `any` as a supported framework.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4219."},{"Id":"20161996442","Type":"PullRequestEvent","CreatedAt":"2022-02-09T22:35:25","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8996","RelatedDescription":"Opened pull request \"[TFM Display][Bug] Any framework fix as supported framework.\" (#8996) at NuGet/NuGetGallery","RelatedBody":"* TFM data now allows a package that contains `any` framework to collect all their asset frameworks and store them in DB.\r\n* `PackageFrameworkCompatibilityFactory` filters `any` framework, this won't show on the package details page.\r\n* `BackfillTfmMetadataCommand` now supports adding `any` as a supported framework.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4219."},{"Id":"20142575104","Type":"PullRequestEvent","CreatedAt":"2022-02-09T01:49:19","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8995","RelatedDescription":"Merged pull request \"[TFM Display][Bug] Packages with backslash path didn't show TFM information.\" (#8995) at NuGet/NuGetGallery","RelatedBody":"* Added normalization of package entry paths using `FileNameHelper.GetZipEntryPath`.\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4220."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20161313174","Type":"IssuesEvent","CreatedAt":"2022-02-09T21:54:13","Actor":"rub8n","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11582","RelatedDescription":"Opened issue \"[Feature]: Provide details that explain why there was an auth related failure for a particular feed\" (#11582) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nVisual Studio Package Management UI\n\n### The Elevator Pitch\n\nOn cases where the auth requests fails (silently before invoking auth prompts or after a new auth prompt fails), we should provide users context on why access to a feed failed and/or why creds were needed. \r\n\r\nThe information could be displayed in the output or error pane and should provide enough data to help users assess how to manage their feeds and/or Visual Studio accounts.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20161178673","Type":"IssuesEvent","CreatedAt":"2022-02-09T21:44:41","Actor":"rub8n","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11581","RelatedDescription":"Opened issue \"[DCR]: Provide context as part of the prompt that asks users to enter their credentials\" (#11581) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nNuGet related auth prompts inside Visual Studio do not identify themselves as such and leave users wondering why Visual Studio is \"randomly\" asking for their credentials.\n\n### Desired Behavior\n\nCalls to show NuGet related auth prompts should identify themselves as coming from NuGet and surface that information to users in a discoverable manner.\n\n### Additional Context\n\n_No response_"},{"Id":"20160939992","Type":"IssuesEvent","CreatedAt":"2022-02-09T21:28:12","Actor":"rub8n","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11580","RelatedDescription":"Opened issue \"[DCR]: Minimize the number of \"retry auth prompts\" to no more than one per feed\" (#11580) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nVisual Studio Package Management UI\n\n### Current Behavior\n\nBased on our discussions, each feed that fails to authenticate seems to prompt for creds up-to four times. \r\n\r\nIf you have failures across multiple feeds, the addition of all these prompts results in the appearance of an infinite auth loop.\n\n### Desired Behavior\n\nThe ask is to modify the current behavior to only ask one additional time per feed rather than 4 times\n\n### Additional Context\n\n_No response_"},{"Id":"20159968779","Type":"IssuesEvent","CreatedAt":"2022-02-09T20:22:41","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11498","RelatedDescription":"Closed issue \"[Feature]: Enable enhanced retry by default\" (#11498) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nIn 17.0, we shipped an off-by-default feature to allow users to specify enhanced retry logic for connection resets.  This was because certain front-ends will reset a connection in certain cases with the assumption that the caller will retry.  However, the current retry logic proved to be too aggressive and would not be able to recover.  This led to this issue being filed: https://github.com/dotnet/runtime/issues/55449.\r\n\r\nThe enhanced retry logic was merged here: https://github.com/NuGet/NuGet.Client/pull/4220.  Since the rollout of the feature by customers, its shown to work well.  We should enable it by default but leave the option for customers to turn it off if needed.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20156430738","Type":"IssuesEvent","CreatedAt":"2022-02-09T16:52:11","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11579","RelatedDescription":"Opened issue \"NuGet.exe list doesn't search from local folders using path on Linux/Ubuntu\" (#11579) at NuGet/Home","RelatedBody":"Currently `nuget list` command tests are not running under Linux/Ubuntu.\nhttps://github.com/NuGet/NuGet.Client/blob/dev/test/NuGet.Clients.Tests/NuGet.CommandLine.Test/NuGetListCommandTest.cs\n\nWhen I try to run it manually try it only accept source name nuget.config\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/4579303c-42f5-4fb9-8e5e-b07680c1005e)\n\nBut Windows and MAC allow to use local path, there's divergent experience:\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/ab3b4f04-c2b6-48a4-9636-72cd4ea483e9)\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/f25efca5-9c12-47c3-a1ad-aff952776d8e)"},{"Id":"20156006216","Type":"IssuesEvent","CreatedAt":"2022-02-09T16:30:52","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11578","RelatedDescription":"Opened issue \"[DCR]: Make enhanced HTTP retry the default, deprecate older retry logic\" (#11578) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nEnhanced HTTP retry [was added](https://github.com/NuGet/NuGet.Client/pull/4220) as an opt-in feature and will be turned on by default in https://github.com/NuGet/NuGet.Client/pull/4403.  Once released, we should get rid of the legacy retry logic that is superseded by it and clean up the code.  We'll also need to remove references to the environment variable to disable it here: \r\n\r\nhttps://github.com/NuGet/docs.microsoft.com-nuget/pull/2664\r\n\r\nWe should leave the env var that configures the retry count and delay.\n\n### Desired Behavior\n\nEnhanced HTTP retry becomes the default and the escape hatch to turn it off is removed along with the legacy code.\n\n### Additional Context\n\n_No response_"},{"Id":"20155903934","Type":"IssuesEvent","CreatedAt":"2022-02-09T16:25:57","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11566","RelatedDescription":"Closed issue \"[DCR]: NuGet-based MSBuild project SDK resolver should run after .NET SDK resolver\" (#11566) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe, MSBuild.exe, dotnet.exe\n\n### Current Behavior\n\nCurrently the NuGet-based MSBuild project SDK resolver runs _before_ the .NET SDK resolver.  The intention was that a user could override built-in SDKs with their own or we could ship official SDKs as NuGet packages.  However, after years of this SDK infrastructure being available, it is extremely unlikely we'll be changing how SDKs are shipped.\r\n\r\n\n\n### Desired Behavior\n\nInstead, we should make the NuGet-based MSBuild project SDK resolver run _after_ the .NET SDK resolver so that if a user is using a built-in SDK like `Microsoft.NET.Sdk` then its resolved faster.  There is a bit of overhead with the NuGet-based MSBuild project SDK resolver so avoiding it when we know the SDK is just built-in is a win for customers.\n\n### Additional Context\n\n_No response_"},{"Id":"20149856476","Type":"IssuesEvent","CreatedAt":"2022-02-09T11:16:13","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11577","RelatedDescription":"Opened issue \"[Bug]: All the checked sources will be unchecked after pressing Up/Down button in Options dialog\" (#11577) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\nRelease-5.11.x\\5.11.1.15\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n### Details about Problem\r\nVS Version: D16.11\\32208.345\r\nNuGet Version: Release-5.11.x\\5.11.1.15\r\nOS Version: Windows-11-Enterprise-21H2\r\n\r\n### Repro steps\r\n1. Launch VS and create a C# Console Application (.NET Core 6.0) project.\r\n2. Open PM UI, click the Settings button and go to Options->NuGet Package Manager->Package Sources.\r\n3. Make sure some sources has already been checked.\r\n4. Select any package source in the list and press Up/Down button.\r\n\r\n### Expected\r\nThe checked status will not be changed.\r\n### Actual\r\nAll the checked sources will be unchecked as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/153188144-d9272733-ee98-45d3-8815-629e4778f294.png)\r\n### Notes\r\n1.It doesn’t happen on + and X button.\r\n2.It doesn’t repro on 17.1 Preview6 and 17.2 Preview1.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20144691686","Type":"IssuesEvent","CreatedAt":"2022-02-09T05:36:07","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11575","RelatedDescription":"Closed issue \"[Bug]: Infinite Scrolling is broken after a package source error\" (#11575) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nVisual Studio Package Management UI\r\n\r\n### Product Version\r\n\r\nd17.2\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n1. Create a package source that doesn't exist (eg, http://localhost:5000)\r\n2. Open PMUI to the Browse tab\r\n3. Wait for the error to indicate the package source could not be reached.\r\n4. Scroll down to the bottom of the list. \r\n\r\nActual: Nothing happens\r\nExpected: More packages are loaded\r\n\r\nThe LoadingStatus state is set to `ErrorOccurred`, and this never changes until a refresh/etc. `ScrollViewer_ScrollChanged` only triggers for the Ready state.\r\n\r\nI would expect clicking \"Dismiss\" or a similar action would return the behavior to normal. Otherwise, I'd expect a message at the bottom to say the list is locked due to the error.\r\n![image](https://user-images.githubusercontent.com/49205731/153046485-a0762fca-6b7c-4254-80bc-01b5990f3e32.png)\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"1414988388495552514","CreatedAt":"2021-07-13T16:41:35+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nNew limits in https://t.co/KVB7werYQh's Search API have been introduced - starting TODAY, J… https://t.co/jzOXM5nFJ7","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":4,"FavoriteCount":4,"RawContent":null},{"Id":"1414616973632180231","CreatedAt":"2021-07-12T16:05:43+00:00","UserScreenname":"nuget","Text":"We are currently investigating several customer reports about problems restoring packages. These reports appear to… https://t.co/TLhd0gN60w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2022-02-10T03:30:24.9597945Z","RunDurationInMilliseconds":1452}