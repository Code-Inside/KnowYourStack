{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12769872385","Type":"IssuesEvent","CreatedAt":"2020-06-30T05:05:24","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8076","RelatedDescription":"Opened issue \"Auxiliary2AzureSearch can fail if downloads.v1.json is being written\" (#8076) at NuGet/NuGetGallery","RelatedBody":"This is because it used `OpenReadAsync` to get a stream, which, in WindowsAzure.Storage, does sequential range requests with `If-Match`."},{"Id":"12767640391","Type":"IssuesEvent","CreatedAt":"2020-06-29T22:03:17","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7875","RelatedDescription":"Closed issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org - Stage 2\" (#7875) at NuGet/NuGetGallery","RelatedBody":"As announced in the blog post [here](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/), it's time to permanently remove support for TLS 1.0, 1.1.\r\nExact date in April is TBD and will be announced several weeks in advance."},{"Id":"12766471971","Type":"IssuesEvent","CreatedAt":"2020-06-29T19:38:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8038","RelatedDescription":"Closed issue \"[Dependents] Add configurable cache time\" (#8038) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12765837303","Type":"IssuesEvent","CreatedAt":"2020-06-29T18:25:59","Actor":"t-mog-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8075","RelatedDescription":"Opened issue \"Add 'Include verified packages' filter to Advanced Search\" (#8075) at NuGet/NuGetGallery","RelatedBody":"We received customer feedback about adding an option to only return verified packages from reserved namespaces in the advanced search panel.\n\ne.g, if a search for \"WebAPI\" is done, with that option enabled, only packages from Microsoft would be shown and not from other package authors.\n\nThis feature is related, yet not part of the #2636 Epic"},{"Id":"12765414847","Type":"IssuesEvent","CreatedAt":"2020-06-29T17:38:18","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7996","RelatedDescription":"Closed issue \"API key generation should highlight 'owner' selection\" (#7996) at NuGet/NuGetGallery","RelatedBody":"We have seen many support requests where authors were not able to push packages using API keys as those API keys were not scoped to the right owner. This happens when there are one or more orgs, the author belong to and want to publish the package against an organization account.\r\n\r\nWe would need to highlight the owner selection when there are ore than one owner to select from.\r\n\r\nMy recommendation is to make it an explicit selection without defaulting to the current owner. This way the author will be aware of the accounts options they want to select."},{"Id":"12765169214","Type":"IssuesEvent","CreatedAt":"2020-06-29T17:11:36","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8056","RelatedDescription":"Closed issue \"Rebuild Azure Search Index\" (#8056) at NuGet/NuGetGallery","RelatedBody":"Rebuild the index to be able to enable future advanced search features."},{"Id":"12757815620","Type":"PullRequestEvent","CreatedAt":"2020-06-28T23:17:52","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8039","RelatedDescription":"Merged pull request \"Make statistical significant figures formatting culture-sensitive\" (#8039) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/8032\r\n\r\nAdds culture-awareness to string operations creating short numbers for Y-axis on graphs. Added culture cases to unit tests. Examples:\r\n\r\nfr-FR:\r\n![image](https://user-images.githubusercontent.com/14225979/84342945-33531000-abea-11ea-94c0-410558360bbe.png)\r\n\r\nen-US:\r\n![image](https://user-images.githubusercontent.com/14225979/84342961-3ea63b80-abea-11ea-80f8-9d4e900f3c5e.png)"},{"Id":"12757602141","Type":"IssuesEvent","CreatedAt":"2020-06-28T22:01:10","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8074","RelatedDescription":"Opened issue \"[Advanced search] Update .NET Core tool documentation\" (#8074) at NuGet/NuGetGallery","RelatedBody":"Current documentation says ([link](https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools#find-a-tool)):\r\n\r\n> Currently, .NET Core doesn't have a tool search feature. Here are some ways to find tools:\r\n> \r\n> * See the list of tools in the natemcmaster/dotnet-tools GitHub repository.\r\n> * Use ToolGet to search for .NET tools.\r\n> * See the source code for the tools created by the ASP.NET Core team in the Tools directory of the dotnet/aspnetcore GitHub repository.\r\n> * Learn about diagnostic tools at .NET Core dotnet diagnostic tools.\r\n> * Search the NuGet website. However, the NuGet site doesn't yet have a feature that lets you search only for tool packages.\r\n\r\nWe should update this once we release the advanced search feature."},{"Id":"12748320218","Type":"IssuesEvent","CreatedAt":"2020-06-26T19:51:26","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8073","RelatedDescription":"Opened issue \"[2020-06-30] Deployment\" (#8073) at NuGet/NuGetGallery","RelatedBody":"## NuGetGallery\r\n\r\nSteps:\r\n- [ ] DEV\r\n- [ ] NuGetGallery merge PR:\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n## Catalog2Registration\r\n\r\nChanges:\r\n- Investigate retries in Catalog2Registration - https://github.com/NuGet/NuGetGallery/issues/8062\r\n\r\nSteps:\r\n- [x] DEV\r\n- [ ] NuGet.Services.Metadata merge PR:\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n## Auxiliary2AzureSearch\r\n\r\nChanges:\r\n- Jobs using BatchPusher should be resilient to HTTP 412 - https://github.com/NuGet/NuGetGallery/issues/8051\r\n\r\nSteps:\r\n- [x] DEV\r\n- [ ] NuGet.Services.Metadata merge PR:\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n## Catalog2AzureSearch\r\n\r\nChanges:\r\n- Jobs using BatchPusher should be resilient to HTTP 412 - https://github.com/NuGet/NuGetGallery/issues/8051\r\n\r\nSteps:\r\n- [x] DEV\r\n- [ ] NuGet.Services.Metadata merge PR:\r\n- [ ] INT\r\n- [ ] PROD\r\n\r\n## Search Service\r\n\r\nChanges:\r\n- Search Service does not retry on connection timeout - https://github.com/NuGet/Engineering/issues/3212\r\n\r\nSteps:\r\n- [x] DEV\r\n- [ ] NuGet.Services.Metadata merge PR:\r\n- [ ] INT\r\n- [ ] PROD\r\n"},{"Id":"12748094365","Type":"PullRequestEvent","CreatedAt":"2020-06-26T19:21:10","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8072","RelatedDescription":"Merged pull request \"Clear banner, aligning with partner teams\" (#8072) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12738242546","Type":"PullRequestEvent","CreatedAt":"2020-06-25T20:18:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8072","RelatedDescription":"Opened pull request \"Clear banner, aligning with partner teams\" (#8072) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12727095353","Type":"IssuesEvent","CreatedAt":"2020-06-24T22:17:34","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8071","RelatedDescription":"Opened issue \"NuGet.org V3 API endpoints should return a HTTP compliant etag\" (#8071) at NuGet/NuGetGallery","RelatedBody":"Currently, the V3 endpoints return an etag without any quotes. This is because V3 is CDN backed by Azure Blob Storage. Azure Blob Storage, prior to [API version 2011-08-18](https://docs.microsoft.com/en-us/rest/api/storageservices/version-2011-08-18) returns malformed etags without quotes. If you send `x-ms-version: 2011-08-18` or later you get proper quotes.\r\n\r\nAccording [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3), etags must be surrounded by double quotes.\r\n\r\n```powershell\r\nPS C:\\Users\\jver\\Desktop> $url = \"https://api.nuget.org/v3-flatcontainer/newtonsoft.json/index.json\"\r\nPS C:\\Users\\jver\\Desktop> (Invoke-WebRequest $url).Headers.ETag\r\n0x8D764B46B9CE392\r\nPS C:\\Users\\jver\\Desktop> (Invoke-WebRequest $url -Headers @{ \"x-ms-version\" = \"2009-09-19\" }).Headers.ETag\r\n0x8D764B46B9CE392\r\nPS C:\\Users\\jver\\Desktop> (Invoke-WebRequest $url -Headers @{ \"x-ms-version\" = \"2011-08-18\" }).Headers.ETag\r\n\"0x8D764B46B9CE392\"\r\n```\r\n\r\nWe could add a CDN rule that fixes this problem so that HTTP compliant clients can use the etags without problems.\r\n- Add  `x-ms-version: 2011-08-18` request header to if not present and vary the cache by `x-ms-version`\r\n- Wrap the response etag in quotes if not present\r\n- Others?\r\n\r\n/cc @erdembayar \r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12768120440","Type":"IssuesEvent","CreatedAt":"2020-06-29T23:24:38","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9442","RelatedDescription":"Closed issue \"net5 tfm: Warn on high TPMV\" (#9442) at NuGet/Home","RelatedBody":"Produce a warning when a project consumes a library with a higher `TargetPlatformMinVersion`"},{"Id":"12768107338","Type":"IssuesEvent","CreatedAt":"2020-06-29T23:22:10","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9733","RelatedDescription":"Closed issue \"Revert \"shared compilation of XmlUtility\"\" (#9733) at NuGet/Home","RelatedBody":"> This change caused CLI failing all over the place https://github.com/dotnet/cli/pull/13406/checks?check_run_id=798366059\r\n\r\n(Broken in https://github.com/NuGet/NuGet.Client/pull/3438)\r\n"},{"Id":"12768105448","Type":"IssuesEvent","CreatedAt":"2020-06-29T23:21:48","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9733","RelatedDescription":"Opened issue \"Revert \"shared compilation of XmlUtility\"\" (#9733) at NuGet/Home","RelatedBody":"> This change caused CLI failing all over the place https://github.com/dotnet/cli/pull/13406/checks?check_run_id=798366059\r\n\r\n(Broken in https://github.com/NuGet/NuGet.Client/pull/3438)\r\n"},{"Id":"12768056661","Type":"IssuesEvent","CreatedAt":"2020-06-29T23:13:04","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9730","RelatedDescription":"Closed issue \"Cache grows indefinitely - add limit feature\" (#9730) at NuGet/Home","RelatedBody":"We have an internal project that delivers a Nuget cache from each nightly build.  I work on a project that consumes this Nuget package.  Our build process automatically updates the Nuget version, so we are always pointing at the latest (unless we are near a release and then we freeze auto-updates).\r\n\r\nThis means that every time I pull the latest changes and build, VS \"restores (download/install)\" the next Nuget package.\r\n\r\nProblem is that this Nuget package is 186 MB compressed, ~600 MB uncompressed, so in the %userprofile\\.nuget cache folder, there is 786 MB for each new version.  Then when you build, VS copies it to the \"packages\" subfolder directory in the solution folder.\r\n\r\n:) can you see where I'm going?\r\n\r\nI just this morning deleted about 50 GB of packages from these two cache locations.  My computer was running slowly and I finally figured out it was because of low disk space/fragmentation issues.  \r\n\r\n**So, I would like to request that a feature to limit the size of the Nuget cache be added.**\r\n\r\nIt could be smart so that it prefers to keep at least one version of every package, and then prefers the latest.  I don't know if you have access to the \"last used by a compile\" metric at this level, but that might a good way to do it too.\r\n\r\nThere are some optimizations we could (and eventually will do) on our side to reduce the size of the package, but it takes time and devops work (even so, the minimum set of dlls required are ~160 MB uncompressed for x64).  The unconstrained cache size problem would just be lessened."},{"Id":"12768000282","Type":"IssuesEvent","CreatedAt":"2020-06-29T23:03:02","Actor":"srdjanjovcic","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9732","RelatedDescription":"Opened issue \"Opening NuGet.sln in Visual Studio shows IDExxxx errors in few source files.\" (#9732) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Source code.\r\n\r\nNuGet version (x.x.x.xxx): \r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nOpening NuGet.sln and certain C# source files results in IDExxx errors in error list, which are violations of coding guidelines.\r\n"},{"Id":"12766856532","Type":"IssuesEvent","CreatedAt":"2020-06-29T20:24:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9186","RelatedDescription":"Closed issue \"NPM Install failed due to  ERR! code EMISSINGARG\" (#9186) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (4.5.0): also checked with other versions.\r\n\r\ndotnet.exe --4.6.\r\n\r\nVS version (if appropriate): 2015, 2017\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): WS 2012\r\n\r\nWorked before? If so, with which NuGet version: worked with same version earlier.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. We have latest stable nuget package for nodejs 5.3.0 and npm 3.5.2 from last 2 year and project was running fine, all of sudden we start getting issue while build with Team city, and we have used npm install in pre build event of vs 2017.\r\nProject is running fine while we run from local and only issue comes when we build with team city.\r\nNode js and npm version is same in teamcity server and local.\r\n\r\n2. [Exec] IF EXIST D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\xxxx.Web\\node_modules\\xxxx rd /s /q  D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\xxxx.Web\\node_modules\\xxxxx &\r\nD:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\xxxx.web\\.bin\\npm install\r\n[11:49:18][Exec] npm WARN deprecated autoprefixer-loader@3.2.0: Please use postcss-loader instead of autoprefixer-loader\r\n[11:49:22][Exec] npm WARN deprecated browserslist@1.1.3: Browserslist 2 could fail on reading Browserslist >3.0 config used in other tools.\r\n[11:49:24][Exec] npm WARN deprecated core-js@2.6.11: core-js@<3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the actual version of core-js@3.\r\n[11:49:24][Exec] npm WARN deprecated core-js@1.2.7: core-js@<3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the actual version of core-js@3.\r\n[11:49:33][Exec] npm WARN deprecated gulp-header@1.8.12: Removed event-stream from gulp-header\r\n[11:49:35][Exec] npm WARN deprecated babel-preset-es2015@6.18.0: Â­Æ’Ã–Ã®  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!\r\n[11:49:35][Exec] npm WARN deprecated extract-text-webpack-plugin@1.0.1: Deprecated. Please use https://github.com/webpack-contrib/mini-css-extract-plugin\r\n[11:49:35][Exec] npm WARN deprecated babel@6.5.2: In 6.x, the babel package has been deprecated in favor of babel-cli. Check https://opencollective.com/babel to support the Babel maintainers\r\n[11:49:38][Exec] npm WARN deprecated array.prototype.flatten@1.2.1: This method has been renamed to \"flat\" - please use `array.prototype.flat` instead\r\n[11:49:51][Exec] npm WARN deprecated browserslist@1.7.7: Browserslist 2 could fail on reading Browserslist >3.0 config used in other tools.\r\n[11:49:53][Exec] WARN engine readable-stream@3.6.0: wanted: {\"node\":\">= 6\"} (current: {\"node\":\"5.3.0\",\"npm\":\"3.5.2\"})\r\n[11:49:55][Exec] npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.\r\n[11:49:57][Exec] npm ERR! Windows_NT 6.3.9600\r\n[11:49:57][Exec] npm ERR! argv \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Node.js.5.3.0\\\\node.exe\" \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Npm.3.5.2\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\r\n[11:49:57][Exec] npm ERR! node v5.3.0\r\n[11:49:57][Exec] npm ERR! npm  v3.5.2\r\n[11:49:57][Exec] npm ERR! code EMISSINGARG\r\n[11:49:57][Exec] \r\n[11:49:57][Exec] EXEC Missing required argument #1\r\n[11:49:57][Exec] npm ERR! typeerror     at andLogAndFinish (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:31:3)\r\n[11:49:57][Exec] npm ERR! typeerror     at fetchPackageMetadata (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:51:22)\r\n[11:49:57][Exec] npm ERR! typeerror     at resolveWithNewModule (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:456:12)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:457:7\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:37:12\r\n[11:49:57][Exec] npm ERR! typeerror     at addRequestedAndFinish (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:82:5)\r\n[11:49:57][Exec] npm ERR! typeerror     at returnAndAddMetadata (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:117:7)\r\n[11:49:57][Exec] npm ERR! typeerror     at pickVersionFromRegistryDocument (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:134:20)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] EXEC error at: \r\n[11:49:57][Exec] npm ERR! typeerror     <http://github.com/npm/npm/issues>\r\n[11:49:57][Exec] npm ERR! Windows_NT 6.3.9600\r\n[11:49:57][Exec] npm ERR! argv \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Node.js.5.3.0\\\\node.exe\" \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Npm.3.5.2\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\r\n[11:49:57][Exec] npm ERR! node v5.3.0\r\n[11:49:57][Exec] npm ERR! npm  v3.5.2\r\n[11:49:57][Exec] npm ERR! code EMISSINGARG\r\n[11:49:57][Exec] \r\n[11:49:57][Exec] EXEC Missing required argument #1\r\n[11:49:57][Exec] npm ERR! typeerror     at andLogAndFinish (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:31:3)\r\n[11:49:57][Exec] npm ERR! typeerror     at fetchPackageMetadata (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:51:22)\r\n[11:49:57][Exec] npm ERR! typeerror     at resolveWithNewModule (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:456:12)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:457:7\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:37:12\r\n[11:49:57][Exec] npm ERR! typeerror     at addRequestedAndFinish (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:82:5)\r\n[11:49:57][Exec] npm ERR! typeerror     at returnAndAddMetadata (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:117:7)\r\n[11:49:57][Exec] npm ERR! typeerror     at pickVersionFromRegistryDocument (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:134:20)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] EXEC error at: \r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\nCould you please let us know how we can resolve, as most of the places we see resolution as upgrade node and npm but we are using nuget package and this is latest stable version available.\r\n\r\nThanks"},{"Id":"12766834793","Type":"IssuesEvent","CreatedAt":"2020-06-29T20:21:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9181","RelatedDescription":"Closed issue \"IVsPackageInstallerServices.IsPackageInstalled  returns false on 1st call\" (#9181) at NuGet/Home","RelatedBody":"## Details about Problem\r\nIn an AsyncPackage visual studio extension, this code detects if the Xamarin Forms nuget is installed when a xaml file is focused.\r\nThe code works fine except the 1st time it is called. It was tracked down to IsPackageInstalled which returns ... false.\r\n\r\nI suppose there is some async work taking place in the nuget component, which needs to load the nugets installed in the current project, and on the 1st call of IsPackageInstalled this initialization step is not finished. This is 100% guess.\r\n\r\n```csharp\r\nvar dte = await vsPackage.GetServiceAsync<DTE,DTE2>();\r\nvar nugetService = componentModelService.GetService<IVsPackageInstallerServices>();\r\n\r\n\r\nvoid OnWindowActivated(Window focus)\r\n{\r\n  if(focus.Document?.Name.ToLowerInvariant().EndsWith(\".xaml\") == true)\r\n  {\r\n     var installed = nugetService.IsPackageInstalled(focus.Project, \"Xamarin.Forms\")\r\n     //RESULT: FALSE on 1st call, even if the package is installed\r\n   }\r\n}\r\n\r\ndte.Events.WindowEvents.WindowActivated += (focus, lostFocus) => OnWindowActivated(focus);\r\n\r\n```\r\n\r\nNuGet product used: NuGet.VisualStudio nuget package\r\nNuGet versions: 5.4.0 and 5.5.0-preview.2.6382\r\nVS version : Version 16.4.5\r\nOS version: Windows  10.0.18363.657\r\n\r\n\r\n## Other suggested things\r\n\r\nI can zip a repro project to someone.\r\n"},{"Id":"12766788215","Type":"IssuesEvent","CreatedAt":"2020-06-29T20:16:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9176","RelatedDescription":"Closed issue \"Content files copied to output are not inherited by other projects\" (#9176) at NuGet/Home","RelatedBody":"Using VS2019 and a solution with lots of csprojs,\r\nI have created a NuGet package which just copies a exe file to /bin.\r\n\r\n`<contentFiles>\r\n  <files include=\"**/helper.exe\" buildActions=\"Content\" copyToOutput=\"true\" />\r\n</contentFiles>`\r\n\r\nThe package works fine, but if I reference the project in an other project, the exe file (contentFiles) is not copied.\r\n\r\nReferencing the package in the top project is not an option, because it is still using the old package.json.\r\n\r\nHow do I get the content files copied to inherited projects?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12582399620","Type":"IssuesEvent","CreatedAt":"2020-06-09T17:20:40","Actor":"joelverhagen","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/45","RelatedDescription":"Opened issue \"CVE-2020-1340 - NuGet Gallery Spoofing Vulnerability\" (#45) at NuGet/Announcements","RelatedBody":"A spoofing vulnerability exists when the NuGet Gallery does not properly sanitize input on package metadata values. An attacker who successfully exploited the vulnerability could perform cross-site scripting attacks and run scripts in the security context of the user viewing the malicious content.\r\n\r\nTo exploit this vulnerability, an attacker with permissions to upload packages could publish specially crafted content on a gallery page.\r\n\r\nThe security update addresses the vulnerability by correcting how NuGet Gallery sanitizes input.\r\n\r\n**MSRC Security Guidance:** [CVE-2020-1340](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1340)\r\n**Security Update:** [v2020.06.09](https://github.com/NuGet/NuGetGallery/releases/tag/v2020.06.09)"},{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-30T05:30:43.5186456Z","RunDurationInMilliseconds":1953}