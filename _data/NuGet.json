{"Data":{"Blog":{"FeedItems":[{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"37751350409","Type":"IssuesEvent","CreatedAt":"2024-04-23T23:45:34","Actor":"SimonCropp","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9783","RelatedDescription":"Closed issue \"Given fuget is always down should it be removed as a link from the gallery?\" (#9783) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37747320517","Type":"PullRequestEvent","CreatedAt":"2024-04-23T20:41:32","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9934","RelatedDescription":"Closed pull request \"Test PR. Do not merge.\" (#9934) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37746415139","Type":"PullRequestEvent","CreatedAt":"2024-04-23T20:10:05","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9934","RelatedDescription":"Opened pull request \"Test PR. Do not merge.\" (#9934) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37709175455","Type":"PullRequestEvent","CreatedAt":"2024-04-22T23:53:20","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9932","RelatedDescription":"Merged pull request \"FI main to dev\" (#9932) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"37708981190","Type":"PullRequestEvent","CreatedAt":"2024-04-22T23:41:54","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9933","RelatedDescription":"Opened pull request \"Solve Package Page Tooltip Accessibility Bugs and Framework Filter Ch…\" (#9933) at NuGet/NuGetGallery","RelatedBody":"**Accessibility issues on production:**\r\n\r\n1.Narrator is unable to read the tooltip content when hover or use tab key to activate \"Framework\" tooltip.\r\n2.When press tab key on package badges, screen reader reads the aria label content but without tooltip display.\r\n3.When any of the \"Framework filter mode\" checkbox selected and dropdown open, user unable to use up and down arrow key to move the selection.\r\n**Solution:**\r\n1.Disable Bootstrap popover JavaScript on framework filter and support framework badges, keep the popover classes and layout, add JavaScript function to make the tooltip popup, narrator can read the tooltip.\r\n2. Add up and down arrow key JavaScript function to make users are able to use arrow keys to move between framework filter mode checkboxes.\r\n**Bug links:**\r\n\r\n1.https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970893\r\n2.https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970906\r\n**Screenshots and video**\r\nFramwork tooltip Before \r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/2fdfaf05-fc14-4595-9a0d-9db1677208e5)\r\n\r\nPackage badge tooltip before:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/84cf6b4c-958d-4c9d-b5da-bac1fcc74fc7)\r\n\r\nPackage badge tooltip after:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/34078976/15b2f25a-905a-40df-a7ed-a2a4e826af07)\r\nBefore:\r\n[before.webm](https://github.com/NuGet/NuGetGallery/assets/34078976/3b6713c9-ed79-4cca-85d8-80ab0aa1af83)\r\nAfter:\r\n[after.webm](https://github.com/NuGet/NuGetGallery/assets/34078976/10ae7aae-995e-41fc-9194-81193cf333c5)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"37708758302","Type":"PullRequestEvent","CreatedAt":"2024-04-22T23:28:52","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9900","RelatedDescription":"Closed pull request \"Solve Package Page Tooltip Accessibility Bugs and Framework Filter Checkbox List Accessibility Bug\" (#9900) at NuGet/NuGetGallery","RelatedBody":"Disable Bootstrap popover JavaScript on framework filter and support framework badges, keep the popover classes and layout, add JavaScript function to make the tooltip popup, narrator can read the tooltip.\r\n\r\nAdd up and down arrow key JavaScript function to make users are able to use arrow keys to move between framework filter mode checkboxes.\r\nBug links:\r\n\r\n- https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970893\r\n- https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970906"},{"Id":"37708754318","Type":"PullRequestEvent","CreatedAt":"2024-04-22T23:28:37","Actor":"Goodyear2017","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9900","RelatedDescription":null,"RelatedBody":"Disable Bootstrap popover JavaScript on framework filter and support framework badges, keep the popover classes and layout, add JavaScript function to make the tooltip popup, narrator can read the tooltip.\r\n\r\nAdd up and down arrow key JavaScript function to make users are able to use arrow keys to move between framework filter mode checkboxes.\r\nBug links:\r\n\r\n- https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970893\r\n- https://devdiv.visualstudio.com/DevDiv/_queries/edit/?tempQueryId=91c293b3-665c-4cb3-876f-e7e4c119b7d1&id=1970906"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"37753426578","Type":"IssuesEvent","CreatedAt":"2024-04-24T01:42:26","Actor":"kfertitta","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13408","RelatedDescription":"Opened issue \"NuGet.SemanticVersion does not parse prerelease versions.\" (#13408) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nNuGet.VisualStudio 17.9.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\nThe `NuGet.VisualStudio` package includes a `SemanticVersion` type with a `TryParse` method that does not accept version strings with a dot `.` after any prerelease tag.\r\n\r\nFor example, `SemanticVersion.TryParse(\"17.6.0-preview.3\")` fails, whereas `SemanticVersion.TryParse(\"17.6.0-preview-3\")` succeeds.  The dot in a prerelease suffix is allowed by SemVer and accepted by the `SemanticVersion` type in the `NuGet.Versioning` package.\r\n\r\nUnfortunately, we require semver parsing in our Visual Studio extension and must use the `NuGet.VisualStudio` package.\n\n### Verbose Logs\n\n_No response_"},{"Id":"37740609082","Type":"IssuesEvent","CreatedAt":"2024-04-23T17:07:14","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13407","RelatedDescription":"Opened issue \"Yellow 'CACHE' bar shown in Visual Studio on add operations from PM UI\" (#13407) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n17.11 preview\n\n### Worked before?\n\nWasn't their prior\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nAdd a package and see a CACHE goldbar above the PM UI\n\n### Verbose Logs\n\n_No response_"},{"Id":"37739194817","Type":"IssuesEvent","CreatedAt":"2024-04-23T16:25:22","Actor":"richlander","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13406","RelatedDescription":"Opened issue \"`dotnet list package` doesn't `restore`\" (#13406) at NuGet/Home","RelatedBody":"This behavior is incorrect, inconsistent, and inconvenient.\r\n\r\nWe have had implicit restore for `dotnet build` for many years. `dotnet list package` would benefit from this same behavior.\r\n\r\n> You first need to build the project in order to have the assets needed for this command to process.\r\n\r\nPer [docs](https://learn.microsoft.com/dotnet/core/tools/dotnet-list-package). That's unfortunate.\r\n\r\nObserved behavior follows.\r\n\r\n```bash\r\n$ dotnet new console -o nugettest\r\n$ cd nugettest\r\n$ rm -r obj\r\n$ dotnet list package\r\nNo assets file was found for `/Users/rich/nuget-test/nuget-test.csproj`. Please run restore before running this command.\r\n$ dotnet restore\r\n  Determining projects to restore...\r\n  Restored /Users/rich/nuget-test/nuget-test.csproj (in 52 ms)\r\n$ dotnet list package\r\nProject 'nugettest' has the following package references\r\n   [net8.0]: No packages were found for this framework.\r\n$ dotnet add package System.Text.Json --version 8.0.3\r\n$ dotnet list package                                \r\nProject 'nuget-test' has the following package references\r\n   [net8.0]: \r\n   Top-level Package       Requested   Resolved\r\n   > System.Text.Json      8.0.3       8.0.3   \r\n$ echo manually add package\r\nmanually add package\r\n$ grep PackageRef nuget-test.csproj  \r\n\r\n    <PackageReference Include=\"System.Text.Json\" Version=\"8.0.3\" />\r\n    <PackageReference Include=\"System.Text.RegularExpressions\" Version=\"4.3.0\" />\r\ndotnet list package              \r\nProject 'nuget-test' has the following package references\r\n   [net8.0]: \r\n   Top-level Package       Requested   Resolved\r\n   > System.Text.Json      8.0.3       8.0.3\r\n$ dotnet list package --vulnerable --include-transitive\r\n\r\nThe following sources were used:\r\n   https://api.nuget.org/v3/index.json\r\n\r\nThe given project `nuget-test` has no vulnerable packages given the current sources.\r\n```"},{"Id":"37738358746","Type":"IssuesEvent","CreatedAt":"2024-04-23T16:02:37","Actor":"richlander","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13405","RelatedDescription":"Opened issue \"`dotnet list packages` should not report false positives for assemblies in `shared` directory\" (#13405) at NuGet/Home","RelatedBody":"A user reported false positives vulnerability findings of .NET product CVEs using `dotnet list package --vulnerable --include-transitive`.\r\n\r\nhttps://github.com/dotnet/sdk/issues/30659#issuecomment-2072429833\r\n\r\nThis behavior should be improved for .NET 8+ (8.0.1xx, 8.0.4xx, 9.0.1xx)."},{"Id":"37735265349","Type":"IssuesEvent","CreatedAt":"2024-04-23T14:45:53","Actor":"meokullu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13404","RelatedDescription":"Closed issue \"Error during updating a version after renaming a package with uppercase.\" (#13404) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI\n\n### Product Version\n\n9.0.100-preview.1.24101.2, 6.10.0.18\n\n### Worked before?\n\nNo.\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n1. Download Prefill https://www.nuget.org/packages/Prefill/2.1.0\r\n2. Update it to PreFill v2.2.0 https://www.nuget.org/packages/PreFill/2.2.0\r\n\r\nDuring update, it returns an error.\r\n\r\n![Screenshot 2024-04-22 002053](https://github.com/NuGet/Home/assets/4971757/7b47bb4d-b5da-494d-aa9f-1e642eda17b5)\n\n### Verbose Logs\n\n_No response_"},{"Id":"37704458947","Type":"IssuesEvent","CreatedAt":"2024-04-22T20:23:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13401","RelatedDescription":"Closed issue \"Unhelpful error message when attempting to add a package (and version) that does not exist\" (#13401) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n8.0.100\r\n(Running on Ubuntu 22.04, if that matters)\r\n\r\n### Worked before?\r\n\r\nNot sure\r\n\r\n### Impact\r\n\r\nIt bothers me. A fix would be nice\r\n\r\n### Repro Steps & Context\r\n\r\n```\r\ndotnet add package SomePackageThatDoesNotExist -v 1.0.0\r\n```\r\n\r\nError message says:\r\n\r\n```\r\nerror: Package 'SomePackageThatDoesNotExist' is incompatible with 'all' frameworks in project '/home/brian/projects/Example/Example.csproj'.`\r\n```\r\n\r\nThis surprised me at first, because it seemed to imply that the package I was requesting existed but had some sort of incompatibility, but in reality the problem was that I requested to add a package that simply did not exist.\r\n\r\nA more helpful error message would be something like:\r\n\r\n`error: Package 'SomePackageThatDoesNotExist' not found`\r\n\r\nOr, if the package exists, but the version does not, then:\r\n\r\n`error: Package 'SomePackageThatDoesNotExist' version 1.0.0 not found`\r\n\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\n~/projects/Example $ dotnet new console\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring /home/brian/projects/Example/Example.csproj:\r\n  Determining projects to restore...\r\n  Restored /home/brian/projects/Example/Example.csproj (in 198 ms).\r\nRestore succeeded.\r\n\r\n\r\n~/projects/Example $ dotnet add package SomePackageThatDoesNotExist -v 1.0.0\r\n  Determining projects to restore...\r\n  Writing /tmp/tmpvhwqEa.tmp\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/home/brian/dotnet/sdk/8.0.100/trustedroots/codesignctl.pem'.\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/home/brian/dotnet/sdk/8.0.100/trustedroots/timestampctl.pem'.\r\ninfo : Adding PackageReference for package 'SomePackageThatDoesNotExist' into project '/home/brian/projects/Example/Example.csproj'.\r\ninfo : Restoring packages for /home/brian/projects/Example/Example.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/somepackagethatdoesnotexist/index.json\r\ninfo :   NotFound https://api.nuget.org/v3-flatcontainer/somepackagethatdoesnotexist/index.json 464ms\r\nerror: NU1101: Unable to find package SomePackageThatDoesNotExist. No packages exist with this id in source(s): nuget.org\r\ninfo :   CACHE https://api.nuget.org/v3/vulnerabilities/index.json\r\ninfo :   CACHE https://api.nuget.org/v3-vulnerabilities/2024.04.18.07.01.18/vulnerability.base.json\r\ninfo :   CACHE https://api.nuget.org/v3-vulnerabilities/2024.04.18.07.01.18/2024.04.19.13.01.21/vulnerability.update.json\r\nerror: Package 'SomePackageThatDoesNotExist' is incompatible with 'all' frameworks in project '/home/brian/projects/Example/Example.csproj'.\r\n```\r\n\r\nSurprisingly, I get a different, slightly more helpful, error message if I leave off the `--version 1.0.0`, although it still sort of implies that the package exists, just that there are \"no versions available\" (which I guess is accurate!):\r\n```\r\n~/projects/Example $ dotnet add package SomePackageThatDoesNotExist\r\n  Determining projects to restore...\r\n  Writing /tmp/tmpf9LH6p.tmp\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/home/brian/dotnet/sdk/8.0.100/trustedroots/codesignctl.pem'.\r\ninfo : X.509 certificate chain validation will use the fallback certificate bundle at '/home/brian/dotnet/sdk/8.0.100/trustedroots/timestampctl.pem'.\r\ninfo : Adding PackageReference for package 'SomePackageThatDoesNotExist' into project '/home/brian/projects/Example/Example.csproj'.\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/somepackagethatdoesnotexist/index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/somepackagethatdoesnotexist/index.json 464ms\r\ninfo :   GET https://api.nuget.org/v3/registration5-gz-semver2/somepackagethatdoesnotexist/index.json\r\ninfo :   NotFound https://api.nuget.org/v3/registration5-gz-semver2/somepackagethatdoesnotexist/index.json 193ms\r\nerror: There are no versions available for the package 'SomePackageThatDoesNotExist'.\r\n\r\n\r\nUsage: NuGet.CommandLine.XPlat.dll package add [options]\r\n\r\nOptions:\r\n  -h|--help               Show help information\r\n  --force-english-output  Forces the application to run using an invariant, English-based culture.\r\n  --package               Id of the package to be added.\r\n  --version               Version of the package to be added.\r\n  -d|--dg-file            Path to the dependency graph file to be used to restore preview and compatibility check.\r\n  -p|--project            Path to the project file.\r\n  -f|--framework          Frameworks for which the package reference should be added.\r\n  -n|--no-restore         Do not perform restore preview and compatibility check. The added package reference will be unconditional.\r\n  -s|--source             Specifies NuGet package sources to use during the restore.\r\n  --package-directory     Directory to restore packages in.\r\n  --interactive           Allow the command to block and require manual action for operations like authentication.\r\n  --prerelease            Allows prerelease packages to be installed.\r\n```\r\n\r\nAlso, in the above output, it prints the usage message for some unknown reason. I think it should just end after the error is printed.\r\n\r\n"},{"Id":"37704317018","Type":"IssuesEvent","CreatedAt":"2024-04-22T20:18:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13393","RelatedDescription":"Closed issue \"PackagingException thrown due to non-existing package fallback folder\" (#13393) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nVS: 17.10, .NET SDK: 8.0.300-preview.24203.14\n\n### Worked before?\n\nNot sure\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nOn a fresh machine after installing VS and trying to build the PowerToys repo I get:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly. [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: NuGet.Packaging.Core.PackagingException: Unable to find fallback package folder 'C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages'. [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at NuGet.Packaging.FallbackPackagePathResolver..ctor(String userPackageFolder, IEnumerable`1 fallbackPackageFolders) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.NuGetPackageResolver.CreateResolver(IEnumerable`1 packageFolders) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task) [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: at Microsoft.NET.Build.Tasks.TaskBase.Execute() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.300-preview.24203.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(266,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [D:\\Code\\PowerToys\\src\\modules\\launcher\\Wox.Test\\Wox.Test.csproj]\r\n```\r\n\r\nAfter digging in, it appears that the `ResolvePackageAssets` task from the SDK doesn't do much but does call into the NuGet libraries, which then end up blowing up when searching through fallback package folders.\r\n\r\nSpecifically, `C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config` and `C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config` both exist and contain a reference to `C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages`, which does *not* exist. The parent directory \"Shared\" does, but the \"NuGetPackages\" dir does not.\r\n\r\nCreating the \"NuGetPackages\" dir manually, and just leaving it empty, is a workaround to this issue.\r\n\r\nMy recommendation would be to simply remove this throw: https://github.com/NuGet/NuGet.Client/blob/d01e48ace560689897c1c642591659126736feb8/src/NuGet.Core/NuGet.Packaging/FallbackPackagePathResolver.cs#L60. Instead I think it should just ignore the non-existing directories since an existing empty dir effectively is also just ignored (no packages will be found there).\r\n\r\nAlternately, the VS installation process which generates the `Microsoft.VisualStudio.FallbackLocation.config` and `Microsoft.VisualStudio.Offline.config` files needs to create the directory they reference.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"36557473750","Type":"IssuesEvent","CreatedAt":"2024-03-14T16:05:16","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"},{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-24T03:30:17.6903819Z","RunDurationInMilliseconds":992}