{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35620778974","Type":"PullRequestEvent","CreatedAt":"2024-02-13T01:54:29","Actor":"sbanni","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9803","RelatedDescription":"Merged pull request \"Update MaxSupportedMinClientVersion\" (#9803) at NuGet/NuGetGallery","RelatedBody":"NuGet.exe 6.9.1 was released. Updating Gallery to support it."},{"Id":"35620643216","Type":"PullRequestEvent","CreatedAt":"2024-02-13T01:47:56","Actor":"sbanni","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9803","RelatedDescription":"Opened pull request \"Update MaxSupportedMinClientVersion\" (#9803) at NuGet/NuGetGallery","RelatedBody":"NuGet.exe 6.9.1 was released. Updating Gallery to support it."},{"Id":"35605592342","Type":"IssuesEvent","CreatedAt":"2024-02-12T15:26:52","Actor":"FraserElectronics","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9802","RelatedDescription":"Opened issue \"Failing to upload nuget package on fresh install of NuGet Gallery\" (#9802) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use this version\n\n### Describe the bug\n\nI have built and installed NugGetGallery on my Azure account as per the instructions given in this repository.  I have created an account on my NuGetGallery site and then created an API key. When I try and push a nuget package from the Package Manager Console in Visual Studio 2022 I get:\r\n\r\n```\r\ndotnet nuget push .\\MyNugetPackage.1.0.0.nupkg --api-key ********************************************** --source https://******.azurewebsites.net\r\nPushing MyNugetPackage.1.0.0.nupkg to 'https://******.azurewebsites.net'...\r\n  PUT https://******.azurewebsites.net/api/v2/package/\r\n  InternalServerError https://******.azurewebsites.net/api/v2/package/ 411ms\r\n  PUT https://******.azurewebsites.net/api/v2/package/\r\n  InternalServerError https://******.azurewebsites.net/api/v2/package/ 120ms\r\n  PUT https://******.azurewebsites.net/api/v2/package/\r\n  InternalServerError https://******.azurewebsites.net/api/v2/package/ 123ms\r\nerror: Response status code does not indicate success: 500 (The remote server returned an error: (409) Conflict.).\r\n```\r\n\r\nIf I use the Upload option on the website and browse to my nupkg, it fills in all the fields correctly but when I click the Submit button, it shows:\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/19693425/a37ea436-9673-4790-a704-2e017fe065a2)\r\n\r\nI know there is not much information to go on but was wondering if anyone can point me in the direction of getting more diagnostic information as to why this fails.\r\n\r\nAndy\n\n### Repro Steps\n\nCloned NuGetGallery\r\nBuilt and installed into Azure as documented.\r\nCreated a user account on the NuGetGallery website and generated an API key.\r\nTried to push a nuget package to the site using the generated API key.\n\n### Expected Behavior\n\nThis is a very basic nuget package containing a simple .NET assembly. I would expect it to upload without problem.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35597589849","Type":"IssuesEvent","CreatedAt":"2024-02-12T11:03:35","Actor":"sirhc101","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9801","RelatedDescription":"Closed issue \"[NuGet.org Bug]: E-Mail at support@nuget.org rejected\" (#9801) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nHi,\r\n\r\nI tried to send a email to support@nuget.org and account@nuget.org, as described in this documentation: https://learn.microsoft.com/en-us/nuget/nuget-org/id-prefix-reservation#id-prefix-reservation-on-nugetorg \r\n\r\nThe email is rejected\n\n### Repro Steps\n\n1. Send email to support@nuget.org or account@nuget.org\n\n### Expected Behavior\n\nEmail should be accepted.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/39621236/b91f1081-7625-4cbf-9e9c-decbb25b4788)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/39621236/f680abb7-fad5-4671-b02b-1ffd871c2e13)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35597405712","Type":"IssuesEvent","CreatedAt":"2024-02-12T10:57:13","Actor":"sirhc101","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9801","RelatedDescription":"Opened issue \"[NuGet.org Bug]: E-Mail at support@nuget.org rejected\" (#9801) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nHi,\r\n\r\nI tried to send a email to support@nuget.org and account@nuget.org, as described in this documentation: https://learn.microsoft.com/en-us/nuget/nuget-org/id-prefix-reservation#id-prefix-reservation-on-nugetorg \r\n\r\nThe email is rejected\n\n### Repro Steps\n\n1. Send email to support@nuget.org or account@nuget.org\n\n### Expected Behavior\n\nEmail should be accepted.\n\n### Screenshots\n\n![image](https://github.com/NuGet/NuGetGallery/assets/39621236/b91f1081-7625-4cbf-9e9c-decbb25b4788)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/39621236/f680abb7-fad5-4671-b02b-1ffd871c2e13)\r\n\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35573763485","Type":"IssuesEvent","CreatedAt":"2024-02-10T21:38:26","Actor":"bruno-garcia","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9800","RelatedDescription":"Opened issue \"[NuGet.org Bug]: Package download numbers are not incrementing\" (#9800) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nusing `https://api.nuget.org/v3/index.json` and the search API, we've seen the same number return since January 20th.\r\n\r\n```\r\n Sentry     | 2024-01-21 00:00:00 |       46888265\r\n Sentry     | 2024-01-20 00:00:00 |       46888265\r\n Sentry     | 2024-01-19 00:00:00 |       46804424\r\n Sentry     | 2024-01-18 00:00:00 |       46712023\r\n```\r\n\r\nOriginal NuGet Trends issue: \r\n* https://github.com/dotnet/nuget-trends/issues/258\n\n### Repro Steps\n\nHit the NuGet API: https://azuresearch-usnc.nuget.org/query?q=Sentry\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/6d59168e-7c70-418e-b4ed-4cca3d912580)\r\n\r\nYou can observe no change in days through NuGet Trends: https://nugettrends.com/packages?months=24&ids=Sentry\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/30d33601-e63f-43ef-bbdd-2ad7ef43990a)\r\n\n\n### Expected Behavior\n\nValue to match NuGet Gallery\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/ece4d15f-94c0-4d48-8e4f-c0a280de8853)\r\n\r\nhttps://www.nuget.org/packages/Sentry\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/0c81e9d5-4842-4615-ab84-318b90868137)\r\n\n\n### Screenshots\n\nabove\n\n### Additional Context and logs\n\nits been raised here:\r\n\r\n* https://github.com/NuGet/NuGetGallery/issues/9791#issuecomment-1937101754"},{"Id":"35535658663","Type":"IssuesEvent","CreatedAt":"2024-02-09T02:59:26","Actor":"d1820","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9799","RelatedDescription":"Opened issue \"[Feature]: Adding https://raw.githubusercontent.com/ to Trusted Domain\" (#9799) at NuGet/NuGetGallery","RelatedBody":"### Related Problem\n\nImages hosted in a repo that can be served up in the readme should be allowed to be trusted esp since github.com is already a trusted domain\n\n### The Elevator Pitch\n\nIf github.com is already on the list adding the ability to serve raw image content from a subdomain of theirs should be allowed as well\n\n### Additional Context and Details\n\nCan view Example here: https://www.nuget.org/packages/DanTurco.GoogleMapExport2KML/\r\n\r\nreferences images like \r\nhttps://raw.githubusercontent.com/d1820/GoogleMapExport2KML/ac9c689f9df0b1c023bd574eb1ac3d2677a4cb3b/GifInstructions/typical.gif"},{"Id":"35534816109","Type":"IssuesEvent","CreatedAt":"2024-02-09T01:52:40","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9798","RelatedDescription":"Closed issue \"New Issue Title\" (#9798) at NuGet/NuGetGallery","RelatedBody":"Description of the issue..."},{"Id":"35534803994","Type":"IssuesEvent","CreatedAt":"2024-02-09T01:51:58","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9798","RelatedDescription":"Opened issue \"New Issue Title\" (#9798) at NuGet/NuGetGallery","RelatedBody":"Description of the issue..."},{"Id":"35465257941","Type":"PullRequestEvent","CreatedAt":"2024-02-07T02:33:44","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9782","RelatedDescription":"Merged pull request \"[Search-by-TFM] New Framework Filter Options UI\" (#9782) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/5171\r\n\r\nThis change adds 2 new framework filter options to the search page:\r\n\r\n- **Include Computed Frameworks**\r\n     Checkbox that sets a boolean `true`/`false` value (default is `true`). When this is set to `false`, we filter packages only by their asset frameworks, and only show asset framework badges. When this is set to `true`, we filter packages by asset frameworks + computed frameworks, and we show both types of badges as well.\r\n- **Framework Filter Mode**\r\n     Toggle that chooses between `All` and `Any` (default is `All`). This affects cases when multiple framework or TFM filters are selected. When this is set to `All`, we will show packages matching **all** the framework and TFM filters. If it is set to `Any`, we will show packages matching **any one of** the selected filters.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/f7fb58e7-95f8-4200-aaa4-40af73fff1bf)\r\n\r\nThe changes are behind a feature flag.\r\n\r\nI ran Accessibility FastPass, and it didn't throw up any issues. I also checked color contrast for the new UI elements.\r\n\r\n**NOTE:** I made an additional bug fix for the TFM badges in this PR. The TFM badges link to the frameworks tab on the package details page, but we weren't providing a package version, so the links sometimes took us to the wrong version's page. I've now fixed that.\r\n\r\n### Screenshots/Demos\r\n\r\n<details><summary>Before vs. after </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/06799f14-fbce-43d9-80ca-10ba068d0ce2)\r\nvs. (see top of the Frameworks filter section on the left)\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9350ef7d-ed72-45c7-b519-adfb90d8b237)\r\n</details> \r\n\r\n<details><summary>Include computed frameworks demo </summary>\r\n\r\nhttps://github.com/NuGet/NuGetGallery/assets/82980589/285752c9-eb6a-4609-ba9e-e225bbd18039\r\n</details> \r\n\r\n<details><summary>Framework filter mode demo </summary>\r\n\r\nhttps://github.com/NuGet/NuGetGallery/assets/82980589/08d0f892-ae5b-42f7-8917-92a9024bc0bb\r\n\r\nInfo tooltip:\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/d6841353-af3a-4c72-9c42-81d0dede62b6)\r\n</details> \r\n\r\n<details><summary>Narrow/mobile screens </summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/aface9ca-e8c7-4348-a42d-5a7eb093de8a)\r\n</details> \r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35619310161","Type":"IssuesEvent","CreatedAt":"2024-02-13T00:38:32","Actor":"thompson-tomo","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13235","RelatedDescription":"Closed issue \"Unable to use Authenticated sources with Central Package Management\" (#13235) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nMSBuild.exe\r\n\r\n### Product Version\r\n\r\n17.8.3+195e7f5a3 for .NET\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\n### Reproduction\r\n#### Option 1\r\n1. Add a GlobalPackageReference to Directory.Packages.props for a package which requires Authentication\r\n2. In nuget.config ensure that package mapping points it to authenticated source\r\n3. Run dotnet build --configfile nuget.Config --configuration release /nodereuse:false on machine which doesn't have package in cache\r\n4. Observe error\r\n\r\n#### Option 2:\r\n1. Add a PackageVersion to Directory.Packages.props for a package which requires Authentication\r\n2. Add a package reference to a project in the solution for the new package version added\r\n3. In nuget.config ensure that package mapping points it to authenticated source\r\n4. Run dotnet build --configfile nuget.Config --configuration release /nodereuse:false on machine which doesn't have package in cache\r\n5. Observe error \r\n\r\n### Config file\r\n\t<packageSources>\r\n\t\t<add key=\"NuGet.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n\t\t<add key=\"InternalNexus\" value=\"https://url/nexus/repository/nuget-releases\" />\r\n\t</packageSources>\r\n\r\n\t<packageSourceCredentials>\r\n\t\t<SKIDATANuget>\r\n\t\t\t<add key=\"Username\" value=\"%NEXUS_USERNAME%\" />\r\n\t\t\t<add key=\"ClearTextPassword\" value=\"%NEXUS_PASSWORD%\" />\r\n\t\t</SKIDATANuget>\r\n\t</packageSourceCredentials>\r\n\r\n\t<!-- Used to disable package sources  -->\r\n\t<disabledPackageSources />\r\n\t<!-- Define mappings by adding package ID patterns beneath the target source. -->\r\n\t<packageSourceMapping>\r\n\t\t<packageSource key=\"NuGet.org\">\r\n\t\t\t<package pattern=\"*\" />\r\n\t\t</packageSource>\r\n\t\t<packageSource key=\"InternalNexus\">\r\n\t\t\t<package pattern=\"SkiData.*\" />\r\n\t\t\t<package pattern=\"JSNLOG.*\" />\r\n\t\t\t<package pattern=\"Steeltoe.*\" />\r\n\t\t</packageSource>\r\n\t</packageSourceMapping>\r\n\r\n%NEXUS_USERNAME% and %NEXUS_PASSWOR% are both CI/CD variables and even tested with explicitly setting the password in the nuget.config but same result. I am able to login to the nuget from my pc using the credientials and everything works fine when not using central package management.\r\n\r\n### Verbose Logs\r\n\r\n```shell\r\nPackage source mapping matches found for package ID 'Microsoft.Extensions.Hosting.WindowsServices' are: 'NuGet.org'. (TaskId:46)\r\nUnauthorized https://url/nexus/repository/nuget-releases/FindPackagesById()?id='Skidata.CNP.Build.Properties'&semVerLevel=2.0.0 144ms (TaskId:46)\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://url/nexus/repository/nuget-releases/FindPackagesById()?id='Skidata.CNP.Build.Properties'&semVerLevel=2.0.0'.\r\nResponse status code does not indicate success: 401 (Unauthorized). (TaskId:46)\r\n```\r\n"},{"Id":"35617736135","Type":"PullRequestEvent","CreatedAt":"2024-02-12T23:07:41","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/13215","RelatedDescription":"Merged pull request \"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning\" (#13215) at NuGet/Home","RelatedBody":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service."},{"Id":"35616648668","Type":"IssuesEvent","CreatedAt":"2024-02-12T22:15:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13236","RelatedDescription":"Closed issue \"`dotnet list {SolutionName}.sln package` error\" (#13236) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe\r\n\r\n### Product Version\r\n\r\n8.0.101\r\n\r\n### Worked before?\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\n### Context\r\nWhen running the command `dotnet list {SolutionName}.sln package` in the command line, I receive the following error:\r\n'The imported project \"{PathToFile}{NameOfPropsFile}.props\" was not found. Confirm that the expression in the Import declaration \"{NameOfPropsFile}.props\" is correct, and that the file exists on disk.'\r\n\r\nIn VS2022, the solution can be built without failure. The error only occurs when using the command.\r\n\r\n### Repro Steps\r\nThis concrete example of the error message, which is a consequence of following the steps for reproduction below, seems to use a faulty path:\r\n'The imported project \"{LocalPath}\\DotNetListError\\DotNetListError\\Default.CPP.Project.props\" was not found. Confirm that the expression in the Import declaration \"Default.CPP.Project.props\" is correct, and that the file exists on disk.'\r\n**However, the actual path to the `.props` file is \"{LocalPath}\\DotNetListError\\Default.CPP.Project.props\"!**\r\n\r\n1. Create a new solution with an empty C++ project.\r\n2. Add a `.props` file in the same directory as the `.sln` file.\r\n3. Reference the file in the `.vcxproj` file of the project using `$(SolutionDir)`.\r\n4. Build the solution; it should be successful.\r\n5. Try to run the `dotnet list {SolutionName}.sln package` command.\r\n\r\nSee this minimal example for reference: https://github.com/asalletmaier/dotnet-list-error\r\n\r\n### Further technical details\r\nThe IDE I am using is `Microsoft Visual Studio Enterprise 2022 (64-bit) - Version 17.8.6`.\r\n\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"35616577645","Type":"IssuesEvent","CreatedAt":"2024-02-12T22:12:27","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9933","RelatedDescription":"Closed issue \"Command “dotnet restore -f --use-lock-file” created a lock file for every project when the solution have project reference \" (#9933) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6783\r\nVS Version: Master\\30423.24\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Create a solution with two projects [e.g. C# Class Library (.NET Core 5.0)] called “CL1” and “CL2” in VS.\r\n2. Make the project graph structure: CL1 -> CL2 and **close the solution/VS**.\r\n3. Open “Developer Command Prompt”, cd to CL1 project path and input command “dotnet restore -f --use-lock-file”.\r\n4. Open the solution and check the Solution Explorer.\r\n## Expected Result\r\nThere is only one lock file created under project CL1.\r\n## Actual Result\r\nCommand “dotnet restore -f --use-lock-file” created a lock file for every project as below.\r\n![image](https://user-images.githubusercontent.com/20632625/91064083-63467700-e661-11ea-8dba-4f5a4aac928b.png)\r\n## Note\r\nIt is a legacy issue, the key point to repro is closing solution/VS in step2.\r\n\r\n\r\n\r\n"},{"Id":"35616425046","Type":"IssuesEvent","CreatedAt":"2024-02-12T22:05:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13233","RelatedDescription":"Closed issue \"Consolidate packages.config restore implementations by minimizing discrepancies\" (#13233) at NuGet/Home","RelatedBody":"Unfortunately we have 3 different implementations of packages.config restore.\r\nA lot of that is due to the difference in reading the packages and part of it is not wanting to make public APIs for PC restore.\r\n\r\nThose 3 implementations are:\r\n\r\nnuget.exe restore\r\nmsbuild.exe /t:restore\r\nVS restore\r\nThere's a bunch of differences in how the PackageRestoreManager gets called. It's made my work for PC restore vulnerability checking challenging, because the calls are not unified."},{"Id":"35613670703","Type":"IssuesEvent","CreatedAt":"2024-02-12T20:09:44","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13238","RelatedDescription":"Opened issue \"NuGet.CommandLineXPlat should assert absolute path for `dotnet list package`\" (#13238) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\ndotnet.exe\n\n### The Elevator Pitch\n\nWe currently have dotnet list package implemented so that the NuGet side always expects an absolute path. However, we do not assert this. We should assert it and print out a clear error message if an absolute path is not provided. In addition, we should also add an integration test for this command: https://github.com/NuGet/NuGet.Client/tree/dev/test/NuGet.Core.FuncTests/Dotnet.Integration.Test. \n\n### Additional Context and Details\n\n_No response_"},{"Id":"35612057601","Type":"IssuesEvent","CreatedAt":"2024-02-12T19:04:33","Actor":"jgonz120","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12715","RelatedDescription":"Closed issue \"Stop using JObject in assets file reading to reduce allocations\" (#12715) at NuGet/Home","RelatedBody":"https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1817651"},{"Id":"35611545932","Type":"IssuesEvent","CreatedAt":"2024-02-12T18:44:35","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13237","RelatedDescription":"Opened issue \"Parameter 'name' cannot be empty\" (#13237) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nNuGet.exe, dotnet.exe\n\n### The Elevator Pitch\n\nTracker for https://github.com/dotnet/docs/issues/39391#issuecomment-1927522823\n\n### Additional Context and Details\n\n_No response_"},{"Id":"35592476160","Type":"IssuesEvent","CreatedAt":"2024-02-12T07:50:13","Actor":"asalletmaier","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13236","RelatedDescription":"Opened issue \"`dotnet list {SolutionName}.sln package` error\" (#13236) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n8.0.101\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n### Context\r\nWhen running the command `dotnet list {SolutionName}.sln package` in the command line, I receive the following error:\r\n'The imported project \"{PathToFile}{NameOfPropsFile}.props\" was not found. Confirm that the expression in the Import declaration \"{NameOfPropsFile}.props\" is correct, and that the file exists on disk.'\r\n\r\nIn VS2022, the solution can be built without failure. The error only occurs when using the command.\r\n\r\n### Repro Steps\r\nThis concrete example of the error message, which is a consequence of following the steps for reproduction below, seems to use a faulty path:\r\n'The imported project \"{LocalPath}\\DotNetListError\\DotNetListError\\Default.CPP.Project.props\" was not found. Confirm that the expression in the Import declaration \"Default.CPP.Project.props\" is correct, and that the file exists on disk.'\r\nHowever, the actual path to the `.props` file is \"{LocalPath}\\DotNetListError\\Default.CPP.Project.props\"!\r\n\r\n1. Create a new solution with an empty C++ project.\r\n2. Add a `.props` file in the same directory as the `.sln` file.\r\n3. Reference the file in the `.vcxproj` file of the project using `$(SolutionDir)`.\r\n4. Build the solution; it should be successful.\r\n5. Try to run the `dotnet list {SolutionName}.sln package` command.\r\n\r\nSee this minimal example for reference: https://github.com/asalletmaier/dotnet-list-error\r\n\r\n### Further technical details\r\nThe IDE I am using is `Microsoft Visual Studio Enterprise 2022 (64-bit) - Version 17.8.6`.\r\n\n\n### Verbose Logs\n\n_No response_"},{"Id":"35586387127","Type":"IssuesEvent","CreatedAt":"2024-02-11T23:21:23","Actor":"drewnoakes","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9933","RelatedDescription":"Reopened issue \"Command “dotnet restore -f --use-lock-file” created a lock file for every project when the solution have project reference \" (#9933) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.8.0.6783\r\nVS Version: Master\\30423.24\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Create a solution with two projects [e.g. C# Class Library (.NET Core 5.0)] called “CL1” and “CL2” in VS.\r\n2. Make the project graph structure: CL1 -> CL2 and **close the solution/VS**.\r\n3. Open “Developer Command Prompt”, cd to CL1 project path and input command “dotnet restore -f --use-lock-file”.\r\n4. Open the solution and check the Solution Explorer.\r\n## Expected Result\r\nThere is only one lock file created under project CL1.\r\n## Actual Result\r\nCommand “dotnet restore -f --use-lock-file” created a lock file for every project as below.\r\n![image](https://user-images.githubusercontent.com/20632625/91064083-63467700-e661-11ea-8dba-4f5a4aac928b.png)\r\n## Note\r\nIt is a legacy issue, the key point to repro is closing solution/VS in step2.\r\n\r\n\r\n\r\n"},{"Id":"35580547127","Type":"IssuesEvent","CreatedAt":"2024-02-11T13:00:31","Actor":"msftbot[bot]","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13105","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Version Wildcards do not work in some build tools\" (#13105) at NuGet/Home","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\nPer the MSFT Pages, a library may be referenced in C# as `<PackageReference Include=\"Microsoft.Extensions.Hosting\" Version=\"6.*\" />` which works in VS2022, but not from the command lines of `dotnet`, `msbuild`, etc. It gives various errors about not being able to restore the nuget package. See this MSFT Page: https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files\n\n### Repro Steps\n\n1. Make a simple project\r\n2. Add a reference\r\n3. Change the reference to have wildcards\n\n### Expected Behavior\n\nProgram builds\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35574721752","Type":"IssuesEvent","CreatedAt":"2024-02-10T23:49:27","Actor":"thompson-tomo","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13235","RelatedDescription":"Opened issue \"Unable to use Authenticated sources with Central Package Management\" (#13235) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n17.8.3+195e7f5a3 for .NET\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n### Reproduction\r\n#### Option 1\r\n1. Add a GlobalPackageReference to Directory.Packages.props for a package which requires Authentication\r\n2. In nuget.config ensure that package mapping points it to authenticated source\r\n3. Run dotnet build --configfile nuget.Config --configuration release /nodereuse:false on machine which doesn't have package in cache\r\n4. Observe error\r\n\r\n#### Option 2:\r\n1. Add a PackageVersion to Directory.Packages.props for a package which requires Authentication\r\n2. Add a package reference to a project in the solution for the new package version added\r\n3. In nuget.config ensure that package mapping points it to authenticated source\r\n4. Run dotnet build --configfile nuget.Config --configuration release /nodereuse:false on machine which doesn't have package in cache\r\n5. Observe error \r\n\r\n### Config file\r\n\t<packageSources>\r\n\t\t<add key=\"NuGet.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n\t\t<add key=\"SKIDATANexus\" value=\"https://nexus.skidata.net/nexus/repository/nuget-releases\" />\r\n\t</packageSources>\r\n\r\n\t<packageSourceCredentials>\r\n\t\t<SKIDATANuget>\r\n\t\t\t<add key=\"Username\" value=\"%NEXUS_USERNAME%\" />\r\n\t\t\t<add key=\"ClearTextPassword\" value=\"%NEXUS_PASSWORD%\" />\r\n\t\t</SKIDATANuget>\r\n\t</packageSourceCredentials>\r\n\r\n\t<!-- Used to disable package sources  -->\r\n\t<disabledPackageSources />\r\n\t<!-- Define mappings by adding package ID patterns beneath the target source. -->\r\n\t<packageSourceMapping>\r\n\t\t<packageSource key=\"NuGet.org\">\r\n\t\t\t<package pattern=\"*\" />\r\n\t\t</packageSource>\r\n\t\t<packageSource key=\"SKIDATANexus\">\r\n\t\t\t<package pattern=\"SkiData.*\" />\r\n\t\t\t<package pattern=\"JSNLOG.*\" />\r\n\t\t\t<package pattern=\"Steeltoe.*\" />\r\n\t\t</packageSource>\r\n\t</packageSourceMapping>\r\n\r\n%NEXUS_USERNAME% and %NEXUS_PASSWOR% are both CI/CD variables and even tested with explicitly setting the password in the nuget.config but same result\n\n### Verbose Logs\n\n```shell\nPackage source mapping matches found for package ID 'Microsoft.Extensions.Hosting.WindowsServices' are: 'NuGet.org'. (TaskId:46)\r\nUnauthorized https://nexus.skidata.net/nexus/repository/nuget-releases/FindPackagesById()?id='Skidata.CNP.Build.Properties'&semVerLevel=2.0.0 144ms (TaskId:46)\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://nexus.skidata.net/nexus/repository/nuget-releases/FindPackagesById()?id='Skidata.CNP.Build.Properties'&semVerLevel=2.0.0'.\r\nResponse status code does not indicate success: 401 (Unauthorized). (TaskId:46)\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-13T03:30:18.0390405Z","RunDurationInMilliseconds":910}