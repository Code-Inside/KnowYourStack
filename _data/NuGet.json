{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20711559954","Type":"PullRequestEvent","CreatedAt":"2022-03-12T01:46:48","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9053","RelatedDescription":"Opened pull request \"[HotFix]Add copystring different language\" (#9053) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n\r\nAdd more copy right string\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4308"},{"Id":"20710861889","Type":"IssuesEvent","CreatedAt":"2022-03-12T00:31:49","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9052","RelatedDescription":"Opened issue \"[NuGet.org Bug]: A11y_NuGet Service_Account_ForgotPassword_Keyboard :Invisible content receives focus when user tries to navigate to send button after 'Email' edit field using tab key.\" (#9052) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\n**Source:** https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468987\r\n\r\n**Actual:**\r\nInvisible content receives focus  when the user tries to navigate to send button after 'Email' edit field using tab key.\r\n\r\n**Expected:**\r\nThere tab focus from edit field should move to  send button on using tab key, Invisible content should not receive focus.\r\n\r\n**User Impact:**\r\nKeyboard users will receive correct focus order \n\n### Repro Steps\n\n1. Launch the application URL: https://www.nuget.org/account/ForgotPassword\r\n2. \"Forgot Password\" page will get open.\r\n3. Tab to 'Email' edit field and fill it.\r\n4. Tab to send button and observe it.\n\n### Expected Behavior\n\nThere tab focus from edit field should move to send button on using tab key, Invisible content should not receive focus.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20710462193","Type":"PullRequestEvent","CreatedAt":"2022-03-12T00:04:18","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9051","RelatedDescription":"Opened pull request \"[A11y] Added tabindex to table headers on Package Details page so that screen readers can read them\" (#9051) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9048\r\n\r\n**Problem:**\r\n\r\nIn the Package Details page's 'Used By' tab, screen readers weren't reading the table header names when using tab navigation.\r\n\r\n**Fix:**\r\n\r\nTo fix this, I added tabindex to the table headers in the two tables in the 'Used By' tab (Dependent packages and dependent GitHub repos) and in the Version History table in the 'Versions' tab."},{"Id":"20710411371","Type":"PullRequestEvent","CreatedAt":"2022-03-12T00:00:51","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9050","RelatedDescription":"Opened pull request \"Remove dependency on RazorEngine in tests to fix Component Governance error\" (#9050) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20710258277","Type":"PullRequestEvent","CreatedAt":"2022-03-11T23:49:40","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9049","RelatedDescription":"Opened pull request \"[A11y bug] Add visual representation for required field on forgot password page.\" (#9049) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n- Every `label` element with class `required` inside another element with `form-group` class will have the red `*` as a representation of a required field.\r\n \r\nExample:\r\n``` html\r\n<div class=\"form-group\">\r\n    <label class=\"required\">Email: </label>\r\n</div>\r\n```\r\n\r\n### Screenshots\r\n#### Before\r\n![before - email required](https://user-images.githubusercontent.com/17834924/157987614-8739b61a-e37d-496a-bb17-328395ef13aa.png)\r\n\r\n#### After\r\n![email required](https://user-images.githubusercontent.com/17834924/157987642-850bd98a-9771-4fa9-a085-0bdca7858d68.png)\r\n\r\n![email required 2](https://user-images.githubusercontent.com/17834924/157987647-35e8b62c-6d11-4247-89d6-0361ff432670.png)\r\n\r\n#### Current API Key page for required input\r\n![apikey required](https://user-images.githubusercontent.com/17834924/157987677-5fa3829b-3002-4fd1-ada3-ec3816ced89b.png)\r\n\r\n\r\nAddresses https://github.com/nuget/engineering/issues/4309"},{"Id":"20710037600","Type":"IssuesEvent","CreatedAt":"2022-03-11T23:31:15","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9048","RelatedDescription":"Opened issue \"[NuGet.org Bug]: A11y_NuGet Service_Microsoft.Identity.Client_ScreenReader:When we tab to the NuGet packages' table and GitHub repositories table the screen reader is not announcing the column headers name when its read the cell data\" (#9048) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt's more difficult to complete my work\n\n### Describe the bug\n\n**Source:** https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1468943\r\n\r\n**Actual:**\r\nWhen we tab to the NuGet packages' table and GitHub repositories table and move to each cell the column header of the respective cell is not read\r\nSimilar issue is also observed in JAWS\r\nSimilar issue is observed in throughout the application\r\n\r\n**Expected:**\r\nEach cell should be read with its name row column number and the column header name it belongs too.\r\n\r\n**User Impact:**\r\nScreen readers users will face difficulty in knowing the column header reference of the cell\n\n### Repro Steps\n\n1. Launch the application URL: https://www.nuget.org/packages/coverlet.msbuild/\r\n2. \"Microsoft.Identity.Client\" page will get open.\r\n3. Tab to 'Used by' tab controls and press enter to select it.\r\n4. Tab to 'NuGet packages' table.\r\n5. Run the NVDA\r\n6. tab to the cells of the table   \n\n### Expected Behavior\n\nEach cell should be read with its name row column number and the column header name it belongs too.\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"20708536899","Type":"PullRequestEvent","CreatedAt":"2022-03-11T21:19:27","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9046","RelatedDescription":"Merged pull request \"[HotFix]Add copy right string\" (#9046) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Add localized copyright string:\r\n© Microsoft Corporation. 保留所有权利.\r\n\r\nBefore change:  example package contains copyright string above\r\nExecuting the verify tool...\r\n================================================================================\r\nUsing the following package path argument:\r\n*.nupkg\r\n\r\nINVALID.\r\n.\\Microsoft.AspNet.SignalR.nupkg\r\nThe package Microsoft.AspNet.SignalR 2.2.1 is not compliant.\r\nThere is 1 problem.\r\n  - The package metadata contains a non-compliant copyright element.\r\n\r\nAfter change:\r\nExecuting the verify tool...\r\n================================================================================\r\nUsing the following package path argument:\r\n*.nupkg\r\n\r\nVALID.\r\n.\\Microsoft.AspNet.SignalR.nupkg\r\nThe package Microsoft.AspNet.SignalR 2.2.1 is compliant.\r\n\r\n\r\n\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4308"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20711655984","Type":"IssuesEvent","CreatedAt":"2022-03-12T02:05:22","Actor":"MarkKharitonov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11671","RelatedDescription":"Opened issue \"[Feature]: Add support for a dedicated environment variable providing the NuGetScratch path.\" (#11671) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe\n\n### The Elevator Pitch\n\nIt would allow us to run multiple builds on the same CI server where:\r\n\r\n1. Each build has its own TEMP directory pointing at the build staging directory\r\n2. All the builds would be able to share the same NuGetScratch directory.\r\n\r\nThis way all the garbage files created by the unit tests in the temp directory are automatically deleted before the next build and all the concurrently running nuget processes can still synchronize between themselves.\n\n### Additional Context and Details\n\nhttps://github.com/NuGet/Home/issues/11670"},{"Id":"20708479493","Type":"IssuesEvent","CreatedAt":"2022-03-11T21:14:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11665","RelatedDescription":"Closed issue \"NRE when NominateProjectAsync is called during early solution initalizaiton\" (#11665) at NuGet/Home","RelatedBody":"Comment from https://github.com/NuGet/NuGet.Client/pull/4157#discussion_r823222111. \r\n\r\n❗ This line is getting executed in two cases where it should not be allowed:\r\n\r\nWhen OperationCanceledExecption is thrown by FromIVsSolution2\r\nWhen a different exception is thrown, but the solution is not yet fully loaded\r\nIn each of these cases, AddProjectRestoreInfoSource throws ArgumentNullException for projectNames.\r\n\r\nOriginally mentioned in https://github.com/dotnet/roslyn/issues/60072."},{"Id":"20707659082","Type":"IssuesEvent","CreatedAt":"2022-03-11T20:14:10","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10755","RelatedDescription":"Closed issue \"Enable viewing details of transitive dependency when selected in PMUI\" (#10755) at NuGet/Home","RelatedBody":""},{"Id":"20706700852","Type":"IssuesEvent","CreatedAt":"2022-03-11T19:08:11","Actor":"joshpeterson","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9347","RelatedDescription":"Closed issue \"Add a TFM for Unity's DOTS profile\" (#9347) at NuGet/Home","RelatedBody":"At Unity, we would like to explore the possibility of having a new target framework moniker for a very small base class library profile that Unity will use for some of its products.\r\n\r\nThis profile will focus on a few principles:\r\n* Small code size\r\n* No support for reflection\r\n* Focus on value types\r\n* Limited GC allocations\r\n* Limited use of exceptions\r\n* Limited use of virtual methods\r\n\r\nWe would like to make this profile available on NuGet so that it can be used in .csproj files to allow good IDE integration and to allow developers to write libraries using it.\r\n\r\nThis profile will be a proper subset for .NET Standard 2.0, and later a proper subset of .NET 5.\r\n\r\nInitially, I'll propose the name \"unity2.0-dots\", to indicate that it is a proper subset of .NET Standard 2.0.\r\n\r\nLet's discuss whether or not this is a good idea, and if it something that can be implemented.\r\n\r\n"},{"Id":"20705953090","Type":"IssuesEvent","CreatedAt":"2022-03-11T18:17:24","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11662","RelatedDescription":"Closed issue \"[Bug]: Warning about ignoring VersionOverride assumes that no other central package management is in use\" (#11662) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\ndotnet.exe, MSBuild.exe, NuGet.exe\r\n\r\n### Product Version\r\n\r\n17.2 Preview 2\r\n\r\n### Worked before?\r\n\r\n17.2 Preview 1\r\n\r\n### Impact\r\n\r\nI'm unable to use this version\r\n\r\n### Repro Steps & Context\r\n\r\nOriginally reported by @andygerlicher\r\n\r\n1. Use `Microsoft.Build.CentralPackageVersions`\r\n2. Specify `VersionOverride` on a `<PackageReference />`\r\n3. Update to Visual Studio 17.2 Preview 2\r\n\r\nRestore will log a warning:\r\n```\r\nC:\\src\\foo\\foo.csproj : warning NU1504: The package reference Something specifies a VersionOverride but central package manageent is currently disabled so the value was ignored. [C:\\src\\foo\\foo.csproj]\r\n```\r\n\r\nNuGet's central package management assumes that if its disabled, the user has no other reason to use `VersionOverride` metadata.  We'll need to remove this warning until we can find a good way to determine if the user would need to see this warning.\r\n\r\nThe only workaround is to suppress the warning.\r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"20705075740","Type":"IssuesEvent","CreatedAt":"2022-03-11T17:19:51","Actor":"martinrrm","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10756","RelatedDescription":"Closed issue \"Enable installing transitive dependency as a top-level package in the PMUI\" (#10756) at NuGet/Home","RelatedBody":""},{"Id":"20704185395","Type":"IssuesEvent","CreatedAt":"2022-03-11T16:27:04","Actor":"MarkKharitonov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11670","RelatedDescription":"Opened issue \"[Bug]: The NuGet restore phase is brittle and is subject to race conditions resulting sometimes in corrupted package directories\" (#11670) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\n16.11.0.36601\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIt happens on our Azure DevOps Server 2020 (on-prem) when running different builds concurrently.\r\nThe problem is that we cannot reliably reproduce it. But it happens once every week roughly. \r\nWe send the build telemetry to Azure AppInsights, which makes it easy to query the history. For example, consider the following query (today is 2022-03-11):\r\n```\r\nAllTasks\r\n| where taskStartTime > todatetime('2022-02-22T16:22:19.0831834Z')\r\n    and taskResult == 'failed' and error contains \"NuGet.targets\" and not(error contains \"required nuspec file\")\r\n    and tostring(taskCustomDimensions.taskType) == 'Task'\r\n    and buildDef != 'azure-pipelines-sq-wfm-ci-cs' // this is an experimental build\r\n| project buildDef, taskName, buildNumber, taskAgentComputerName, taskStartTime, taskRunDuration, error = substring(error, strlen('C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\Common7\\\\IDE\\\\CommonExtensions\\\\Microsoft\\\\NuGet\\\\NuGet.targets(131,5): Error : '))\r\n| order by taskStartTime\r\n```\r\nThis query produces the following result:\r\n<html>\r\n<body>\r\n\r\nbuildDef | taskName | buildNumber | taskAgentComputerName | taskStartTime | taskRunDuration | error\r\n-- | -- | -- | -- | -- | -- | --\r\nxyz-master-PR | Build DataSvc | 63.0.0.06910-5403-498 | TDC5DFC1BLD08 | 2022-03-10T16:05:54.9066667Z | 00:00:23 | The process cannot access the file 'C:\\Users\\G5TFSBuild\\.nuget\\packages\\xyz.payroll.engine.dataprovider\\63.0.0.75\\.nupkg.metadata' because it is being used by another process. Process 'msbuild.exe' exited with code '1'.\r\nxyz-PR-AzureTest-08 | Build DataSvc | 63.0.0.06816-2419-983 | AZG1PR1BLD01 | 2022-03-09T21:30:33.2833333Z | 00:00:18 | The process cannot access the file 'C:\\Users\\g5tfsbuild\\.nuget\\packages\\xyz.payroll.datadomain\\1.1.0.24\\xyz.Payroll.DataDomain.nuspec' because it is being used by another process. Process 'msbuild.exe' exited with code '1'.\r\nxyz-PR-AzureTest-08 | Build DataSvc | 63.0.0.06816-2426-984 | AZG1PR1BLD01 | 2022-03-09T21:30:33.2633333Z | 00:00:18 | Could not find file 'C:\\Users\\g5tfsbuild\\.nuget\\packages\\xyz.payroll.engine.taxengine\\63.0.0.72\\ca1ntxq3.v2a'. Process 'msbuild.exe' exited with code '1'.\r\nxyz-master-SQ | Build Main | 63.0.0.05909-fulljs | TDC5DFC1BLD29 | 2022-02-28T15:40:29.7333333Z | 00:00:12 | Failed to retrieve information about 'UpdateProjectMetadata' from remote source 'https://nuget.devexpress.com/bla-bla-bla/api/FindPackagesById()?id='UpdateProjectMetadata'&semVerLevel=2.0.0'.   Response status code does not indicate success: 502 (Bad Gateway). Process 'msbuild.exe' exited with code '1'.\r\nxyz-hf62-PR | Build DataSvc | 62.0.0.05415-0234-722 | TOR4DFC1BLD01 | 2022-02-23T21:38:49.1066667Z | 00:00:35 | Could not find file 'C:\\Users\\G5TFSBuild\\.nuget\\packages\\xyz.payroll.engine.payrollengine\\62.0.0.434\\rtkd102g.o4h'. Process 'msbuild.exe' exited with code '1'.\r\nxyz-hf62-PR | Build DataSvc | 62.0.0.05415-1141-723 | TOR4DFC1BLD01 | 2022-02-23T21:38:49.1033333Z | 00:00:35 | Could not find file 'C:\\Users\\G5TFSBuild\\.nuget\\packages\\xyz.payroll.engine.payrollengine\\62.0.0.434\\uqjswqpj.ybn'. Process 'msbuild.exe' exited with code '1'.\r\nxyz-PR-AzureTest-09 | Build DataSvc | 62.0.0.05312-0819-940 | AZG5DFC1BLD09 | 2022-02-22T18:27:49.1533333Z | 00:00:29 | Access to the path is denied. Process 'msbuild.exe' exited with code '1'.\r\nxyz-PR-AzureTest-09 | Build DataSvc | 62.0.0.05312-0809-939 | AZG5DFC1BLD09 | 2022-02-22T18:27:49.14Z | 00:00:29 | The process cannot access the file 'nrfpkqkz.rq1' because it is being used by another process. Process 'msbuild.exe' exited with code '1'.\r\nxyz-r62-PR | Build DataSvc | 62.0.0.05311-5243-705 | TDC5DFC1BLD19 | 2022-02-22T16:59:38.3166667Z | 00:00:14 | Failed to retrieve information about 'GenerateBindingRedirects' from remote source 'http://tfs:8080/tfs/DefaultCollection/_packaging/48f434f6-c697-4ae9-93e4-9024b238ed36/nuget/v3/flat2/generatebindingredirects/index.json'.   Response status code does not indicate success: 503 (Service Unavailable). Process 'msbuild.exe' exited with code '1'.\r\nGC_r61 | Build Deployer | 61.0.0.05310 | TDC5DFC1BLD21 | 2022-02-22T16:59:28.77Z | 00:00:31 | Failed to retrieve information about 'GenerateBindingRedirects' from remote source 'http://tfs:8080/tfs/DefaultCollection/_packaging/48f434f6-c697-4ae9-93e4-9024b238ed36/nuget/v3/flat2/generatebindingredirects/index.json'.   Response status code does not indicate success: 503 (Service Unavailable). Process 'msbuild.exe' exited with code '1'.\r\n\r\n</body>\r\n</html>\r\n\r\nThere are 2 kinds of errors:\r\n\r\n1. A momentary (or not) network issue\r\n   There are 3 incidents. Clearly not nuget's fault. However, when building multiple solutions (which comprise the single enterprise application) it could fail the build after 30 minutes - not fail fast. It is possible to restructure the build to first restore all the packages and then run the build. This way it would fail fast. On the other hand, I wonder if nuget can be told to retry with timeouts in order to survive what could be a short network blackout.\r\n1. IO related failures\r\n   This one is more serious because it seems there is some kind of a race condition when multiple builds running on the same machine try to restore the same packages.\r\n\r\nThe IO issue is very problematic because it can result in a corrupt NuGet package directory with a missing nuspec file. This is a poisonous error - it would not heal itself. The only resolution is to delete the respective NuGet package folder to force its restoration. I specifically excluded this kind of errors from the report, but we had 22 instances of it in the same period of time and they are the worst, because of the manual intervention necessary to fix them.\r\n\r\nI tried to reproduce the issue by forcing concurrent restorations with `msbuild /t:restore`, but I am unable to reproduce it reliably. Done about a thousand attempts and only one IO failure occurred - **C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(131,5): error : The process cannot access the file because it is being used by another process.** And it is a weird one - no file path is given.\r\n\r\nI would like to know how to troubleshoot these issues? Do we have tools to affect the retries/timeouts for the intermittent network issues? Do we have tools for IO errors? Are there any logs we can turn on to facilitate the IO troubleshooting? The msbuild binary log does not seem very relevant here.\n\n### Verbose Logs\n\n_No response_"},{"Id":"20700328798","Type":"IssuesEvent","CreatedAt":"2022-03-11T12:53:46","Actor":"mjolka","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11669","RelatedDescription":"Opened issue \"[Bug]: Very slow restore or OOM when using NoWarn\" (#11669) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, NuGet.exe\n\n### Product Version\n\n6.1.0.106\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nI'm unable to use this version\n\n### Repro Steps & Context\n\n### Description\r\n\r\nA NoWarn in a package reference can add minutes to a restore, or make it fail with an `OutOfMemoryException`.\r\n\r\nThis is related to https://github.com/NuGet/Home/issues/11222 and https://github.com/NuGet/NuGet.Client/pull/4475.\r\n\r\n### Background\r\n\r\n`TransitiveNoWarnUtils` performs a breadth-first traversal of the dependency graph.\r\n\r\nThe first time we find a path from the root node to a project node `v`, we store the union of the NoWarns seen along the path in a dictionary called `seen`.\r\n\r\nEach subsequent time we find a path from the root node to `v`, we check if the NoWarns seen along the new path to `v` are a superset of `seen[v]`.\r\n\r\nIf that's the case, we don't need to process the node again.\r\n\r\nIf that's _not_ the case, we update `seen[v]` to be the intersection of `seen[v]` and the NoWarns seen along the new path to `v`.\r\n\r\nThere is a bug in the method for finding the intersection that causes nodes to be processed more often than they should be. As a consequence, a single NoWarn can add minutes to a project restore, or cause the restore to fail with an `OutOfMemoryException`.\r\n\r\nIn the method for checking whether the NoWarns along one path are a superset of the NoWarns along another path (`NodeWarningProperties.IsSubSetOf`), `null` is considered to be the empty set.\r\n\r\nThe bug is this: in the method to get the intersection of the NoWarns (`NodeWarningProperties.GetIntersect`), `null` doesn't act like the empty set.\r\n\r\n### Steps to reproduce\r\n\r\nTo reproduce this issue, create n >= 30 projects - where `ClassLibrary{i}` has project references to `ClassLibary1`..`ClassLibrary{i-1}`.\r\n\r\nIn addition, create three more projects: `Root`, `RootLeft`, and `RootRight` with the following project references:\r\n\r\n```\r\nRoot -> RootLeft -> ClassLibrary{n}\r\nRoot -> RootRight -> ClassLibrary{n}\r\n```\r\n\r\nAdd the following two package references to `RootLeft`:\r\n\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"6.0.0\">\r\n      <NoWarn>NU1000</NoWarn>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"5.0.2\" />\r\n\r\n(Code to create all these projects can be found here: https://github.com/mjolka/LotsOfDependenciesIntersect)\r\n\r\nThe single nowarn in `RootLeft` causes the package restore to go from ~3 seconds to ~7 minutes when n = 30.\r\n\r\nWhen n = 35, the restore fails with an `OutOfMemoryException`.\r\n\r\nThe reason being, all `ClassLibrary{i}` projects are found first via a path that goes through `RootLeft`. This path contains a single NoWarn.\r\n\r\nWhen `ClassLibrary{i}` is later found via a path that goes through `RootRight`, these are no NoWarns along the path. The code to calculate the intersection of the NoWarns should result in the empty set. However, because of the bug, after taking the intersection, `seen[v]` still contains a single NoWarn, and the node will be processed again each time we find a new path to it.\r\n\r\nThe fix is to align the behaviour of `GetIntersect` to that of `IsSubSetOf` by treating `null` as the empty set. I'm able to contribute a pull request with this change.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-03-13T03:30:25.9272487Z","RunDurationInMilliseconds":1541}