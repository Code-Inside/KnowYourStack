{"Data":{"Blog":{"FeedItems":[{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"15058759644","Type":"IssuesEvent","CreatedAt":"2021-02-04T00:08:36","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7035","RelatedDescription":"Closed issue \"Github documentation markdown is not rendering tables correctly\" (#7035) at NuGet/NuGetGallery","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"15058737528","Type":"IssuesEvent","CreatedAt":"2021-02-04T00:05:46","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5682","RelatedDescription":"Closed issue \"Improve length and syntax restrictions for github sourced package documentation\" (#5682) at NuGet/NuGetGallery","RelatedBody":"I was excited to see the new feature on NuGet.org where you can import your documentation file from Github as part of uploading a package.\r\n\r\nHowever, the two times I've attempted to use this feature I've been blocked by its limitations:\r\n\r\n* I tried to import https://github.com/madelson/DistributedLock/blob/master/README.md but got an error message saying the file was too large\r\n* I tried to import https://github.com/madelson/Bits/blob/a9739c81972902eadf06435dca7fb333c8d59b4b/README.md but the markdown table syntax didn't display correctly\r\n\r\nI'd love to use this feature, but right now it seems too limited."},{"Id":"15056261073","Type":"PullRequestEvent","CreatedAt":"2021-02-03T19:55:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8410","RelatedDescription":"Merged pull request \"Use throw instead of throw ex to preserve call stack\" (#8410) at NuGet/NuGetGallery","RelatedBody":"This will allow us to debug a strange push failure that I've seen."},{"Id":"15056160443","Type":"IssuesEvent","CreatedAt":"2021-02-03T19:46:32","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8411","RelatedDescription":"Opened issue \"Add link to Package Authoring best practices to Package Upload page\" (#8411) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nIt will make the page more discoverable to package authors.\r\n\r\n### Describe the solution you'd like\r\nAdd a link to this page: https://docs.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices\r\n\r\n//cc @jcjiang "},{"Id":"15055940807","Type":"PullRequestEvent","CreatedAt":"2021-02-03T19:29:12","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8410","RelatedDescription":"Opened pull request \"Use throw instead of throw ex to preserve call stack\" (#8410) at NuGet/NuGetGallery","RelatedBody":"This will allow us to debug a strange push failure that I've seen."},{"Id":"15052892190","Type":"IssuesEvent","CreatedAt":"2021-02-03T15:42:11","Actor":"prstrnn","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8409","RelatedDescription":"Opened issue \"Cannot connect account with work Microsoft account\" (#8409) at NuGet/NuGetGallery","RelatedBody":"Hi Nuget team!\r\n\r\nCan you please assist me with my problem? I'm trying to create an account in Nuget.org and link it with work Microsoft account\r\nSomehow I have created login+password account and now I'm getting this window:\r\n![image](https://user-images.githubusercontent.com/30490978/106566331-3ae07400-6541-11eb-8dd1-86d54346e21d.png)\r\n\r\n\r\nI'm understand that is correct behaviour of the site, because login+pass Auth has beem discontinued. When I am trying to log in with Mircosoft after choosing my accnount I'm getting this:\r\n![image](https://user-images.githubusercontent.com/30490978/106566381-4895f980-6541-11eb-8d86-759cf2ffe16f.png)\r\n\r\nI am expected to be logged in Nuget.org site, but got Need admin approval error. First, I tried to find person in company that related to creating Nuget accounts but no one knows about it inside company.\r\n\r\nI hope that you can help with this problem,\r\nThanks\r\nAndrey"},{"Id":"15041656626","Type":"PullRequestEvent","CreatedAt":"2021-02-02T21:38:53","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8377","RelatedDescription":"Merged pull request \"Gallery store/fetch/delete embedded readmes file from flat container\" (#8377) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\n* Add new service to store/fetch/delete readme from flat container\r\n* Modified logic to upload/display embedded readme\r\n\r\nAddresses:https://github.com/NuGet/Engineering/issues/3593"},{"Id":"15039675173","Type":"IssuesEvent","CreatedAt":"2021-02-02T18:57:30","Actor":"matteomigliore","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8408","RelatedDescription":"Opened issue \"Cannot access to the account in any way\" (#8408) at NuGet/NuGetGallery","RelatedBody":"### I lost the access to the main account on Nuget\r\n\r\nI no longer have access to the email address associated with the account they used to publish the packages.\r\n\r\nThe domain has expired.\r\n\r\nPlease, can you help me to recover it?\r\n\r\nThank you."},{"Id":"15029951402","Type":"IssuesEvent","CreatedAt":"2021-02-02T06:36:01","Actor":"drewgillies","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8407","RelatedDescription":"Opened issue \"Automatically email customers who receive new vulnerability advisories\" (#8407) at NuGet/NuGetGallery","RelatedBody":"We can use an approach similar to AccountDeleteEmailBuilder. \nEnsure there is an opt-out."},{"Id":"15026169246","Type":"IssuesEvent","CreatedAt":"2021-02-01T22:13:45","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8372","RelatedDescription":"Closed issue \"Inline code block in documentation is HTML-entity-encoded twice\" (#8372) at NuGet/NuGetGallery","RelatedBody":"Input:\r\n```\r\nUsage: `SlnSort [options] <sln>`\r\n```\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/11667451/104103122-9890e180-525d-11eb-8031-2102ade45a09.png)\r\n\r\nPreviously reported in #4946, which was apparently closed without being fixed."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"15060289306","Type":"IssuesEvent","CreatedAt":"2021-02-04T03:45:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10495","RelatedDescription":"Closed issue \"Why condition is ignored under PackageReference with non-sdk net framework project\" (#10495) at NuGet/Home","RelatedBody":"I have  a non-sdk `net framework 4.8` project. And I have installed a nuget package `Newtonsoft.Json` with **PackageReference**.\r\n\r\nWhen I used a custom condition under it like this:\r\n\r\n```\r\n<PropertyGroup>\r\n    <Test>13</Test>\r\n </PropertyGroup>\r\n\r\n<PackageReference Include=\"Newtonsoft.Json\" Condition=\"'$(Test)'=='11'\">\r\n    <Version>12.0.3</Version>\r\n</PackageReference>\r\n```\r\n\r\nor \r\n\r\n```\r\n<ItemGroup Condition=\"'$(Test)'=='11'\">\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n        <Version>12.0.3</Version>\r\n    </PackageReference>\r\n</ItemGroup>\r\n\r\n```\r\n\r\nThen, I restore under VS IDE, then build the project, the Package is still there and why this happens? I make the condition to `false`.\r\n\r\nAs a test, I restore,build under MSBuild Command line, then it works well. \r\n\r\n**It seems that VS IDE restore has some errors and cannot recognize the condition.**\r\n\r\nAlso, I found that the issue only happens on the non-sdk project with **PackageReference** and new-sdk projects do not have it.\r\n\r\nI know the `choose, when`  can work, but I do not want to use it. I want to use the traditional item condition.\r\n\r\nSo please fix the issue. And I am not the only one who faced the issue. And it bothers our work.\r\n\r\n\r\n\r\n"},{"Id":"15060246195","Type":"IssuesEvent","CreatedAt":"2021-02-04T03:38:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10490","RelatedDescription":"Closed issue \"I changed my ReposityPath in nuget.config to point to another folder but still downloads the packages in the .nuget folder.\" (#10490) at NuGet/Home","RelatedBody":"Here is my xml:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <config>\r\n        <add key=\"repositoryPath\" value=\"D:\\dotNet\\nuget-packages\" />\r\n    </config>\r\n</configuration>\r\n```\r\n\r\nThe nuget packages are still being downloaded to the .nuget folder in my %USERPROFILE%.\r\nHow do I fix this? Right now as a workaround I just transfer the packages to the other drive manually.\r\n\r\n"},{"Id":"15060192335","Type":"IssuesEvent","CreatedAt":"2021-02-04T03:30:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10482","RelatedDescription":"Closed issue \"Why project.assert.json file is different between VS IDE restore and msbuild restore?\" (#10482) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Why-projectassertjson-file-is-differen/1242086?preview=true)._\n\n---\n<p>[severity:It bothers me. A fix would be nice]<br>\nI created a <code>Net Framework 4.7.2</code> console project called <strong>Common</strong> with a PackageReference nuget package <code>Antlr</code>. Then, I changed the <code>assemblyname</code> to <code>Common.xyz</code> for the output file by right-click on the <strong>Project Properties</strong>–&gt;<strong>Application</strong>–&gt;change <strong>Assembly Name</strong> to <code>Common.xyz</code>.</p><p>For the first step,  I build the <strong>Common</strong> project in VS IDE and in <code>obj</code> folder, I checked the restore file <code>project.assert.json</code> and found the <code>projectName</code> is <code>Common</code>.</p><p><a href=\"https://developercommunity2.visualstudio.com/storage/attachments/162970-capture.png\"> Image:162970-capture.png</a></p><p><strong>However</strong>, I delete the <code>bin</code> and <code>obj</code> folder, and then use msbuild command line, <code>msbuild -t:restore</code>, and then check the <code>project.assert.json</code> file, I found that the <code>projectname</code> is <code>Common.xyz</code>. And <code>nuget restore</code> command also set the <code>projectname</code> to <code>Common.xyz</code>.</p><p><a href=\"https://developercommunity2.visualstudio.com/storage/attachments/162969-capture1.png\"> Image:162969-capture1.png</a></p><p>So I am confused and want to know which one is right. And what is the reason for this difference? What is the difference between msbuild restore and vs ide restore?</p>\n\n---\n### Original Comments\n\n#### good man on 11/3/2020, 00:07 AM: \n\n<p>I hope someone could give you some suggestions about this.</p>\n\n#### Kharitonov, Mark on 11/3/2020, 06:50 AM: \n\n<p>The differences for big solutions are beyond just \"bothering\". As https://stackoverflow.com/questions/64576860/why-does-console-build-generate-radically-different-project-assets-json-than-tha/64658887#64658887 shows the project.assets.json produced by VS IDE can lack many libraries and can even report dependency versions that are different from those reported by msbuild. Unfortunately, I do not have a minimal reproduction yet. Our solution is +100 projects strong.</p>\n\n#### Feedback Bot on 11/3/2020, 07:10 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Benjamin Villalobos [MSFT] on 1/20/2021, 09:28 AM: \n\n<p>Does running <code>msbuild /restore</code> instead of <code>msbuild -t:restore</code> result in different behavior?</p>\n\n#### Kharitonov, Mark on 1/20/2021, 04:43 PM: \n\n<p><a target='_blank' href=\"https://aka.ms/dc/u?aid=218570\">Benjamin Villalobos [MSFT]</a> - no. The generated project.assets.json are the same.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"15060143957","Type":"IssuesEvent","CreatedAt":"2021-02-04T03:23:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10481","RelatedDescription":"Closed issue \"nuget.exe v5.8.1 cannot get the value from assemblyinfo.cs by $version$\" (#10481) at NuGet/Home","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/nugetexe-v581-cannot-get-the-value-fr/1316506)._\n\n---\n[severity:It bothers me. A fix would be nice]\r\nI used **VS2019** and **nuget.exe v5.8.1**. I created a net framework 4.7.2 class library project and add `version`, `description`, `company`..... any info under `assemblyinfo.cs` file.\n\n! [image.png] (https://aka.ms/dc/image?name=Be38d15bf8e2e42c2b37181394f9c3a82637468060642747112_20210121-140743-image.png&tid=e38d15bf8e2e42c2b37181394f9c3a82637468060642747112)\n\nThen, use this nuspec file to pack the project.\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<package >\n  <metadata>\n    <id>$id$</id>\n    <version>$version$</version>\n    <title>$title$</title>\n    <authors>me</authors>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <license type=\"expression\">MIT</license>\n    <projectUrl>http://project_url_here_or_delete_this_line/</projectUrl>\n    <iconUrl>http://icon_url_here_or_delete_this_line/</iconUrl>\n    <description>me</description>\n    <releaseNotes>Summary of changes made in this release of the package.</releaseNotes>\n    <copyright>$copyright$</copyright>\n    <tags>Tag1 Tag2</tags>\n  </metadata>\n</package>\n```\n\nFrom [this document](https://docs.microsoft.com/en-us/nuget/reference/nuspec#replacement-tokens), it said that `$version$` will be replaced with `assemblyversion's` value under `AssemblyInfo.cs` file. \n\nBut I did not get the value under `nuget.exe v5.8.1`, also, happens under `nuget.exe v5.7.0`. But it works well under `nuget.exe v5.6.0`.\n\nIs it an issue under `v5.7.0` and `v5.8.1`?\n\n---\n### Original Comments\n\n#### Feedback Bot on 1/20/2021, 11:43 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"15059653599","Type":"IssuesEvent","CreatedAt":"2021-02-04T02:13:02","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/10368","RelatedDescription":"Reopened issue \"When a ProjectReference and PackageReference in different TFMs have the same identity/version, Restore throws \"An item with the same key has already been added. [...]\"\" (#10368) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nFull repro details at https://github.com/dagood/repro/tree/repro-restore-ref-same-key. I used the `mcr.microsoft.com/dotnet/sdk:5.0` Docker image to minimally repro, but this also repros the same on my Windows machine.\r\n\r\n```\r\n$ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  5.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\nSystem.Security.Cryptography.Cng.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <Version>5.0.0-rc.2.20475.5</Version>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nSystem.Security.Cryptography.Pkcs.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net5.0;netcoreapp3.1</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'net5.0'\">\r\n    <ProjectReference Include=\"../System.Security.Cryptography.Cng/System.Security.Cryptography.Cng.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.1'\">\r\n    <PackageReference Include=\"System.Security.Cryptography.Cng\" Version=\"5.0.0-rc.2.20475.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAs far as I know I haven't seen this work before.\r\n\r\nWe hit it in source-build while trying to build dotnet/runtime: https://github.com/dotnet/source-build/pull/1845#discussion_r522994234\r\n\r\nThis might not be supported--it doesn't make a *whole* lot of sense to me for a project to intentionally do this--but the error message should be improved at least! 😄 It took a while to figure out what the message was complaining about, work around it in source-build, and write this small repro.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Clone https://github.com/dagood/repro/tree/repro-restore-ref-same-key\r\n   (`git clone -b repro-restore-ref-same-key https://github.com/dagood/repro && cd repro`)\r\n\r\n2. Run `dotnet build ./System.Security.Cryptography.Pkcs/System.Security.Cryptography.Pkcs.csproj /bl`\r\n\r\n3. See this error:\r\n    `/usr/share/dotnet/sdk/5.0.100/NuGet.targets(131,5): error : An item with the same key has already been added. Key: (System.Security.Cryptography.Cng, 5.0.0-rc.2.20475.5) [/work/System.Security.Cryptograp\r\nhy.Pkcs/System.Security.Cryptography.Pkcs.csproj]`\r\n\r\n4. Open `msbuild.binlog` to see full stack trace:\r\n\r\n```\r\nSystem.ArgumentException: An item with the same key has already been added. Key: (System.Security.Cryptography.Cng, 5.0.0-rc.2.20475.5)\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey](List`1 source, Func`2 keySelector, IEqualityComparer`1 comparer)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey](IEnumerable`1 source, Func`2 keySelector, IEqualityComparer`1 comparer)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey](IEnumerable`1 source, Func`2 keySelector)\r\n   at NuGet.Commands.LockFileBuilder.CreateLockFile(LockFile previousLockFile, PackageSpec project, IEnumerable`1 targetGraphs, IReadOnlyList`1 localRepositories, RemoteWalkContext context)\r\n   at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks)\r\n   at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreContext, CancellationToken token)\r\n   at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token)\r\n   at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken)\r\n   at NuGet.Build.Tasks.RestoreTask.ExecuteAsync(ILogger log)\r\n```\r\n\r\n### Verbose Logs\r\n\r\nBinlog: [repro-restore-ref-same-key.zip](https://github.com/NuGet/Home/files/5661841/repro-restore-ref-same-key.zip)\r\n\r\n\r\n"},{"Id":"15058671031","Type":"IssuesEvent","CreatedAt":"2021-02-03T23:57:26","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10535","RelatedDescription":"Opened issue \"Signing:  primary signature details not displayed when certificate expired and timestamp untrusted\" (#10535) at NuGet/Home","RelatedBody":"NuGet product used (NuGet.exe | Visual Studio | MSBuild.exe | dotnet.exe):  NuGet.exe\r\n\r\nProduct version:  5.8.1.7021\r\n\r\nWorked before?  No.  This reproes as early as 4.9.4.5839 and probably earlier (but did not verify).\r\n\r\n## Repro steps and/or sample project\r\n\r\n1.  Extract the contents of [AuthorExpired.1.0.0.zip](https://github.com/NuGet/Home/files/5922200/AuthorExpired.1.0.0.zip) to your local drive.\r\n2.  Add AuthorExpired.1.0.0.nupkg.certificates\\0.cer as a trusted root authority.\r\n3.  In a command prompt execute:\r\n```\r\nnuget.exe verify -all AuthorExpired.1.0.0.nupkg\r\n```\r\n**Note:  be sure to remove the trusted root authority added in step 2.**\r\n\r\n### Expected results:\r\nI expect to see:\r\n*  primary signature details\r\n*  a warning that the primary signature's certificate has expired\r\n*  timestamp signature details\r\n*  a warning or error that the primary signature's timestamp signature's certificate is untrusted\r\n\r\n### Actual results:\r\nI see:\r\n*  timestamp signature details\r\n*  an error that the primary signature's timestamp signature's certificate is untrusted\r\n```\r\nVerifying AuthorExpired.1.0.0\r\nE:\\Trash\\ClassLibrary3dfsdsf\\packageSource\\AuthorExpired.1.0.0\\AuthorExpired.1.0.0.nupkg\r\n\r\nSignature Hash Algorithm: SHA256\r\nTimestamp: 2/3/2021 3:36:12 PM\r\n\r\nVerifying author primary signature's timestamp with timestamping service certificate:\r\n  Subject Name: CN=NuGet Test Root Certificate Authority (40998d55-3d73-4a3b-a689-55e30c1fac3c), O=NuGet, L=Redmond, S=WA, C=US\r\n  SHA1 hash: 6B2378A3DC9CA185252BB66F24F262D129165B5B\r\n  SHA256 hash: 61B18DE3D814FA7960C6ED62DB20BEA6D0F8D65F678464D7D7C9227E7D5DEFBD\r\n  Issued by: CN=NuGet Test Root Certificate Authority (40998d55-3d73-4a3b-a689-55e30c1fac3c), O=NuGet, L=Redmond, S=WA, C=US\r\n  Valid from: 2/3/2021 3:36:11 PM to 12/31/2099 4:00:00 PM\r\n\r\nNU3028: The author primary signature's timestamp found a chain building issue: UntrustedRoot: A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.\r\nFinished with 1 errors and 0 warnings.\r\n\r\nPackage signature validation failed.\r\n```"},{"Id":"15057482460","Type":"IssuesEvent","CreatedAt":"2021-02-03T21:45:37","Actor":"chgill-MSFT","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10534","RelatedDescription":"Opened issue \"Icon loading behavior is inconsistent in all tabs of the Visual Studio PMUI\" (#10534) at NuGet/Home","RelatedBody":"## Problem\r\n\r\nIcon behavior in the PMUI is inconsistent in the Browse, Installed, and Updates tabs. Sometimes an icon for a package will load in the Browse tab, but not in the Installed or Updates tab. \r\n\r\nIn the Browse tab, sometimes icons won't appear properly for the suggested packages but will appear correctly when explicitly searched for in the Browse tab of a different project PMUI as shown by the images below. So far, I haven't found a case where a non-suggested package is missing an icon. _Most_ suggested package do show the correct icon.\r\n![image](https://user-images.githubusercontent.com/15097183/106809422-a7d73500-6639-11eb-9c39-7fb6d60087a0.png)\r\n![image](https://user-images.githubusercontent.com/15097183/106809534-cb9a7b00-6639-11eb-9c27-e70bfab2b08a.png)\r\n\r\nIn the Installed tab, some packages seem to never show their icon, even if the icon is shown in the Browse tab or if the package is installed to a different project. The image below shows the 16.10 internal preview on the left vs 16.9 public preview on the right.\r\n![image](https://user-images.githubusercontent.com/15097183/106812393-9859eb00-663d-11eb-8055-1ef1608d500d.png)\r\n\r\nBroken icon in the Installed tab does not consistently mean a broken icon in the Updates tab, but it sometimes does. Broken icons in the Updates tab are also no consistent across different projects. The images below are from different projects from the same solution in 16.10 internal preview:\r\n![image](https://user-images.githubusercontent.com/15097183/106812883-46fe2b80-663e-11eb-907e-33d160cd3a05.png)\r\n![image](https://user-images.githubusercontent.com/15097183/106812987-701ebc00-663e-11eb-906d-59658747cb82.png)\r\n\r\n## Version info\r\n\r\n**Found bug in Visual Studio 16.10.0 Preview 1.0 [31002.315].**\r\n\r\nWorks in Visual Studio 16.9.0 Preview 2, but not sure what version it broke in.\r\n\r\n## Repro steps and/or sample project\r\n\r\nDifficult to consistently repro, but see examples in the \"Problem\" section.\r\n"},{"Id":"15057388773","Type":"IssuesEvent","CreatedAt":"2021-02-03T21:36:28","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7395","RelatedDescription":"Closed issue \"Timestamps of file of packed package is shifted by the timezone\" (#7395) at NuGet/Home","RelatedBody":"I'm using nuget 4.7.1 .\r\nWhen I pack with nuget then extract on included files, the extracted files last modified times are -9 hours. (I'm in a +9:00 timezone.)\r\n\r\nThe problem of Last Modified time for included files, seems fixed in [#5240](https://github.com/NuGet/Home/issues/5240), But  LastWriteTime is set UTC time.\r\n\r\n[ZipArchiveEntry.LastWriteTime(in .NET) ](https://docs.microsoft.com/en-us/dotnet/api/system.io.compression.ziparchiveentry.lastwritetime?view=netframework-4.7.2) seems not supported extended timestamp of Zip.\r\nTherefore, I think that it is better to set local time to LastWriteTime.\r\nOr is there a way to set local time correctly?\r\n\r\n## Details about Problem\r\nNuGet.exe version = 4.7.1.5393(also tried 4.6.2.5055 and 4.8.1.5435)\r\n.NET version = 4.7.03062\r\nOS version = Windows 7 Professional (build 7601 : Service Pack 1)\r\n\r\n## Detailed repro steps so we can see the same problem\r\nnuget.exe pack xxxx.nuspec"},{"Id":"15057388755","Type":"IssuesEvent","CreatedAt":"2021-02-03T21:36:28","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7001","RelatedDescription":"Closed issue \"NuGet pack \"The DateTimeOffset specified cannot be converted into a Zip file timestamp\"\" (#7001) at NuGet/Home","RelatedBody":"## Details about Problem\r\nRunning nuget pack .nuspec fails with the message \r\n``` \"The DateTimeOffset specified cannot be converted into a Zip file timestamp.\" ```\r\n\r\nIt happens with nuget 4.6.2 for a .dll file that has ` LastWriteTime ` 31/12/1979 23:00:00 +00:00\r\n\r\n![image](https://user-images.githubusercontent.com/5313373/41094168-a3daef68-6a4d-11e8-8c7a-08a13f1a114a.png)\r\n\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.exe\r\nversion (4.6.2.5055)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nWindows 10 v 1803 Build 17134.81\r\n\r\nWorked before? If so, with which NuGet version:\r\nWorks with v. 4.5.1.4879\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nRun ` nuget pack NuGetDateTimeOffsetIssue.nuspec ` in the attached sample project\r\non nuget.exe v. 4.6 or higher.\r\n\r\nOr:\r\nMake a class library that includes NuGet log4net.Ext.Json v. 1.2.15.14586\r\nRun ` nuget spec <lib-name> `\r\nRun ` nuget pack <.nuspec> `\r\n\r\n### Verbose Logs\r\n\r\n```\r\n~/Downloads ❯❯❯ ./nuget\\(1\\).exe pack -verbosity detailed C:/dev/.../authenticationhost.nuspec                                                                                          \r\nNuGet Version: 4.6.2.5055\r\nAttempting to build package from 'authenticationhost.nuspec'.\r\nThe DateTimeOffset specified cannot be converted into a Zip file timestamp.\r\nParameter name: value\r\nSystem.ArgumentOutOfRangeException: The DateTimeOffset specified cannot be converted into a Zip file timestamp.\r\nParameter name: value\r\n   at System.IO.Compression.ZipArchiveEntry.set_LastWriteTime(DateTimeOffset value)\r\n   at NuGet.Packaging.PackageBuilder.CreatePart(ZipArchive package, String path, Stream sourceStream, DateTimeOffset lastWriteTime)\r\n   at NuGet.Packaging.PackageBuilder.WriteFiles(ZipArchive package, HashSet`1 filesWithoutExtensions)\r\n   at NuGet.Packaging.PackageBuilder.Save(Stream stream)\r\n   at NuGet.Commands.PackCommandRunner.BuildPackage(PackageBuilder builder, String outputPath)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromNuspec(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildPackage()\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n### Sample Project\r\n\r\n[NuGetDateTimeOffsetIssue.zip](https://github.com/NuGet/Home/files/2080130/NuGetDateTimeOffsetIssue.zip)\r\n\r\n![image](https://user-images.githubusercontent.com/5313373/41095631-4dc3d7fc-6a52-11e8-9e22-781cfe76be49.png)\r\n\r\n### After fix (PR is in review)\r\nInput file for test: \r\n![image](https://user-images.githubusercontent.com/8766776/102402235-598ea980-3f99-11eb-8b8e-4979ee3d89fc.png)\r\n\r\nNow this file modified in 1959 after packing looks like this: \r\n![image](https://user-images.githubusercontent.com/8766776/102402048-15030e00-3f99-11eb-819b-89eb72169007.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"14970431746","Type":"IssuesEvent","CreatedAt":"2021-01-27T19:36:22","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/49","RelatedDescription":"Opened issue \"NuGet restore failing on .NET 5 for Debian-based OSes\" (#49) at NuGet/Announcements","RelatedBody":"Hey Everyone,\r\n\r\nOur preliminary investigation shows that .NET 5 restore is broken for Debian-based operating systems including Docker thus resulting in error messages like:\r\n\r\n```\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n```\r\n\r\n### [Debian Versions](https://www.debian.org/releases/)\r\n- We're currently aware that Debian 10 (\"buster\") and earlier versions are affected. ❌\r\n- We do know that Debian testing (\"bullseye\") and later are not affected. ✔\r\n\r\nThis is because of an [issue reported](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=962596) in the `ca-certificates` package in which the root CA being used are not trusted and must be installed manually due to [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues). Because this issue has been resolved recently in version 20210119 of this package, it is not available in a Debian version as provided in `dotnet-docker` for `buster-slim` today.\r\n\r\n## Workarounds\r\n\r\n- Manually update the [ca-certificates](https://packages.debian.org/bullseye/ca-certificates) package to version 20210119 including a `bullseye` or later version.\r\n- Consider using a different Debian-based Docker image such as `alpine` or `focal`.\r\n \r\n## Solution\r\n\r\nWe're currently working to update the `dotnet-docker`'s `buster-slim` image to update the `ca-certificates` package to 20210119 that resolves this issue. We are however currently verifying this is a viable solution with no large diffs between the `buster` and `bullseye` releases.\r\n\r\nAdditionally, the `ca-certificates` package is due to be installed in the Debian FTP archive which will promote this fix to the `buster` release in the next few days to which an updated `buster-slim` image will be prepared and released when available.\r\n\r\n## Stay Updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We'll continue to update the discussion at https://github.com/NuGet/Home/issues/10491.\r\n- We will also continue posting updates on https://status.nuget.org and on Twitter @NuGet."},{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1355252975678189569","CreatedAt":"2021-01-29T20:34:23+00:00","UserScreenname":"nuget","Text":"For users affected by the Debian 10 Buster CA Certificate issue, we now have a documented mitigation available.\n\nPl… https://t.co/VhGXtYI6aj","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"1354633996202700808","CreatedAt":"2021-01-28T03:34:47+00:00","UserScreenname":"nuget","Text":"📢 For .NET Docker users, we have published new images that mitigate these issues by using a pre-release version of… https://t.co/eWBiUMyYhr","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":41,"FavoriteCount":26,"RawContent":null},{"Id":"1354552703150649351","CreatedAt":"2021-01-27T22:11:45+00:00","UserScreenname":"nuget","Text":"Please see our official announcement for our latest understanding of the root cause of this issue and recommended w… https://t.co/zAQswryI8d","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"1354464163653890051","CreatedAt":"2021-01-27T16:19:55+00:00","UserScreenname":"nuget","Text":"(1/2) Here's what we've gathered to far:\n\n.NET 5 restore appears to be broken on some operating systems resulting i… https://t.co/KFwSxsi2rY","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":12,"RawContent":null},{"Id":"1354455557541933056","CreatedAt":"2021-01-27T15:45:44+00:00","UserScreenname":"nuget","Text":"⚠ Degradation notification ⚠\n\nSignature verification for Microsoft packages is failing in some scenarios due to a c… https://t.co/EisS5l9A3o","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":43,"FavoriteCount":24,"RawContent":null},{"Id":"1349825493265231872","CreatedAt":"2021-01-14T21:07:30+00:00","UserScreenname":"nuget","Text":"Thanks for the birthday wishes everyone! 🥳🥳🥳\n\nThank you to all of the team members (past and present), external con… https://t.co/mWYE55Bh9b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2021-02-04T05:30:35.9316367Z","RunDurationInMilliseconds":1490}