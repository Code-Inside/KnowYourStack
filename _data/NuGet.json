{"Data":{"Blog":{"FeedItems":[{"Title":"Requiring two-factor authentication on NuGet.org","PublishedOn":"2022-02-22T18:27:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Summary\nOver the past few years, we have continually invested in strengthening the supply-chain security for .NET packages. To strengthen the ecosystem further, NuGet.org will begin requiring...","Href":"https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/","RawContent":null},{"Title":"Introducing Compatible Packages on NuGet.org","PublishedOn":"2022-02-15T21:20:44+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"As part of our ongoing commitment to improve the NuGet ecosystem, today we are excited to introduce a couple new features on NuGet.org to help you determine if a package is compatible with the target...","Href":"https://devblogs.microsoft.com/nuget/introducing-compatible-frameworks-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.0 – Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!","PublishedOn":"2021-11-08T18:59:15+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"NuGet 6.0 &#8211; Source Mapping, Package Vulnerabilities, Faster Solution Load, Oh My!\nNuGet 6.0 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.0 for...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6/","RawContent":null},{"Title":"Introducing the New NuGet.org Package Details Page","PublishedOn":"2021-09-23T21:39:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are excited to announce a massive makeover for the package details page on NuGet.org. We built NuGet.org to help .NET developers find packages that will accelerate their projects, and this...","Href":"https://devblogs.microsoft.com/nuget/introducing-the-new-nuget-org-package-details-page/","RawContent":null},{"Title":"Introducing Package Source Mapping","PublishedOn":"2021-09-15T22:30:44+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re happy to announce the first preview release of Package Source Mapping with Visual Studio 2022 preview 4! Package Source Mapping gives you fine-grained control of where your packages come...","Href":"https://devblogs.microsoft.com/nuget/introducing-package-source-mapping/","RawContent":null},{"Title":"IntelliCode Package Suggestions for NuGet in Visual Studio","PublishedOn":"2021-06-02T18:00:09+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Building on Visual Studio’s robust IntelliCode experience for .NET, we’re excited to introduce NuGet IntelliCode Package Suggestions in Visual Studio 16.10! IntelliCode Package Suggestions use your...","Href":"https://devblogs.microsoft.com/nuget/intellicode-package-suggestions-for-nuget-in-visual-studio/","RawContent":null},{"Title":"Add a README to Your NuGet Package","PublishedOn":"2021-05-06T19:00:22+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In March, we published a blog on the State of the NuGet Ecosystem, where we discussed insights gained from the hundreds of customers we&#8217;ve heard from over the last six months. One of the top...","Href":"https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/","RawContent":null},{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"20862554882","Type":"IssuesEvent","CreatedAt":"2022-03-22T01:21:19","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9066","RelatedDescription":"Opened issue \"[Deployment][2022.03.21]\" (#9066) at NuGet/NuGetGallery","RelatedBody":"# Gallery\r\n\r\n## Changes\r\n\r\nFI `main` to `dev`:\r\n* https://github.com/NuGet/NuGetGallery/pull/9046 (tracked by https://github.com/NuGet/Engineering/issues/4308)\r\n* https://github.com/NuGet/NuGetGallery/pull/9053 (tracked by https://github.com/NuGet/Engineering/issues/4308)\r\n\r\nRI `dev` to `main`:\r\n* https://github.com/NuGet/NuGetGallery/pull/9043 (tracked by https://github.com/NuGet/NuGetGallery/issues/9042)\r\n* https://github.com/NuGet/NuGetGallery/pull/9049 (tracked by https://github.com/NuGet/Engineering/issues/4309)\r\n* https://github.com/NuGet/NuGetGallery/pull/9050\r\n* https://github.com/NuGet/NuGetGallery/pull/9051(tracked by https://github.com/NuGet/NuGetGallery/issues/9048)\r\n* https://github.com/NuGet/NuGetGallery/pull/9028\r\n* https://github.com/NuGet/NuGetGallery/pull/9055 (tracked by https://github.com/NuGet/Engineering/issues/4269)\r\n* https://github.com/NuGet/NuGetGallery/pull/9058 (tracked by https://github.com/NuGet/Engineering/issues/4315)\r\n* https://github.com/NuGet/NuGetGallery/pull/9059 (tracked by https://github.com/NuGet/NuGetGallery/issues/8988)\r\n* https://github.com/NuGet/NuGetGallery/pull/9062\r\n* https://github.com/NuGet/NuGetGallery/pull/9065 (tracked by https://github.com/NuGet/Engineering/issues/4322)\r\n\r\n\r\n## Progress\r\n* [x] Merge FI PR: https://github.com/NuGet/NuGetGallery/pull/9063\r\n* [x] Merge RI PR: https://github.com/NuGet/NuGetGallery/pull/9064\r\n* [x] Build: \r\n* [x] Release: \r\n* [x] DEV\r\n* [x] INT\r\n* [x] PROD"},{"Id":"20862346944","Type":"PullRequestEvent","CreatedAt":"2022-03-22T00:58:06","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9064","RelatedDescription":"Merged pull request \"Merge branch 'dev' into main\" (#9064) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20861940180","Type":"PullRequestEvent","CreatedAt":"2022-03-22T00:14:31","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9065","RelatedDescription":"Merged pull request \"[A11y bug] Package title on stats is overflowing the content.\" (#9065) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n* `overflow-wrap: break-word` added so avoid title overflowing the content.\r\n\r\n### Screenshots\r\n\r\n#### Before\r\n\r\n![Before](https://user-images.githubusercontent.com/17834924/159379669-52602116-2ac3-4e06-93cc-1d5b6b5a1c9a.png)\r\n\r\n#### After\r\n\r\n![After](https://user-images.githubusercontent.com/17834924/159379766-3ca71cee-a484-4db5-a36e-c6de12940b26.png)\r\n\r\nAddresses https://github.com/nuget/engineering/issues/4322"},{"Id":"20861555175","Type":"PullRequestEvent","CreatedAt":"2022-03-21T23:33:43","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9065","RelatedDescription":"Opened pull request \"[A11y bug] Package title on stats is overflowing the content.\" (#9065) at NuGet/NuGetGallery","RelatedBody":"### Changes\r\n* `overflow-wrap: break-word` added so avoid title overflowing the content.\r\n\r\n### Screenshots\r\n\r\n#### Before\r\n\r\n![Before](https://user-images.githubusercontent.com/17834924/159379669-52602116-2ac3-4e06-93cc-1d5b6b5a1c9a.png)\r\n\r\n#### After\r\n\r\n![After](https://user-images.githubusercontent.com/17834924/159379766-3ca71cee-a484-4db5-a36e-c6de12940b26.png)\r\n\r\nAddresses https://github.com/nuget/engineering/issues/4322"},{"Id":"20858503081","Type":"PullRequestEvent","CreatedAt":"2022-03-21T19:47:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9063","RelatedDescription":"Merged pull request \"Merge branch 'main' into dev\" (#9063) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20858347061","Type":"PullRequestEvent","CreatedAt":"2022-03-21T19:36:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9064","RelatedDescription":"Opened pull request \"Merge branch 'dev' into main\" (#9064) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20858158457","Type":"PullRequestEvent","CreatedAt":"2022-03-21T19:25:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9063","RelatedDescription":"Opened pull request \"Merge branch 'main' into dev\" (#9063) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"20842363899","Type":"PullRequestEvent","CreatedAt":"2022-03-21T02:54:03","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7471","RelatedDescription":"Closed pull request \"Add WasUsernameReleased field to AccountDelete\" (#7471) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/NuGet/Engineering/issues/1303\r\n\r\nThe idea is that there will be a job (an additional task in Gallery.Maintenance) that queries for all accounts that were deleted more than a year in the past and renames them to a Guid or something similar. We need to have an additional column on the `AccountDelete`s table so that we can remember what accounts we've renamed because otherwise we won't be able to reliably know what accounts we've renamed.\r\n\r\nNote that the new column will be initialized to `default(bool)` aka `false`, so all existing columns will have the value we expect."},{"Id":"20842266661","Type":"PullRequestEvent","CreatedAt":"2022-03-21T02:39:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7595","RelatedDescription":"Closed pull request \"Add GalleryTools command to delete unconfirmed accounts\" (#7595) at NuGet/NuGetGallery","RelatedBody":"https://github.com/nuget/engineering/issues/2707\r\n\r\nI felt writing a tool to use the `DeleteAccountService` to delete these accounts was safer than writing a large `DELETE FROM Users` query, as the `DeleteAccountService` properly removes all credentials and other data and doesn't rely on foreign key deletion cascades."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"20859611375","Type":"IssuesEvent","CreatedAt":"2022-03-21T20:58:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11621","RelatedDescription":"Closed issue \"[DCR]: Align Release Label comparison to other package managers\" (#11621) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet.exe\n\n### Current Behavior\n\nCurrently, Release Labels are compared case insensitive:\r\nhttps://github.com/NuGet/NuGet.Client/blob/7a5b0aafd767d105014c995378a1dbb71a5d86bd/src/NuGet.Core/NuGet.Versioning/VersionComparer.cs#L330:L331\r\n\r\nWhen using for example `gitversion` to version commits and therefore NuGet packages, following scenario can appear:\r\n* 1.0.0-alpha.1\r\n* 1.0.0-beta.2\r\n* 1.0.0-PullRequest.4\r\n\r\nGitVersion creates the `PullRequest` Release Label uppercase, so that it will always be lower than `alpha` or `beta`, as following is true for most package managers: `0 < ... < 9 < A < ... < Z < a < ... < z`.\r\nTherefore, `PullRequest` builds will correctly be considered lower than `alpha` packages.\r\n\r\nBy using `StringComparer.OrdinalIgnoreCase.Compare(version1, version2)` this advantage is taken away as `PullRequest` will be considered higher than `alpha` when compared with `OrdinalIgnoreCase.Compare`.\n\n### Desired Behavior\n\nNuGet should do the comparison of Release Labels the same way as other package managers are doing it:\r\n`0 < ... < 9 < A < ... < Z < a < ... < z`.\r\nBy using [`StringComparer.Ordinal`](https://docs.microsoft.com/en-us/dotnet/api/system.stringcomparer.ordinal?view=net-6.0) the behavior would be aligned.\n\n### Additional Context\n\nOther tools used in development:\r\n* [GitVersion](https://gitversion.net)\r\n* Conan"},{"Id":"20859283161","Type":"IssuesEvent","CreatedAt":"2022-03-21T20:36:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11603","RelatedDescription":"Closed issue \"[Feature]: Download packages via torrent\" (#11603) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nOther/NA\n\n### The Elevator Pitch\n\nThis is a potential solution to [NuGet.org package size limits](https://github.com/NuGet/Home/issues/890)\r\n\r\nInstead of hosting the package itself, NuGet.org can give an option to host a torrent file and/or a magnet link. The client can then use a torrent library such as [MonoTorrent](https://github.com/alanmcgovern/monotorrent) to download the package.\n\n### Additional Context and Details\n\n_No response_"},{"Id":"20859189131","Type":"IssuesEvent","CreatedAt":"2022-03-21T20:30:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10244","RelatedDescription":"Closed issue \"Add warning to nuget.exe restore suggesting to use msbuild restore instead\" (#10244) at NuGet/Home","RelatedBody":"## Background\r\n\r\nSolutions which only use PackageReference never needed to use nuget.exe restore. Solutions that had at least 1 packages.config project HAD to use nuget.exe, until we added `-p:RestorePackagesConfig=true` some time ago.\r\n\r\nSince NuGet 5.8 had to introduce a change to the assets file for .NET 5, this has exposed a problem where customers use an old version of nuget.exe to restore their project (create the assets file), but then the version of the build tools they use (msbuild, .NET SDK) expects NuGet's newer \"version\" of the SDK. This causes the build to fail. It was made worse by an unclear error message that asked the customer to restore, rather than telling them that they were using inconsistent versions of tooling. But it shouldn't be so \"difficult\" to use consistent versions of tooling.\r\n\r\nThis is particularly a problem for CI, where the customer's build scripts will have steps like 1. Download/configure NuGet.exe (often specifying a specific version) 2. nuget.exe restore 3. msbuild -t:build. - It's difficult for customers to know they need to keep the versions of nuget.exe in-sync with the version of msbuild, especially when the build script uses whatever version of Visual Studio (msbuild) is installed on the CI agent, often out of their control, but they are responsible for getting nuget.exe, since it doesn't ship with VS. If they have a CI agent pool where different agents have different versions of Visual Studio/MSBuild, the customer's CI script has no chance of getting it \"right\", although the chance that different agents in a single pool using different versions of tools is very low, since most engineers expect the entire agent pool to be consistent.\r\n\r\n## Proposal\r\n\r\nNuGet.exe already does msbuild version detection. When we detect MSBuild version X or higher, we should emit an info message or warning telling the customer to use msbuild restore instead, with a link to docs where we explain how. We can detect if the solution uses any packages.config, or is PackageReference only, to give different messages, if needed.\r\n\r\nWhich version X of MSBuild to warn on is up for debate. We could figure out which version of msbuild we first shipped `-p:RestorePackagesConfig=true` and use that version. Or we could use 16.8, since this is the version starting to cause the current issues.\r\n\r\nThis will help us educate customers that they no longer need to use nuget.exe to restore."},{"Id":"20859117631","Type":"IssuesEvent","CreatedAt":"2022-03-21T20:25:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11034","RelatedDescription":"Closed issue \"Should we move Nuget.exe usage into MsBuild.exe?\" (#11034) at NuGet/Home","RelatedBody":"- [ ] https://github.com/nuget/Home/issues/10244"},{"Id":"20859035439","Type":"IssuesEvent","CreatedAt":"2022-03-21T20:20:39","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11655","RelatedDescription":"Closed issue \"System.TypeInitializationException in NuGetConsole.Host.PowerShell.dll!NuGetConsole.Host.PowerShell.Implementation\" (#11655) at NuGet/Home","RelatedBody":"NuGet.Client tracking issue for https://devdiv.visualstudio.com/DevDiv/_queries/edit/1365236/?triage=true\r\nI added Around The World tag here since internal issue has one.\r\nIt's new exception started to appeared in VS17.00"},{"Id":"20829567794","Type":"IssuesEvent","CreatedAt":"2022-03-19T07:31:08","Actor":"Monrother","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/11684","RelatedDescription":"Opened issue \"[Bug]: It will always run NuGet restore automatically when the project is VSIX project\" (#11684) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nVisual Studio Package Management UI, Visual Studio Package Manager Console\n\n### Product Version\n\nVisual Studio 16.11 (and 2022 as well possibly)\n\n### Worked before?\n\nNot sure\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nIn a VS solution, create a VSIX project. And no matter whether the automatically restore NuGet is checked or not in Tools->Options, it will restore the package every time when open the solution. This is pretty annoying as we have a very large solution.\n\n### Verbose Logs\n\n_No response_"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"20398585964","Type":"IssuesEvent","CreatedAt":"2022-02-22T18:32:01","Actor":"clairernovotny","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/61","RelatedDescription":"Opened issue \"Requiring two-factor authentication on NuGet.org\" (#61) at NuGet/Announcements","RelatedBody":"We announced plans to require tFA on all accounts on NuGet.org. Details in the [blog post](https://devblogs.microsoft.com/nuget/requiring-two-factor-authentication-on-nuget-org/)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1496195887860797445","CreatedAt":"2022-02-22T18:51:12+00:00","UserScreenname":"nuget","Text":"Continuing our commitment to security, https://t.co/F9kiKfvqkS will require two-factor authentication starting on M… https://t.co/U5EIVMPYXI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"1493700008000073731","CreatedAt":"2022-02-15T21:33:28+00:00","UserScreenname":"nuget","Text":"📦Introducing Compatible Packages 📦\n\n🖼 New Frameworks Tab\n😎 Target Framework Badges\n🧩 Computed Compatibility Table\n🛠… https://t.co/qDUkqayBjC","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":171,"FavoriteCount":43,"RawContent":null},{"Id":"1488563020074737670","CreatedAt":"2022-02-01T17:20:54+00:00","UserScreenname":"nuget","Text":"NuGet is celebrating 20 years of @dotnet with over 290,000 unique packages and 160 billion downloads to date! Tune… https://t.co/kCkBuvp3OW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":25,"FavoriteCount":12,"RawContent":null},{"Id":"1470426335705239557","CreatedAt":"2021-12-13T16:12:12+00:00","UserScreenname":"nuget","Text":"Hey friends, 👋\n\nWe just published another proposal to bring machine readable json output for dotnet list package co… https://t.co/iffXek2eSz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1458922810328371207","CreatedAt":"2021-11-11T22:21:18+00:00","UserScreenname":"nuget","Text":"Hi friends 👋\n\nHelp us deliver an amazing target framework filtering package search experience by reviewing our prop… https://t.co/AYWrsHhZcZ","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"1457785562614493192","CreatedAt":"2021-11-08T19:02:17+00:00","UserScreenname":"nuget","Text":"🚢 Announcing #NuGet 6.0! \n \n📍 Source mapping\n6️⃣ .NET 6 Support\n🔒 Package Vulnerabilities\n🧑‍🔬 Retry &amp; Backoff Behav… https://t.co/qIK6tRSw87","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":165,"FavoriteCount":61,"RawContent":null},{"Id":"1448351779423457281","CreatedAt":"2021-10-13T18:15:47+00:00","UserScreenname":"nuget","Text":"Help us understand your package push workflow! https://t.co/7zALBMJ0xH","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1438283829102456833","CreatedAt":"2021-09-15T23:29:21+00:00","UserScreenname":"nuget","Text":"🙌New feature announcement🙌\n\nMap packages to target sources using Package Source Mapping 🗺️\n\nSecuring your package s… https://t.co/UCSO5dcMpz","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":68,"FavoriteCount":30,"RawContent":null},{"Id":"1417880494994198529","CreatedAt":"2021-07-21T16:13:47+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi will be migrating towards a new multi-CDN infrastructure. Some changes for older TLS cipher… https://t.co/aLVVZEHJd3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2022-03-22T03:30:24.5327922Z","RunDurationInMilliseconds":1364}