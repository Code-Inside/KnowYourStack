{"Data":{"Blog":{"FeedItems":[{"Title":"NuGetAudit 2.0: Elevating Security and Trust in Package Management","PublishedOn":"2024-07-17T19:37:50+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Introduction\nIn November 2023 (NuGet 6.8, Visual Studio 17.8, .NET SDK 8.0.100), we released NuGet Audit. NuGet Audit provides warnings during restore when a package with a known vulnerability is used...","Href":"https://devblogs.microsoft.com/nuget/nugetaudit-2-0-elevating-security-and-trust-in-package-management/","RawContent":null},{"Title":"Building a Safer Future – How NuGet is Tackling Software Supply Chain Threats","PublishedOn":"2024-07-16T18:40:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Despite significant technological progress in addressing complex security threats, the key to preventing the next attack lies in adhering to fundamental security principles. It&#8217;s essential to...","Href":"https://devblogs.microsoft.com/nuget/building-a-safer-future-how-nuget-is-tackling-software-supply-chain-threats/","RawContent":null},{"Title":"Dark Mode Now Available on NuGet.org","PublishedOn":"2024-07-11T13:08:54+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We won’t keep you “in the dark” about this any longer… Dark Mode for NuGet.org is finally here!  \nYour feedback has been invaluable in making this happen. We know that eye strain is a significant...","Href":"https://devblogs.microsoft.com/nuget/dark-mode-now-available-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.10","PublishedOn":"2024-05-21T18:28:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.10 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.10 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.10, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-10/","RawContent":null},{"Title":"Announcing NuGet Commands in C# Dev Kit","PublishedOn":"2024-05-14T19:25:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"With the April release of C# Dev Kit, you can now manage your NuGet packages directly from Visual Studio Code using the new commands in the command palette.\nTo add a NuGet package to your project, use...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-commands-in-c-dev-kit/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024","PublishedOn":"2024-03-14T02:04:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/","RawContent":null},{"Title":"Refining Your Search: Introducing NuGet.org’s Compatible Framework Filters","PublishedOn":"2024-03-12T20:05:53+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last year, we introduced search by target frameworks on NuGet.org, allowing you to filter your search results based on the framework(s) that a package targets. We received plenty of great feedback...","Href":"https://devblogs.microsoft.com/nuget/refining-your-search-introducing-nuget-orgs-compatible-framework-filters/","RawContent":null},{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"40443303648","Type":"PullRequestEvent","CreatedAt":"2024-07-25T00:48:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10080","RelatedDescription":"Merged pull request \"Fix gallery functional tests now that CPM is enabled\" (#10080) at NuGet/NuGetGallery","RelatedBody":"Functional tests were broken by me via https://github.com/NuGet/NuGetGallery/pull/10076. Package reference versions should not be set in project files when CPM (central package management) is used.\r\n\r\nAlso did some minor cleanup of unused scripts. Uses repo root build tools instead of a copy just for functional tests."},{"Id":"40437934685","Type":"PullRequestEvent","CreatedAt":"2024-07-24T19:58:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10080","RelatedDescription":"Opened pull request \"Fix gallery functional tests now that CPM is enabled\" (#10080) at NuGet/NuGetGallery","RelatedBody":"Functional tests were broken by me via https://github.com/NuGet/NuGetGallery/pull/10076. Package reference versions should not be set in project files when CPM (central package management) is used.\r\n\r\nAlso did some minor cleanup of unused scripts. Uses repo root build tools instead of a copy just for functional tests."},{"Id":"40435115985","Type":"PullRequestEvent","CreatedAt":"2024-07-24T18:09:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10079","RelatedDescription":"Merged pull request \"Move to latest ServerCommon build tools\" (#10079) at NuGet/NuGetGallery","RelatedBody":"This does not change behavior, just brings alignment."},{"Id":"40434743212","Type":"PullRequestEvent","CreatedAt":"2024-07-24T17:55:32","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10079","RelatedDescription":"Opened pull request \"Move to latest ServerCommon build tools\" (#10079) at NuGet/NuGetGallery","RelatedBody":"This does not change behavior, just brings alignment."},{"Id":"40434539776","Type":"PullRequestEvent","CreatedAt":"2024-07-24T17:47:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10076","RelatedDescription":"Merged pull request \"Clean up build infra to make a repository merge easier\" (#10076) at NuGet/NuGetGallery","RelatedBody":"Similar to https://github.com/NuGet/NuGet.Jobs/pull/1217 and https://github.com/NuGet/ServerCommon/pull/434.\r\n\r\nI would like to try a repository merge (monorepo-ish). That is, merging NuGet Server OSS repositories into fewer (perhaps just one). To make this easier, I want to clean up and align our build infra, which is a case where the same file names exist in several repos, making a repo merge have merge conflicts.\r\n\r\nSummary of changes\r\n- Move to Central Package Management\r\n- Update .gitignore to latest\r\n- Update `.nuget/packages.config` (solution level packages), move to root for better visibility\r\n- Rename `SimpleVersion` and `SemanticVersion` to `GalleryAssemblyVersion` and `GalleryPackageVersion`\r\n- Fix some PowerShell functions to use allowed verbs\r\n- Delete build.cmd, buildandtest.ps1, and several other unused scripts since these are not used by our CI or releases at all.\r\n- More some stuff from `SdkProjects.props` to `Directory.Build.props` so more happens on all projects\r\n- Clean up NuGet.config to match other repos\r\n- Fix broken UTs in `GitHubVulnerabilities2v3.Facts`\r\n- Fix teammate name in Team.json\r\n- Move to latest xunit and fix associated warnings/errors (caught several test failures missed before)\r\n- Align dependency versions with latest across ServerCommon and NuGet.Jobs"},{"Id":"40433603995","Type":"PullRequestEvent","CreatedAt":"2024-07-24T17:14:43","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/10023","RelatedDescription":"Merged pull request \"Bump braces from 3.0.2 to 3.0.3 in /src/Bootstrap\" (#10023) at NuGet/NuGetGallery","RelatedBody":"Bumps [braces](https://github.com/micromatch/braces) from 3.0.2 to 3.0.3.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/micromatch/braces/commit/74b2db2938fad48a2ea54a9c8bf27a37a62c350d\"><code>74b2db2</code></a> 3.0.3</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/88f1429a0f47e1dd3813de35211fc97ffda27f9e\"><code>88f1429</code></a> update eslint. lint, fix unit tests.</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/415d660c3002d1ab7e63dbf490c9851da80596ff\"><code>415d660</code></a> Snyk js braces 6838727 (<a href=\"https://redirect.github.com/micromatch/braces/issues/40\">#40</a>)</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/190510f79db1adf21d92798b0bb6fccc1f72c9d6\"><code>190510f</code></a> fix tests, skip 1 test in test/braces.expand</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/716eb9f12d820b145a831ad678618731927e8856\"><code>716eb9f</code></a> readme bump</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/a5851e57f45c3431a94d83fc565754bc10f5bbc3\"><code>a5851e5</code></a> Merge pull request <a href=\"https://redirect.github.com/micromatch/braces/issues/37\">#37</a> from coderaiser/fix/vulnerability</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/2092bd1fb108d2c59bd62e243b70ad98db961538\"><code>2092bd1</code></a> feature: braces: add maxSymbols (<a href=\"https://github.com/micromatch/braces/issues/\">https://github.com/micromatch/braces/issues/</a>...</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/9f5b4cf47329351bcb64287223ffb6ecc9a5e6d3\"><code>9f5b4cf</code></a> fix: vulnerability (<a href=\"https://security.snyk.io/vuln/SNYK-JS-BRACES-6838727\">https://security.snyk.io/vuln/SNYK-JS-BRACES-6838727</a>)</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/98414f9f1fabe021736e26836d8306d5de747e0d\"><code>98414f9</code></a> remove funding file</li>\n<li><a href=\"https://github.com/micromatch/braces/commit/665ab5d561c017a38ba7aafd92cc6655b91d8c14\"><code>665ab5d</code></a> update keepEscaping doc (<a href=\"https://redirect.github.com/micromatch/braces/issues/27\">#27</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/micromatch/braces/compare/3.0.2...3.0.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=braces&package-manager=npm_and_yarn&previous-version=3.0.2&new-version=3.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/NuGet/NuGetGallery/network/alerts).\n\n</details>"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"40416149035","Type":"IssuesEvent","CreatedAt":"2024-07-24T08:35:16","Actor":"StefanOverHaevgRZ","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13649","RelatedDescription":"Opened issue \"Machine readable output for 'why' command\" (#13649) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\ndotnet.exe\n\n### Current Behavior\n\nThe output of the `dotnet nuget why` command is easily readable for humans but not for machines.\n\n### Desired Behavior\n\nHave an optional switch that allows the output to be machine readable from the console output.\r\n\r\nIdeas for the output format: `json` or `plain` with a delimiter.\r\n**json**\r\n```json\r\n{\r\n  \"net472\": { },\r\n  \"net6.0\": [\r\n    {\r\n      \"name\": \"Azure.Core\",\r\n      \"version\": \"1.38.0\",\r\n      \"packages\": [\r\n        {\r\n          \"name\": \"System.Text.Json\",\r\n          \"version\": \"8.0.3\"\r\n        },\r\n        {\r\n          \"name\": \"System.Memory.Data\",\r\n          \"version\": \"1.0.2\",\r\n          \"packages\": [\r\n            {\r\n              \"name\": \"System.Text.Json\",\r\n              \"version\": \"8.0.3\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**plain**\r\n```\r\nnet472/\r\nnet6.0/System.Text.Json:8.0.3\r\nnet6.0/Azure.Core:1.38.0/System.Text.Json:8.0.3\r\nnet6.0/Azure.Core:1.38.0/System.Memory.Data:1.0.2/System.Text.Json:8.0.3\r\n```\n\n### Additional Context\n\nFollowing up on issue #13639.\r\n\r\nWe want to use the results of the dotnet nuget why command in automated reports for our developers.\r\nWe therefore desire to use the data of the `why` command programmatically and make several processes easier."},{"Id":"40404816874","Type":"PullRequestEvent","CreatedAt":"2024-07-23T22:31:26","Actor":"Nigusu-Allehu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/pull/13376","RelatedDescription":"Closed pull request \"load package source attributes in PMUI.\" (#13376) at NuGet/Home","RelatedBody":"### **This is targeting 17.12**\r\nThis proposal aims to enable the PMUI to load package source attributes. Consequently, users will have the capability to view and modify these values.\r\nRendered: https://github.com/NuGet/Home/blob/697beb7ea1c8e320004591bfceb0989c45cdb060/accepted/2024/PMUI-packagesource-option.md"},{"Id":"40403046739","Type":"IssuesEvent","CreatedAt":"2024-07-23T21:03:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13631","RelatedDescription":"Closed issue \"MSB4018 When using central package managing and package is not specified in Directory.Packages.props \" (#13631) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\ndotnet 8.0303\n\n### Worked before?\n\nI do not know =)\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nI just coppied some projects into my solution.\r\nThose projects contain `PackageReference` but existing `Directory.Packages.props` files does not contain those projects in the list, that is no `PackageVersion` entry. \r\n\r\nWhen I try to build the solution, I get a very ugly message:\r\n```\r\nMSB4018\tThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.NET.Build.Tasks.ProjectContext.<>c__DisplayClass31_0.<GetTopLevelDependencies>b__3(String projectFileDependency)\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter.ComputePackageExclusions()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\t\r\nC:\\Program Files\\dotnet\\sdk\\8.0.303\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\r\n```\r\n\r\nSee the repro: https://github.com/voroninp/FailingMsBuild\r\nIMO, the message shoud be developer-friendy and tell me that `PackageVersion` element is not specified.\n\n### Verbose Logs\n\n_No response_"},{"Id":"40398464506","Type":"IssuesEvent","CreatedAt":"2024-07-23T18:06:36","Actor":"richlander","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13648","RelatedDescription":"Opened issue \"Consider offering snapshot functionality as an alternative to lock files\" (#13648) at NuGet/Home","RelatedBody":"Ubuntu has a snapshot service as a means of making their package manager/archive deterministic. It seems very useful.\r\n\r\n- https://snapshot.ubuntu.com/\r\n- https://ubuntu.com/blog/ubuntu-snapshots-on-azure-ensuring-predictability-and-consistency-in-cloud-deployments\r\n\r\nThe scenario for that is that you test your service on an Ubuntu deployment and then ship to production and scale to multiple VMs (which get created on demand) as needed. All those deployments, from testing through prod, have the same versions of all dependencies, avoiding a whole class of reliability issues and unforeseeable compatibility challenges. Snapshotting brings container-level reliability w/o needing to adopt containers. This is achieved by a single bit of currency, a timestamp. Excellent!\r\n\r\nLock files are intended to achieve much the same thing, but I think via more ceremony. It's also not straightforward to create a lock file from the past, certainly not in an automated fashion, with graph semantics.\r\n\r\nIn essence, snapshots make package locking and determinism a server feature, as opposed to a client one."},{"Id":"40366644873","Type":"IssuesEvent","CreatedAt":"2024-07-22T21:30:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12443","RelatedDescription":"Closed issue \"Central Package Management causes build failure without PackageReference\" (#12443) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe, MSBuild.exe, NuGet SDK\n\n### Product Version\n\n7.0.200-preview.22628.1\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nWhen using Central Package Management I may have a number of projects within a given solution. Some of those projects may contain Package References which are required because they are core projects without Framework references. When using .NET MAUI the SDK provides Implicitly Defined Package References. This fails when a PackageVersion exists within the Directory.Packages.props even though the Maui project does not include a PackageReference to the package.\r\n\r\nhttps://github.com/dotnet/maui/blob/5b6663d61c922f6c971542e8f8751303a53ed364/src/Workload/Microsoft.Maui.Sdk/Sdk/BundledVersions.in.targets#L63-L81\r\n\r\n```xml\r\n<!-- Directory.Packages.Props -->\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"SomeVersion\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n<!-- Some Services Project -->\r\n<Project Sdk=\"Microsoft.Net.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n<!-- Project Targeting Maui-->\r\n<Project Sdk=\"Microsoft.Net.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net7.0-ios;net7.0-android;net7.0-etc</TargetFrameworks>\r\n    <UseMaui>true</UseMaui>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nIn the scenario shown here... the Services Project would work just fine as expected, however the Maui project wouldn't due to the Implicitly Defined References.\n\n### Verbose Logs\n\n_No response_"},{"Id":"40366538166","Type":"IssuesEvent","CreatedAt":"2024-07-22T21:25:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13477","RelatedDescription":"Closed issue \"Update CPM opt-in documentation\" (#13477) at NuGet/Home","RelatedBody":"https://learn.microsoft.com/en-us/nuget/consume-packages/central-package-management#enabling-central-package-management needs to say that ManagePackageVersionsCentrally is not needed with 6.10 and all the equivalent versions if DBP exists.\r\n\r\nWork was done in https://github.com/NuGet/Home/issues/11834. \r\n\r\ncc @jeffkl "},{"Id":"40366514967","Type":"IssuesEvent","CreatedAt":"2024-07-22T21:24:38","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11491","RelatedDescription":"Closed issue \"DependencyGraphRestoreUtility.RestoreAsync should take an args object to minimize public API changes.\" (#11491) at NuGet/Home","RelatedBody":"See https://github.com/NuGet/NuGet.Client/pull/4359/files#r779572952\r\n\r\ncc @zivkan "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"38239602212","Type":"IssuesEvent","CreatedAt":"2024-05-09T16:12:01","Actor":"erdembayar","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/72","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as April 8th, 2024\" (#72) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as April 8th, 2024. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by April 8th, 2024 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-april-8th-2024/"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-07-25T03:30:18.6219591Z","RunDurationInMilliseconds":946}