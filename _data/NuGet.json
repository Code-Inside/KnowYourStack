{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing NuGet 6.9","PublishedOn":"2024-02-14T00:33:14+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"NuGet 6.9 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.9 for Windows, macOS, and Linux as a standalone executable.\nIn NuGet 6.9, we introduce some...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-9/","RawContent":null},{"Title":"Introducing NuGetSolver: A Powerful Tool for Resolving NuGet Dependency Conflicts in Visual Studio","PublishedOn":"2024-01-16T18:54:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Managing dependencies on complex projects can be overwhelming. Developers often grapple with numerous direct and transitive dependencies across multiple projects. When different projects share...","Href":"https://devblogs.microsoft.com/nuget/introducing-nugetsolver-a-powerful-tool-for-resolving-nuget-dependency-conflicts-in-visual-studio/","RawContent":null},{"Title":"Announcing NuGet.exe and NuGet Client SDK Packages Support Policy: Keeping You Informed and Secure","PublishedOn":"2023-11-21T01:04:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"At NuGet, our commitment is to ensure that our users have access to the latest, most secure, and well-maintained versions of our tools and packages. With this in mind, we would like to announce the...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-exe-and-nuget-client-sdk-packages-support-policy-keeping-you-informed-and-secure/","RawContent":null},{"Title":"Announcing NuGet 6.8 – Maintaining Security with Ease","PublishedOn":"2023-11-17T22:26:57+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"NuGet 6.8 is included in Visual Studio 2022 and .NET 8.0 out of the box. You can also download NuGet 6.8 for Windows, macOS, and Linux as a standalone executable.\nMaintaining and understanding...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-8-maintaining-security-with-ease/","RawContent":null},{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"35741198416","Type":"IssuesEvent","CreatedAt":"2024-02-16T14:47:05","Actor":"toras9000","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9789","RelatedDescription":"Closed issue \"[NuGet.org Bug]: The primary search feed for api.nuget.org may be staying.\" (#9789) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nIt bothers me. A fix would be nice\n\n### Describe the bug\n\nThe primary SearchQueryService and secondary SearchQueryService presented in the following feeds return different numbers of downloads.\r\nThe primary SearchQueryService appears to be lagging behind.\r\nhttps://api.nuget.org/v3/index.json\r\n\r\nI do not know if this is the planned behavior.\r\n\n\n### Repro Steps\n\nI compared the following two results (usnc and ussc)\r\n\r\n- Primary SearchQueryService\r\n    - https://azuresearch-usnc.nuget.org/query?q=packageid:System.Data.SQLite.Core\r\n- Secondary SearchQueryService\r\n    - https://azuresearch-ussc.nuget.org/query?q=packageid:System.Data.SQLite.Core\r\n\r\nThe following web page display is close to the secondary\r\n\r\n- Web page\r\n    - https://www.nuget.org/packages/System.Data.SQLite.Core\r\n\n\n### Expected Behavior\n\nIf this is the response for the intended reason, then this is not a particular problem.\r\nI created this issue because I had a question about the fact that the primary appears to return old results.\r\n\n\n### Screenshots\n\n_No response_\n\n### Additional Context and logs\n\n_No response_"},{"Id":"35721510674","Type":"PullRequestEvent","CreatedAt":"2024-02-15T23:40:57","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9809","RelatedDescription":"Opened pull request \"[UI] New theme for home page \" (#9809) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9807\r\nFigma: https://www.figma.com/file/ZaAD9rDujh8JDkRF4q9Fd8/NuGet---Simple-theme-updates?type=design&node-id=61%3A9109&mode=design&t=Urj8iIoXc4thBO3E-1\r\n\r\n\r\n#### Light (background looks\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/744ac884-991f-4920-be94-fc6a9231b14a)\r\n\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/54bffe69-85d8-4e60-a477-e8ba78adf897)\r\n\r\n\r\n\r\n## Button\r\n#### Light\r\n![button-light-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/f71844a1-3217-4b0f-b2a4-a5fa01dfb2af)\r\n#### Dark\r\n![button-dark-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/547c772c-a874-4dd8-86d2-b44d92e7df51)\r\n\r\n### Navbar\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/16ed675a-1613-4786-bd7f-f3f584eebd11)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/182bea3c-9748-4564-8bc2-d9e29877905a)\r\n\r\n### Circuit image\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/8519c001-3bbc-442d-9d82-6b32dd0a51f4)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/09581ea0-3abe-4adc-b305-ceb3ea8f60ed)\r\n\r\n### What is nuget?\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/d452412b-30fb-4f4b-a149-479a49cac7be)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/c2c3ea58-8b34-418d-a95c-5e872079f6b3)\r\n\r\n### Footer\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/6b17cdd6-d5f7-4016-b7ac-a7e622832449)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/745eeaa6-b084-4f5f-be1b-1721cedea542)\r\n\r\n"},{"Id":"35721493692","Type":"PullRequestEvent","CreatedAt":"2024-02-15T23:39:58","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9808","RelatedDescription":"Closed pull request \"[UI] New theme for home page\" (#9808) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9807\r\nFigma: https://www.figma.com/file/ZaAD9rDujh8JDkRF4q9Fd8/NuGet---Simple-theme-updates?type=design&node-id=61%3A9109&mode=design&t=Urj8iIoXc4thBO3E-1\r\n\r\n\r\n#### Light (background looks\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/744ac884-991f-4920-be94-fc6a9231b14a)\r\n\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/54bffe69-85d8-4e60-a477-e8ba78adf897)\r\n\r\n\r\n\r\n## Button\r\n#### Light\r\n![button-light-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/f71844a1-3217-4b0f-b2a4-a5fa01dfb2af)\r\n#### Dark\r\n![button-dark-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/547c772c-a874-4dd8-86d2-b44d92e7df51)\r\n\r\n### Navbar\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/16ed675a-1613-4786-bd7f-f3f584eebd11)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/182bea3c-9748-4564-8bc2-d9e29877905a)\r\n\r\n### Circuit image\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/8519c001-3bbc-442d-9d82-6b32dd0a51f4)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/09581ea0-3abe-4adc-b305-ceb3ea8f60ed)\r\n\r\n### What is nuget?\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/d452412b-30fb-4f4b-a149-479a49cac7be)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/c2c3ea58-8b34-418d-a95c-5e872079f6b3)\r\n\r\n### Footer\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/6b17cdd6-d5f7-4016-b7ac-a7e622832449)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/745eeaa6-b084-4f5f-be1b-1721cedea542)\r\n\r\n"},{"Id":"35721445850","Type":"PullRequestEvent","CreatedAt":"2024-02-15T23:36:52","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9808","RelatedDescription":"Opened pull request \"[UI] New theme for home page\" (#9808) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/9807\r\nFigma: https://www.figma.com/file/ZaAD9rDujh8JDkRF4q9Fd8/NuGet---Simple-theme-updates?type=design&node-id=61%3A9109&mode=design&t=Urj8iIoXc4thBO3E-1\r\n\r\n\r\n#### Light (background looks\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/744ac884-991f-4920-be94-fc6a9231b14a)\r\n\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/54bffe69-85d8-4e60-a477-e8ba78adf897)\r\n\r\n\r\n\r\n## Button\r\n#### Light\r\n![button-light-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/f71844a1-3217-4b0f-b2a4-a5fa01dfb2af)\r\n#### Dark\r\n![button-dark-theme](https://github.com/NuGet/NuGetGallery/assets/43253759/547c772c-a874-4dd8-86d2-b44d92e7df51)\r\n\r\n### Navbar\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/16ed675a-1613-4786-bd7f-f3f584eebd11)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/182bea3c-9748-4564-8bc2-d9e29877905a)\r\n\r\n### Circuit image\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/8519c001-3bbc-442d-9d82-6b32dd0a51f4)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/09581ea0-3abe-4adc-b305-ceb3ea8f60ed)\r\n\r\n### What is nuget?\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/d452412b-30fb-4f4b-a149-479a49cac7be)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/c2c3ea58-8b34-418d-a95c-5e872079f6b3)\r\n\r\n### Footer\r\n#### Light\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/6b17cdd6-d5f7-4016-b7ac-a7e622832449)\r\n#### Dark\r\n![image](https://github.com/NuGet/NuGetGallery/assets/43253759/745eeaa6-b084-4f5f-be1b-1721cedea542)\r\n\r\n"},{"Id":"35720446554","Type":"IssuesEvent","CreatedAt":"2024-02-15T22:41:16","Actor":"martinrrm","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9807","RelatedDescription":"Opened issue \"[UI]: Add a new theme to nuget.org Home page\" (#9807) at NuGet/NuGetGallery","RelatedBody":"Tracks the changes related to home page."},{"Id":"35716394611","Type":"PullRequestEvent","CreatedAt":"2024-02-15T19:45:16","Actor":"erdembayar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9806","RelatedDescription":"Opened pull request \"Add error code for ScanOperationStates table\" (#9806) at NuGet/NuGetGallery","RelatedBody":"Addresses: https://github.com/NuGet/Engineering/issues/5250\r\nAdding 2 new columns to persist extra details about scan operation "},{"Id":"35692168556","Type":"PullRequestEvent","CreatedAt":"2024-02-15T05:16:56","Actor":"v-ponkumar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9804","RelatedDescription":"Merged pull request \" [ReleasePrep][2024.02.14]RI of dev into main\" (#9804) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"35690497283","Type":"IssuesEvent","CreatedAt":"2024-02-15T03:12:38","Actor":"bruno-garcia","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/9800","RelatedDescription":"Closed issue \"[NuGet.org Bug]: Package download numbers are not incrementing\" (#9800) at NuGet/NuGetGallery","RelatedBody":"### Impact\n\nI'm unable to use NuGet.org\n\n### Describe the bug\n\nusing `https://api.nuget.org/v3/index.json` and the search API, we've seen the same number return since January 20th.\r\n\r\n```\r\n Sentry     | 2024-01-21 00:00:00 |       46888265\r\n Sentry     | 2024-01-20 00:00:00 |       46888265\r\n Sentry     | 2024-01-19 00:00:00 |       46804424\r\n Sentry     | 2024-01-18 00:00:00 |       46712023\r\n```\r\n\r\nOriginal NuGet Trends issue: \r\n* https://github.com/dotnet/nuget-trends/issues/258\n\n### Repro Steps\n\nHit the NuGet API: https://azuresearch-usnc.nuget.org/query?q=Sentry\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/6d59168e-7c70-418e-b4ed-4cca3d912580)\r\n\r\nYou can observe no change in days through NuGet Trends: https://nugettrends.com/packages?months=24&ids=Sentry\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/30d33601-e63f-43ef-bbdd-2ad7ef43990a)\r\n\n\n### Expected Behavior\n\nValue to match NuGet Gallery\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/ece4d15f-94c0-4d48-8e4f-c0a280de8853)\r\n\r\nhttps://www.nuget.org/packages/Sentry\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/1633368/0c81e9d5-4842-4615-ab84-318b90868137)\r\n\n\n### Screenshots\n\nabove\n\n### Additional Context and logs\n\nits been raised here:\r\n\r\n* https://github.com/NuGet/NuGetGallery/issues/9791#issuecomment-1937101754"},{"Id":"35687630330","Type":"PullRequestEvent","CreatedAt":"2024-02-14T23:51:55","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9805","RelatedDescription":"Merged pull request \"[ReleasePrep][2024.02.14]FI of main into dev\" (#9805) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"35682825024","Type":"PullRequestEvent","CreatedAt":"2024-02-14T19:56:45","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9805","RelatedDescription":"Opened pull request \"[ReleasePrep][2024.02.14]FI of main into dev\" (#9805) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"35668039926","Type":"PullRequestEvent","CreatedAt":"2024-02-14T11:50:31","Actor":"v-ponkumar","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9804","RelatedDescription":"Opened pull request \" [ReleasePrep][2024.02.14]RI of dev into main\" (#9804) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"35791422787","Type":"IssuesEvent","CreatedAt":"2024-02-19T09:30:40","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6645","RelatedDescription":"Closed issue \"csproj: document how to properly pack platform-specific native assemblies\" (#6645) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet.exe\r\n\r\ndotnet.exe --version (if appropriate): 2.1.4\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1709 (16299.248)\r\n\r\n## Description\r\n\r\nWe've got rid and tfm specific native assemblies in a package but until very recently I haven't find enough documentation about how to pack them and let the runtime pick the appropriate native library automatically.\r\n\r\nRelevant links:\r\n- [New csproj additions](https://docs.microsoft.com/en-us/dotnet/core/tools/csproj) -- I find the IncludeAssets value \"Native\" which says \"native assemblies\" will be copied over. So where are they?\r\n- [Nuget MSBuild targets](https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets) -- traditional folders like build/, tools/, lib/, etc.\r\n- Fragmented information about project.json, mentioning `runtimes/win-x64` and so on -- , but how am I supposed to know that this convention is carried over to the new csproj?\r\n\r\nI have to look into the Nuget code repo, and here: https://github.com/NuGet/NuGet.Client/blob/023fe7670796a8986bbfdc520029e4cf0a6bbfda/src/NuGet.Core/NuGet.Packaging/ContentModel/ManagedCodeConventions.cs#L452\r\n\r\nThat's it, now I know it's `runtimes/{rid}/native/{any?}`. Searching for a [concrete example](https://www.google.com.hk/search?ei=iyegWqX2J4y50AScyqzQDw&q=runtimes%2Fwin-x64%2Fnative&oq=runtimes%2Fwin-x64%2Fnative&gs_l=psy-ab.3...54192.57534.0.57637.16.16.0.0.0.0.326.1791.12j1j0j2.15.0....0...1c.1.64.psy-ab..1.6.749...0i30k1j35i39k1j0i8i30k1j0i8i10i30k1j0i10i30k1.0.EBSRCYq3iEM) on the internet: \r\nI get issues, not documentation.\r\nSearching for \"nuget pack native assemblies\" did not work either..\r\nIt turns out, the correct information is located here: - [Bingo!](https://docs.microsoft.com/en-us/nuget/create-packages/supporting-multiple-target-frameworks)\r\nHowever, this page is advertised as \"Supporting multiple .NET framework versions\", which is really orthogonal to what I want. Multi-targeting is about `tfm`, and platform-specific stuff are about `rid` -- I have never found a single page that connects all these dots together.\r\n\r\nSo I suggest documenting such behavior at the following docs sites:\r\n1. \"Additions to the csproj format\" -- https://docs.microsoft.com/en-us/dotnet/core/tools/csproj\r\n2. \"Package creation workflow\" -- https://docs.microsoft.com/en-us/nuget/create-packages/overview-and-workflow -- there's multi-targeting page, and a native packages page, and I think it's better to create a new page \"platform-specific native libraries\" to avoid confusion.\r\n3. Also, document that `runtimes/{rid}/native` _does not_ work with `netfx` -- you have to place native dlls in the lib/ folder (risky, could cause msbuild warnings/errors), or embed the dlls and release them at runtime."},{"Id":"35791150767","Type":"IssuesEvent","CreatedAt":"2024-02-19T09:22:31","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11813","RelatedDescription":"Closed issue \"[Bug]: Canceling msbuild restore is slow when invalid/unreachable source configured\" (#11813) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe\n\n### Product Version\n\nmsbuild 17.2\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\n1. Find a solution that does not restore quickly. The longer it takes, the better. For example, try https://github.com/OrchardCMS/OrchardCore\r\n2. Run `dotnet nuget add source https://invalid.nuget.org/v1234/index.json -n invalidSource`\r\n3. Run `msbuild -t:restore -v:m`\r\n4. Wait for \"error NU1301: Unable to load the service index for source ...\" messages start appearing\r\n5. Press ctrl+C\r\n6. See that \"Attempting to cancel the build\" appears immediately, but it can take seconds, or minutes, for the command prompt to return (restore to end), during which time a bunch more NU1301 errors will be reported.\r\n\r\nBy comparison, if you press ctrl-c quickly after the \"Determining projects to restore\" message is displayed, the command line returns immeidately. Similarly, when using `-p:RestoreUseStaticGraphEvaluation=true`, ctrl-c also exits immediately.\n\n### Verbose Logs\n\n_No response_"},{"Id":"35791150528","Type":"IssuesEvent","CreatedAt":"2024-02-19T09:22:31","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13234","RelatedDescription":"Closed issue \"SourceRepository.GetResourceAsync should be cancellable.\" (#13234) at NuGet/Home","RelatedBody":"### NuGet Product(s) Affected\n\nNuGet SDK\n\n### Current Behavior\n\nCalling `SourceRepository.GetResourceAsync<FindPackageByIdResource>(cancellationToken);` without an internet connection throws FatalProtocolException after a timeout of 5 seconds, even if cancellationToken.IsCancellationRequested is true.\n\n### Desired Behavior\n\nIf cancellation is requested before the timeout, the task should cancel early and throw TaskCancelledException instead of FatalProtocolException.\n\n### Additional Context\n\nUsing NuGet.Protocol v6.8.0"},{"Id":"35786106630","Type":"IssuesEvent","CreatedAt":"2024-02-19T06:07:10","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13113","RelatedDescription":"Closed issue \"[Signing] Verifying a signed package failed with an error \"NU3034: This package is signed but not by a trusted signer\" when signing without using CertificatePassword \" (#13113) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.9.0.67\r\n\r\n### Worked before?\r\n\r\nIt worked in nuget client Dev\\6.8.0.101 since we used the \" CreateTestCertificate.ps1 \" file to create certificate but we use \" MakeTestCert.csproj\" this time.\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n**Repro steps:**\r\n\r\n1.Patch dotnet SDK: [Patch dotnet SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7B8a3c6685-1661-47f4-8807-b765ca62aea1%7D&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703)\r\n2.Add NuGet.exe path into System variables and create a package with command \"nuget pack .csproj\" for testing.\r\n3. Go to the patchedSDK folder and create a new test certificate:\r\n`.\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net7.0 --Password password`\r\n4. Where CertificateFilePath is the file path to the created certificate (in step3) .cer or .pem file, add trust for the certificate:\r\n`.\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath>` \r\n5. In another \"Developer Command Prompt\", cd to the path of \"NuGet.exe\" and sign a package:\r\n`NuGet.exe sign <PackageFilePath> -CertificatePath <PfxFilePath>`\r\n6. Enter the password: password.\r\n7. Verify the correct certificate was used and no errors or warnings (except for warning NU3002 if you didn't use: \"-Timestamper\").\r\n8. Verify the package was signed:  `NuGet.exe verify -signatures <PackageFilePath>`\r\n\r\n**Expected:**\r\nVerify the package was signed successfully.\r\n\r\n**Actual:**\r\nVerifying a signed package failed with an error \"NU3034: This package is signed but not by a trusted signer\" as below screenshot. \r\n![image](https://github.com/NuGet/Home/assets/149561645/f3d5b7e7-4535-4a59-8409-a213c3774d66)\r\n\r\n\r\n**Note:**   \r\n  The repro rate is 100%. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"35786011615","Type":"IssuesEvent","CreatedAt":"2024-02-19T06:02:20","Actor":"SueSu01","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/13112","RelatedDescription":"Closed issue \"[Signing] Package signing failed with an error: \"NU3001: No certificates were found that meet all the given criteria.\" after nuget signing a package with certificate comes from LocalMachine certificate store\" (#13112) at NuGet/Home","RelatedBody":"### NuGet Product Used\r\n\r\nNuGet.exe\r\n\r\n### Product Version\r\n\r\nNuGet Client Dev\\6.9.0.67\r\n\r\n### Worked before?\r\n\r\nIt worked in nuget client Dev\\6.8.0.101 since we used the \"CreateTestCertificate.ps1\" file to create certificate but we use \"MakeTestCert.csproj\" this time.\r\n\r\n### Impact\r\n\r\nIt's more difficult to complete my work\r\n\r\n### Repro Steps & Context\r\n\r\n**Repro steps:**\r\n\r\n1.Patch dotnet SDK: [Patch dotnet SDK](https://microsoft.sharepoint.com/teams/NuGet/_layouts/15/Doc.aspx?sourcedoc=%7B8a3c6685-1661-47f4-8807-b765ca62aea1%7D&action=edit&wd=target%28Package%20Signing%20Manual%20Test.one%7C0344a15b-01b1-4828-af4c-63fe53687f8a%2FPatch%20dotnet%20SDK%7Cfd0e3c41-e7a8-4de8-b83a-1a09fdb56271%2F%29&wdorigin=703)\r\n2.Add NuGet.exe path into System variables and create a package with command \"nuget pack .csproj\" for testing.\r\n3. Go to the patchedSDK folder and create a new test certificate:\r\n`.\\dotnet run --project .\\Entropy\\MakeTestCert\\MakeTestCert.csproj --framework net7.0`\r\n4. Where _CertificateFilePath_ is the file path to the created certificate (in step3) .cer or .pem file, add trust for the certificate:\r\n`.\\dotnet run --project .\\Entropy\\TrustTestCert\\TrustTestCert.csproj --framework net7.0 -- add -c <CertificateFilePath>`\r\n5. In another \"Developer Command Prompt\", cd to the path of \"NuGet.exe\" and sign a package, where _Fingerprint_ is the Fingerprint (SHA-1) from step 3:\r\n`NuGet.exe sign <PackageFilePath> -CertificateStoreLocation LocalMachine -CertificateStoreName Root -CertificateFingerprint <Fingerprint>`\r\n6. Verify the correct certificate was used and no errors or warnings (except for warning NU3002 if you didn't use: \"-Timestamper\").\r\n\r\n**Expected:**\r\nPackage signing is successful and no error or warnings (except for warning NU3002 if you didn't use: \"-Timestamper\").\r\n\r\n**Actual:**\r\nPackage signing failed with an error: \"NU3001: No certificates were found that meet all the given criteria.\" after nuget signing a package with certificate comes from LocalMachine certificate store as below screenshot.\r\n![image](https://github.com/NuGet/Home/assets/149561645/c0eb8abf-7089-4941-9ebc-91ea7cfb0a80)\r\n\r\n**Note:**   \r\nThe repro rate is 100%. \r\n\r\n### Verbose Logs\r\n\r\n_No response_"},{"Id":"35758591607","Type":"IssuesEvent","CreatedAt":"2024-02-17T07:45:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13250","RelatedDescription":"Opened issue \"Add nullable annotations to NuGet.Configuration\" (#13250) at NuGet/Home","RelatedBody":"[NuGet.Configuration](https://www.nuget.org/packages/NuGet.Configuration) is a package that is part of the [NuGet Client SDK](https://learn.microsoft.com/en-us/nuget/reference/nuget-client-sdk). We are adding null annotations, so projects using [nullable reference types](https://learn.microsoft.com/dotnet/csharp/nullable-references) will benefit from compiler null checking, leading to improved software reliability (fewer NullReferenceExceptions).\r\n\r\nGenerally when annotating nulls we try to avoid making any breaking API or ABI changes. However, the following changes have been made in order to allow the compiler to provide everyone with the most useful nullable warnings.\r\n\r\nProjects that use this package and enable nullable checks might find that upgrading to a version of the package that now has nullable annotations will generate warnings that previously did not generate warnings. This is a natural consequence of annotating the assembly where it previously lacked annotations.\r\n\r\nIn addition, the following breaking changes were implemented:\r\n \r\n## Changes to `SettingsBase` and `SettingsElement`\r\n\r\nTo make the compiler's null checking more accurate, some properties were changed, and some abstract class constructors changed. This should only affect classes that extend the abstract classes. NuGet.Configuration does not provide extensibility to allow custom configuration sections via `Settings.Load*`. Therefore, while these are technically breaking API changes, it's not expected to affect common usage of NuGet.Configuration."},{"Id":"35753020070","Type":"IssuesEvent","CreatedAt":"2024-02-16T22:35:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13249","RelatedDescription":"Opened issue \"CI should use `PublishPipelineArtifact` instead of `PublishBuildArtifacts`\" (#13249) at NuGet/Home","RelatedBody":"See https://learn.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts?view=azure-devops&tabs=yaml#migrate-from-build-artifacts"},{"Id":"35746530454","Type":"IssuesEvent","CreatedAt":"2024-02-16T17:49:23","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13248","RelatedDescription":"Opened issue \"Using System.Text.Json for assets file parsing is failing .NET SDK tests\" (#13248) at NuGet/Home","RelatedBody":"See: https://github.com/dotnet/sdk/pull/38774."},{"Id":"35746106255","Type":"IssuesEvent","CreatedAt":"2024-02-16T17:33:01","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/13247","RelatedDescription":"Opened issue \"Sorting sequences to compare equality should be improved\" (#13247) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nMSBuild.exe, NuGet.exe\n\n### Product Version\n\nAll\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nSeveral places in our code are comparing sequences which requires sorting them.  This can add a measurable amount of overhead and we should investigate better ways to do this.\n\n### Verbose Logs\n\n_No response_"},{"Id":"35746035849","Type":"IssuesEvent","CreatedAt":"2024-02-16T17:30:15","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/12748","RelatedDescription":"Closed issue \"RemoteDependencyWalker allocates a lot due to the fact that it's called recursively\" (#12748) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1825512"},{"Id":"35745989457","Type":"IssuesEvent","CreatedAt":"2024-02-16T17:28:33","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/12748","RelatedDescription":"Reopened issue \"RemoteDependencyWalker allocates a lot due to the fact that it's called recursively\" (#12748) at NuGet/Home","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1825512"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"35647123127","Type":"IssuesEvent","CreatedAt":"2024-02-13T18:56:37","Actor":"martinrrm","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/71","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\" (#71) at NuGet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2024-0057 | NuGet Client Security Feature bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\r\n\r\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at \r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nWithin .NET, only the WindowsDesktop shared runtime contains inbox components which utilize X.509 chain building APIs in a vulnerable manner. Other project types, such as web applications, are not impacted by this vulnerability unless they explicitly invoke the X.509 chain building APIs themselves in a vulnerable manner or they consume an external package which does this on their behalf.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\n### NuGet & NuGet Packages\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier.\r\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier.\r\n\r\n[GitHub Advisory](https://github.com/NuGet/NuGet.Client/security/advisories/GHSA-68w7-72jg-6qpp)\r\n\r\n\r\n### .NET SDK(s)\r\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\r\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\r\n- Any .NET SDK 8.0.101 or earlier.\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a NuGet package or .NET SDK with a version listed in [affected software](#affected-software), you're exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\r\n\r\n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe.\r\n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe.\r\n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe.\r\n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe.\r\n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe.\r\n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe.\r\n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe.\r\n\r\nYou can get the version of NuGet.exe by running the `nuget` command. You should see an output like the following:\r\n\r\n```\r\nNuGet Version: 6.0.0.280\r\n\r\nusage: NuGet <command> [args] [options]\r\n\r\nType 'NuGet help <command>' for help on a specific command.\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://www.nuget.org/downloads\r\n```\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You should see an output like the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n\r\n Version:   6.0.300\r\n\r\n Commit:    8473146e7d\r\n\r\n\r\n\r\nRuntime Environment:\r\n\r\n OS Name:     Windows\r\n\r\n OS Version:  10.0.18363\r\n\r\n OS Platform: Windows\r\n\r\n RID:         win10-x64\r\n\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\r\n\r\n\r\n\r\nHost (useful for support):\r\n\r\n  Version: 6.0.5\r\n\r\n  Commit:  8473146e7d\r\n\r\n\r\n\r\n.NET Core SDKs installed:\r\n\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\r\n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\r\n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\r\n\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at https://aka.ms/corebounty.\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repo is located at https://github.com/NuGet/NuGet.Client . The Announcements repo will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE 2024-0057](https://dev.azure.com/dnceng/internal/_git/dotnet-release?version=GBfeb24&path=/AdvisoryDrafts/CVE-2024-0057.md)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 13, 2024): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2024-02-13_\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-20T03:30:18.5877034Z","RunDurationInMilliseconds":1096}