{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12447265684","Type":"PullRequestEvent","CreatedAt":"2020-05-27T00:29:59","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8012","RelatedDescription":"Opened pull request \"Banner about the upcoming TLS 1.2 enforcement\" (#8012) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/102933/82962923-6fde0500-9f76-11ea-8d4d-8b444cc92f5a.png)\r\n\r\nAdded variable with the background color and put it in all places the verbatim value was used."},{"Id":"12446850777","Type":"PullRequestEvent","CreatedAt":"2020-05-26T23:15:11","Actor":"dcc7497","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8011","RelatedDescription":"Opened pull request \"Add AB Testing to reverse dependencies feat (without view) \" (#8011) at NuGet/NuGetGallery","RelatedBody":"\r\n* Implemented AB testing though the information from the DB does not display on results page yet\r\n\r\nProgress on: NuGet/Engineering#3143"},{"Id":"12446631707","Type":"IssuesEvent","CreatedAt":"2020-05-26T22:39:09","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8001","RelatedDescription":"Closed issue \"Create an Azure Search resource for development\" (#8001) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12446478968","Type":"IssuesEvent","CreatedAt":"2020-05-26T22:16:06","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7984","RelatedDescription":"Closed issue \"Update max supported nuget client version\" (#7984) at NuGet/NuGetGallery","RelatedBody":"See https://github.com/NuGet/NuGetGallery/pull/7982"},{"Id":"12446404257","Type":"IssuesEvent","CreatedAt":"2020-05-26T22:05:26","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7903","RelatedDescription":"Closed issue \"[Package Renames] Expose popularity transfers in search\" (#7903) at NuGet/NuGetGallery","RelatedBody":"Expose popularity transfers on the `/search/query` endpoint.\r\n\r\nExpose the popularity transfer auxiliary file metadata on the `/search/diag` endpoint.\r\n\r\nConsider decreasing the auxiliary file reload cadence to something like once every 10 minutes."},{"Id":"12446404220","Type":"IssuesEvent","CreatedAt":"2020-05-26T22:05:26","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7944","RelatedDescription":"Closed issue \"[Package Renames] Add feature flag to undo all popularity transfers\" (#7944) at NuGet/NuGetGallery","RelatedBody":"Add a feature flag that, when activated, removes all popularity transfers in search. The Gallery UI should be unaffected by this feature flag."},{"Id":"12446404114","Type":"IssuesEvent","CreatedAt":"2020-05-26T22:05:25","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7898","RelatedDescription":"Closed issue \"[Package Renames] Apply popularity transfers in search\" (#7898) at NuGet/NuGetGallery","RelatedBody":"Affected jobs:\r\n\r\n* [ ] db2azuresearch\r\n* [ ] auxiliary2azuresearch\r\n\r\nPart of https://github.com/NuGet/NuGetGallery/issues/7896"},{"Id":"12444438332","Type":"PullRequestEvent","CreatedAt":"2020-05-26T18:20:14","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8010","RelatedDescription":"Merged pull request \"Merge branch 'master' into dev\" (#8010) at NuGet/NuGetGallery","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12446879552","Type":"IssuesEvent","CreatedAt":"2020-05-26T23:20:01","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9611","RelatedDescription":"Opened issue \"Sharing NuGet.Client libraries with Visual Studio components\" (#9611) at NuGet/Home","RelatedBody":"placeholder for now...filling out the issue. "},{"Id":"12446806399","Type":"IssuesEvent","CreatedAt":"2020-05-26T23:07:37","Actor":"silkfire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9604","RelatedDescription":"Closed issue \"How to check framework compatibility?\" (#9604) at NuGet/Home","RelatedBody":"I'm using the `NuGet.Protocol` APIs to fetch metadata about packages. I wonder if there is a way to check whether a package, or more specifically, a framework is compatible with a specific target framework.\r\n\r\nIf my designated TFM is `netcoreapp3.1` and I compare it to `netstandard2.1`, I want this to return `true`.\r\n\r\nI'm fiddling with the `NuGetFramework` type but it doesn't seem to have such a method.\r\n\r\n```csharp\r\nvar isCompatible = NuGetFramework.Parse(\"netcoreapp3.1\") == NuGetFramework.Parse(\"netstandard2.1\");\r\n```"},{"Id":"12444971805","Type":"IssuesEvent","CreatedAt":"2020-05-26T19:17:51","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9110","RelatedDescription":"Closed issue \"Show existing Package Manager UI for VS.Oe\" (#9110) at NuGet/Home","RelatedBody":"Launch PackageManager UI from N.VS.OE.Client.dll codepath.\r\n\r\n[1068098](https://devdiv.visualstudio.com/DevDiv/_queries/edit/1068098/?triage=true)"},{"Id":"12443979058","Type":"IssuesEvent","CreatedAt":"2020-05-26T17:30:55","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9610","RelatedDescription":"Opened issue \"Create remote layers for package sources\" (#9610) at NuGet/Home","RelatedBody":"Create remote friendly layer for package sources that conform to VS.Oe guidelines."},{"Id":"12443937783","Type":"IssuesEvent","CreatedAt":"2020-05-26T17:26:32","Actor":"mirkomuggli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9609","RelatedDescription":"Opened issue \"Design proper session Permanence/Idempotency\" (#9609) at NuGet/Home","RelatedBody":"## Overview\nThere's currently a lot of uncertainty around multiple clients attaching to the same session.\n* Is it possible?\n* If so, what if someone does a restore while someone else is adding/removing packages?\n* What if multiple restores are started?\n\nWe need to investigate what's supported and how other teams have handled these issues - I'll work with Rob to flesh out this issue.\n\nPMUI for Codespaces"},{"Id":"12443916230","Type":"IssuesEvent","CreatedAt":"2020-05-26T17:24:17","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9608","RelatedDescription":"Opened issue \"Package manager sources use remote types from server\" (#9608) at NuGet/Home","RelatedBody":"The UI in the options dialog is pulling data from the server and allows the user to add/edit sources server side.  \r\n\r\nWe need to add data types that are remote friendly and use those in places where we get the sources.\r\n\r\nrelated code/experiences to validate:\r\n\r\nPM UI has a sources drop down that needs to use this.\r\nMake sure search is correctly showing the results from those sources\r\nRestore needs to use the correct sources\r\n\r\n"},{"Id":"12443886860","Type":"IssuesEvent","CreatedAt":"2020-05-26T17:21:07","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9429","RelatedDescription":"Closed issue \"Create strong baseline of metrics for current PMUI Performance\" (#9429) at NuGet/Home","RelatedBody":"A percentage is not enough moving forward. This needs to be presentable and as reliable as possible since it will be used to indicate improvements."},{"Id":"12443856247","Type":"IssuesEvent","CreatedAt":"2020-05-26T17:17:50","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9264","RelatedDescription":"Closed issue \"Package Manager UI - Package Sources for VSO.\" (#9264) at NuGet/Home","RelatedBody":"NuGet.Config's are merged and a unified model of sources is displayed in UI (tools/option/nuget settings). Normally, they work on stuff in local machine. normally: from sln dir up to root directory, user settings + machine wide.\r\n\r\nthis task is about making the server side configs viewable, enablable, updateable, and creatable.\r\n\r\nrelated code/experiences:\r\n- PM UI has a tool icon that launches it.  \r\n- likely part of search: Drop down selector in search tab that chooses sources.)(\r\n- `dotnet nuget list source`"},{"Id":"12443734352","Type":"IssuesEvent","CreatedAt":"2020-05-26T17:05:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5657","RelatedDescription":"Closed issue \"SolutionRestoreWorker.StartBackgroundJobRunnerAsync blocks thread pool threads\" (#5657) at NuGet/Home","RelatedBody":"Using Visual Studio 2017 (15.3 Preview 6).\r\n\r\n### Details\r\n\r\nThe call to `BlockingCollection.Take` in [StartBackgroundJobRunnerAsync](https://github.com/NuGet/NuGet.Client/blob/5d66754b948c86a39aa2b54e7e3c1d67f6b57979/src/NuGet.Clients/NuGet.SolutionRestoreManager/SolutionRestoreWorker.cs#L337) is blocking a thread pool thread for ~~nearly 3~~ **110** seconds during a profiling run opening Roslyn.sln. This can lead to starvation of the thread pool on machines with fewer available processors, and increase the time it takes for Visual Studio to open.\r\n\r\nOne of the following approaches should be used to avoid this block:\r\n\r\n1. Move the call to `Take` to a thread which is not part of the thread pool\r\n2. Use a different data structure such as `AsyncQueue<T>` which is better able to manage these resources\r\n\r\n:memo: Edited to reflect additional time immediately following the initial solution load."},{"Id":"12443681943","Type":"IssuesEvent","CreatedAt":"2020-05-26T16:59:58","Actor":"pirluq","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9607","RelatedDescription":"Opened issue \"fix typos dependecy => dependency\" (#9607) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version : 5.6.0\r\n\r\ndotnet.exe --version (if appropriate): 3.1.300\r\n\r\nVS version (if appropriate): 2019 (16.6.0)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 v1607 (14393.321)\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. reading the code ^^\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"12443407575","Type":"IssuesEvent","CreatedAt":"2020-05-26T16:32:09","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9523","RelatedDescription":"Closed issue \"Linux Test Failures in package signing code when executed on .NET 5 master\" (#9523) at NuGet/Home","RelatedBody":"Package signing branch has few new entries defined in [build/config.props](https://github.com/NuGet/NuGet.Client/blob/dev-feature-xplatVerification/build/config.props#L40-L49) to define `dotnet` cli version for building and running tests. Updated `CliVersionForBuilding` .NET SDK version to .NET 5 latest stable preview release and `CliVersionForTesting` to `master` to test using latest release.\r\n\r\n[Link to CI Build](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3692054&view=results) for the [PR](https://github.com/NuGet/NuGet.Client/pull/3372)\r\n\r\n`ExecuteCommandAsync_WithEmptyPkcs7File_ThrowsAsync`  test case failed on `Linux` when executed on `.NET 5 latest version` \r\n"},{"Id":"12443267611","Type":"IssuesEvent","CreatedAt":"2020-05-26T16:18:22","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9510","RelatedDescription":"Closed issue \"[CPVM] Design re-evaluation for Visual Studio update scenarios\" (#9510) at NuGet/Home","RelatedBody":"## Details about Problem\r\nFor non -sdk projects using CPVM the Project System cannot support the update scenarios. Based on this new information the initial design need to be re-evaluated. \r\n\r\n## Other open questions\r\nIs it still worth to have Project System own the updates for the sdk style projects? \r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-27T05:30:40.1748958Z","RunDurationInMilliseconds":1850}