{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12510493125","Type":"IssuesEvent","CreatedAt":"2020-06-02T18:45:40","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7922","RelatedDescription":"Closed issue \"Packages with duplicate entries in zip files are not blocked\" (#7922) at NuGet/NuGetGallery","RelatedBody":"This created several issues: \r\nhttps://github.com/NuGet/NuGetGallery/issues/7921\r\nhttps://github.com/NuGet/NuGetGallery/issues/7744"},{"Id":"12503309933","Type":"PullRequestEvent","CreatedAt":"2020-06-02T06:58:20","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8021","RelatedDescription":"Opened pull request \"Fix unit test failed due to localized culture and line ending (#7779)\" (#8021) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes:\r\n\r\n* Change to Assert.StartWith instead of Assert.Equal, avoid checking localized 'parameter'  \r\n* Add new class called 'UseInvariantCultureAttribute', change thread UI culture before test, and reset \r\n   after test\r\n* Addressed those unit test:  1.NuGetGallery.Packaging.PackageMetadataFacts.ThrowsForEmptyAndNonEmptyDuplicatesWhenDuplicateMetadataElementsDetectedAndParsingIsNotStrict\r\n2. NuGetGallery.Packaging.PackageMetadataFacts.ThrowsWhenInvalidMinClientVersion\r\n3.NuGetGallery.PackagesControllerFacts+TheUploadFileActionForPostRequests.WillRejectBrokenZipFiles  NuGetGallery.PackagesControllerFacts+TheUploadFileActionForPostRequests.WillShowViewWithErrorsIfPackageIdIsBreaksParsing\r\n4.NuGetGallery.Authentication.AuthenticationServiceFacts+TheAuthenticateMethod.GivenPasswordCredential_ItThrowsArgumentException\r\n5.NuGetGallery.Diagnostics.DiagnosticsServiceFacts+TheGetSourceMethod.RequiresNonNullOrEmptyName\r\n6.NuGetGallery.Services.ContentServiceFacts+TheGetContentItemMethod.GivenANullOrEmptyName_ItShouldThrow\r\n \r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/123"},{"Id":"12503253675","Type":"IssuesEvent","CreatedAt":"2020-06-02T06:50:59","Actor":"devlead","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8020","RelatedDescription":"Opened issue \" NuGet.org package statistics not uploading\" (#8020) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nPackages download count is still 0 after 3 days.\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n1. On this URL\r\n    * https://www.nuget.org/packages/Cake.Tool/\r\n    * https://www.nuget.org/packages/Cake\r\n    * https://www.nuget.org/packages/Cake.Common\r\n\r\n2. Perform this operation \r\n    * Look at \"Version history\"\r\n\r\n3. See error\r\n   * 0.38.1 zero downloads\r\n   * 0.38.0 zero downloads\r\n\r\n### Expected behavior\r\n\r\nWe've confirmed several people are using the latest version, so we would expect download counts to increase a bit each day, at least be more than zero.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/1647294/83488376-09dd0a80-a4ad-11ea-8a4b-f1505ae78d57.png)\r\n![image](https://user-images.githubusercontent.com/1647294/83488458-28db9c80-a4ad-11ea-8c6a-e08a286274c3.png)\r\n![image](https://user-images.githubusercontent.com/1647294/83488562-59233b00-a4ad-11ea-84ba-ce3dcf874255.png)\r\n"},{"Id":"12501362261","Type":"IssuesEvent","CreatedAt":"2020-06-02T01:05:05","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8019","RelatedDescription":"Opened issue \"Organization API key rotation enhancements\" (#8019) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nImagine a company setting up a package publishing pipeline that builds and publishes NuGet packages. They already have an organization on NuGet.org with two admins A and B. The pipeline needs an API key to have packages published on behalf of that organization. Currently, only actual user accounts can have API keys, so either A or B have to create a personal API key and put it into the pipeline (let's say, A did it). Now, API keys expire, so at some point A will receive a notification about it, but at that time they can be unavailable for some reason to rotate keys (sick, left the company, etc.); B, while being a member of that organization, will not get notified about that. So the key expires and publishing pipeline breaks. This is a single point of failure.\r\nAlternatively, our admins thought about that and decided to create a separate account for generating API keys and share credentials for that account. This comes with some maintenance required within their org (the account needs a unique email being able to have Microsoft account associated with it, organization might require password rotation for that account, the emails received by that account has to be forwarded, etc.) and it is now unclear who uses that shared account: we are getting in a situation that organizations tried to address (not using shared accounts).\r\nWe need a way to reliably rotate API keys that are used within organizations.\r\n\r\n### Describe the solution you'd like\r\nI see several options:\r\n* When creating API key scoped for organization allow to specify other organization members who would get expiration notification for the API key and let some organization members (admins?) see all keys scoped for the organization in web UI;\r\n  * Variation of that would be to allow to specify arbitrary email address list to receive that notification;\r\n  * Another variation: always send organization key expiration emails to all admins/members;\r\n* Add the capability to have an API key tied to an organization directly and hence make admins collectively own it. Make sure it is possible to track individual key creation to a specific user.\r\n\r\n"},{"Id":"12501326093","Type":"PullRequestEvent","CreatedAt":"2020-06-02T00:57:37","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8018","RelatedDescription":"Merged pull request \"Update max supported nuget client version\" (#8018) at NuGet/NuGetGallery","RelatedBody":"Client has published the latest version \"nuget.exe v5.7.0-preview1\" here:\r\nhttps://www.nuget.org/downloads\r\nhttps://dist.nuget.org/tools.json"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12513592770","Type":"IssuesEvent","CreatedAt":"2020-06-03T02:27:21","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9639","RelatedDescription":"Opened issue \"Rename NonVisualStateHiddenBooleanToVisibilityConverter to ?\" (#9639) at NuGet/Home","RelatedBody":"My recent PR introduced a way to make the BooleanToVisibility converter have a `Hidden` state when the visibility is false (the default behavior is `Collapsed`).\r\n\r\nAfter a PR review, it was suggested my naming of this property `HiddenWhenFalse` was confusing when considering the `Inverted` property. The suggestion was to name it `NonVisualState` [code](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Converters/BooleanToVisibilityConverter.cs#L21).\r\n\r\nI named the converter in a way that seems clear, but is not concise: `NonVisualStateHiddenBooleanToVisibilityConverter` [code](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/PackageItemControl.xaml#L89).\r\n\r\nFurther feedback recommended this be renamed.\r\nhttps://github.com/NuGet/NuGet.Client/pull/3410#discussion_r434266139. What suggestions do we have for this naming?"},{"Id":"12513422426","Type":"IssuesEvent","CreatedAt":"2020-06-03T01:57:28","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9559","RelatedDescription":"Closed issue \"[Bug Bash][Test Failure] The “Browse” tab is not aligned left with search box\" (#9559) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Master\\30112.146\r\nOS Version: Windows-10-Enterprise-RS5.\r\nNuGet Version: Dev\\5.7.0.6611\r\n## Installiation\r\nInstall VS: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3723092&view=ms.vss-build-web.run-extensions-tab\r\n## Repro steps\r\n1.  Launch Visual Studio 2019 preview.\r\n2. Click “Create a New Project” button and create a new Console App (.Net Core) project.\r\n3. Observe the position of “Browse” tab. \r\n## Expected\r\nThe “Browse” tab should be aligned left with search box.\r\n## Actual\r\nThe “Browse” tab is not be aligned left with search box.\r\n![NotLeftAligned](https://user-images.githubusercontent.com/40230425/81796716-68633880-9540-11ea-99e5-a04c4b4a292d.png)\r\n"},{"Id":"12511578906","Type":"PullRequestEvent","CreatedAt":"2020-06-02T20:50:42","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9638","RelatedDescription":"Opened pull request \"draft of remote auth spec\" (#9638) at NuGet/Home","RelatedBody":""},{"Id":"12509393692","Type":"IssuesEvent","CreatedAt":"2020-06-02T17:00:47","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9637","RelatedDescription":"Closed issue \"Unable to find project 'C:\\Users\\XXX\\Documents\\Visual Studio 2017\\Projects\\HI7.FHIR\\1.6.0 for R4 (released 20200304)\\fhir-net-api-1.6.0-r4\\common\\src\\Hl7.FhirPath\\Hl7.FhirPath.csproj'\" (#9637) at NuGet/Home","RelatedBody":"I downloaded fhir-net-api-1.6.0-r4.zip from Git and tried to build the solution in VS 2019 and I get lots of the same error...\r\n**Unable to find project 'C:\\Users\\XXX\\Documents\\Visual Studio 2017\\Projects\\HI7.FHIR\\1.6.0 for R4 (released 20200304)\\fhir-net-api-1.6.0-r4\\common\\src\\Hl7.FhirPath\\Hl7.FhirPath.csproj'**\r\n\r\nCan someone please advise?  Thank you!"},{"Id":"12508351176","Type":"IssuesEvent","CreatedAt":"2020-06-02T15:25:50","Actor":"ricktiger","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9637","RelatedDescription":"Opened issue \"Unable to find project 'C:\\Users\\XXX\\Documents\\Visual Studio 2017\\Projects\\HI7.FHIR\\1.6.0 for R4 (released 20200304)\\fhir-net-api-1.6.0-r4\\common\\src\\Hl7.FhirPath\\Hl7.FhirPath.csproj'\" (#9637) at NuGet/Home","RelatedBody":"I downloaded fhir-net-api-1.6.0-r4.zip from Git and tried to build the solution in VS 2019 and I get lots of the same error...\r\n**Unable to find project 'C:\\Users\\XXX\\Documents\\Visual Studio 2017\\Projects\\HI7.FHIR\\1.6.0 for R4 (released 20200304)\\fhir-net-api-1.6.0-r4\\common\\src\\Hl7.FhirPath\\Hl7.FhirPath.csproj'**\r\n\r\nCan someone please advise?  Thank you!"},{"Id":"12500517110","Type":"IssuesEvent","CreatedAt":"2020-06-01T22:29:06","Actor":"mirkomuggli","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9636","RelatedDescription":"Opened issue \"Pass ProjectGuid when creating PMUI ToolWindow\" (#9636) at NuGet/Home","RelatedBody":"## Info\r\n\r\nIn PackageManagerUIHandler.cs, we currently pass null as the project guid when creating the tool window for CodeSapces.\r\nIdeally this should be the ProjectGuid for persistence info to work properly."},{"Id":"12499860581","Type":"IssuesEvent","CreatedAt":"2020-06-01T20:59:38","Actor":"jmecosta","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9635","RelatedDescription":"Opened issue \"restore hangs if you define a source to network folder that doesnt exist\" (#9635) at NuGet/Home","RelatedBody":"Steps to reproduce:\r\n\r\n1. wipe your local cache\r\n2. define a Nuget.Config in root of solution with a source to a network share \\\\machine\\nonexistenfolder\r\n3. run dotnet restore, nuget restore, visual studio\r\n\r\nexpected: nuget should warn that the feed is not avaible\r\ncurrent: visual studio hanges, nuget hangets, donet hangs\r\n\r\nannoying :(\r\n"},{"Id":"12498573765","Type":"IssuesEvent","CreatedAt":"2020-06-01T18:32:16","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9634","RelatedDescription":"Opened issue \"Refactor code: Continuation of 3406 bug\" (#9634) at NuGet/Home","RelatedBody":"I got code review right after I merged my [PR](https://github.com/NuGet/NuGet.Client/pull/3406).\r\nThis PR is for just moving methods and renaming them."},{"Id":"12498532541","Type":"IssuesEvent","CreatedAt":"2020-06-01T18:27:38","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9633","RelatedDescription":"Opened issue \"Leak: Thousands of NuGet.Versioning.NuGetVersion items are created\" (#9633) at NuGet/Home","RelatedBody":"I noticed this item is multiplying by thousands during memory leak investigation for another [item](https://github.com/NuGet/Home/issues/9595).\nLooks like it's under our Nuget.Client domain.\n![image.png](https://images.zenhubusercontent.com/5eb1d84a3cd56675c3efe510/dbb96fdb-3673-4e14-b9ec-41c32db0e882)\nI think we need to investigate it. For now assigned to myself, most likely I'll work during this or next sprint."},{"Id":"12498527966","Type":"IssuesEvent","CreatedAt":"2020-06-01T18:27:07","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9614","RelatedDescription":"Closed issue \"Show version range on package reference nodes in dependencies tree\" (#9614) at NuGet/Home","RelatedBody":"From https://github.com/NuGet/NuGet.Client/pull/3392/files/a462d871eebed985c3a3fe7fd145d75f7d30267e#r431223599\r\n\r\nIt may be useful to show the requested version range on the caption of dependencies tree items that represent package references.\r\n\r\nThe NuGet side of this would apply only to transitive package references. The .NET Project System would control the equivalent information for top-level package references."},{"Id":"12498194339","Type":"IssuesEvent","CreatedAt":"2020-06-01T17:51:03","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8478","RelatedDescription":"Closed issue \"Searching in PMUI with Static / Sleet package sources causes OutOfMemoryException\" (#8478) at NuGet/Home","RelatedBody":"# Details about Problem\r\n\r\nWhile using the PM UI and searching for a package, I received multiple 'System.OutOfMemoryException'. Discussing with @loic-sharma and @rrelyea, it seems we may need to discuss an approach to handling sleet / static sources in a better way.\r\n\r\nRelated past discussion: https://github.com/NuGet/Home/issues/7031\r\nJSON Performance discussion: https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/issues/804\r\n\r\nNuGet product used: VS UI\r\nVS version (if appropriate): 16.3.0 Preview 3.0\r\n\r\nWorked before? If so, with which NuGet version: Related to new static sources.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new ASP.NET Core Web Application.\r\n\r\n2. Drop a new NuGet.Config file in the solution directory with the following sources:\r\n```\r\n<packageSources>\r\n        <clear />\r\n        <add key=\"dotnet-core\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\r\n        <add key=\"extensions\" value=\"https://dotnetfeed.blob.core.windows.net/aspnet-extensions/index.json\" />\r\n        <add key=\"entityframeworkcore\" value=\"https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/index.json\" />\r\n        <add key=\"entityframework6\" value=\"https://dotnetfeed.blob.core.windows.net/aspnet-entityframework6/index.json\" />\r\n        <add key=\"aspnetcore-tooling\" value=\"https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/index.json\" />\r\n        <add key=\"aspnetcore\" value=\"https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json\" />\r\n        <add key=\"aspnet-blazor\" value=\"https://dotnetfeed.blob.core.windows.net/aspnet-blazor/index.json\" />\r\n        <add key=\"NuGet.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    </packageSources>\r\n  <disabledPackageSources>\r\n    <clear />\r\n  </disabledPackageSources>\r\n```\r\n3. Open the `Manage NuGet Packages` UI\r\n4. Search for various packages. It should take 3-5 attempts to recreate the problem. Example: Microsoft.EntityFramework.X\", where X is changed to various characters.\r\n5. In the Output window, with \"Show output from: Package Manager\", you'll see exceptions similar to the following (could be 1 or more of these):\r\n```[aspnetcore] Exception of type 'System.OutOfMemoryException' was thrown.\r\n[dotnet-core] Exception of type 'System.OutOfMemoryException' was thrown.\r\n[dotnet-core] Exception of type 'System.OutOfMemoryException' was thrown.\r\n[dotnet-core] Exception of type 'System.OutOfMemoryException' was thrown.\r\n[dotnet-core] Exception of type 'System.OutOfMemoryException' was thrown.\r\n[aspnetcore] Exception of type 'System.OutOfMemoryException' was thrown.\r\n```\r\n"},{"Id":"12498110800","Type":"IssuesEvent","CreatedAt":"2020-06-01T17:41:34","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9252","RelatedDescription":"Closed issue \"net5: Set up CI to run tests on both netcore3 and net5\" (#9252) at NuGet/Home","RelatedBody":"In order to properly support net5 and make sure all our relevant code works on that platform, we should start testing on net5 going forward -- but since we're already testing on netcore3, and we need to keep supporting that one, that means we'll need to run the tests once on each of the two platforms going forward. Unfortunate, but I think necessary."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12485875984","Type":"IssuesEvent","CreatedAt":"2020-05-30T22:10:20","Actor":"pokittisak","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/44","RelatedDescription":"Opened issue \"Test\" (#44) at NuGet/Announcements","RelatedBody":""},{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-06-03T05:30:38.6195918Z","RunDurationInMilliseconds":1665}