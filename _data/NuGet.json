{"Data":{"Blog":{"FeedItems":[{"Title":".NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates","PublishedOn":"2021-04-06T16:03:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We will be releasing updated builds of NuGet this week to accommodate NuGet restore failures on Linux distributions. The failures are observed when updated versions of the NSS or ca-certificates...","Href":"https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/","RawContent":null},{"Title":"Performance and Polish with NuGet 5.9","PublishedOn":"2021-03-17T19:59:59+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.9\nNuGet 5.9 is included in Visual Studio 16.9 and .NET 5.0 out of the box. You can also download NuGet 5.9 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/performance-and-polish-with-nuget-5-9/","RawContent":null},{"Title":"How to Scan NuGet Packages for Security Vulnerabilities","PublishedOn":"2021-03-02T22:15:46+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Open Source is everywhere. It is in many proprietary codebases and community projects. For organizations and individuals, the question today is not whether you are or are not using open-source code,...","Href":"https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/","RawContent":null},{"Title":"State of the NuGet Ecosystem","PublishedOn":"2021-03-01T17:05:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Introduction\nOver the last six months, the NuGet team has been busy running user surveys for NuGet and the .NET ecosystem. Recently, our team launched our first quarterly user survey for NuGet.org....","Href":"https://devblogs.microsoft.com/nuget/state-of-the-nuget-ecosystem/","RawContent":null},{"Title":"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021","PublishedOn":"2021-02-25T19:13:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Action required: If you validate that packages are repository signed by NuGet.org using a NuGet client policy, NuGet.exe verify command, or the dotnet nuget verify command, please follow these steps...","Href":"https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/","RawContent":null},{"Title":"Happy 10th Birthday, NuGet!","PublishedOn":"2021-01-14T01:29:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 1.0 was released on January 13th, 2011 – 10 years and 4 major version releases ago. Since then, NuGet.org has grown to host a large and vibrant package ecosystem with over 230 thousand unique...","Href":"https://devblogs.microsoft.com/nuget/happy-10th-birthday-nuget/","RawContent":null},{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"16068189485","Type":"PullRequestEvent","CreatedAt":"2021-04-23T23:44:46","Actor":"sophiamfavro","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8542","RelatedDescription":"Merged pull request \"Added links to best practices page on package upload page\" (#8542) at NuGet/NuGetGallery","RelatedBody":"Added links to best practices page in upload package page\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/8411\r\n\r\n![image](https://user-images.githubusercontent.com/82480791/115799858-33857580-a38e-11eb-889a-17d68fbd7309.png)\r\n"},{"Id":"16067929198","Type":"IssuesEvent","CreatedAt":"2021-04-23T22:57:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8549","RelatedDescription":"Opened issue \"Link to choosealicense.com in licenses.nuget.org and/or nuget.org UI\" (#8549) at NuGet/NuGetGallery","RelatedBody":"Today we have licenses.nuget.org to host license content. This is linked to by NuGet client and NuGet.org when using license expressions. \r\n\r\nWe could enhance this experience by either link to https://choosealicense.com/ directly or on licenses.nuget.org. This website has very user friendly information about licenses in a more understandable form than just legal wording.\r\n\r\n/cc @JonDouglas"},{"Id":"16066128564","Type":"IssuesEvent","CreatedAt":"2021-04-23T19:24:53","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8548","RelatedDescription":"Opened issue \"Readme warning message for \"images not from trusted domains\" should link directly to list of trusted domains\" (#8548) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nWhen you upload a readme with unsupported images, you get the following warning:\r\n![image](https://user-images.githubusercontent.com/15097183/115920229-e534ad00-a447-11eb-93b5-a7f1dc0511b8.png)\r\n\r\nWhich links to https://docs.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org.\r\n\r\nIt should link to https://docs.microsoft.com/en-us/nuget/nuget-org/package-readme-on-nuget-org#allowed-domains-for-images-and-badges to it's easier for a customer to fix the issue."},{"Id":"16065835926","Type":"PullRequestEvent","CreatedAt":"2021-04-23T18:56:29","Actor":"lyndaidaii","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8540","RelatedDescription":"Merged pull request \"change sql get vulnerabilities by package id\" (#8540) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* Detail 1\r\n* Detail 2\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/3788#issuecomment-816126501"},{"Id":"16065762951","Type":"IssuesEvent","CreatedAt":"2021-04-23T18:49:24","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8545","RelatedDescription":"Closed issue \"Readmes on NuGet.org don't properly handle large images\" (#8545) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nReadmes on NuGet.org, both through the legacy and embedded workflow, can have images extend past the readme space if they are too large.\r\n\r\nExample:\r\nhttps://www.nuget.org/packages/Ben.Demystifier/0.4.1#\r\n![image](https://user-images.githubusercontent.com/15097183/115898679-d2ac7a80-a42b-11eb-9209-fb71fed94b2c.png)\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Add a link to the following image in a markdown file ![image](https://user-images.githubusercontent.com/15097183/115899032-43539700-a42c-11eb-9022-8bde733ac471.png)\r\n2. Add the markdown as a package readme on NuGet.org by including it in a package or using the legacy workflow.\r\n3. It will look like this: \r\n![image](https://user-images.githubusercontent.com/15097183/115899534-d7256300-a42c-11eb-8295-47308d7e856e.png)\r\n\r\n### Expected behavior\r\nThe image should auto-scale to fit the readme space on NuGet.org, like it does in GitHub issues 😊"},{"Id":"16065512109","Type":"IssuesEvent","CreatedAt":"2021-04-23T18:25:34","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8547","RelatedDescription":"Opened issue \"On package upload verification page \"License file\" sections is always displayed.\" (#8547) at NuGet/NuGetGallery","RelatedBody":"@agr commented on [Thu Mar 18 2021](https://github.com/NuGet/Engineering/issues/3708)\n\n### Bug description\r\n\r\nThe \"License file\" section is always displayed on a package upload verification page with empty contents.\r\n\r\n![image](https://user-images.githubusercontent.com/102933/111709833-a6d31f00-8805-11eb-9a3d-330f65e1bac0.png)\r\n\r\n### Reproduction steps\r\nSteps to reproduce the behavior:\r\n1. Upload any package without license file (might need license express specified).\r\n2. See empty \"License file\" section on the package verification page.\r\n\r\n\r\n### Expected behavior\r\nIf there is no license file, there shouldn't be \"License file\" section.\r\n\n\n"},{"Id":"16065494593","Type":"IssuesEvent","CreatedAt":"2021-04-23T18:23:52","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8546","RelatedDescription":"Opened issue \"Consider making file existence checks for license/icons/readme case insensitive\" (#8546) at NuGet/NuGetGallery","RelatedBody":"@agr commented on [Thu Mar 18 2021](https://github.com/NuGet/Engineering/issues/3709)\n\n### Problem description\r\nRight now the filename for license/icon/readme file is taken from nuspec and is searched for using case sensitive search. However, when we create a nuget package the filenames in `<file src=\"filename\">` are case insensitive and `nuget pack` would happily pack `readme.MD` file whether it is referenced as `<file src=\"readme.md\" target=\"\" />` or `<file src=\"readme.MD\" target=\"\" />`. We probably should get Gallery to behave consistently with the client.\r\n\r\nOne thing to verify though is the client behavior on file systems with case sensitive filenames (e.g. Linux).\r\n\n\n"},{"Id":"16064004734","Type":"IssuesEvent","CreatedAt":"2021-04-23T16:11:25","Actor":"chgill-MSFT","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/8545","RelatedDescription":"Opened issue \"Readmes on NuGet.org don't properly handle large images\" (#8545) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nReadmes on NuGet.org, both through the legacy and embedded workflow, can have images extend past the readme space if they are too large.\r\n\r\nExample:\r\nhttps://www.nuget.org/packages/Ben.Demystifier/0.4.1#\r\n![image](https://user-images.githubusercontent.com/15097183/115898679-d2ac7a80-a42b-11eb-9209-fb71fed94b2c.png)\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Add a link to the following image in a markdown file ![image](https://user-images.githubusercontent.com/15097183/115899032-43539700-a42c-11eb-9022-8bde733ac471.png)\r\n2. Add the markdown as a package readme on NuGet.org by including it in a package or using the legacy workflow.\r\n3. It will look like this: \r\n![image](https://user-images.githubusercontent.com/15097183/115899534-d7256300-a42c-11eb-8295-47308d7e856e.png)\r\n\r\n### Expected behavior\r\nThe image should auto-scale to fit the readme space on NuGet.org, like it does in GitHub issues 😊"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"16068658197","Type":"IssuesEvent","CreatedAt":"2021-04-24T01:31:15","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10647","RelatedDescription":"Closed issue \"Trusted-signers Add has inconsistent arguments\" (#10647) at NuGet/Home","RelatedBody":"Thanks for @loic-sharma 's question in https://github.com/NuGet/Home/pull/10628#discussion_r589856473\r\n\r\nIn NuGet.exe command, the package path could be [wildcard](https://github.com/NuGet/NuGet.Client/blob/ac97d923e633f4ee65eec5ec690c4d99d7a922f3/src/NuGet.Core/NuGet.Commands/TrustedSignersCommand/TrustedSignersCommandRunner.cs#L93-L108), so there might be multiple paths after parsing.\r\nBut there is a checking on \"Name\" to reject any existing \"Name\" at https://github.com/NuGet/NuGet.Client/blob/ac97d923e633f4ee65eec5ec690c4d99d7a922f3/src/NuGet.Core/NuGet.Commands/TrustedSignersCommand/TrustedSignerActionsProvider.cs#L243\r\nSo when there are multiple packages, the first one will be added successfully, but the rest will fail for `A trusted signer 'Test' already exists.`\r\nApparently this is a bug. We should make the two consistent.\r\nThat is, do not accept multiple paths, or, accept multiple 'Name'.  "},{"Id":"16068654462","Type":"IssuesEvent","CreatedAt":"2021-04-24T01:30:15","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8053","RelatedDescription":"Closed issue \"Signing: implement dotnet trusted-signers command\" (#8053) at NuGet/Home","RelatedBody":"Implement \"dotnet trusted-signers\" command according to NuGet.exe command \"nuget trusted-signers\".+\r\nSpec is  here\" https://github.com/NuGet/Home/pull/10628"},{"Id":"16067427303","Type":"IssuesEvent","CreatedAt":"2021-04-23T21:45:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10731","RelatedDescription":"Closed issue \"Package Namespaces: Add configuration reading as part of the restore input (dependency graph spec) generation in commandline and VS scenarios\" (#10731) at NuGet/Home","RelatedBody":"Add configuration reading in PackageReference restore input generation."},{"Id":"16066482370","Type":"IssuesEvent","CreatedAt":"2021-04-23T20:00:23","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10715","RelatedDescription":"Closed issue \"[Speculative bug] Ensure all code paths work with a download count exceeding int.MaxValue\" (#10715) at NuGet/Home","RelatedBody":"<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: all\r\nProduct version: latest\r\n\r\n## Repro steps and/or sample project\r\n\r\nSee https://github.com/NuGet/NuGetGallery/issues/8476. In short, sooner or later Newtonsoft.Json will exceed `int.MaxValue` (2,147,483,647) as may cause problems.\r\n\r\nEnd-to-end, we (NuGet team) need to ensure that a download count exceeding `int.MaxValue` does not break the client. The aforementioned link tracks the server-side investigation/fixes.\r\n\r\nI have confirmed the following with Fiddler on client side.\r\n\r\n- PM UI Browse tab, V3 nuget.org\r\n  - ✔️ Works up to 1000 trillion (so we have plenty of runway 😄)\r\n  - ![image](https://user-images.githubusercontent.com/94054/113341530-1eaf4800-92e2-11eb-9793-1d53f5372c23.png)\r\n  - ❌ Crashes VS after 1000 trillion\r\n- PM UI Browse tab, V2 nuget.org\r\n  - Same as V3.\r\n- nuget.exe search, V3 nuget.org\r\n  - ✔️ Works up to `long.MaxValue`\r\n  - ![image](https://user-images.githubusercontent.com/94054/113340825-3afeb500-92e1-11eb-9b47-05fe3e04ff94.png)\r\n  - ❌ Fails over to USSC (???) after `long.MaxValue`\r\n- nuget.exe search V2 nuget.org\r\n  - ✔️ Works up to `long.MaxValue`\r\n  - ![image](https://user-images.githubusercontent.com/94054/113340947-684b6300-92e1-11eb-9cbb-5a7457d521de.png)\r\n  - ✔️ Shows N/A after `long.MaxValue` (I think this is a good behavior)\r\n  - ![image](https://user-images.githubusercontent.com/94054/113342087-e3614900-92e2-11eb-83c5-41acdee6a8ca.png)\r\n\r\nFrom this analysis it seems that client is fine for the `int.MaxValue`. However I may be missing places and I think it would be prudent to do a pass over all of the places to make sure at least `int.MaxValue + 1` doesn't crash NuGet since this is a real situation on the horizon.\r\n\r\nI don't know all of the places download count is used on the client.\r\n"},{"Id":"16065195357","Type":"IssuesEvent","CreatedAt":"2021-04-23T17:55:58","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10795","RelatedDescription":"Closed issue \"Use embedded icon in NuGet SDK packages\" (#10795) at NuGet/Home","RelatedBody":"Migrate NuGet SDK packages from iconUrl to embedded icons"},{"Id":"16062242638","Type":"IssuesEvent","CreatedAt":"2021-04-23T14:04:20","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10785","RelatedDescription":"Closed issue \"dotnet pack: Getting NU5008: Manifest file not found in one folder, but not in another folder\" (#10785) at NuGet/Home","RelatedBody":"I am getting different results from `dotnet pack` when in different folders - both work but one produces error messages. There must be some sort of rules that I'm not aware with and I could use some help to understand how `dotnet pack` works with solutions/projects.\r\n\r\n### What I am trying to achieve:\r\n\r\nI am trying to build a dotnet tool that will allow multiple projects to go into one NuGet package (part of my modular monolith approach). I'm using this tool to allow me to break up large solutions into separate NuGet packages. You would run the tool at the solution level so that it can find all the projects to include in the NuGet package.\r\n\r\nI get errors running the `dotnet pack` at the solution folder level, which isn't going to work for other users.\r\n\r\n## Details about Problem\r\n\r\nI have a VS solution with the following (example) file structure\r\n\r\n- SolutionFolder (actually MultiProjPackTool , but make it easier to understand I use SolutionFolder)\r\n   - Group1.Project1\r\n       - Group1.Project1.csproj\r\n    - Group1.Project2\r\n       - Group1.Project2.csproj\r\n    - Group1.Project3\r\n       - Group1.Project3.csproj\r\n    - MultiProjPackTool \r\n\r\nMy `CreateNuGetDebug .nuspec` file looks like this (but different version num for each folder)\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>BookApp.Books</id>\r\n    <version>1.0.0-preview001</version>\r\n    <authors>The authors</authors>\r\n    <description>description of this NuGet package</description>\r\n    <dependencies>\r\n      <group targetFramework=\"net5.0\">\r\n        <dependency id=\"Microsoft.Extensions.Logging\" version=\"5.0.0\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"13.0.1\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\" target=\"lib\\net5.0\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nWhen I run the command `dotnet pack -p:NuspecFile=CreateNuGetDebug.nuspec` (which has the version of `1.0.0-preview002`) at the `...SolutionFolder\\MultiProjPackTool\\` it works fine, with the following output.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\n```\r\n\r\n\r\nWhen I run the same command with the same .nuspec (copied) in the folder `...SolutionFolder\\` (which has the version of `1.0.0-preview001`) it gives me the following output **BUT it still creates a valid .nupkg file!! (see `Successfully created package ... ` output below)**. It also puts the .nupkg file into the MultiProjPackTool\\bin\\Debug folder.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Group1.Project3 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\r\n  Group2.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\bin\\Debug\\netstandard2.1\\Group2.Project1.dll\r\n  Group1.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\r\n  Group1.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\Group2.Project1.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\Group1.Project3.csproj]\r\n  Group2.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\bin\\Debug\\net5.0\\Group2.Project2.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\Group1.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\Group2.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\Group1.Project1.csproj]\r\n```\r\n\r\n## Access to the code\r\n\r\nThe actual code is open-source at https://github.com/JonPSmith/MultiProgPackTool\r\n"},{"Id":"16057787517","Type":"IssuesEvent","CreatedAt":"2021-04-23T08:13:16","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10797","RelatedDescription":"Opened issue \"[Push] Symbols.nupkg had not been pushed to the specific source using command:”dotnet nuget push “*.nupkg”” although the cmd said it was pushed\" (#10797) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Main\\31222.286\r\nNuGet Version: Dev\\5.10.0.7222\r\nOS Version: Windows-10-Enterprise-20H1 \r\n## Repro steps and/or sample project\r\n1.\tCreate a new C# Console Application (.net Core 5.0) project (called ConsolePackage) via VS.\r\n2.\tPack several packages (one package is created includes the symbol package).\r\n3.\tCd to the packed package folder (C:\\Users\\v-luzh\\source\\repos\\ConsolePackage\\ConsolePackage\\bin\\Debug) and push all the packages created in step2 to a specific source with the command: ”`dotnet nuget push “*.nupkg” –s C:\\Users\\v-luzh\\source\\repos\\LocalPushed`”.\r\n4.\tGo to the specific source and check if all the packages are pushed.\r\n## Expected\r\nAll the packages are pushed successfully to the specific source. Below are all the packages I created in step2.\r\n![image](https://user-images.githubusercontent.com/20632625/115840684-84f53980-a44e-11eb-8171-4e1364336508.png)\r\n## Actual\r\nSymbols.nupkg had not been pushed to the specific source although the command said it was pushed as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/115840742-963e4600-a44e-11eb-92b4-f5370731579f.png)\r\n## Note:\r\nIt also repro when pushing all the packages to UNC path.\r\n"},{"Id":"16057561108","Type":"IssuesEvent","CreatedAt":"2021-04-23T07:55:18","Actor":"JonPSmith","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/10785","RelatedDescription":"Reopened issue \"dotnet pack: Getting NU5008: Manifest file not found in one folder, but not in another folder\" (#10785) at NuGet/Home","RelatedBody":"I am getting different results from `dotnet pack` when in different folders - both work but one produces error messages. There must be some sort of rules that I'm not aware with and I could use some help to understand how `dotnet pack` works with solutions/projects.\r\n\r\n### What I am trying to achieve:\r\n\r\nI am trying to build a dotnet tool that will allow multiple projects to go into one NuGet package (part of my modular monolith approach). I'm using this tool to allow me to break up large solutions into separate NuGet packages. You would run the tool at the solution level so that it can find all the projects to include in the NuGet package.\r\n\r\nI get errors running the `dotnet pack` at the solution folder level, which isn't going to work for other users.\r\n\r\n## Details about Problem\r\n\r\nI have a VS solution with the following (example) file structure\r\n\r\n- SolutionFolder (actually MultiProjPackTool , but make it easier to understand I use SolutionFolder)\r\n   - Group1.Project1\r\n       - Group1.Project1.csproj\r\n    - Group1.Project2\r\n       - Group1.Project2.csproj\r\n    - Group1.Project3\r\n       - Group1.Project3.csproj\r\n    - MultiProjPackTool \r\n\r\nMy `CreateNuGetDebug .nuspec` file looks like this (but different version num for each folder)\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>BookApp.Books</id>\r\n    <version>1.0.0-preview001</version>\r\n    <authors>The authors</authors>\r\n    <description>description of this NuGet package</description>\r\n    <dependencies>\r\n      <group targetFramework=\"net5.0\">\r\n        <dependency id=\"Microsoft.Extensions.Logging\" version=\"5.0.0\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"13.0.1\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\" target=\"lib\\net5.0\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nWhen I run the command `dotnet pack -p:NuspecFile=CreateNuGetDebug.nuspec` (which has the version of `1.0.0-preview002`) at the `...SolutionFolder\\MultiProjPackTool\\` it works fine, with the following output.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\n```\r\n\r\n\r\nWhen I run the same command with the same .nuspec (copied) in the folder `...SolutionFolder\\` (which has the version of `1.0.0-preview001`) it gives me the following output **BUT it still creates a valid .nupkg file!! (see `Successfully created package ... ` output below)**. It also puts the .nupkg file into the MultiProjPackTool\\bin\\Debug folder.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Group1.Project3 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\r\n  Group2.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\bin\\Debug\\netstandard2.1\\Group2.Project1.dll\r\n  Group1.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\r\n  Group1.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\Group2.Project1.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\Group1.Project3.csproj]\r\n  Group2.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\bin\\Debug\\net5.0\\Group2.Project2.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\Group1.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\Group2.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\Group1.Project1.csproj]\r\n```\r\n\r\n## Access to the code\r\n\r\nThe actual code is open-source at https://github.com/JonPSmith/MultiProgPackTool\r\n"},{"Id":"16057506476","Type":"IssuesEvent","CreatedAt":"2021-04-23T07:50:56","Actor":"JonPSmith","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10785","RelatedDescription":"Closed issue \"dotnet pack: Getting NU5008: Manifest file not found in one folder, but not in another folder\" (#10785) at NuGet/Home","RelatedBody":"I am getting different results from `dotnet pack` when in different folders - both work but one produces error messages. There must be some sort of rules that I'm not aware with and I could use some help to understand how `dotnet pack` works with solutions/projects.\r\n\r\n### What I am trying to achieve:\r\n\r\nI am trying to build a dotnet tool that will allow multiple projects to go into one NuGet package (part of my modular monolith approach). I'm using this tool to allow me to break up large solutions into separate NuGet packages. You would run the tool at the solution level so that it can find all the projects to include in the NuGet package.\r\n\r\nI get errors running the `dotnet pack` at the solution folder level, which isn't going to work for other users.\r\n\r\n## Details about Problem\r\n\r\nI have a VS solution with the following (example) file structure\r\n\r\n- SolutionFolder (actually MultiProjPackTool , but make it easier to understand I use SolutionFolder)\r\n   - Group1.Project1\r\n       - Group1.Project1.csproj\r\n    - Group1.Project2\r\n       - Group1.Project2.csproj\r\n    - Group1.Project3\r\n       - Group1.Project3.csproj\r\n    - MultiProjPackTool \r\n\r\nMy `CreateNuGetDebug .nuspec` file looks like this (but different version num for each folder)\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>BookApp.Books</id>\r\n    <version>1.0.0-preview001</version>\r\n    <authors>The authors</authors>\r\n    <description>description of this NuGet package</description>\r\n    <dependencies>\r\n      <group targetFramework=\"net5.0\">\r\n        <dependency id=\"Microsoft.Extensions.Logging\" version=\"5.0.0\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"13.0.1\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\" target=\"lib\\net5.0\" />\r\n    <file src=\"C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\" target=\"lib\\net5.0\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nWhen I run the command `dotnet pack -p:NuspecFile=CreateNuGetDebug.nuspec` (which has the version of `1.0.0-preview002`) at the `...SolutionFolder\\MultiProjPackTool\\` it works fine, with the following output.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\n```\r\n\r\n\r\nWhen I run the same command with the same .nuspec (copied) in the folder `...SolutionFolder\\` (which has the version of `1.0.0-preview001`) it gives me the following output **BUT it still creates a valid .nupkg file!! (see `Successfully created package ... ` output below)**. It also puts the .nupkg file into the MultiProjPackTool\\bin\\Debug folder.\r\n\r\n```text\r\nMicrosoft (R) Build Engine version 16.9.0+57a23d249 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Group1.Project3 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\bin\\Debug\\net5.0\\Group1.Project3.dll\r\n  Group2.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\bin\\Debug\\netstandard2.1\\Group2.Project1.dll\r\n  Group1.Project1 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\bin\\Debug\\net5.0\\Group1.Project1.dll\r\n  Group1.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\bin\\Debug\\net5.0\\Group1.Project2.dll\r\n  MultiProjPackTool -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\netcoreapp3.1\\MultiProjPackTool.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project1\\Group2.Project1.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project3\\Group1.Project3.csproj]\r\n  Group2.Project2 -> C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\bin\\Debug\\net5.0\\Group2.Project2.dll\r\n  Successfully created package 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\MultiProjPackTool\\bin\\Debug\\BookApp.Books.1.0.0-preview002.nupkg'.\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project2\\Group1.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group2.Project2\\Group2.Project2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.202\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5008: Manifest file not found at 'C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\CreateNuGetDebug.nuspec' [C:\\Users\\JonPSmith\\source\\repos\\MultiProgPackTool\\Group1.Project1\\Group1.Project1.csproj]\r\n```\r\n\r\n## Access to the code\r\n\r\nThe actual code is open-source at https://github.com/JonPSmith/MultiProgPackTool\r\n"},{"Id":"16053920112","Type":"IssuesEvent","CreatedAt":"2021-04-22T23:58:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10725","RelatedDescription":"Closed issue \"Add package namespaces support as part of the configuration - add a reading capability only\" (#10725) at NuGet/Home","RelatedBody":"Child of https://github.com/NuGet/Home/issues/6867. \r\n\r\nAdd the configuration writing/reading for namespaces as documented in https://github.com/NuGet/Home/pull/10660. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"15928910571","Type":"IssuesEvent","CreatedAt":"2021-04-13T21:31:59","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/58","RelatedDescription":"Opened issue \"NuGet repository signature certificate will expire on April 14th, 2021\" (#58) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nAt 5:00AM PST on April 14th, 2021, the [NuGet repository signing certificate will expire](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/). This certificate is used to verify the content integrity of a package and protect against content tampering. When the signing certificate expires, it will fallback to a timestamp for verification.\r\n\r\nFor packages that have not been automatically re-signed by NuGet.org with an updated certificate, you may be affected by [.NET 5 NuGet Restore Failures on Linux distributions using NSS or ca-certificates](https://github.com/NuGet/Announcements/issues/56). Only a subset of NuGet.org packages have been re-signed with a new certificate since March 15th, 2021.\r\n\r\nGiven that the [NuGet Microsoft author signing certificate has already expired](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/), you may have already ran into this issue if you have a Microsoft author signed package in your environment and may already be aware of this change in behavior & resolved it.\r\n\r\nFor reference of the different types of NuGet signatures:\r\n\r\n- **Author signature.** An author signature guarantees that the package has not been modified since the author signed the package, no matter from which repository or what transport method the package is delivered. Additionally, author-signed packages provide an extra authentication mechanism to the nuget.org publishing pipeline because the signing certificate must be registered ahead of time. \r\n- **Repository signature.** Repository signatures provide an integrity guarantee for all packages in a repository whether they are author signed or not, even if those packages are obtained from a different location than the original repository where they were signed.\r\n\r\n## Symptoms\r\n\r\nYour Linux environment may give you error messages when running `dotnet restore` such as:\r\n\r\n```\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n\r\nerror NU3037: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\nerror NU3028: Package 'System.Memory 4.5.3' from source 'https://api.nuget.org/v3/index.json': The repository countersignature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n```\r\n\r\nThis indicates that your environment is affected by an upstream change to [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages and you'll need to update your .NET SDK to resolve it.\r\n\r\n## Solution\r\n\r\nNew .NET builds have been provided with NuGet package verification disabled on Linux and macOS.\r\n\r\n- [.NET SDK 5.0.202](https://dotnet.microsoft.com/download/dotnet/5.0)\r\n- [.NET 6 Preview 3](https://dotnet.microsoft.com/download/dotnet/6.0)\r\n\r\nIt is recommended that you update to these builds as soon as you can to mitigate disruption on Linux environments.\r\n\r\n## Details\r\n\r\nFor more details on this incident, see the following resources:\r\n\r\n- https://github.com/NuGet/Announcements/issues/56\r\n- https://devblogs.microsoft.com/nuget/net-5-nuget-restore-failures-on-linux-distributions-using-nss-or-ca-certificates/\r\n- https://github.com/dotnet/announcements/issues/180\r\n\r\nIf you run into this issue after April 14th, 2021, please provide a comment on https://github.com/NuGet/Home/issues/10712"},{"Id":"15789095683","Type":"IssuesEvent","CreatedAt":"2021-04-01T22:00:20","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/57","RelatedDescription":"Opened issue \"NuGet.org temporarily down due to Azure services outage\" (#57) at NuGet/Announcements","RelatedBody":"NuGet.org is being affected by an outage due to issues affecting the Azure Portal and Azure services, but the team is on it. We appreciate your patience and we will keep you updated as soon as we get more information.\r\n\r\nIn the meantime, check https://status2.azure.com/ for Azure updates and find work-arounds in this thread https://github.com/NuGet/NuGetGallery/issues/8480."},{"Id":"15770729318","Type":"IssuesEvent","CreatedAt":"2021-03-31T19:45:05","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/56","RelatedDescription":"Opened issue \"Notice: NuGet Restore Failures on Linux distributions using NSS or Mozilla root CA list\" (#56) at NuGet/Announcements","RelatedBody":"## Context\r\n\r\nUsers of .NET 5.0+ will receive error messages when running `dotnet restore` on Linux distros that use [nss](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/) or `ca-certificates` packages maintained by Mozilla's root CA list. The root cause is due to the certificate used for signed NuGet packages recently expiring and as a result the validation for packages uses a timestamp provider chain that has a root certificate that has been [removed by Network Security Services (NSS)](https://bugzilla.mozilla.org/show_bug.cgi?id=1686854) which is a popular alternative to [OpenSSL](https://github.com/openssl/openssl).\r\n\r\n- [NuGet Microsoft Author Signing Certificate Update](https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/) - Expires January 27th, 2021\r\n- [NuGet.org Repository Signing Certificate Update](https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/) - Expires April 14th, 2021\r\n\r\nFor more information, please read the [Distrust of Symantec TLS Certificates](https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/) on the Mozilla Security Blog, [Mozilla Root Store Policy](https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/policy/) on Mozilla.org, and [Symantec Issues](https://wiki.mozilla.org/CA:Symantec_Issues) on the Mozilla Wiki Page.\r\n\r\n## Affected Environments\r\n\r\n.NET 5.0+ SDK on Linux distros that use [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). \r\n\r\nAt this time, we are not sure of every distro that may be affected. If you're aware of an affected distro, please let us know!\r\n\r\nBelow is a table that includes .NET support for Linux distros:\r\n\r\n### Linux\r\n\r\nOS                                    | Version               | Affected          |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Alpine Linux][Alpine]                | N/A                 | ❓ |\r\n[CentOS][CentOS]                      | N/A                    | ❓ |\r\n[Debian][Debian]                      | N/A                    | ❓ |\r\n[Fedora][Fedora]                      | N/A                   | ❓ |\r\n[Linux Mint][Linux-Mint]              | N/A                   | ❓ |\r\n[openSUSE][OpenSUSE]                  | N/A                   | ❓ |\r\n[Red Hat Enterprise Linux][RHEL]      | N/A                    | ❓ |\r\n[SUSE Enterprise Linux (SLES)][SLES]  | N/A               | ❓ |\r\n[Ubuntu][Ubuntu]                      | N/A   | ❓ |\r\n\r\n[Alpine]: https://alpinelinux.org/\r\n[CentOS]: https://www.centos.org/\r\n[Debian]: https://www.debian.org/\r\n[Fedora]: https://getfedora.org/\r\n[Linux-Mint]: https://linuxmint.com/\r\n[OpenSUSE]: https://opensuse.org/\r\n[RHEL]: https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\r\n[SLES]: https://www.suse.com/products/server/\r\n[Ubuntu]: https://ubuntu.com/\r\n\r\nAdditionally, here is a table of other Linux variants that may be affected but are not officially supported by .NET.\r\n\r\nOS                                    | Version               | Affected       |\r\n--------------------------------------|-----------------------|-------------------|\r\n[Arch Linux](https://archlinux.org/)                          | 20210328+                 | ✅[Issue](https://github.com/NuGet/Home/issues/10695)             |\r\n[Artix Linux](https://artixlinux.org/)                         | 20201128+                    | ✅[Issue](https://github.com/NuGet/Home/issues/10684)             |\r\n\r\n### Other Linux distros\r\n\r\n- At the time of writing, we believe other distributions will not be affected until a distribution is updated to include [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes).\r\n\r\n## Mitigation\r\n\r\n### .NET Core 3.1\r\n\r\n.NET 5 introduces a signing verification mechanism that promotes warnings to throw an error at `dotnet restore` time. To work around this, you can temporarily target against .NET Core 3.1.\r\n\r\n### Modify CA Certificate Store\r\n\r\nDepending on your Linux distro, you can modify your CA certificate store by taking on an earlier version of your `ca-certificates` package.\r\n\r\nFor reference, the affected version is [nss 3.63+](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.63_release_notes). `nss` includes a hard-coded list of trusted CA certificates and therefore can be modified to include and trust the `Verisign Universal Root Certificate Authority` again.\r\n\r\nMany Linux distros can leverage `dpkg-reconfigure` to check for the entry and enable trust for it. As a manual workaround, you may need to remove a `leading !` from the certificate line & update your CA certificates package.\r\n\r\n**Note:** Doing this is considered a bad security practice & should only be done if you understand the security implications of doing so.\r\n\r\n## Solution\r\n\r\nDue to existing issues with the .NET 5 signing verification feature & fallback of timestamp verification, we have decided to revoke this feature for Unix-based systems within .NET 5 SDK. Therefore your experience of using `dotnet restore` will remain largely the same as it was in .NET Core 3.1. Stay tuned for an updated .NET SDK version that will include this change.\r\n\r\n### Stay updated\r\n\r\n- We are continuing to investigate this issue and will let you know more as we find out.\r\n- We will also continue posting updates on [NuGet Status](https://status.nuget.org/) and [@NuGet on Twitter](https://twitter.com/nuget)."},{"Id":"15596835672","Type":"IssuesEvent","CreatedAt":"2021-03-18T16:16:18","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/55","RelatedDescription":"Opened issue \"Package Namespaces Proposal\" (#55) at NuGet/Announcements","RelatedBody":"Introduction of a feature concept called Package Namespaces which allows a developer to include or exclude package IDs by specifying package namespaces on their package source(s).\r\n\r\n🎉📦Please provide your comments, concerns, and feedback within this PR. 📦🎉\r\n\r\nhttps://github.com/NuGet/Home/pull/10660"},{"Id":"15469893086","Type":"IssuesEvent","CreatedAt":"2021-03-09T18:14:19","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/54","RelatedDescription":"Opened issue \"Custom V2 OData queries will be deprecated March 9th, 2021 \" (#54) at NuGet/Announcements","RelatedBody":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run of the deprecation to ensure that there are no surprises for users (#40). \r\n\r\nWe will begin blocking endpoints used by 3rd party clients in March 9, 2021, as detailed in [the blogpost here](https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/).\r\n\r\nPlease let us know about your questions or concerns on [this discussion post.](https://github.com/NuGet/NuGetGallery/issues/7423)"},{"Id":"15322501248","Type":"IssuesEvent","CreatedAt":"2021-02-25T20:01:29","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Opened issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"15038151714","Type":"PullRequestEvent","CreatedAt":"2021-02-02T17:07:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Merged pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15035390299","Type":"PullRequestEvent","CreatedAt":"2021-02-02T14:05:33","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/pull/52","RelatedDescription":"Opened pull request \"Add templates\" (#52) at NuGet/Announcements","RelatedBody":"Adds issue & pr templates."},{"Id":"15022864314","Type":"IssuesEvent","CreatedAt":"2021-02-01T17:28:44","Actor":"JonDouglas","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Closed issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"},{"Id":"15018569152","Type":"IssuesEvent","CreatedAt":"2021-02-01T12:24:44","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Closed issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/company/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/company/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15018262203","Type":"IssuesEvent","CreatedAt":"2021-02-01T11:59:07","Actor":"hmaiga","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/51","RelatedDescription":"Opened issue \"Still have NuGet Restore Issues on Debian 10\" (#51) at NuGet/Announcements","RelatedBody":"The isssue seems to be marked as resolved #49 but i'm still facing the same issue on Debian 10.\r\n```\r\n  Determining projects to restore...\r\n/builds/campany/modules/myproject/myproject.Tests/myproject.Tests.csproj : error NU3028: Package 'Microsoft.IdentityModel.Logging 5.6.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\n/builds/campany/modules/myproject/myproject/myproject.csproj : error NU3028: Package 'System.Security.Principal.Windows 4.5.0' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain \r\n.......\r\n```\r\n\r\nOS Version:\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"10\"\r\nVERSION=\"10 (buster)\"\r\nVERSION_CODENAME=buster\r\nID=debian\r\nHOME_URL=\"https://www.debian.org/\"\r\nSUPPORT_URL=\"https://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\nDid i miss something 🤔 ?"},{"Id":"15011306391","Type":"IssuesEvent","CreatedAt":"2021-01-31T21:13:04","Actor":"TomCJones","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/50","RelatedDescription":"Opened issue \"nuget restore failing on ubuntu 20.04 NU3037\" (#50) at NuGet/Announcements","RelatedBody":"error NU3028: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature's timestamp found a chain building issue: UntrustedRoot: self signed certificate in certificate chain\r\nerror NU3037: Package 'Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.10.9' from source 'https://api.nuget.org/v3/index.json': The author primary signature validity period has expired.\r\n\r\ndigital ocean droplet\r\n   Static hostname: docker-ubuntu-s-1vcpu-1gb-nyc1-01\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: f2e66c689e42d45004bbde355fa93999\r\n           Boot ID: 89ad10aa73104cb59022bb6129cbf062\r\n    Virtualization: kvm\r\n  Operating System: Ubuntu 20.04.1 LTS\r\n            Kernel: Linux 5.4.0-58-generic\r\n      Architecture: x86-64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1385344580128854034","CreatedAt":"2021-04-22T21:27:41+00:00","UserScreenname":"nuget","Text":"🙌Get featured in a NuGet blog 🙌\n\nUsing .NET SDK 5.0.300+, you can add a https://t.co/RqASvz95cI file to your packag… https://t.co/4DZ7Z2spYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":49,"FavoriteCount":20,"RawContent":null},{"Id":"1384935395515936773","CreatedAt":"2021-04-21T18:21:43+00:00","UserScreenname":"nuget","Text":"Thank you @rocklan for your code contributions to NuGet - you're rocking the VS shirt, Microsoft jacket, and guitar… https://t.co/JkUiVYLuMw","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":8,"FavoriteCount":2,"RawContent":null},{"Id":"1379845663807188996","CreatedAt":"2021-04-07T17:16:57+00:00","UserScreenname":"nuget","Text":"🙌New mockup just dropped🙌\n\n@jiachenjiang_  is reading all the feedback and iterating daily 💪\n\nWe want you to be inv… https://t.co/HMOopaJPDN","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1377764630769008640","CreatedAt":"2021-04-01T23:27:40+00:00","UserScreenname":"nuget","Text":"Our monitoring and tests indicate that the incident related to DNS has been mitigated. We are waiting for more info… https://t.co/Oz3vtCPt0K","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1377743615422685191","CreatedAt":"2021-04-01T22:04:09+00:00","UserScreenname":"nuget","Text":"Check our announcement here for additional resources as well as a Github thread for us to share work-arounds.… https://t.co/j0UWauYtq3","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1377737823994802182","CreatedAt":"2021-04-01T21:41:09+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi is being affected by this outage, but the team is on it. We appreciate your patience and we… https://t.co/ESWjKBbpYg","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1375170161041412096","CreatedAt":"2021-03-25T19:38:10+00:00","UserScreenname":"nuget","Text":"👏Contributor appreciation time👏\n\nShout out to @augustoproiete  and the @cakebuildnet  team for their contribution t… https://t.co/MUtCpOiLWS","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":65,"FavoriteCount":23,"RawContent":null},{"Id":"1371544002097520651","CreatedAt":"2021-03-15T19:29:06+00:00","UserScreenname":"nuget","Text":"🚨 Reminder 🚨\n\nIf you verify that packages are repo signed by https://t.co/F9kiKfvqkS see our blog for next steps to… https://t.co/rFT0bMoTVy","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1371543473610981380","CreatedAt":"2021-03-15T19:27:00+00:00","UserScreenname":"nuget","Text":"🙌New proposal just dropped🙌\n\nWe've been working hard to find ways to help you secure your software supply chain 💪… https://t.co/mZX3kOZIxB","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1369353172129439744","CreatedAt":"2021-03-09T18:23:32+00:00","UserScreenname":"nuget","Text":"Custom V2 OData queries are now disabled - starting TODAY, March 9! Supported V2 endpoints are unaffected. Check he… https://t.co/rZMonHQq3w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":2,"FavoriteCount":4,"RawContent":null},{"Id":"1367169420729208836","CreatedAt":"2021-03-03T17:46:05+00:00","UserScreenname":"nuget","Text":"🙌 New post just dropped 🙌\n\nWe're upping our security game by enabling you to find package vulnerabilities on… https://t.co/RPeN1KzPG9","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":85,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2021-04-24T05:30:32.4935326Z","RunDurationInMilliseconds":1346}