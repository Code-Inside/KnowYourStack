{"Data":{"Blog":{"FeedItems":[{"Title":"Custom V2 OData queries will be deprecated March 9, 2021","PublishedOn":"2020-12-02T17:52:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced the deprecation of custom V2 OData queries (#37) last year and conducted a dry run in early November to ensure that there are no surprises for users. Going forward, we plan to bring all...","Href":"https://devblogs.microsoft.com/nuget/custom-v2-odata-queries-will-be-deprecated-march-9-2021/","RawContent":null},{"Title":"Getting Started With NuGet 5.8","PublishedOn":"2020-11-13T16:26:02+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Getting started with NuGet 5.8\nNuGet 5.8 is included in Visual Studio 16.8 and .NET 5.0 out of the box. You can also download NuGet 5.8 for Windows, macOS, and Linux as a standalone executable.\nNuGet...","Href":"https://devblogs.microsoft.com/nuget/getting-started-with-nuget-5-8/","RawContent":null},{"Title":"The Microsoft author signing certificate will be updated as soon as November 1st, 2020","PublishedOn":"2020-10-22T22:30:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by November 1st, 2020 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/","RawContent":null},{"Title":"View dependent packages on NuGet.org","PublishedOn":"2020-08-20T18:00:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several ways to evaluate packages on NuGet.org, such as download statistics, update frequency, owner reputation, GitHub Usage, and more.\nToday, we&#8217;re excited to announce that you can...","Href":"https://devblogs.microsoft.com/nuget/view-dependent-packages-on-nuget-org/","RawContent":null},{"Title":"Advanced search on NuGet.org","PublishedOn":"2020-08-07T16:00:12+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"We are excited to announce that NuGet.org now supports one of our top customer asks &#8211; advanced search! You can now use a multitude of sorting and filtering criteria to help find the best NuGet...","Href":"https://devblogs.microsoft.com/nuget/advanced-search-on-nuget-org/","RawContent":null},{"Title":"NuGet.org will permanently remove support for TLS 1.0 and 1.1 on June 15th","PublishedOn":"2020-05-25T17:00:12+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org in which we stated that the permanent removal of TLS 1.0/1.1 support would occur in April 2020. However, in April,...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-permanently-remove-support-for-tls-1-0-and-1-1-on-june-15th/","RawContent":null},{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-12T22:09:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"14812099514","Type":"PullRequestEvent","CreatedAt":"2021-01-13T22:47:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8375","RelatedDescription":"Merged pull request \"Add F# interactive instructions\" (#8375) at NuGet/NuGetGallery","RelatedBody":"Screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/104518035-e8e4a800-55ab-11eb-8073-9b2e0d15bbc4.png)\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/3527\r\n\r\n/cc @cartermp @jonsequitur"},{"Id":"14797708334","Type":"PullRequestEvent","CreatedAt":"2021-01-12T22:14:54","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8167","RelatedDescription":"Closed pull request \"Add an entry for (soon to be stable) scripting usages\" (#8167) at NuGet/NuGetGallery","RelatedBody":"Summary of the changes (in less than 80 characters):\r\n\r\n* F# 5.0 (which will release with .Net 5) and the dotnet/interactive project allow for using a variation of the `#r` syntax for including DLLs explicitly to also include packages.  This syntax is of the form:\r\n\r\n```\r\n#r \"nuget: <package name>[, <list of options>*]\"\r\n```\r\n\r\nwhere `<list of options>` is primarily used for specifying the `Version` of the package (which defaults to '*').\r\n\r\nIn the interests of making it easier for users to use nuget packages in scripting/interactive/notebook scenarios, I think there's value in showing that syntax on Nuget.org."},{"Id":"14797464827","Type":"PullRequestEvent","CreatedAt":"2021-01-12T21:49:10","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/8375","RelatedDescription":"Opened pull request \"Add F# interactive instructions\" (#8375) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/Engineering/issues/3527"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"14811039477","Type":"IssuesEvent","CreatedAt":"2021-01-13T20:52:56","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10433","RelatedDescription":"Closed issue \"NuGet package recommender should work when more than one source is selected in package manager\" (#10433) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThe NuGet package recommender should make recommendations as long as nuget.org is included as one of the package sources. This was implemented before, but PR #3797 reverted this change and now requires that nuget.org is the only source.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Right-click a project in VS and select Manage NuGet Packages to open Package Manager\r\n2. In the browse tab, make sure there are more than one package source listed in the sources drop-down, and that one of them is nuget.org.\r\n3. Select 'All' as sources. \r\n4. Result: no package recommendations, Expected: You should get recommendations.\r\n\r\n\r\n"},{"Id":"14809359317","Type":"IssuesEvent","CreatedAt":"2021-01-13T18:16:39","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9977","RelatedDescription":"Closed issue \"NuGet.Client should replace using of ManagedImageMonikers with KnownMonikers\" (#9977) at NuGet/Home","RelatedBody":"NuGet.VisualStudio.Implementation uses 3 icons from ManagedImageMonikers. These should be replaced with KnownMonikers equivalents to make sure that they pick up the icon refresh.\r\n\r\nManagedImageMonikers.ReferencePrivate -> KnownMonikers.ReferencePrivate\r\nManagedImageMonikers.Application -> KnownMonikers.Application\r\n[Blocked] ManagedImageMonikers.NuGetGrey -> KnownMonikers.PackageReferencePrivate\r\n\r\nThe first two icons can be found in Microsoft.VisualStudio.ImageCatalog, 16.8.30431.43-pre. The latter is being worked on and will be available soon.\r\n\r\nThese APIs will be deleted from the dll in a future update: https://github.com/dotnet/project-system/pull/6570."},{"Id":"14809069740","Type":"IssuesEvent","CreatedAt":"2021-01-13T17:51:36","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10453","RelatedDescription":"Opened issue \"Migrate from DTE's solution events to IVsSolution's events\" (#10453) at NuGet/Home","RelatedBody":"Historically NuGet has use DTE's solution events to detect projects in the solution, and when an API needs to pass an instance of a project, we used DTE's `Project` in the API. However, this was not recommended, so when a new API, GetInstalledPackagesAsync was added recently, we created our first API that used the project id (guid).\r\n\r\nThe DTE project doesn't have an API to get the project id directly, so I tried getting the project file path from the DTE project, then used `IVsSolution5.GetGuidOfProjectFile`. But for a small number of customers this would throw an exception. At the time of writing, we haven't yet been able to determine which project types this is happening on, and therefore why the `IVsSolution5` can't find the project. Since then, I added a second attempt of getting a project's guid, and we'll monitor reliability once a version of VS with that change ships, but I'm not sure if it will be any more reliable.\r\n\r\nHowever, when working on improvements to our internal tool to test VS APIs, I discovered [a way to get a DTE project from a `IVsHierarchy` instance](https://github.com/NuGet/Entropy/blob/6bc031c2f8c668079069afcce1b0b6b16bcc41b3/IVsTestingExtension/src/Xaml/ToolWindow/ToolWindowControlViewModel.cs#L73). It needs more testing, but given that every time I talk to the VS extensibility team or VS architects about DTE, they always strongly recommend not using DTE. Therefore, I believe we can make a step in the preferred direction by migrating one small usage off DTE, and hopefully improve VS client reliability as well."},{"Id":"14801436678","Type":"IssuesEvent","CreatedAt":"2021-01-13T07:22:06","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/10452","RelatedDescription":"Opened issue \"The deprecated icon overlaps with the version of the deprecated package in Browse tab\" (#10452) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: Main\\30912.243\r\nNuGet Version : Dev\\5.9.0.7028\r\nOS Version: Windows-10-Enterprise-19H2\r\n## Installation\r\n1. Install VS Main\\30912.243: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4366886&view=ms.vss-build-web.run-extensions-tab\r\n2. Install NuGet Dev\\5.9.0.7028: \\\\\\ddfiles\\drops\\NuGet\\Drops\\CI\\NuGet.Client\\Dev\\5.9.0.7028\\artifacts\\VS15\\NuGet.Tools.vsix\r\n## Repro steps \r\n1. Create a C# Class Library (.Net Framework) project.\r\n2. Add a deprecated package source: https://apidev.nugettest.org/v3-index/index.json\r\n3. Open PM UI, select the above deprecated package source and search package “afine” in Browse tab.\r\n## Expected\r\nThe deprecated icon should not overlap with the version of the deprecated package as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/104419106-f3ef0680-55b2-11eb-8a9c-2b3b4c28d127.png)\r\n## Actual\r\nThe deprecated icon overlaps with the version of the deprecated package in Browse tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/104419141-00735f00-55b3-11eb-956f-46da894fcd7f.png)\r\n## Notes\r\n1. The issue also reproes on C# Console App (.Net Core) project.\r\n2. The issue does not repro after installing the deprecated package.\r\n"},{"Id":"14801143257","Type":"IssuesEvent","CreatedAt":"2021-01-13T06:47:46","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10379","RelatedDescription":"Closed issue \"The description of “Deprecated” disappears after clicking a deprecated package in Browse tab\" (#10379) at NuGet/Home","RelatedBody":"\r\n\r\n## Details about Problem\r\nVS Version: D16.9\\30808.132\r\nNuGet Version: dev-feature-OE.PMUI\\5.9.0.13982\r\nOS Version: Windows-10-Enterprise-19H2.\r\n## Installation:\r\n1. Install VS D16.9\\30808.132: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4288690&view=ms.vss-build-web.run-extensions-tab\r\n2. Install NuGet Client: \\\\\\ddfiles\\drops\\NuGet\\Drops\\CI-Private\\NuGet.Client\\dev-feature-OE.PMUI\\5.9.0.13982\r\n\r\n## Detailed repro steps \r\n1. Create a C# Class Library (.Net Framework) project.\r\n2. Add a deprecated package source: https://apidev.nugettest.org/v3-index/index.json\r\n3. Open PM UI, select the above deprecated package source and search package “afine” in Browse tab.\r\n\r\n## Expected\r\nThe description of “Deprecated” should show after clicking package “afine” in Browse tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/102194834-bab27080-3ef8-11eb-809c-41c043facad1.png)\r\n## Actual\r\nThe description of “Deprecated” disappears after clicking package “afine” in Browse tab as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/102194886-cc941380-3ef8-11eb-8e1c-5a65e78a4e68.png)\r\nNotes:\r\n1. The issue also reproes on C# Console App (.Net Core) project.\r\n2. The issue does not repro on NuGet Client Dev Branch.\r\n\r\n"},{"Id":"14800567189","Type":"IssuesEvent","CreatedAt":"2021-01-13T05:27:13","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9981","RelatedDescription":"Closed issue \"Remove temporary fix on HttpRequestMessage.Options\" (#9981) at NuGet/Home","RelatedBody":"`HttpRequestMessage.Properties` is [marked as obsolete](https://github.com/dotnet/runtime/blob/release/5.0-rc2/src/libraries/System.Net.Http/src/System/Net/Http/HttpRequestMessage.cs#L130) , and a new property `HttpRequestMessage.Options` is suggested to be used, to replace it since .NET5 SDK rc-1.\r\nAnd PR https://github.com/NuGet/NuGet.Client/pull/3619/files fixed this issue.\r\n\r\nBut we're building our code with .NET5 SDK preview4 (https://github.com/NuGet/NuGet.Client/blob/dev/build/config.props#L41), so the HttpRequestMessage.Options is not yet available. \r\nSo we're adding a  temporarily fix that should be removed once .NET 5 and VS 16.8 goes GA, and are available on our CI agents.\r\n"},{"Id":"14799074296","Type":"IssuesEvent","CreatedAt":"2021-01-13T01:22:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5184","RelatedDescription":"Closed issue \"[Consider] Keep track of a source which contains a package\" (#5184) at NuGet/Home","RelatedBody":"We should allow users to correlate a package with a source. This will prevent the initial discovery phase and the corresponding http calls to all the sources till the package is pulled down into the cache.\r\n\r\nPossible solutions (In the order of preference)- \r\n\r\n1. Allow users to correlate a source with packages in `NuGet.Config` files.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n\r\n  <packageDependencies>\r\n    <nuget.org>\r\n      <package id=\"PackageThatIsOnlyOnNuGet.Org\"/>\r\n    </nuget.org>\r\n  </packageDependencies>\r\n  \r\n</configuration>\r\n\r\n```\r\n2. Create a new restore graph file.\r\n3. Write the information into the `NuGet.Cache` file that will be added with restore no-op work.\r\n2. Write down this info into the assets file and make restore use that. "},{"Id":"14798850575","Type":"IssuesEvent","CreatedAt":"2021-01-13T00:48:25","Actor":"sbanni","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10436","RelatedDescription":"Closed issue \"CreateVersionsAsync does unnecessary NuGetVersion Compares\" (#10436) at NuGet/Home","RelatedBody":"From looking at ETW logs [CreateVersionsAsync ](https://github.com/NuGet/NuGet.Client/blob/7d67db0ba50d43531717063d08daae2b0aea96fd/src/NuGet.Clients/NuGet.PackageManagement.UI/Models/PackageDetailControlModel.cs#L100) spends a lot of time comparing NuGetVersions (1.4s) for packages with a lot of versions (test10k).\r\n\r\nWe should avoid this work if possible and we should be wary of Linq queries."},{"Id":"14797733716","Type":"IssuesEvent","CreatedAt":"2021-01-12T22:17:40","Actor":"erdembayar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5127","RelatedDescription":"Closed issue \"Package 'NameOfPackage' is incompatible with 'all' frameworks in project\" (#5127) at NuGet/Home","RelatedBody":"_From @bsmayer on April 26, 2017 21:13_\r\n\r\n## Steps to reproduce\r\n\r\nCreate a folder named 'Domain'\r\nCreate a folder named 'App'\r\n\r\nInside of Domain, run these commands: \r\n```\r\ndotnet new classlib\r\ndotnet restore\r\ndotnet pack --include-symbols --output '../Nugets'\r\n```\r\n\r\nInside of App, run these commands:\r\n```\r\ndotnet new classlib\r\ndotnet restore\r\ndotnet add package Domain -s '../Nugets'\r\n```\r\n\r\n## Expected  behavior\r\n\r\nReference added in the project\r\n\r\n## Actual behavior\r\n\r\nerror: Unable to resolve 'Domain' for '.NETCoreApp,Version=v1.1'.\r\nerror: Package 'Domain' is incompatible with 'all' frameworks in project '/{ProjectFolder}/App/App.csproj'.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (1.0.1)\r\n\r\nProduct Information:\r\n Version:            1.0.1\r\n Commit SHA-1 hash:  005db40cd1\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/1.0.1\r\n\r\n\r\n\r\n### Update: Here is all possible scenarios and all broken  ones are need fixing. By the way below error messages are different from original user reported one. Check this [PR comment#561199237](https://github.com/NuGet/NuGet.Client/pull/3783#pullrequestreview-561199237) for details on how error messages evolved over time.\r\n\r\n**V3 source:**\r\nAbsolute path:\r\n`dotnet add package Domain3 -s C:\\NuGetProj\\IssueRepro\\5127\\Mypackages3 -v 1.0.0` works\r\n\r\n`dotnet add package Domain3 -s C:\\NuGetProj\\IssueRepro\\5127\\Mypackages3`  error: `There are no versions available for the package 'Domain3'.` \r\n\r\nRelative path:\r\n`dotnet add package Domain3 -s ..\\Mypackages3 -v 1.0.0` works\r\n`dotnet add package Domain3 -s ..\\Mypackages3` error: `There are no versions available for the package 'Domain3'.`\r\n\r\n**V2 source:**\r\nAbsolute path:\r\n`dotnet add package Domain2 -s C:\\NuGetProj\\IssueRepro\\5127\\Mysource2 -v 1.0.0` Works.\r\n\r\n`dotnet add package Domain2 -s C:\\NuGetProj\\IssueRepro\\5127\\Mysource2` error: `There are no versions available for the package 'Domain2'.`   \r\n\r\nRelative path:\r\n`dotnet add package Domain2 -s ..\\Mysource2 -v 1.0.0` error: `NU1101: Unable to find package Domain2. No packages exist with this id in source(s): ..\\Mysource2, nuget.org`  \r\nerror: `Package 'Domain2' is incompatible with 'all' frameworks in project 'C:\\NuGetProj\\IssueRepro\\5127\\App2\\App2.csproj'.`\r\n\r\n`dotnet add package Domain2 -s ..\\Mysource2`  error: `There are no versions available for the package 'Domain2'.`\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/cli#6428_"},{"Id":"14796719611","Type":"IssuesEvent","CreatedAt":"2021-01-12T20:33:24","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10450","RelatedDescription":"Closed issue \"Skip failing test - GetTotalCountAsync_WithGreaterThanOrEqualToMaxCountResults_ReturnsMaxCount\" (#10450) at NuGet/Home","RelatedBody":"Related to [#10451](https://github.com/NuGet/Home/issues/10451) \r\nNuGetPackageSearchServiceTests.GetTotalCountAsync_WithGreaterThanOrEqualToMaxCountResults_ReturnsMaxCount is keep failing on CI and also it fails on local.\r\nIn order to unblock CI builds need to skip for now.\r\n![image](https://user-images.githubusercontent.com/8766776/104349250-89a56b80-54b7-11eb-91a1-d80d291ea828.png)\r\n"},{"Id":"14796204225","Type":"PullRequestEvent","CreatedAt":"2021-01-12T19:43:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/10444","RelatedDescription":"Merged pull request \"Reduce the verbosity of the issue template\" (#10444) at NuGet/Home","RelatedBody":"Fixes: https://github.com/NuGet/Home/issues/10441\r\n\r\n\r\nThe current issue template is pretty verbose, contains information that we do not need/doesn't deviate usually and often time it leads to people deleting it altogether. \r\n\r\nThese changes are meant to reduce the visual strain one has when looking at a new issue and improve issue quality by having something customers would be willing to follow instead of delete.\r\n\r\nNote that this is a template tailored towards bugs. We could use a feature template, but that's something we don't have now, so I'm not yet introducing it. \r\n\r\nI came up with this template by looking at template from partner repos: \r\n\r\nhttps://github.com/microsoft/vscode/issues/new?assignees=&labels=&template=bug_report.md\r\nhttps://github.com/dotnet/project-system/issues/new\r\nhttps://github.com/dotnet/runtime/issues/new?assignees=&labels=&template=01_bug_report.md&title=\r\n\r\n\r\nNote how all of those templates are significantly less verbose than ours."},{"Id":"14796204197","Type":"IssuesEvent","CreatedAt":"2021-01-12T19:43:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/10441","RelatedDescription":"Closed issue \"The NuGet issue template is too verbose\" (#10441) at NuGet/Home","RelatedBody":"Note that I have removed the issue template. \r\n\r\nThis template is too verbose and honestly asks for a lot of information that's not very relevant.\r\n\r\nNote that on 1080p screens, our template requires scrolling!!\r\nThat's excessive!"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"14085142486","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:13:18","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Reopened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085138089","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:37","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Closed issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"14085135191","Type":"IssuesEvent","CreatedAt":"2020-11-05T00:12:10","Actor":"jcjiang","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/48","RelatedDescription":"Opened issue \"November dry run for custom V2 OData query deprecation\" (#48) at NuGet/Announcements","RelatedBody":"\r\nWe announced the deprecation of custom V2 OData queries (https://github.com/NuGet/Announcements/issues/37) last year and we will begin blocking endpoints used by 3rd party clients in **February 2021**. \r\n\r\nWe will conduct **a dry run of the OData deprecation** to ensure that there are no surprises for users, which is scheduled to ensure overlap with normal working hours across the globe. The goal is to help you identify systems that may be affected and will give you an opportunity to take action before we permanently remove support for select v2 endpoints.\r\n \r\nThere will be two stages in the brown-out to accommodate a variety of usage scenarios. During these times, we will be heavily monitoring social media and other communication channels to address questions and concerns. \r\n\t· **Nov. 11, 2020** – 3 time slots in a 24 hour period, for 4 hours each\r\n\t· **Nov. 17 & 18, 2020**  – 48 hours\r\n\r\nPlease let us know about your questions or concerns on [this discussion post](https://github.com/NuGet/NuGetGallery/issues/7423).\r\n \r\nRefer to the table below to identify the test slot time in your time zone.\r\n\t· UTC-9 to UTC-2 – [Green test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Green+slot&iso=20201111T07&p1=3923&ah=4)\r\n\t· UTC-1 to UTC+6 – [Yellow test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Yellow+slot&iso=20201111T07&p1=3915&ah=4)\r\n\t· UTC+7 to UTC-10 – [Blue test slot](https://www.timeanddate.com/worldclock/fixedtime.html?msg=NuGet.org+OData+deprecation+test+-+Blue+slot&iso=20201111T07&p1=3909&ah=4)\r\n"},{"Id":"13954039266","Type":"IssuesEvent","CreatedAt":"2020-10-23T18:59:24","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Opened issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1334226716139655171","CreatedAt":"2020-12-02T20:03:32+00:00","UserScreenname":"nuget","Text":"⚠ Deprecation notice ⚠\n\nHave you recently experienced issues with your NuGet connectors? You may have been impacted… https://t.co/98KJJGhYEW","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1324411161400410112","CreatedAt":"2020-11-05T18:00:01+00:00","UserScreenname":"nuget","Text":"⚠️Deprecation notice⚠️\n\nCustom OData queries for V2 will be deprecated February 2021. We are conducting a dry run n… https://t.co/EMJ8Pxk2Tk","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1323738883708780544","CreatedAt":"2020-11-03T21:28:38+00:00","UserScreenname":"nuget","Text":"⚠️Degradation notification ⚠️\n\nhttps://t.co/F9kiKfdOWi is currently experiencing issues that are causing symbols do… https://t.co/91qXwN97Tc","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1319417289721237504","CreatedAt":"2020-10-22T23:16:10+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS security update 📢\n\nThe Microsoft author signing certificate will be updated as soon as Nove… https://t.co/8K5EKbdJii","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1313223356037070848","CreatedAt":"2020-10-05T21:03:41+00:00","UserScreenname":"nuget","Text":"The issue has been resolved! Symbols uploads and downloads should be working normally again 🙌 https://t.co/gBCmJX9bfX","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1313196985135116288","CreatedAt":"2020-10-05T19:18:53+00:00","UserScreenname":"nuget","Text":"⚠️ Degradation notification ⚠️ \n\n https://t.co/F9kiKfvqkS is currently experiencing issues that are causing symbols… https://t.co/bBvIO0Es1l","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1310789025461137408","CreatedAt":"2020-09-29T03:50:31+00:00","UserScreenname":"nuget","Text":"Users with AAD accounts shouldn't have any issue logging into https://t.co/F9kiKfvqkS now 😌 Thank you for your pati… https://t.co/MIlacn490w","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"1310736265076236288","CreatedAt":"2020-09-29T00:20:52+00:00","UserScreenname":"nuget","Text":"⚠ Due to issues impacting Azure AD Authentication, some users may be unable to log into https://t.co/F9kiKfvqkS wit… https://t.co/XQ7pA0vl8a","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"1308096152634404864","CreatedAt":"2020-09-21T17:30:00+00:00","UserScreenname":"nuget","Text":"Have suggestions or feedback? Here are a few ways to reach us:\n\n- Set up a call with us at https://t.co/epdsUI7qqO… https://t.co/mX6pcotPfA","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":30,"FavoriteCount":20,"RawContent":null},{"Id":"1301620826295410688","CreatedAt":"2020-09-03T20:39:22+00:00","UserScreenname":"nuget","Text":"🙌 Community contributor appreciation 🙌\n\nThank you @ztblackgad for your significant code contribution to NuGet! Hope… https://t.co/AFIkO7qHJ2","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":21,"FavoriteCount":4,"RawContent":null},{"Id":"1296528394021044224","CreatedAt":"2020-08-20T19:23:52+00:00","UserScreenname":"nuget","Text":"Blogpost here: https://t.co/96if06L0uq 👍 https://t.co/9hdtovsG1b","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2021-01-14T05:30:39.8521912Z","RunDurationInMilliseconds":1662}