{"Data":{"Blog":{"FeedItems":[{"Title":"HTTPS Everywhere Update","PublishedOn":"2023-09-19T15:52:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Mistakes were made\nWhen we first published the plan for the effort of HTTPS everywhere, we wanted to get developer community feedback on the various HTTP and HTTPS scenarios that we don&#8217;t have...","Href":"https://devblogs.microsoft.com/nuget/https-everywhere-update/","RawContent":null},{"Title":"Announcing NuGet 6.7 – Keeping You Secure","PublishedOn":"2023-08-10T15:27:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet 6.7 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.7 for Windows, macOS, and Linux as a standalone executable.\nSecurity is a chain; it&#8217;s only...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-7-keeping-you-secure/","RawContent":null},{"Title":"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023","PublishedOn":"2023-08-03T18:38:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Action required: If you validate that packages are author-signed by Microsoft using a NuGet client policy or the NuGet.exe verify command, please follow these steps by August 14th, 2023 to avoid...","Href":"https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/","RawContent":null},{"Title":"NuGet.org Terms of Service Update on Unexpected Behavior and Hate Speech","PublishedOn":"2023-04-13T17:20:42+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In recent years, the .NET open source community and NuGet package registry have become increasingly important for sharing code. However, with the growth of these platforms, there has also been a rise...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-terms-of-service-update-on-unexpected-behavior-and-hate-speech/","RawContent":null},{"Title":"Write a high-quality README for NuGet packages","PublishedOn":"2023-03-02T19:07:53+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Based on our recent customer interviews and surveys, one of the top problems that package consumers face is insufficient package documentation, such as README, changelog, examples, and API reference....","Href":"https://devblogs.microsoft.com/nuget/write-a-high-quality-readme-for-nuget-packages/","RawContent":null},{"Title":"Announcing NuGet 6.5 – The Sweetest Way to Manage Your Packages","PublishedOn":"2023-02-28T16:29:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"NuGet 6.5 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.5 for Windows, macOS, and Linux as a standalone executable.\nTired of the sour taste of managing...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-5-the-sweetest-way-to-manage-your-packages/","RawContent":null},{"Title":"Introducing Search By Target Framework on NuGet.org","PublishedOn":"2023-02-14T21:43:08+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Last year, we brought a new feature to improve the way you assess target framework compatibility of a NuGet package through a new &#8220;Frameworks&#8221; tab.\nToday, we are announcing a new feature...","Href":"https://devblogs.microsoft.com/nuget/introducing-search-by-target-framework-on-nuget-org/","RawContent":null},{"Title":"Announcing NuGet 6.4 – Signed, Central, Delivered","PublishedOn":"2022-11-08T20:59:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.4 is included in Visual Studio 2022 and .NET 7.0 out of the box. You can also download NuGet 6.4 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.4 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-4-signed-central-delivered/","RawContent":null},{"Title":"NuGet Season of Giving","PublishedOn":"2022-09-30T18:01:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"NuGet has gone through a lot of changes over the last 10 years. From the package manager console, standalone NuGet.exe, and integration of NuGet into the .NET SDK, we have always relied on the open...","Href":"https://devblogs.microsoft.com/nuget/nuget-season-of-giving/","RawContent":null},{"Title":"Announcing NuGet 6.3 – Transitive Dependencies, Floating Versions, and Re-enabling Signed Package Verification","PublishedOn":"2022-08-09T20:04:03+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"NuGet 6.3 is included in Visual Studio 2022 and .NET 6.0 out of the box. You can also download NuGet 6.3 for Windows, macOS, and Linux as a standalone executable.\nNuGet 6.3 is one of many releases in...","Href":"https://devblogs.microsoft.com/nuget/announcing-nuget-6-3-transitive-dependencies-floating-versions-and-re-enabling-signed-package-verification/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"31985154906","Type":"PullRequestEvent","CreatedAt":"2023-09-20T22:18:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9669","RelatedDescription":"Opened pull request \"Move to latest ServerCommon for new Service Bus SDK\" (#9669) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/5011\r\n\r\nSummary of changes:\r\n- Update to new ServerCommon version (depends on https://github.com/NuGet/ServerCommon/pull/412)\r\n- Pull in new Azure Service Bus SDK (Azure.Messaging.ServiceBus) as part of ServerCommon and associated API changes\r\n- Add global.json to eliminate Roslyn analyzer warnings about ambient .NET SDK 7 or 8.\r\n  - This was making it hard for me to assess that I wasn't introducing more warnings.\r\n- Introduce `ServiceBusConfiguration.ManagedIdentityClientId` to pass user-assignment managed identity client ID in\r\n   - We used to do this with an environment variable, not it's explicit\r\n- Update web.config since NuGetGallery binding redirects changed a lot with this update\r\n\r\nNote that the `Close` of the Service Bus sender is no longer sync. It's `CloseAsync`. This means it leaves an un-awaited Task. This is acceptable because the instance is a singleton in the DI container meaning this will only happen when the process is shutting down (graceful app service shutdown) when associated handled will be released anyway."},{"Id":"31977317612","Type":"PullRequestEvent","CreatedAt":"2023-09-20T16:14:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9652","RelatedDescription":"Merged pull request \"Azure AD Rebranding\" (#9652) at NuGet/NuGetGallery","RelatedBody":"Change \"Azure AD\" to \"Microsoft Entra ID\"\r\n\r\nAddresses https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1869215"},{"Id":"31953664360","Type":"PullRequestEvent","CreatedAt":"2023-09-19T22:01:49","Actor":"advay26","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9668","RelatedDescription":"Opened pull request \"Admin Panel for Popularity Transfers\" (#9668) at NuGet/NuGetGallery","RelatedBody":"## Admin Panel for Popularity Transfers\r\n\r\nAddresses https://github.com/NuGet/Engineering/issues/4746\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/3a6ef4ec-da95-483c-bad5-89c51673afd1)\r\n\r\nYou can now enter a list of packages you want to transfer popularity from, and a list of packages you want to transfer to. \r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/4c162811-b05c-4460-9517-9351f5f52ae8)\r\n\r\nIt then validates your input. \r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/265a5abb-3199-4e48-9005-ea26e7e660df)\r\n\r\nSubmitting your changes updates the DB with new entries in the PackageRenames table.\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/9aff4cfb-4b08-45a0-816b-114f1af9e8ed)\r\n\r\n<details><summary>DB changes</summary>\r\n\r\nYou can see the new Serilog (Key = 11) --> Moq (Key = 9) entry\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/6a315e46-0686-4776-be62-56fefa752dee)\r\n</details> \r\n\r\n<details><summary>Error Handling</summary>\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/5d5dc90a-b10f-4884-80f0-a51795ef7a83)\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/dea204c9-20bc-44c1-8691-7438c1c4418a)\r\n</details> \r\n\r\n**NOTE:** Our current playbook asks us to delete any existing popularity transfers for the 'From' packages, so the popularity transfer operation deletes previous entries from the DB. Let me know if this doesn't sound right, or we want to give the DRIs more information/options on what to do with existing popularity transfers. Currently, we just show a warning when we validate the input, and then if a user submits the changes, then we remove all previous entries.\r\n\r\n![image](https://github.com/NuGet/NuGetGallery/assets/82980589/ddb3f6ec-1f79-4256-a17b-a8aa068140b9)"},{"Id":"31920590739","Type":"PullRequestEvent","CreatedAt":"2023-09-18T20:07:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/9640","RelatedDescription":"Merged pull request \"Fix Update-Database.ps1 to work on DevBox\" (#9640) at NuGet/NuGetGallery","RelatedBody":"On DevBox, global packages folder location is overridden using NUGET_PACKAGES environment variable. This currently breaks the Update-Database.ps1 script, which assumes GPF is at the default location: %userprofile%\\.nuget\\packages.\r\n\r\nNuGet Client docs: https://learn.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"32017332484","Type":"IssuesEvent","CreatedAt":"2023-09-21T23:26:05","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12899","RelatedDescription":"Opened issue \"Test UpdateAllReinstall_WithPackageReferenceProject_WarnsAsync constantly fail\" (#12899) at NuGet/Home","RelatedBody":"This Apex test is currently skipped for IPC errors.\r\nBut after fixing IPC errors in test runs, it failed constantly 10 out of 10 times.\r\nThe error message is\r\n```\r\nExpected boolean to be True because Update-Package -Reinstall\r\nThe -Reinstall parameter does not apply to PackageReference based projects `TestProject'.\r\nExecuting nuget actions took 0.02 ms\r\nTime Elapsed: 00:00:00.0487588\r\nPM> , but found False.\r\n```\r\nThe stack trace is:\r\n```\r\n at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)\r\n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)\r\n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)\r\n   at FluentAssertions.Primitives.BooleanAssertions`1.Be(Boolean expected, String because, Object[] becauseArgs)\r\n   at NuGet.Tests.Apex.NuGetConsoleTestCase.<UpdateAllReinstall_WithPackageReferenceProject_WarnsAsync>d__14.MoveNext() in D:\\a\\_work\\1\\s\\test\\NuGet.Tests.Apex\\NuGet.Tests.Apex\\NuGetEndToEndTests\\NuGetConsoleTestCase.cs:line 547\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\nThe standard output is:\r\n```\r\n[test] info: Creating test context\r\n[test] info: Creating solution\r\n[test] info: Adding project\r\n[test] info: Saving solution\r\n[test] info: Building solution\r\n[test] info: GetConsole\r\n[test] info: EnsurePackageManagerConsoleIsOpen\r\n[test] info: GetPackageManagerConsole\r\n[test] info: GetConsole complete\r\n[test] info: Test complete, closing solution.\r\n[test] info: Package Manager Console contents:  Update-Package -Reinstall\r\nThe `-Reinstall` parameter does not apply to PackageReference based projects `TestProject'.\r\nExecuting nuget actions took 0.03 ms\r\nTime Elapsed: 00:00:00.0486887\r\nPM> \r\n[test] info: Package Manager Output Window Pane contents:  Restored C:\\Users\\TestUser\\AppData\\Local\\Temp\\NuGetTestFolder\\a8fb82b7\\9ba11c30\\solution\\TestProject\\TestProject.csproj (in 16 ms).\r\nTime Elapsed: 00:00:00.0252250\r\n========== Finished ==========\r\n```"},{"Id":"32015688680","Type":"IssuesEvent","CreatedAt":"2023-09-21T21:31:25","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12898","RelatedDescription":"Opened issue \"Test WithSourceMappingEnabled_InstallAndUpdatePackageFromPMUIFromExpectedSource_Succeeds constantly fail\" (#12898) at NuGet/Home","RelatedBody":"This Apex test is currently skipped for IPC errors.\r\nBut after fixing IPC errors in test runs, it failed constantly 10 out of 10 times.\r\nThe error message is \r\n```\r\nExpected boolean to be true because A PackageReference with Contoso.a/2.0.0 was not found in C:\\Users\\TestUser\\AppData\\Local\\Temp\\NuGetTestFolder\\18c994c2\\175d8c46\\solution\\TestProject\\TestProject.csproj, but found False.\r\n```\r\nStandard console output:\r\n```\r\n[test] info: Creating test context\r\n[test] info: Creating solution\r\n[test] info: Adding project\r\n[test] info: Saving solution\r\n[test] info: Building solution\r\n[test] info: Checking for PackageReference Contoso.a 2.0.0\r\n[test] info: Matches: 0\r\n[test] info: Test complete, closing solution.\r\n[test] info: Package Manager Output Window Pane contents:  StreamJsonRpc.RemoteInvocationException: values.Count > 0\r\nat Microsoft.ServiceHub.Framework.ServiceJsonRpcDescriptor.LocalProxyGeneration.<ReturnedValueTaskOfTHelperAsync>d__42`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.UI.UIActionEngine.<ShouldContinueDueToDotnetDeprecationAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat NuGet.PackageManagement.UI.UIActionEngine.<>c__DisplayClass12_0.<<PerformActionImplAsync>b__0>d.MoveNext()\r\nRPC server exception:\r\nMicrosoft.Assumes+InternalErrorException: values.Count > 0\r\nat Microsoft.Assumes.Fail(String message)\r\nat Microsoft.Assumes.NotNullOrEmpty[T](ICollection`1 values)\r\nat NuGet.PackageManagement.VisualStudio.NuGetProjectManagerService.<GetProjectsWithDeprecatedDotnetFrameworkAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat System.Threading.Tasks.ValueTask`1.get_Result()\r\nat Microsoft.ServiceHub.Framework.ServiceJsonRpcDescriptor.LocalProxyGeneration.<ReturnedValueTaskOfTHelperAsync>d__42`1.MoveNext()\r\nTime Elapsed: 00:00:00.1354033\r\n========== Finished ==========\r\n```"},{"Id":"32013175992","Type":"IssuesEvent","CreatedAt":"2023-09-21T19:33:03","Actor":"danmoseley","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12897","RelatedDescription":"Opened issue \"enable DEBUG environment variable/debugger launch in release builds\" (#12897) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\nOther/NA\n\n### Product Version\n\nlatest\n\n### Worked before?\n\nno\n\n### Impact\n\nIt's more difficult to complete my work\n\n### Repro Steps & Context\n\nPlease consider including the magic debug environment variables (like \"DEBUG_RESTORE_TASK\") in release builds. That way folks like me who want to debug a bit but don't run with debug nuget binaries don't have to go build nuget for them.\r\n\r\nRight now they're all behind #if DEBUG except one case (\"DEBUG_RESTORE_TASK\" from the console -- not from the task though)\r\n\r\nCompare MSBuild eg., that has had MSBUILDDEBUGONSTART=1 and suchlike in release forever. (Note not suggesting you expose any documented flag. Just let the env variables work.)\n\n### Verbose Logs\n\n_No response_"},{"Id":"32009164161","Type":"IssuesEvent","CreatedAt":"2023-09-21T16:44:23","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/11445","RelatedDescription":"Closed issue \"[Feature]: Add more logging to NuGetSdkResolver\" (#11445) at NuGet/Home","RelatedBody":"### NuGet Product(s) Involved\n\nMSBuild.exe, dotnet.exe\n\n### The Elevator Pitch\n\nI'm adding more logging to the MSBuild APIs that call SDK resolvers which will also allow our SDK resolver to add more logging.\r\n\r\nDependent on https://github.com/dotnet/msbuild/issues/7136\n\n### Additional Context and Details\n\n_No response_"},{"Id":"32005892067","Type":"IssuesEvent","CreatedAt":"2023-09-21T14:49:19","Actor":"znakeeye","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/12895","RelatedDescription":"Opened issue \"RestoreUseStaticGraphEvaluation=true causes error NU1100\" (#12895) at NuGet/Home","RelatedBody":"### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET STDK 7.0.101, Nuget 6.7.0\n\n### Worked before?\n\n_No response_\n\n### Impact\n\nNone\n\n### Repro Steps & Context\n\nIn `Directory.Build.props` we wanted to enable static graph `MSBuild` evaluation:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Foo.Bar.Sdk\" ExcludeAssets=\"runtime\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nOur pipeline in `Azure DevOps` then failed, unable to restore our globally referenced package (above):\r\n>error NU1100: Unable to resolve 'Foo.Bar.Sdk (>= 1.2.3)' for 'net6.0/win-x64'\r\n\r\nThis is the relevant part of `pipeline.yml`:\r\n```yml\r\n- task: NuGetToolInstaller@1\r\n  displayName: 'Use NuGet 6.7.0'\r\n  inputs:\r\n    versionSpec: 6.7.0\r\n\r\n- task: DotNetCoreCLI@2\r\n  displayName: 'dotnet restore'\r\n  inputs:\r\n    command: 'restore'\r\n    projects: 'src/**/*.csproj'\r\n    feedsToUse: config\r\n    nugetConfigPath: 'src/NuGet.Config'\r\n    restoreArguments: '-r win-x64'\r\n```\r\n\r\nOur pipeline works when we don't set `RestoreUseStaticGraphEvaluation`, so it seems there is an issue with this specific setting.\r\n\r\nAlso not sure if this error comes from `dotnet.exe` or that `DotNetCoreCLI@2` task...\n\n### Verbose Logs\n\n```shell\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at System.Collections.Generic.Dictionary`2.get_Item(TKey key) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.LockFileBuilder.GetLibraryDependenciesForCentralTransitiveDependencies(RestoreTargetGraph targetGraph, TargetFrameworkInformation targetFrameworkInformation, Boolean centralPackageTransitivePinningEnabled)+MoveNext() [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.LockFileBuilder.AddCentralTransitiveDependencyGroupsForPackageReference(PackageSpec project, LockFile lockFile, IEnumerable`1 targetGraphs) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.LockFileBuilder.CreateLockFile(LockFile previousLockFile, PackageSpec project, IEnumerable`1 targetGraphs, IReadOnlyList`1 localRepositories, RemoteWalkContext context, LockFileBuilderCache lockFileBuilderCache) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreCommand.BuildAssetsFile(LockFile existingLockFile, PackageSpec project, IEnumerable`1 graphs, IReadOnlyList`1 localRepositories, RemoteWalkContext contextForProject) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreCommand.ExecuteAsync(CancellationToken token) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreRunner.ExecuteAsync(RestoreSummaryRequest summaryRequest, CancellationToken token) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreRunner.ExecuteAndCommitAsync(RestoreSummaryRequest summaryRequest, IRestoreProgressReporter progressReporter, CancellationToken token) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreRunner.CompleteTaskAsync(List`1 restoreTasks) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreRunner.RunAsync(IEnumerable`1 restoreRequests, RestoreArgs restoreArgs, CancellationToken token) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Commands.RestoreRunner.RunAsync(RestoreArgs restoreContext, CancellationToken token) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.BuildTasksUtility.RestoreAsync(DependencyGraphSpec dependencyGraphSpec, Boolean interactive, Boolean recursive, Boolean noCache, Boolean ignoreFailedSources, Boolean disableParallel, Boolean force, Boolean forceEvaluate, Boolean hideWarningsAndErrors, Boolean restorePC, Boolean cleanupAssetsForUnsupportedProjects, ILogger log, CancellationToken cancellationToken) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\7.0.101\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.RestoreAsync(String entryProjectFilePath, IDictionary`2 globalProperties, IReadOnlyDictionary`2 options) [E:\\_work\\1\\s\\src\\Foo.csproj]\r\n       Done executing task \"RestoreTaskEx\" -- FAILED.\n```\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"31807568458","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:47:35","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/53","RelatedDescription":"Closed issue \"The NuGet.org repository signing certificate will be updated as soon as March 15th, 2021\" (#53) at NuGet/Announcements","RelatedBody":"The current NuGet.org repository signing certificate will be updated as soon as March 15th, 2021. If you validate that packages are repository signed by NuGet.org using a [NuGet client policy](https://docs.microsoft.com/nuget/consume-packages/installing-signed-packages), the [`NuGet.exe verify`](https://docs.microsoft.com/nuget/reference/cli-reference/cli-ref-verify) command, or the [`dotnet nuget verify`](https://docs.microsoft.com/dotnet/core/tools/dotnet-nuget-verify) command, you will need to take steps by March 15th, 2021 to avoid disruptions when installing packages from NuGet.org that are signed with the new certificate. \r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/the-nuget-org-repository-signing-certificate-will-be-updated-as-soon-as-march-15th-2021/"},{"Id":"31806936414","Type":"IssuesEvent","CreatedAt":"2023-09-13T14:27:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Closed issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911174831","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:32:04","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/70","RelatedDescription":"Opened issue \"The Microsoft author-signing certificate will be updated as soon as August 14th, 2023\" (#70) at NuGet/Announcements","RelatedBody":"The current Microsoft author-signing certificate will be updated as soon as August 14th, 2023.  If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blog post on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update-2023/"},{"Id":"30911171660","Type":"IssuesEvent","CreatedAt":"2023-08-04T21:31:49","Actor":"dtivel","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/47","RelatedDescription":"Closed issue \"The Microsoft author signing certificate will be updated as soon as November 1st, 2020\" (#47) at NuGet/Announcements","RelatedBody":"The current Microsoft author signing certificate will be updated as soon as November 1st, 2020. If you validate that packages are author signed by Microsoft using a [NuGet client policy](https://docs.microsoft.com/en-us/nuget/consume-packages/installing-signed-packages) or the [`NuGet.exe verify`](https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-verify\r\n) command, you will need to take steps to avoid disruptions when installing Microsoft packages signed with the new certificate.\r\n\r\nIf you are unsure if you will be impacted or want to see instructions to allow the new certificate, please see our blogpost on the matter: https://devblogs.microsoft.com/nuget/microsoft-author-signing-certificate-update/\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-09-22T03:30:22.0536714Z","RunDurationInMilliseconds":1116}