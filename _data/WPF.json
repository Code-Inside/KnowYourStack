{"Data":{"GitHub":{"Issues":[{"Id":"1681134816","IsPullRequest":true,"CreatedAt":"2023-04-24T12:37:28","Actor":"dotnet-maestro[bot]","Number":"7757","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230424.1\r\n- **Date Produced**: April 24, 2023 8:51:40 AM UTC\r\n- **Commit**: d14c4adbdbb8c7ee060f9e333883fc9890939b66\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23222.1 to 8.0.0-beta.23224.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23222.1 to 8.0.0-beta.23224.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23222.1 to 8.0.0-beta.23224.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23222.1 to 8.0.0-beta.23224.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23222.1 to 8.0.0-beta.23224.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/19edd2a515...d14c4adbdb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7757)","Url":"https://github.com/dotnet/wpf/pull/7757","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7757)"},{"Id":"1680317378","IsPullRequest":true,"CreatedAt":"2023-04-24T02:25:36","Actor":"dotnet-maestro[bot]","Number":"7756","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230423.1\r\n- **Date Produced**: April 23, 2023 12:53:17 PM UTC\r\n- **Commit**: 2702e433748f2280a4c1c763a7e007f3b207be64\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23222.1 to 8.0.0-preview.4.23223.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23222.1 to 8.0.0-preview.4.23223.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23222.1 to 8.0.0-preview.4.23223.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/774e435b0e...2702e43374\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7756)","Url":"https://github.com/dotnet/wpf/pull/7756","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7756)"},{"Id":"1680005162","IsPullRequest":true,"CreatedAt":"2023-04-23T12:36:16","Actor":"dotnet-maestro[bot]","Number":"7755","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230422.1\r\n- **Date Produced**: April 23, 2023 7:18:51 AM UTC\r\n- **Commit**: 19edd2a515c37b90e90ceab9ce842847ce75b460\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23221.8 to 8.0.0-beta.23222.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23221.8 to 8.0.0-beta.23222.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23221.8 to 8.0.0-beta.23222.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23221.8 to 8.0.0-beta.23222.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23221.8 to 8.0.0-beta.23222.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/fc43dcf650...19edd2a515\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7755)","Url":"https://github.com/dotnet/wpf/pull/7755","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7755)"},{"Id":"1679816026","IsPullRequest":true,"CreatedAt":"2023-04-23T02:25:36","Actor":"dotnet-maestro[bot]","Number":"7754","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230422.1\r\n- **Date Produced**: April 22, 2023 12:54:20 PM UTC\r\n- **Commit**: 774e435b0eb32731deb9f0e06d3947a25520c602\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23221.5 to 8.0.0-preview.4.23222.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23221.5 to 8.0.0-preview.4.23222.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23221.5 to 8.0.0-preview.4.23222.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f033a22594...774e435b0e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7754)","Url":"https://github.com/dotnet/wpf/pull/7754","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7754)"},{"Id":"1679722234","IsPullRequest":false,"CreatedAt":"2023-04-22T21:13:20","Actor":"space-alien","Number":"7753","RawContent":null,"Title":"Visual Studio IntelliSense / XML documentation for WPF","State":"open","Body":"I'm using `Visual Studio 17.5.4` and `.NET SDK 7.0.5`\r\n\r\nUpon creating a new WPF application, I have no XML documentation available in IntelliSense for the WPF library.\r\n\r\nBrowsing to source (F12) shows the library at `C:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\7.0.5\\`\r\n\r\nThis is in contrast to a WinForms app, which has the docs in IntelliSense, with F12 showing sources via SourceLink.\r\n\r\nAm I missing something obvious?\r\n","Url":"https://github.com/dotnet/wpf/issues/7753","RelatedDescription":"Open issue \"Visual Studio IntelliSense / XML documentation for WPF\" (#7753)"},{"Id":"1679666259","IsPullRequest":false,"CreatedAt":"2023-04-22T19:17:50","Actor":"gh615","Number":"7752","RawContent":null,"Title":"A binding error occurs in a nested UserControl if asynchronous processing is interposed before Show the Window","State":"open","Body":"I have a UserControl1 which has a UserControl in its Dependency Property.\r\nThis UserControl(InnerUserControl) is displayed with ContentPresenter inside UserControl1.\r\n\r\nPlace UserControl1 on the Window and place UserControl2 on its InnerUserControl.\r\n\r\nBinding is performed from Window to DataContext of InnerUserControl, but in the following cases, a binding error occurs.\r\n\r\n- After setting the DataContext and before showing the Window, inserting asynchronous processing (such as `await Task.Delay(1000)`) will result in a binding error.\r\n- If you comment out this asynchronous process, the binding error will not occur\r\n- Only InnerUserControl using ContentPresenter gives binding error\r\n\r\nError Message: \r\n`UpdateCannot find element that provides DataContext. BindingExpression:Path=UserControl2ViewModel; DataItem=null; target element is 'UserControl2' (Name=''); target property is 'DataContext' (type 'Object')`\r\n\r\nTargetFramework: net6.0-windows\r\nVisual Studio 2022 Version 17.5.4\r\n\r\nI'm not sure if the below is related.\r\nhttps://github.com/dotnet/wpf/issues/3504\r\n\r\nWhole project here\r\n[MinimalExample.zip](https://github.com/dotnet/wpf/files/11302116/MinimalExample.zip)\r\n\r\nCode example\r\n\r\nUserControl1\r\n```xml\r\n<UserControl x:Class=\"DatabindingBug.UserControl1\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \r\n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \r\n             xmlns:local=\"clr-namespace:DatabindingBug\"\r\n             mc:Ignorable=\"d\" x:Name=\"ThisUserControl\"\r\n             d:DesignHeight=\"450\" d:DesignWidth=\"800\">\r\n    <Grid>\r\n        <ContentPresenter Content=\"{Binding InnerUserControl,ElementName=ThisUserControl}\"/>\r\n    </Grid>\r\n</UserControl>\r\n```\r\n```C#\r\npublic partial class UserControl1 : UserControl\r\n{\r\n    public UserControl1()\r\n    {\r\n        InitializeComponent();\r\n    }\r\n\r\n    public static readonly DependencyProperty InnerUserControlProperty =\r\n        DependencyProperty.Register(nameof(InnerUserControl), typeof(UserControl), typeof(UserControl1));\r\n\r\n    public UserControl InnerUserControl\r\n    {\r\n        get { return (UserControl)GetValue(InnerUserControlProperty); }\r\n        set { SetValue(InnerUserControlProperty, value); }\r\n    }\r\n}\r\n```\r\n\r\nUserControl2\r\n```xml\r\n<UserControl x:Class=\"DatabindingBug.UserControl2\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \r\n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \r\n             xmlns:local=\"clr-namespace:DatabindingBug\"\r\n             mc:Ignorable=\"d\" \r\n             d:DesignHeight=\"450\" d:DesignWidth=\"800\">\r\n    <Grid>\r\n        <TextBlock Text=\"{Binding Message}\" />\r\n    </Grid>\r\n</UserControl>\r\n```\r\n```C#\r\npublic partial class UserControl2 : UserControl\r\n{\r\n    public UserControl2()\r\n    {\r\n        InitializeComponent();\r\n    }\r\n}\r\n```\r\n\r\nMainWindow\r\n```xml\r\n<Window x:Class=\"DatabindingBug.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:DatabindingBug\"\r\n        mc:Ignorable=\"d\" Name=\"mainWindow\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n    <StackPanel>\r\n        <TextBlock Text=\"{Binding Message}\" />\r\n        <local:UserControl1>\r\n            <local:UserControl1.InnerUserControl>\r\n                <local:UserControl2 DataContext=\"{Binding UserControl2ViewModel}\" />\r\n            </local:UserControl1.InnerUserControl>\r\n        </local:UserControl1>\r\n    </StackPanel>\r\n</Window>\r\n```\r\n```C#\r\npublic partial class MainWindow : Window\r\n{\r\n    public MainWindow()\r\n    {\r\n        InitializeComponent();\r\n    }\r\n}\r\n```\r\n\r\nViewModels\r\n```C#\r\npublic class MainWindowViewModel\r\n{\r\n    public string Message { get; set; } = \"MainWindow\";\r\n    public UserControl2ViewModel UserControl2ViewModel { get; set; } = new();\r\n}\r\npublic class UserControl2ViewModel\r\n{\r\n    public string Message { get; set; } = \"UserControl2ViewModel\";\r\n}\r\n```\r\n\r\nApp\r\n```xml\r\n<Application x:Class=\"DatabindingBug.App\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             xmlns:local=\"clr-namespace:DatabindingBug\">\r\n    <!--StartupUri=\"MainWindow.xaml\"-->\r\n    <Application.Resources>\r\n         \r\n    </Application.Resources>\r\n</Application>\r\n```\r\n```C#\r\npublic partial class App : Application\r\n{\r\n    protected override async void OnStartup(StartupEventArgs e)\r\n    {\r\n        base.OnStartup(e);\r\n        var mainWindow = new MainWindow() { DataContext = new MainWindowViewModel() };\r\n        await Task.Delay(1000);\r\n        mainWindow.Show();\r\n    }\r\n}\r\n```\r\n\r\nI get a binding error with the above code,\r\nIf I comment out `await Task.Delay(1000);` the binding error does not occur.\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/7752","RelatedDescription":"Open issue \"A binding error occurs in a nested UserControl if asynchronous processing is interposed before Show the Window\" (#7752)"},{"Id":"1679614566","IsPullRequest":false,"CreatedAt":"2023-04-22T16:47:54","Actor":"RandomEngy","Number":"7751","RawContent":null,"Title":"PopupSecurityHelper.ForceMsaaToUiaBridge causes FileNotFoundException","State":"open","Body":"### Description\r\n\r\nI've gotten several reports from users that crash with this exception:\r\n\r\n```\r\nSystem.IO.FileNotFoundException: \r\nFile name: 'Accessibility, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'\r\n   at System.Windows.Controls.Primitives.Popup.PopupSecurityHelper.ForceMsaaToUiaBridge(PopupRoot popupRoot)\r\n   at System.Windows.Controls.Primitives.Popup.CreateWindow(Boolean asyncCall)\r\n   at System.Windows.Controls.Primitives.Popup.OnIsOpenChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\r\n   ...\r\n```\r\n\r\nhttps://github.com/RandomEngy/VidCoder/issues/1093, https://github.com/RandomEngy/VidCoder/issues/1136\r\n\r\nIt happens on a popup, in one case with a tooltip and in another case on a menu dropdown using the Fluent Ribbon WPF library. I've never seen this crash happen myself; and these actions are quite common in regular usage of the program.\r\n\r\nMaybe addressing https://github.com/dotnet/wpf/issues/5807 would fix this?\r\n\r\n### Reproduction Steps\r\n\r\nOpen a popup (not consistent)\r\n\r\n### Expected behavior\r\n\r\nNo crash\r\n\r\n### Actual behavior\r\n\r\nCrash with FileNotFound exception\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n.NET 6.0\r\nx64\r\nI don't know if it's specific to this configuration; I've only gotten a few bug reports.\r\n\r\n### Other information\r\n\r\n_No response_","Url":"https://github.com/dotnet/wpf/issues/7751","RelatedDescription":"Open issue \"PopupSecurityHelper.ForceMsaaToUiaBridge causes FileNotFoundException\" (#7751)"},{"Id":"1679513599","IsPullRequest":true,"CreatedAt":"2023-04-22T12:37:57","Actor":"dotnet-maestro[bot]","Number":"7750","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230421.8\r\n- **Date Produced**: April 21, 2023 9:28:06 PM UTC\r\n- **Commit**: fc43dcf6508c135e6743889311d86992da080f30\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23220.2 to 8.0.0-beta.23221.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23220.2 to 8.0.0-beta.23221.8][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23220.2 to 8.0.0-beta.23221.8][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23220.2 to 8.0.0-beta.23221.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23220.2 to 8.0.0-beta.23221.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d75baf71a0...fc43dcf650\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7750)","Url":"https://github.com/dotnet/wpf/pull/7750","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7750)"},{"Id":"1679356502","IsPullRequest":false,"CreatedAt":"2023-04-22T05:54:34","Actor":"batzen","Number":"7749","RawContent":null,"Title":"[Proposal] Allow focus on disabled controls","State":"open","Body":"# Problem\r\n\r\nI always wondered, and was recently remembered by it again in https://github.com/fluentribbon/Fluent.Ribbon/issues/1121 by @cbra-caa, why focus on disabled controls is completely blocked.\r\nIMHO this reduces accessibility as people with disabilities are completely blocked from accessing disabled controls using the keyboard.\r\n\r\n# Proposal\r\n\r\nI propose that we, optionally, allow focus on disabled controls.\r\nThat way application developers could add accessibility options to their applications to allow focus on disabled controls.\r\n\r\n# Implementation\r\n\r\nTo implement this we could add a new property like `FocusableWhenNotEnabled` which would unblock focus on disabled controls.\r\n\r\nI will give this a try and create a PR in the near future to explore which areas of WPF would have to be modified to make this possible.\r\n\r\nIf anyone has suggestions, concerns or any other kind of feedback regarding this i would be happy to hear from you.","Url":"https://github.com/dotnet/wpf/issues/7749","RelatedDescription":"Open issue \"[Proposal] Allow focus on disabled controls\" (#7749)"},{"Id":"1679269700","IsPullRequest":true,"CreatedAt":"2023-04-22T02:25:49","Actor":"dotnet-maestro[bot]","Number":"7748","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230421.5\r\n- **Date Produced**: April 21, 2023 9:34:54 PM UTC\r\n- **Commit**: f033a225944dfab4f4034a3faa47342432fccd76\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23220.4 to 8.0.0-preview.4.23221.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23220.4 to 8.0.0-preview.4.23221.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23220.4 to 8.0.0-preview.4.23221.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Management**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/924b8336f7...f033a22594\r\n[2]: https://github.com/dotnet/runtime/compare/4fe223ffb4...ab2b80d06d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7748)","Url":"https://github.com/dotnet/wpf/pull/7748","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7748)"},{"Id":"1678425732","IsPullRequest":true,"CreatedAt":"2023-04-21T12:38:50","Actor":"dotnet-maestro[bot]","Number":"7747","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230420.2\r\n- **Date Produced**: April 20, 2023 9:13:35 PM UTC\r\n- **Commit**: d75baf71a09ed067b48f484f29efc4e7f3e3df13\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/dca04a5ec4...d75baf71a0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7747)","Url":"https://github.com/dotnet/wpf/pull/7747","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7747)"},{"Id":"1677649010","IsPullRequest":true,"CreatedAt":"2023-04-21T02:25:48","Actor":"dotnet-maestro[bot]","Number":"7745","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230420.4\r\n- **Date Produced**: April 20, 2023 7:13:13 PM UTC\r\n- **Commit**: 924b8336f7a6e513c756f3c7f727b7f5ba8a5a06\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.4][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Management**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b3a0efc78e...924b8336f7\r\n[2]: https://github.com/dotnet/runtime/compare/9672d82ffa...4fe223ffb4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7745)","Url":"https://github.com/dotnet/wpf/pull/7745","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7745)"},{"Id":"1676870415","IsPullRequest":false,"CreatedAt":"2023-04-20T14:42:38","Actor":"miloush","Number":"7744","RawContent":null,"Title":"[API Proposal]: FileGroup data transfer","State":"open","Body":"### Background and motivation\r\n\r\nThe proposed API allows customers to drag, drop, copy and paste virtual files. Currently tasks like pasting files from remote desktop or dropping attachments from Outlook requires reflection to access the files (or rewrite the whole OLE infrastructure for data transfer).\r\n\r\nPR #7738\r\n\r\n### API Proposal\r\n\r\n```diff\r\n  namespace System.Windows;\r\n\r\n  public static partial class Clipboard\r\n  {\r\n      public static void Clear();\r\n      public static bool ContainsAudio();\r\n      public static bool ContainsData(string format);\r\n      public static bool ContainsFileDropList();\r\n+     public static bool ContainsFileGroup();\r\n      public static bool ContainsImage();\r\n      public static bool ContainsText();\r\n      public static bool ContainsText(TextDataFormat format);\r\n      public static void Flush();\r\n      public static Stream GetAudioStream();\r\n      public static object GetData(string format);\r\n      public static IDataObject GetDataObject();\r\n      public static StringCollection GetFileDropList();\r\n+     public static FileGroup GetFileGroup();\r\n      public static BitmapSource GetImage();\r\n      public static string GetText();\r\n      public static string GetText(TextDataFormat format);\r\n      public static bool IsCurrent(IDataObject data);\r\n      public static void SetAudio(byte[] audioBytes);\r\n      public static void SetAudio(Stream audioStream);\r\n      public static void SetData(string format, object data);\r\n      public static void SetDataObject(object data);\r\n      public static void SetDataObject(object data, bool copy);\r\n      public static void SetFileDropList(StringCollection fileDropList);\r\n+     public static void SetFileGroup(FileGroup group);\r\n      public static void SetImage(BitmapSource image);\r\n      public static void SetText(string text);\r\n      public static void SetText(string text, TextDataFormat format);\r\n  }\r\n\r\n+ public partial interface IDataObjectWithIndex : IDataObject\r\n+ {\r\n+     object GetData(string format, bool autoConvert, int index);\r\n+     bool GetDataPresent(string format, bool autoConvert, int index);\r\n+     void SetData(string format, object data, bool autoConvert, int index);\r\n+ }\r\n\r\n-  public sealed partial class DataObject : ComTypes.IDataObject, IDataObject\r\n+  public sealed partial class DataObject : ComTypes.IDataObject, IDataObjectWithIndex, IDataObject\r\n  {\r\n      public static readonly RoutedEvent CopyingEvent;\r\n      public static readonly RoutedEvent PastingEvent;\r\n      public static readonly RoutedEvent SettingDataEvent;\r\n      public DataObject();\r\n      public DataObject(object data);\r\n      public DataObject(string format, object data);\r\n      public DataObject(string format, object data, bool autoConvert);\r\n      public DataObject(Type format, object data);\r\n      public static void AddCopyingHandler(DependencyObject element, DataObjectCopyingEventHandler handler);\r\n      public static void AddPastingHandler(DependencyObject element, DataObjectPastingEventHandler handler);\r\n      public static void AddSettingDataHandler(DependencyObject element, DataObjectSettingDataEventHandler handler);\r\n      public bool ContainsAudio();\r\n      public bool ContainsFileDropList();\r\n+     public bool ContainsFileGroup();\r\n      public bool ContainsImage();\r\n      public bool ContainsText();\r\n      public bool ContainsText(TextDataFormat format);\r\n      public Stream GetAudioStream();\r\n      public object GetData(string format);\r\n      public object GetData(string format, bool autoConvert);\r\n+     public object GetData(string format, bool autoConvert, int index);\r\n      public object GetData(Type format);\r\n      public bool GetDataPresent(string format);\r\n      public bool GetDataPresent(string format, bool autoConvert);\r\n+     public bool GetDataPresent(string format, bool autoConvert, int index);\r\n      public bool GetDataPresent(Type format);\r\n      public StringCollection GetFileDropList();\r\n+     public FileGroup GetFileGroup();\r\n      public string[] GetFormats();\r\n      public string[] GetFormats(bool autoConvert);\r\n      public BitmapSource GetImage();\r\n      public string GetText();\r\n      public string GetText(TextDataFormat format);\r\n      public static void RemoveCopyingHandler(DependencyObject element, DataObjectCopyingEventHandler handler);\r\n      public static void RemovePastingHandler(DependencyObject element, DataObjectPastingEventHandler handler);\r\n      public static void RemoveSettingDataHandler(DependencyObject element, DataObjectSettingDataEventHandler handler);\r\n      public void SetAudio(byte[] audioBytes);\r\n      public void SetAudio(Stream audioStream);\r\n      public void SetData(object data);\r\n      public void SetData(string format, object data);\r\n      public void SetData(string format, object data, bool autoConvert);\r\n+     public void SetData(string format, object data, bool autoConvert, int index);\r\n      public void SetData(Type format, object data);\r\n      public void SetFileDropList(StringCollection fileDropList);\r\n+     public void SetFileGroup(FileGroup group);\r\n      public void SetImage(BitmapSource image);\r\n      public void SetText(string textData);\r\n      public void SetText(string textData, TextDataFormat format);\r\n      int ComTypes.IDataObject.DAdvise(ref ComTypes.FORMATETC pFormatetc, ComTypes.ADVF advf, ComTypes.IAdviseSink pAdvSink, out int pdwConnection);\r\n      void ComTypes.IDataObject.DUnadvise(int dwConnection);\r\n      int ComTypes.IDataObject.EnumDAdvise(out ComTypes.IEnumSTATDATA enumAdvise);\r\n      ComTypes.IEnumFORMATETC ComTypes.IDataObject.EnumFormatEtc(ComTypes.DATADIR dwDirection);\r\n      int ComTypes.IDataObject.GetCanonicalFormatEtc(ref ComTypes.FORMATETC pformatetcIn, out ComTypes.FORMATETC pformatetcOut);\r\n      void ComTypes.IDataObject.GetData(ref ComTypes.FORMATETC formatetc, out ComTypes.STGMEDIUM medium);\r\n      void ComTypes.IDataObject.GetDataHere(ref ComTypes.FORMATETC formatetc, ref ComTypes.STGMEDIUM medium);\r\n      int ComTypes.IDataObject.QueryGetData(ref ComTypes.FORMATETC formatetc);\r\n      void ComTypes.IDataObject.SetData(ref ComTypes.FORMATETC pFormatetcIn, ref ComTypes.STGMEDIUM pmedium, bool fRelease);\r\n  }\r\n\r\n  public static partial class DataFormats\r\n  {\r\n      public static readonly string Bitmap;\r\n      public static readonly string CommaSeparatedValue;\r\n      public static readonly string Dib;\r\n      public static readonly string Dif;\r\n      public static readonly string EnhancedMetafile;\r\n      public static readonly string FileDrop;\r\n      public static readonly string Html;\r\n      public static readonly string Locale;\r\n      public static readonly string MetafilePicture;\r\n      public static readonly string OemText;\r\n      public static readonly string Palette;\r\n      public static readonly string PenData;\r\n      public static readonly string Riff;\r\n      public static readonly string Rtf;\r\n      public static readonly string Serializable;\r\n      public static readonly string StringFormat;\r\n      public static readonly string SymbolicLink;\r\n      public static readonly string Text;\r\n      public static readonly string Tiff;\r\n      public static readonly string UnicodeText;\r\n      public static readonly string WaveAudio;\r\n      public static readonly string Xaml;\r\n      public static readonly string XamlPackage;\r\n+     public static readonly string FileContents;\r\n+     public static readonly string FileGroupDescriptor;\r\n      public static DataFormat GetDataFormat(int id);\r\n      public static DataFormat GetDataFormat(string format);\r\n  }\r\n\r\n+ public partial class FileDescriptor\r\n+ {\r\n+     public FileDescriptor(string filename);\r\n+     public Guid? Clsid { get; set; }\r\n+     public DateTime? CreationTime { get; set; }\r\n+     public FileAttributes? FileAttributes { get; set; }\r\n+     public string FileName  { get; }\r\n+     public long? FileSize  { get; set; }\r\n+     public static FileDescriptor FromFile(string path);\r\n+     public Int32Rect? Icon { get; set; }\r\n+     public bool IsDirectory { get; }\r\n+     public DateTime? LastAccessTime { get; set; }\r\n+     public DateTime? LastWriteTime { get; set; }\r\n+ }\r\n\r\n+ public partial class FileGroup : IReadOnlyList<KeyValuePair<FileDescriptor, Stream>>\r\n+ {\r\n+     public FileGroup();\r\n+     public int Count { get; }\r\n+     public bool IsReadOnly { get; }\r\n+     public void Add(string filename, byte[] data);\r\n+     public void Add(string filename, Stream stream);\r\n+     public void Add(FileDescriptor descriptor, Stream stream);\r\n+     public IReadOnlyList<FileDescriptor> FileDescriptors { get; }\r\n+     public IEnumerator<KeyValuePair<FileDescriptor, Stream>> GetEnumerator();\r\n+     IEnumerator IEnumerable.GetEnumerator();\r\n+     public Stream GetFileContents(FileDescriptor descriptor);\r\n+     public Stream GetFileContents(int index);\r\n+     KeyValuePair<FileDescriptor, Stream> IReadOnlyList<KeyValuePair<FileDescriptor, Stream>>.this[int index] { get; }\r\n+ }\r\n```\r\n\r\n`FileDescriptor` corresponds to [FILEDESCRIPTORW](https://learn.microsoft.com/en-us/windows/win32/api/shlobj_core/ns-shlobj_core-filedescriptorw).\r\n\r\n### API Usage\r\n\r\nCopy/Drag:\r\n\r\n```C#\r\nFileGroup group = new FileGroup();\r\ngroup.Add(\"E.txt\", Encoding.UTF8.GetBytes(\"EHEHEHE\"));\r\ngroup.Add(\"F.txt\", Encoding.UTF8.GetBytes(\"FFFFLUFF\"));\r\n\r\n// Copy virtual files into clipboard\r\nClipboard.SetFileGroup(group);\r\n\r\n// Start drag operation\r\nDataObject dataObject = new DataObject();\r\ndataObject.SetFileGroup(group);\r\nDragDrop.DoDragDrop(this, dataObject, DragDropEffects.All);\r\n```\r\n\r\nPaste/Drop:\r\n\r\n```C#\r\nFileGroup group;\r\n\r\n// From clipboard\r\nif (Clipboard.ContainsFileGroup())\r\n    group = Clipboard.GetFileGroup();\r\n\r\n// From drop handler\r\nDataObject dataObject = (DataObject)e.Data;\r\nif (dataObject.ContainsFileGroup())\r\n    group = dataObject.GetFileGroup();\r\n\r\n// Save virtual files to the current directory\r\nforeach (var file in group)\r\n{\r\n    if (file.Key.IsDirectory)\r\n        Directory.CreateDirectory(file.Key.FileName);\r\n\r\n    else \r\n        using (FileStream stream = File.Create(file.Key.FileName))\r\n            file.Value.CopyTo(stream);\r\n}\r\n```\r\n\r\nLow-level set without FileGroup:\r\n\r\n```C#\r\nDataObject dataObject = new DataObject();\r\ndataObject.SetData(DataFormats.FileContents, Encoding.UTF8.GetBytes(\"AHAHA\"), autoConvert: false, index: 0);\r\ndataObject.SetData(DataFormats.FileContents, Encoding.UTF8.GetBytes(\"BAHAHA\"), autoConvert: false, index: 1);\r\ndataObject.SetData(DataFormats.FileGroupDescriptor, new[] { new FileDescriptor(\"A.txt\"), new FileDescriptor(\"B.txt\") });\r\n```\r\n\r\nLow-level get without FileGroup:\r\n\r\n```C#\r\nif (dataObject.GetDataPresent(DataFormats.FileGroupDescriptor))\r\n{\r\n    var descriptors = dataObject.GetData(DataFormats.FileGroupDescriptor) as FileDescriptor[];\r\n    for (int i = 0; i < descriptors.Length; i++)\r\n    {\r\n        Stream contents = dataObject.GetData(DataFormatas.FileContents, autoConvert: false, index: i) as Stream;\r\n        Console.WriteLine($\"{descriptor[i].FileName} {contents.Length} bytes\");\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Alternative Designs\r\n\r\nOnly the get/set methods (i.e. `IDataObjectWithIndex`) are critical to enable developers to implement the functionality, the rest is for convenience.\r\n\r\nTo consider:\r\n* How much should `FileGroup` be a full-fledged collection (supporting removal, CopyTo etc.)\r\n* Whether `FileGroup` should contain any convenience methods for adding physical files and directories. This should have an option to add a whole subdirectory, as well as creating an internal stream wrapper that wouldn't open the file until it is actually requested by the drop/clipboard target. Currently these can be implemented by customers.\r\n* Whether there should be a separate type instead of `KeyValuePair<FileDescriptor, Stream>`. This would allow delaying requesting the stream until needed by the application (currently it is requested on per-iteration basis in enumerator).\r\n\r\nWinforms does not have this functionality.\r\n\r\n### Risks\r\n\r\nThis proposal shouldn't contain any breaking changes. `DataObject` now implements `IDataObjectWithIndex`, but direct implementation of `IDataObject` has been preserved.","Url":"https://github.com/dotnet/wpf/issues/7744","RelatedDescription":"Open issue \"[API Proposal]: FileGroup data transfer\" (#7744)"},{"Id":"1676648950","IsPullRequest":true,"CreatedAt":"2023-04-20T12:43:28","Actor":"miloush","Number":"7743","RawContent":null,"Title":"Allow right click in system menu","State":"open","Body":"Fixes #7739 \r\n\r\n## Description\r\n\r\nThe `SystemCommands.ShowSystemMenu` command shows the system menu in a way that it does not accept right click, although the menu does accept right click when shown by the Windows system.\r\n\r\nThis PR updates the flag passed to the native API to allow right click to work.\r\n\r\n## Customer Impact\r\n\r\nCustomers not taking the fix will not be able to use right click in system menu shown explicitly, as is for example the case for `WindowChrome`, introducing inconsistencies between the WPF and Windows system.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt using .NET 8.0.100-preview.3.23178.7 and tested with the repro in #7739, verified that the _Minimize_ command gets ignored before the fix and works after the fix.\r\n\r\n## Risk\r\n\r\nLow. Existing behavior not changed. Allowed right click to not go through the system menu when invoked programmatically.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7743)","Url":"https://github.com/dotnet/wpf/pull/7743","RelatedDescription":"Open PR \"Allow right click in system menu\" (#7743)"},{"Id":"1676603179","IsPullRequest":true,"CreatedAt":"2023-04-20T12:39:27","Actor":"dotnet-maestro[bot]","Number":"7742","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230419.2\r\n- **Date Produced**: April 19, 2023 4:02:32 PM UTC\r\n- **Commit**: dca04a5ec44fe1e75535f51a4e0b9a7aa2318de7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/cb54ca2143...dca04a5ec4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7742)","Url":"https://github.com/dotnet/wpf/pull/7742","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7742)"},{"Id":"1676456230","IsPullRequest":true,"CreatedAt":"2023-04-20T10:31:50","Actor":"dipeshmsft","Number":"7741","RawContent":null,"Title":"Updating README.md and docs","State":"open","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7741)","Url":"https://github.com/dotnet/wpf/pull/7741","RelatedDescription":"Open PR \"Updating README.md and docs\" (#7741)"},{"Id":"1675869623","IsPullRequest":true,"CreatedAt":"2023-04-20T02:25:49","Actor":"dotnet-maestro[bot]","Number":"7740","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230418.5\r\n- **Date Produced**: April 19, 2023 11:04:19 PM UTC\r\n- **Commit**: b3a0efc78e82ab0deba0d25d6f196f996e13bab5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23213.11 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23213.11 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23213.11 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Management**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f3a6aa1d43...b3a0efc78e\r\n[2]: https://github.com/dotnet/runtime/compare/42c6bcf207...9672d82ffa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7740)","Url":"https://github.com/dotnet/wpf/pull/7740","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7740)"},{"Id":"1675489999","IsPullRequest":false,"CreatedAt":"2023-04-19T19:24:47","Actor":"nesakobi","Number":"7739","RawContent":null,"Title":"Right clicking on a system menu item (Move, Size, Minimize ....) does not work for a window with custom WindowChrome","State":"open","Body":"### Description\r\n\r\nHere is the repo - a simple illustration of the issue https://github.com/nesakobi/window_chrome_wpf\r\nThere are 2 windows - one of them is the default Window without any styling and property changes. When the right mouse button is clicked on title bar of the window, the system menu becomes active and it is possible to click on menu items both left and right mouse clicks. Both types of clicks work in the same way. The second is a window with property \"WindowStyle = None\" and WindowChrome configured. Right clicking at the top of the window activates the system menu. Left-clicking on a menu item performs an action, while right clicking on an item does nothing. When there is a DataGrid and DataGrid has context menu,  right-clicking on the system menu items activates the DataGrid context menu.\r\n\r\n\r\n![context_menu](https://user-images.githubusercontent.com/41533598/233176151-c4eb8c01-53e5-421a-87a4-f246ae872d2c.png)\r\n\r\n\r\n### Reproduction Steps\r\n\r\n1. Create a style for window\r\n2. Set custom chrome and set the property WindowStyle = None\r\n3. Try opening the system menu by clicking on the window icon\r\n4. Right-click any menu item - Move, Size, Minimize, etc...\r\n\r\n### Expected behavior\r\n\r\nSystem menu - the right clicking on menu item should work the same as for window with WindowStyle = SingleBorderWindow\r\n\r\n### Actual behavior\r\n\r\nSystem menu - menu item does not work on right click.\r\n\r\nAlso it activates PreviewMouseRightButtonUp and MouseRightButtonUp for controls inside the window content (annoying behavior)\r\n\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nTried both with .Net framework 4.8.1 and .Net 7.0\r\nOS: Microsoft Windows [Version 10.0.19044.2846]\r\n\r\n### Other information\r\n\r\n_No response_","Url":"https://github.com/dotnet/wpf/issues/7739","RelatedDescription":"Open issue \"Right clicking on a system menu item (Move, Size, Minimize ....) does not work for a window with custom WindowChrome\" (#7739)"},{"Id":"1675037599","IsPullRequest":true,"CreatedAt":"2023-04-19T14:34:38","Actor":"miloush","Number":"7738","RawContent":null,"Title":"Drag & Drop virtual files","State":"open","Body":"Fixes #6352. Requires API approval.\r\n\r\n## Description\r\n\r\nThis is a new feature that allows WPF application to be both a drag source and a drop target for virtual files, i.e. support for CFSTR_FILECONTENTS and CFSTR_FILEDESCRIPTOR.\r\n\r\nThis enables WPF applications to accept attachments dropped or pasted from Outlook or shell namespaces (phones, cameras etc.) as well as files pasted from e.g. remote desktop. This also enables WPF applications to allow users copying or dragging UI elements from a Window and dropping them as files, attachments, etc. without creating temporary files first.\r\n\r\nThere is two parts to enable these scenarios. One is the support of getting and setting multi-part data objects, i.e. using `FORMATETC.lindex`. For compatibility reasons, this cannot be added to the `IDataObject` interface, so a new `IDataObjectWithIndex` is introduced that derives from `IDataObject` and all WPF types that implemented `IDataObject` now implement both. This is already a change worth merging on its own, enabling developers to implement the above scenarios with a reasonable effort (replaces #6353).\r\n\r\nThe second part is the public methods that allow high level access to the feature. Currently on both `DataObject` and `Clipboard`, these are:\r\n\r\n* `bool ContainsFileGroup()`\r\n* `FileGroup GetFileGroup()`\r\n* `void SetFileGroup(FileGroup group)`\r\n\r\nTwo new types are introduced, `System.Windows.FileDescriptor`, roughly corresponding to [FILEDESCRIPTORW](https://learn.microsoft.com/en-us/windows/win32/api/shlobj_core/ns-shlobj_core-filedescriptorw) and `System.Windows.FileGroup`, which is technically a list of file descriptors paired with corresponding streams. The `FileGroup` holds either streams supplied by developer or a reference to `IDataObject` that provides the streams on demand.\r\n\r\nWhile file groups can be backed up by physical files, there is no convenience methods to add physical files to the group at the moment, but developers can do that manually.\r\n\r\nFor low-level access, two new data formats are defined and registered, `DataFormats.FileContents` which returns a `Stream` and `DataFormats.FileGroupDescriptor` which returns a collection of `FileDescriptor`s.\r\n\r\nFeedback on the design welcome.\r\n\r\n## Usage\r\n\r\nCopy virtual files into clipboard:\r\n\r\n```C#\r\nFileGroup group = new FileGroup();\r\ngroup.Add(\"E.txt\", Encoding.UTF8.GetBytes(\"EHEHEHE\"));\r\ngroup.Add(\"F.txt\", Encoding.UTF8.GetBytes(\"FFFFLUFF\"));\r\nClipboard.SetFileGroup(group);\r\n```\r\n\r\nDrag virtual files:\r\n\r\n```C#\r\nprivate void OnMouseMove(object sender, MouseEventArgs e)\r\n{\r\n    if (e.LeftButton == MouseButtonState.Pressed)\r\n    {\r\n        FileGroup group = new FileGroup();\r\n        group.Add(\"E.txt\", Encoding.UTF8.GetBytes(\"EHEHEHE\"));\r\n        group.Add(\"F.txt\", Encoding.UTF8.GetBytes(\"FFFFLUFF\"));\r\n\r\n        DataObject dataObject = new DataObject();\r\n        dataObject.SetFileGroup(group);\r\n        DragDrop.DoDragDrop(this, dataObject, DragDropEffects.All);\r\n    }\r\n}\r\n```\r\n\r\nSave dropped virtual files to the current directory:\r\n\r\n```C#\r\nprivate void OnDrop(object sender, DragEventArgs e)\r\n{\r\n    DataObject dataObject = (DataObject)e.Data;\r\n    if (dataObject.ContainsFileGroup())\r\n    {\r\n        FileGroup group = dataObject.GetFileGroup();\r\n\r\n        foreach (var file in group)\r\n        {\r\n            if (file.Key.IsDirectory)\r\n                Directory.CreateDirectory(file.Key.FileName);\r\n\r\n            else \r\n                using (FileStream stream = File.Create(file.Key.FileName))\r\n                    file.Value.CopyTo(stream);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Remaining tasks\r\n\r\n- [x] API proposal - #7744 \r\n- [x] XML comments on new classes\r\n- [x] SR for exceptions\r\n\r\n## Testing\r\n\r\nBuilt and tested using .NET 8.0.100-preview.3.23178.7 win-x86:\r\n- dragging virtual files using both FileGroup and SetData from WPF app to Outlook, Windows Explorer and itself\r\n- dragging virtual files and folders using FileGroup from WPF to Outlook, Windows Explorer and itself\r\n- copying virtual files using FileGroup and pasting them into Outlook and Windows Explorer\r\n- dropping attachments from Outlook into WPF app\r\n- pasting files from Remote Desktop into WPF app\r\n- taking FileGroup from clipboard and DoDragDrop\r\n- taking FileGroup from drop and setting it to clipboard\r\n\r\n## Risk\r\n\r\n\"DataObject save any to IStream\" commit has changes to existing behaviour, namely, \"InkSerializedFormat\" allocated byte array, read the stream into the byte array and then wrote the byte array into the destination stream. After the changes, the data are copied stream to stream using a buffer of 81920 bytes.\r\n\r\nOtherwise everything else should be a new feature.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7738)","Url":"https://github.com/dotnet/wpf/pull/7738","RelatedDescription":"Open PR \"Drag & Drop virtual files\" (#7738)"},{"Id":"1673452733","IsPullRequest":true,"CreatedAt":"2023-04-18T16:45:47","Actor":"dotnet-maestro[bot]","Number":"7737","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230417.1\r\n- **Date Produced**: April 17, 2023 4:50:34 PM UTC\r\n- **Commit**: cb54ca21431ee8d96f91abfbc42237bcb001f9d1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/fb14cae30e...cb54ca2143\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7737)","Url":"https://github.com/dotnet/wpf/pull/7737","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7737)"},{"Id":"1670945119","IsPullRequest":true,"CreatedAt":"2023-04-18T06:36:38","Actor":"rchauhan18","Number":"7731","RawContent":null,"Title":"Disable warnings CS0672, SYSLIB00(11,50,51)","State":"closed","Body":"Disable warnings. \r\nCS0672 : https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0672\r\nSYSLIB0011 : https://learn.microsoft.com/en-us/dotnet/fundamentals/syslib-diagnostics/syslib0011\r\nSYSLIB0051 : obsolete: 'This API supports obsolete formatter-based serialization. It should not be called or extended by application code.'\r\nSYSLIB0050: obsolete: 'Formatter-based serialization is obsolete and should not be used.'","Url":"https://github.com/dotnet/wpf/pull/7731","RelatedDescription":"Closed or merged PR \"Disable warnings CS0672, SYSLIB00(11,50,51)\" (#7731)"},{"Id":"1671904338","IsPullRequest":false,"CreatedAt":"2023-04-17T20:16:19","Actor":"DrMaxP","Number":"7736","RawContent":null,"Title":"Using XAML for my own UI framework","State":"open","Body":"So, this might be somewhat off topic, but I'm trying to find places where people in the know might have a view on this. I've used WPF for many years (10+) but now do VR development in Unity. I'd like to adopt a XAML based markup language for my own UI system (for procedurally building 3D UIs in Unity) and am not sure how to approach this. Ideally I'd like to leverage support in the .NET framework or elsewhere to do the heavy lifting going from my markup/UI types using XAML ->my object graph but don't know where sensible to start. Clearly XAML as markup is used by more than WPF, so should be extensible - but how? Does anyone have any advice or can propose a good resource to look at.\r\n\r\nAlso, the level of support Unity exposes could also be an issue in implementing any suggestion.\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/wpf/issues/7736","RelatedDescription":"Open issue \"Using XAML for my own UI framework\" (#7736)"},{"Id":"1671695161","IsPullRequest":false,"CreatedAt":"2023-04-17T17:57:05","Actor":"miloush","Number":"7735","RawContent":null,"Title":"[API Proposal]: GlyphRun.TextFormattingMode","State":"open","Body":"### Background and motivation\r\n\r\n`GlyphRun.TextFormattingMode` is currently fixed to `TextFormattingMode.Ideal` when creating `GlyphRun` directly, while it already supports `TextFormattingModel.Display` via e.g. `TextBlock` (`TextOptions.TextFormattingMode`).\r\n\r\nThis makes it impossible to render individual glyphs into bitmap using `Display` formatting, which is required for GDI compatibility. Currently the property can be changed using reflection. This proposal is to add a public property to this field.\r\n\r\nOriginally proposed in #2638.\r\n\r\n### API Proposal\r\n\r\n```diff\r\npublic partial class GlyphRun : ISupportInitialize\r\n{\r\n    [ObsoleteAttribute(\"Use the PixelsPerDip override\", false)]\r\n    public GlyphRun();\r\n    public GlyphRun(float pixelsPerDip);\r\n    [CLSCompliantAttribute(false)]\r\n    [ObsoleteAttribute(\"Use the PixelsPerDip override\", false)]\r\n    public GlyphRun(GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, IList<ushort> glyphIndices, Point baselineOrigin, IList<double> advanceWidths, IList<Point> glyphOffsets, IList<char> characters, string deviceFontName, IList<ushort> clusterMap, IList<bool> caretStops, XmlLanguage language);\r\n    [CLSCompliantAttribute(false)]\r\n    public GlyphRun(GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, IList<ushort> glyphIndices, Point baselineOrigin, IList<double> advanceWidths, IList<Point> glyphOffsets, IList<char> characters, string deviceFontName, IList<ushort> clusterMap, IList<bool> caretStops, XmlLanguage language);\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(DoubleIListConverter))]\r\n    public IList<double> AdvanceWidths { get; set; }\r\n    public Point BaselineOrigin { get; set; }\r\n    public int BidiLevel { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(BoolIListConverter))]\r\n    public IList<bool> CaretStops { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(CharIListConverter))]\r\n    public IList<char> Characters { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(UShortIListConverter))]\r\n    public IList<ushort> ClusterMap { get; set; }\r\n    public string DeviceFontName { get; set; }\r\n    public double FontRenderingEmSize { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(UShortIListConverter))]\r\n    public IList<ushort> GlyphIndices { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(PointIListConverter))]\r\n    public IList<Point> GlyphOffsets { get; set; }\r\n    public GlyphTypeface GlyphTypeface { get; set; }\r\n    public bool IsHitTestable { get; }\r\n    public bool IsSideways { get; set; }\r\n    public XmlLanguage Language { get; set; }\r\n    public float PixelsPerDip { get; set; }\r\n+   public TextFormattingMode TextFormattingMode { get; set; }\r\n    public Geometry BuildGeometry();\r\n    public Rect ComputeAlignmentBox();\r\n    public Rect ComputeInkBoundingBox();\r\n    public CharacterHit GetCaretCharacterHitFromDistance(double distance, out bool isInside);\r\n    public double GetDistanceFromCaretCharacterHit(CharacterHit characterHit);\r\n    public CharacterHit GetNextCaretCharacterHit(CharacterHit characterHit);\r\n    public CharacterHit GetPreviousCaretCharacterHit(CharacterHit characterHit);\r\n    void ISupportInitialize.BeginInit();\r\n    void ISupportInitialize.EndInit();\r\n}\r\n```\r\n\r\n\r\n### API Usage\r\n\r\n```c#\r\nvar run = new GlyphRun();\r\nrun.TextFormattingMode = TextFormattingMode.Display; // new\r\nrun.GlyphTypeface = _typeface;\r\nrun.FontRenderingEmSize = 12;\r\nrun.GlyphIndices = new ushort[] { 0 };\r\nrun.AdvanceWidths = new double[] { 0.0 };\r\n\r\nusing (DrawingContext context = visual.RenderOpen())\r\n{\r\n    context.DrawGlyphRun(Brushes.Black, run);\r\n}\r\n```\r\n\r\n\r\n### Alternative Designs\r\n\r\nAlternatively, the existing\r\n\r\n```C#\r\ninternal TryCreate(\r\n GlyphTypeface glyphTypeface, \r\n int bidiLevel,\r\n bool isSideways, \r\n double renderingEmSize, \r\n float pixelsPerDip, \r\n IList<ushort> glyphIndices,  \r\n Point baselineOrigin, \r\n IList<double> advanceWidths, \r\n IList<Point> glyphOffsets, \r\n IList<char> characters, \r\n string deviceFontName, \r\n IList<ushort> clusterMap, \r\n IList<bool> caretStops,\r\n XmlLanguage language, \r\n TextFormattingMode textLayout)\r\n```\r\n\r\ncoulde be made public.\r\n\r\nThere are also public `GlyphRun` constructors that take all the property values and pass them to `TryCreate`, but I don't see a need to add another constructor overload, since `GlyphRun` is `ISupportInitialize`\r\n\r\n### Risks\r\n\r\nLow, the `GlyphRun` already supports various `TextFormattingMode`s for other API.","Url":"https://github.com/dotnet/wpf/issues/7735","RelatedDescription":"Open issue \"[API Proposal]: GlyphRun.TextFormattingMode\" (#7735)"},{"Id":"1671639748","IsPullRequest":true,"CreatedAt":"2023-04-17T17:20:59","Actor":"miloush","Number":"7734","RawContent":null,"Title":"Avoid crashing if temporary file cannot be deleted","State":"open","Body":"Fixes #3138 \r\n\r\n## Description\r\n\r\nWhen a process does not have rights to delete a temporary file, it crashes, see #3138. The code already contains a catch for the case when the file is in use, so this PR adds another catch for when there are insufficient permissions for the deletion.\r\n\r\n## Customer Impact\r\n\r\nCustomers not taking this fix may experience crashes if they do not have permission to delete temporary files. An example of codepath that uses temporary files is `Cursor.LoadFromStream` or WinRT spell checker.\r\n\r\nThis affects Visual Studio as well.\r\n\r\n## Regression\r\n\r\nWinRT spell checker codepath has a regression from .NET Framework in that it used to check for file permissions and skip the delete if they were not granted. This PR restores the .NET Framework behavior in this case.\r\n\r\n## Testing\r\n\r\nBuilt using 8.0.0-preview.3.23174.8 and verified that a WPF application crashes when denied access to the temporary folder before the fix but not after the fix.\r\n\r\n## Risk\r\n\r\nLow. Temporary files will already stay behind in the case of crash, and failing to delete temporary files should not make an application to crash.\r\n","Url":"https://github.com/dotnet/wpf/pull/7734","RelatedDescription":"Open PR \"Avoid crashing if temporary file cannot be deleted\" (#7734)"},{"Id":"1671590811","IsPullRequest":false,"CreatedAt":"2023-04-17T16:49:42","Actor":"miloush","Number":"7733","RawContent":null,"Title":"[API Proposal]: File dialog controls","State":"open","Body":"Before API review: see whether we could reuse the classes for TaskDialog\r\n\r\n### Background and motivation\r\n\r\nWPF applications are lacking the ability to customize file dialogs, which has become a common requirement.\r\n\r\nNotepad:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/10546952/232553853-507fa6e7-12a5-47a5-aeed-a4400f20368c.png\"/>\r\n\r\nVisual Studio:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/10546952/232554801-8dbf620b-e5a6-47bc-b48d-6dd8bc6ec28a.png\"/>\r\n\r\nOffice:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/10546952/232554608-9b089c09-ac8c-49ee-9403-153c5cfcd215.png\" />\r\n\r\nThis is a proposal for API to enable this functionality in WPF, notably `IFileDialogCustomize`.\r\n\r\nThere is a prototype PR using the proposed API, see #7256.\r\n\r\n### API Proposal\r\n\r\nFor class diagram see PR.\r\n\r\n**Changes to existing:**\r\n\r\n```diff\r\nnamespace Microsoft.Win32\r\n{\r\n    public abstract partial class CommonItemDialog : CommonDialog\r\n    {\r\n        protected CommonItemDialog() { }\r\n+       public FileDialogCancelButton CancelButton { get; }\r\n+       public FileDialogCustomControls CustomControls { get; }\r\n        public IList<FileDialogCustomPlace> CustomPlaces { get; set; }\r\n        public bool DereferenceLinks { get; set; }\r\n        public string InitialDirectory { get; set; }\r\n        public string FileName { get; set; }\r\n        public string[] FileNames { get; }\r\n+       public FileDialogOkButton OkButton { get; }\r\n        public bool RestoreDirectory { get; set; }\r\n        public string SafeFileName { get; }\r\n        public string[] SafeFileNames { get; }\r\n        public string Title { get; set; }\r\n        public bool ValidateNames { get; set; }\r\n        public event CancelEventHandler FileOk { add; remove; }\r\n        protected void OnFileOk(CancelEventArgs e) { }\r\n        public override void Reset() { }\r\n        protected override bool RunDialog(IntPtr hwndOwner);\r\n        public override string ToString();\r\n    }\r\n}\r\n```\r\n\r\n**All new, including the namespace:**\r\n\r\n```C#\r\nnamespace Microsoft.Win32.Controls\r\n{\r\n    public sealed partial class FileDialogCancelButton\r\n    {\r\n        public string CustomLabel { get; set; }\r\n    }\r\n    public sealed partial class FileDialogCheckButton : FileDialogText\r\n    {\r\n        public FileDialogCheckButton();\r\n        public FileDialogCheckButton(string label);\r\n        public FileDialogCheckButton(string label, bool isChecked);\r\n        public bool IsChecked { get; set; }\r\n        public event EventHandler Checked { add; remove; }\r\n        public event EventHandler Unchecked { add; remove; }\r\n        public override object Clone();\r\n    }\r\n    public sealed partial class FileDialogComboBox : FileDialogSelectorControl\r\n    {\r\n        public FileDialogComboBox();\r\n        public FileDialogComboBox(params string[] items);\r\n    }\r\n    public abstract partial class FileDialogControl : FileDialogControlBase, ICloneable\r\n    {\r\n        protected FileDialogControl();\r\n    }\r\n    public abstract partial class FileDialogControlBase : ICloneable\r\n    {\r\n        public FileDialogControlBase();\r\n        public int ID { get; }\r\n        public bool IsEnabled { get; set; }\r\n        public bool IsVisible { get; set; }\r\n        public object Tag { get; set; }\r\n        public abstract object Clone();\r\n        public void HideAndDisable();\r\n        public virtual void ShowAndEnable();\r\n    }\r\n    public partial class FileDialogControlCollection : Collection<FileDialogControl>\r\n    {\r\n        public FileDialogControlCollection();\r\n        public FileDialogControlCollection(params FileDialogControl[] controls);\r\n        public FileDialogCheckButton AddCheckButton(string label, bool isChecked = false);\r\n        public FileDialogComboBox AddComboBox(params string[] items);\r\n        public FileDialogEditBox AddEditBox(string text);\r\n        public FileDialogMenu AddMenu(string label, params string[] items);\r\n        public FileDialogPushButton AddPushButton(string label);\r\n        public FileDialogRadioButtonList AddRadioButtonList(params string[] items);\r\n        public FileDialogSeparator AddSeparator();\r\n        public FileDialogText AddText(string label);\r\n        protected override void ClearItems();\r\n        protected override void InsertItem(int index, FileDialogControl item);\r\n        protected override void RemoveItem(int index);\r\n        protected override void SetItem(int index, FileDialogControl item);\r\n    }\r\n    public sealed partial class FileDialogControlItem : FileDialogControlBase\r\n    {\r\n        public FileDialogControlItem();\r\n        public FileDialogControlItem(string text);\r\n        public string Text { get; set; }\r\n        public override object Clone();\r\n    }\r\n    public partial class FileDialogControlItemCollection : Collection<FileDialogControlItem>\r\n    {\r\n        internal FileDialogControlItemCollection();\r\n        public FileDialogControlItem Add(string itemText);\r\n        protected override void ClearItems();\r\n        protected override void InsertItem(int index, FileDialogControlItem item);\r\n        protected override void RemoveItem(int index);\r\n        protected override void SetItem(int index, FileDialogControlItem item);\r\n    }\r\n    public partial class FileDialogCustomControls : FileDialogControlCollection\r\n    {\r\n        internal FileDialogCustomControls();\r\n        public FileDialogControl Prominent { get; set; }\r\n        public FileDialogComboBox AddComboBoxWithLabel(string label, params string[] items);\r\n        public FileDialogEditBox AddEditBoxWithLabel(string label, string text);\r\n        public FileDialogRadioButtonList AddRadioButtonListWithLabel(string label, params string[] items);\r\n        public FileDialogVisualGroup AddVisualGroup(string label, params FileDialogControl[] controls);\r\n    }\r\n    public sealed partial class FileDialogEditBox : FileDialogControl\r\n    {\r\n        public FileDialogEditBox();\r\n        public FileDialogEditBox(string text);\r\n        public string Text { get; set; }\r\n        public override object Clone();\r\n    }\r\n    public partial class FileDialogItemEventArgs : EventArgs\r\n    {\r\n        public FileDialogItemEventArgs(FileDialogControlItem item);\r\n        public FileDialogControlItem Item { get; }\r\n    }\r\n    public abstract partial class FileDialogItemsControl : FileDialogControl\r\n    {\r\n        protected FileDialogItemsControl();\r\n        protected FileDialogItemsControl(string[] items);\r\n        public FileDialogControlItemCollection Items { get; }\r\n        public sealed override object Clone();\r\n    }\r\n    public sealed partial class FileDialogMenu : FileDialogItemsControl\r\n    {\r\n        public FileDialogMenu();\r\n        public FileDialogMenu(string label, params string[] items);\r\n        public string Label { get; set; }\r\n        public event EventHandler Activating { add; remove; }\r\n        public event EventHandler<FileDialogItemEventArgs> ItemSelected { add; remove; }\r\n    }\r\n    public sealed partial class FileDialogOkButton\r\n    {\r\n        public string CustomLabel { get; set; }\r\n        public FileDialogControlItemCollection Items { get; }\r\n        public bool RequiresInteraction { get; set; }\r\n        public int SelectedIndex { get; }\r\n        public FileDialogControlItem SelectedItem { get; }\r\n        public event EventHandler Activating { add; remove; }\r\n    }\r\n    public sealed partial class FileDialogPushButton : FileDialogText\r\n    {\r\n        public FileDialogPushButton();\r\n        public FileDialogPushButton(string label);\r\n        public event EventHandler Click { add; remove; }\r\n        public override object Clone();\r\n    }\r\n    public sealed partial class FileDialogRadioButtonList : FileDialogSelectorControl\r\n    {\r\n        public FileDialogRadioButtonList()\r\n        public FileDialogRadioButtonList(params string[] items)\r\n    }\r\n    public abstract partial class FileDialogSelectorControl : FileDialogItemsControl\r\n    {\r\n        protected FileDialogSelectorControl(params string[] items);\r\n        public int SelectedIndex { get; set; }\r\n        public FileDialogControlItem SelectedItem { get; set; }\r\n        public event EventHandler<FileDialogItemEventArgs> ItemSelected { add; remove; }\r\n    }\r\n    public sealed partial class FileDialogSeparator : FileDialogControl\r\n    {\r\n        public FileDialogSeparator();\r\n        public override object Clone();\r\n    }\r\n    public partial class FileDialogText : FileDialogControl\r\n    {\r\n        public FileDialogText();\r\n        public FileDialogText(string label);\r\n        public string Label { get; set; }\r\n        public override object Clone();\r\n    }\r\n    public sealed partial class FileDialogVisualGroup : FileDialogText\r\n    {\r\n        public FileDialogVisualGroup(string label);\r\n        public FileDialogVisualGroup(string label, params FileDialogControl[] controls);\r\n        public FileDialogControlCollection Controls { get; }\r\n        public void Add(FileDialogControl control);\r\n        public override object Clone();\r\n    }\r\n}\r\n```\r\n\r\n### API Usage\r\n\r\n```c#\r\nvar dialog = new SaveFileDialog();\r\ndialog.Filter = \"All files (*.*)|*.*\";\r\n\r\nvar radioGroup = new FileDialogVisualGroup(\"RadioButtonList\");\r\nradioGroup.Add(new FileDialogRadioButtonList(\"_radio 1\", \"r_adio 2\", \"ra_dio 3\"));\r\ndialog.CustomControls.Add(radioGroup);\r\n\r\nvar checkGroup = new FileDialogVisualGroup(\"CheckButtons\");\r\ncheckGroup.Add(new FileDialogCheckButton(\"_check 1\"));\r\ncheckGroup.Add(new FileDialogCheckButton(\"c_heck 2\", false));\r\ncheckGroup.Add(new FileDialogCheckButton(\"chec_k 3\", true));\r\ndialog.CustomControls.Add(checkGroup);\r\n\r\nvar menuGroup = new FileDialogVisualGroup(\"Menus and separator\");\r\nmenuGroup.Add(new FileDialogMenu(\"_menu 1\", \"item _1\", \"item _2\"));\r\nmenuGroup.Add(new FileDialogSeparator());\r\nmenuGroup.Add(new FileDialogMenu(\"m_enu 2\", \"item\"));\r\ndialog.CustomControls.Add(menuGroup);\r\n\r\nvar comboGroup = new FileDialogVisualGroup(\"ComboBoxes\");\r\ncomboGroup.Add(new FileDialogComboBox(\"item _1\", \"item &2\", \"item 3\"));\r\ncomboGroup.Add(new FileDialogComboBox(\"item _1\", \"item &2\", \"item 3\") { SelectedIndex = 1 });\r\ndialog.CustomControls.Add(comboGroup);\r\n\r\nvar textGroup = new FileDialogVisualGroup(\"Text and EditBo_x\");\r\ntextGroup.Add(new FileDialogText(\"Generic _label\"));\r\ntextGroup.Add(new FileDialogEditBox(\"a text box 😊\"));\r\ndialog.CustomControls.Add(textGroup);\r\n\r\nvar pushButton = new FileDialogPushButton(\"A button not in a _group\");\r\npushButton.Click += delegate { MessageBox.Show(\"Clicked!\"); };\r\ndialog.CustomControls.Add(pushButton);\r\n            \r\nvar prominentGroup = new FileDialogVisualGroup(\"Pro_minent control\", new FileDialogComboBox());\r\ndialog.CustomControls.Add(prominentGroup);\r\ndialog.CustomControls.Prominent = prominentGroup;\r\n\r\ndialog.OkButton.Items.Add(\"_Add\");\r\ndialog.OkButton.Items.Add(\"Add a_ll\");\r\ndialog.CancelButton.CustomLabel = \"_Done\";\r\n\r\ndialog.ShowDialog();\r\n```\r\n\r\n### Alternative Designs\r\n\r\n_No response_\r\n\r\n### Risks\r\n\r\nLow from the API surface perspective, this is all new functionality not changing the existing behavior.","Url":"https://github.com/dotnet/wpf/issues/7733","RelatedDescription":"Open issue \"[API Proposal]: File dialog controls\" (#7733)"},{"Id":"1671458634","IsPullRequest":false,"CreatedAt":"2023-04-17T15:31:00","Actor":"miloush","Number":"7732","RawContent":null,"Title":"[API Proposal]: BitmapEncoder.Save(string path) override","State":"open","Body":"### Background and motivation\r\n\r\n`BitmapEncoder.Save` only takes a `Stream`. This is a proposal to add an override that takes a file path, similar to how there is `XmlDocument.Save(Stream)` and `XmlDocument.Save(string)`.\r\n\r\n(The `BitmapDecoder` supports `Stream` and `Uri` sources.)\r\n\r\n### API Proposal\r\n\r\n```diff\r\nnamespace System.Windows.Media.Imaging\r\n{\r\n    public abstract partial class BitmapEncoder : DispatcherObject\r\n    {\r\n        protected BitmapEncoder() { }\r\n        public virtual BitmapCodecInfo CodecInfo { get; }\r\n        public virtual ReadOnlyCollection<System.Windows.Media.ColorContext> ColorContexts { get; set; }\r\n        public virtual IList<BitmapFrame> Frames { get; set; }\r\n        public virtual BitmapMetadata Metadata { get; set; }\r\n        public virtual BitmapPalette Palette { get; set; }\r\n        public virtual BitmapSource Preview { get; set; }\r\n        public virtual BitmapSource Thumbnail { get; set; }\r\n        public static BitmapEncoder Create(System.Guid containerFormat);\r\n        public virtual void Save(Stream stream);\r\n+       public void Save(string filename);\r\n    }\r\n}\r\n```\r\n\r\n### API Usage\r\n\r\n```csharp\r\nPngBitmapEncoder png = new();\r\npng.Frames.Add(image);\r\npng.Save(\"image.png\");\r\n```\r\n\r\ninstead of the currently required\r\n\r\n```csharp\r\nPngBitmapEncoder png = new();\r\npng.Frames.Add(image);\r\nusing (FileStream stream = File.Create(\"image.png\"))\r\n{\r\n    png.Save(stream);\r\n}\r\n```\r\n\r\n### Alternative Designs\r\n\r\n_No response_\r\n\r\n### Risks\r\n\r\nLow, no behavior changed, minimum size requirements.","Url":"https://github.com/dotnet/wpf/issues/7732","RelatedDescription":"Open issue \"[API Proposal]: BitmapEncoder.Save(string path) override\" (#7732)"},{"Id":"1670894481","IsPullRequest":true,"CreatedAt":"2023-04-17T10:42:57","Actor":"miloush","Number":"7730","RawContent":null,"Title":"Use TextAlignment for TextBox.GetCharacterIndexFromPoint","State":"open","Body":"Fixes #7651 \r\n\r\n## Description\r\n\r\nWhen text box (view) uses any text alignment different from left, `TextBox.GetCharacterIndexFromPoint` does not work: wherever the line bounds do not intersect with what would be a left-aligned line bounds, it returns -1.\r\n\r\nThe PR fixes the bug by taking into account text alignment when deciding whether a point is on a line or not.\r\n\r\n## Customer Impact\r\n\r\nCustomers not taking this fix cannot use `TextBox.GetCharacterIndexFromPoint` for text aligned to the right or centered.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt and tested with the repro in #7651, ensuring the characters do not get returned before the fix but correct characters get returned after the fix (using .NET 8.0.0-preview.3.23174.8).\r\n\r\n## Risk\r\n\r\nLow. Existing working behavior is not changed (the `GetContentOffset` returns 0). Slight performance hit for the extra calls and calculations, but only once - in the specific case of when `snapToText` is disabled and the relevant line is being tested.","Url":"https://github.com/dotnet/wpf/pull/7730","RelatedDescription":"Open PR \"Use TextAlignment for TextBox.GetCharacterIndexFromPoint\" (#7730)"},{"Id":"1670750959","IsPullRequest":true,"CreatedAt":"2023-04-17T09:13:52","Actor":"miloush","Number":"7729","RawContent":null,"Title":"Unblock AltGr+Oem2/5 typing inside ListBox","State":"open","Body":"Fixes #7641\r\n\r\n## Description\r\n\r\n`ListBox` and classes derived from it (notably `ListView`) are expected to _select all_ on <kbd>Ctrl</kbd>+<kbd>/</kbd> and _select item with focus_ on <kbd>Ctrl</kbd>+<kbd>\\\\</kbd>. However, the implementation only checks the status of the <kbd>Ctrl</kbd> modifier, not the others. As a result, this shortcut hijacks any other combination of keys, most importantly <kbd>Ctrl</kbd>+<kbd>Alt</kbd> which is used for typing on [around 60 keyboard layouts](http://kbdlayout.info/kbdus/shortcut/VK_OEM_2+VK_RMENU) that Windows ships.\r\n\r\nThis PR fixes the problem by limiting the shortcuts to what has been documented in the code comments as intent, i.e. they will work only when <kbd>Ctrl</kbd> is pressed and nothing else.\r\n\r\n## Customer Impact\r\n\r\nNot taking this fix prevents users from typing characters using these two keys on their keyboards into a `TextBox` or similar control inside `ListBox` or `ListView`.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt and verified using the repro in #7641 and Czech keyboard layout that typing is not possible without the fix and works with the fix (.NET 8.0.100-preview.3.23178.7)\r\n\r\n## Risk\r\n\r\nSelecting all and selecting the focused item is now limited to <kbd>Ctrl</kbd> only, while it used to work with any modifiers combination involving <kbd>Ctrl</kbd>.\r\n\r\nHowever, the current situation is serious - users cannot type. The former behavior is relatively easily achievable by deriving from the control and overriding `OnKeyDown`.","Url":"https://github.com/dotnet/wpf/pull/7729","RelatedDescription":"Open PR \"Unblock AltGr+Oem2/5 typing inside ListBox\" (#7729)"},{"Id":"1669979380","IsPullRequest":true,"CreatedAt":"2023-04-17T00:45:21","Actor":"sunmerx","Number":"7727","RawContent":null,"Title":"Mybuild0","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7727)","Url":"https://github.com/dotnet/wpf/pull/7727","RelatedDescription":"Closed or merged PR \"Mybuild0\" (#7727)"},{"Id":"1669982291","IsPullRequest":true,"CreatedAt":"2023-04-17T00:45:00","Actor":"sunmerx","Number":"7728","RawContent":null,"Title":"Sunmerx patch 1","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7728)","Url":"https://github.com/dotnet/wpf/pull/7728","RelatedDescription":"Closed or merged PR \"Sunmerx patch 1\" (#7728)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-25T03:30:32.1576166Z","RunDurationInMilliseconds":604}