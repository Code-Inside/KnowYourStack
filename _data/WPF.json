{"Data":{"GitHub":{"Issues":[{"Id":"1171883806","IsPullRequest":true,"CreatedAt":"2022-03-17T03:20:56","Actor":"ThomasGoulet73","Number":"6266","RawContent":null,"Title":"Disable Indeterminate animation when hiding ProgressBar","State":"open","Body":"Fixes dotnet/wpf#6264\r\n\r\n## Description\r\nDisable Indeterminate animation when hiding ProgressBar. Fixes a performance regression introduced in Aero2 theme (Windows 8 or newer)\r\n\r\n## Customer Impact\r\nBetter performance when hiding an indeterminate progress bar with the theme Aero2.\r\n\r\n## Regression\r\nPerformance regression introduced in Aero2 theme (Windows 8 or newer).\r\n\r\n## Testing\r\nTested with the sample in #6264 and a combination of Visibility and Indeterminate to validate that this PR does not break existing behavior.\r\n\r\n## Risk\r\nLow.","Url":"https://github.com/dotnet/wpf/pull/6266","RelatedDescription":"Open PR \"Disable Indeterminate animation when hiding ProgressBar\" (#6266)"},{"Id":"1171578487","IsPullRequest":true,"CreatedAt":"2022-03-16T22:22:34","Actor":"dotnet-maestro[bot]","Number":"6263","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220316.2\r\n- **Date Produced**: March 16, 2022 8:56:37 PM UTC\r\n- **Commit**: f2eb3f7f3cb5b024a560a0f8b51ed0f36d274d2d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22165.2 to 7.0.0-preview.3.22166.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22165.2 to 7.0.0-preview.3.22166.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.3.22165.1 to 7.0.0-preview.3.22166.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/7deb7cc...f2eb3f7\r\n[2]: https://github.com/dotnet/runtime/compare/bc5e386...a5f3f96\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6263","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6263)"},{"Id":"1171606060","IsPullRequest":true,"CreatedAt":"2022-03-16T22:08:16","Actor":"stephentoub","Number":"6265","RawContent":null,"Title":"Avoid unnecessary enumerator allocations in XamlDirective.GetHashCode","State":"open","Body":"## Description\r\n\r\nWe can just index into the ReadOnlyCollection rather than iterating it via IEnumerator.  We can also avoid unnecessary collection allocations when all of our internal usage that already has an immutable ReadOnlyCollection goes through the internal constructor.\r\n\r\n## Customer Impact\r\n\r\nThese XamlDirective instances are frequently stored in Dictionary's, resulting in every GetHashCode call by the dictionary allocating an enumerator.\r\n\r\n## Regression\r\n\r\nNo\r\n\r\n## Testing\r\n\r\nCI\r\n\r\n## Risk\r\n\r\nMinimal.","Url":"https://github.com/dotnet/wpf/pull/6265","RelatedDescription":"Open PR \"Avoid unnecessary enumerator allocations in XamlDirective.GetHashCode\" (#6265)"},{"Id":"1171600449","IsPullRequest":false,"CreatedAt":"2022-03-16T22:00:34","Actor":"ryanmolden","Number":"6264","RawContent":null,"Title":"WPF ProgressBars with IsIndeterminate = true appear to leak animations, since .NET 4.5","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`): All since .NET 4.5\r\n* Windows version: (`winver`): Any\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n**Problem description:** WPF's ProgressBar uses a well-known named template part (GlowingRectTemplateName which is == PART_GlowRect) in order to control the indeterminate animation. Specifically it wants to stop the animation when the control becomes invisible.\r\n\r\nSince aero2.normalcolor.xaml was introduced this no longer works as the template has no PART_GlowRect and instead triggers the animation based on the Indeterminate VisualState.\r\n\r\nSpecifically see \r\n\r\nCode here: https://github.com/dotnet/wpf/blob/89d172db0b7a192de720c6cfba5e28a1e7d46123/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/ProgressBar.cs#L62\r\n\r\nand here: https://github.com/dotnet/wpf/blob/89d172db0b7a192de720c6cfba5e28a1e7d46123/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/ProgressBar.cs#L220\r\n\r\nand template here (other templates have similar issues, other than aero.normalcolor.xaml): https://github.com/dotnet/wpf/blob/89d172db0b7a192de720c6cfba5e28a1e7d46123/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Aero2/Themes/Aero2.NormalColor.xaml#L4428\r\n\r\nThis means that for stock WPF ProgressBars with IsIndeterminate=True, the animations will run forever regardless of whether the animation is visible. This is esepcially bad on high-refresh rate monitors as the callbacks occur much more frequently and keep what could be an idle system non-idle preventing battery saving mode switches on laptops.\r\n \r\n**Actual behavior:** Animations run forever\r\n \r\n**Expected behavior:** Animations stop when the control becomes invisible, as the code appears to facilitate.\r\n \r\n**Minimal repro:**\r\n\r\nMainWindow.xaml\r\n\r\n```\r\n<Window x:Class=\"AnimationTestApp.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:AnimationTestApp\"\r\n        xmlns:system=\"clr-namespace:System;assembly=mscorlib\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n  <Grid Name=\"HostGrid\">\r\n    <Grid.ColumnDefinitions>\r\n      <ColumnDefinition/>\r\n    </Grid.ColumnDefinitions>\r\n    <Grid Grid.Column=\"0\" Name=\"HostElement_Collapsed\" Margin=\"10\" VerticalAlignment=\"Stretch\">\r\n      <ProgressBar Width=\"100\" Height=\"50\" IsIndeterminate=\"True\" VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\"/>\r\n    </Grid>\r\n  </Grid>\r\n</Window>\r\n\r\n``` \r\nMainWindow.xaml.cs\r\n \r\n```\r\nusing System.Threading.Tasks;\r\nusing System.Windows;\r\nusing System.Windows.Controls;\r\n \r\nnamespace AnimationTestApp\r\n{\r\n    public partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            \r\n            Task.Delay(2000).ContinueWith((t) =>\r\n                {\r\n                    return Dispatcher.InvokeAsync(() =>\r\n                        {\r\n                            Grid panel = (Grid)this.FindName(\"HostElement_Collapsed\");\r\n                            if (panel != null)\r\n                                panel.Visibility = Visibility.Collapsed;\r\n                        }).Task;\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n```\r\nPlacing a breakpoint on System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.GetCurrentValueCore  with a 'when hit' action that simply say prints a line to the debugger shows that even when the animation is invisible the callbacks continue.\r\n\r\nChanging the markup such that IsIndeterminate is bound to IsVisible and rerunning the repro with the same printing breakpoint shows then the animations stop as the control becomes invisible (as the VisualState = Indeterminate becomes no longer true)\r\n\r\n<ProgressBar Width=\"100\" Height=\"50\" IsIndeterminate=\"{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}\" VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\"/>","Url":"https://github.com/dotnet/wpf/issues/6264","RelatedDescription":"Open issue \"WPF ProgressBars with IsIndeterminate = true appear to leak animations, since .NET 4.5\" (#6264)"},{"Id":"1170505595","IsPullRequest":false,"CreatedAt":"2022-03-16T18:52:16","Actor":"sam-wheat","Number":"6261","RawContent":null,"Title":"Bindings for CommandParameter do not work","State":"closed","Body":"My control  contains a ListBox which I populate with an array of strings as shown below:\r\n\r\n\r\n\t<ControlTemplate TargetType=\"{x:Type local:DimensionButton}\">\r\n\t\t<Border Background=\"{TemplateBinding Background}\"\r\n\t\t\t\tDataContext=\"{Binding RelativeSource={RelativeSource AncestorType=local:DimensionButton}}\">\r\n\t\t\t<local:DropDownButton\r\n\t\t\t\tContent=\"{Binding Content}\" \r\n\t\t\t\tSelectedItem=\"{Binding SelectedItem}\"\r\n\t\t\t\tItemTemplate=\"{StaticResource DimensionButtonItemTemplate}\"\r\n\t\t\t\tStyle=\"{StaticResource ResourceKey=DropDownButtonStyle}\">\r\n\t\t\t\t<local:DropDownButton.ItemsSource>\r\n\t\t\t\t\t<x:Array Type=\"{x:Type sys:String}\">\r\n\t\t\t\t\t\t<sys:String>Sort Ascending</sys:String>\r\n\t\t\t\t\t\t<sys:String>Sort Descending</sys:String>\r\n\t\t\t\t\t\t<sys:String>Hide</sys:String>\r\n\t\t\t\t\t</x:Array>\r\n\t\t\t\t</local:DropDownButton.ItemsSource>\r\n\t\t\t</local:DropDownButton>\r\n\t\t</Border>\r\n\t</ControlTemplate>\r\n\r\n\t\r\n\r\nDataTemplate is shown below.  **The bindings for the `CheckBox.CommandParameter` do not work.  Why is that and how might I fix it?**  Note that Content and Action are both bound to the same string data item.  Content works - I can see it in the UI - but Action is always null as is DimensionID.\r\n\r\n\r\n\t<DataTemplate x:Key=\"DimensionButtonItemTemplate\">\r\n        <Border Background=\"Yellow\" Padding=\"10\">\r\n            <CheckBox Content=\"{Binding}\" // Works\r\n                      IsChecked=\"{Binding RelativeSource={RelativeSource AncestorType=local:DimensionButton}, Path=SortAscending}\" // Works\r\n                      Command=\"{Binding RelativeSource={RelativeSource AncestorType=local:MyControl}, Path=DimensionEventCommand}\" //Works\r\n                      >\r\n                <CheckBox.CommandParameter>\r\n                    <local:DimensionEventArgs \r\n                        DimensionID=\"{Binding RelativeSource={RelativeSource AncestorType=local:DimensionButton}, Path=Dimension.DisplayValue}\" // error can not find RelativeSource\r\n                        Action=\"{Binding}\"/> // No error msg in output but value is null\r\n                </CheckBox.CommandParameter>\r\n            </CheckBox>\r\n        </Border>\r\n    </DataTemplate>\r\n\t\r\n\r\nIt is interesting to note that when I put a breakpoint on the constructor of the DimensionEventArgs class (shown below) I see the object being constructed however the properties that are targets of the binding are null. \r\n \r\nAlso interesting to note that if the CommandParameter is set as follows it does contain a valid string:\r\n\r\n\t<CheckBox .... CommandParameter={Binding} />\r\n\r\n\r\n\r\nAs attempt to solve the above I tried creating the DimensionEventArgs objects in the list itself as shown below.  However this time the DimensionID binding does not work and nothing I try will fix it.  Error msg:\r\n\r\n> Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='...DimensionButton'\r\n\r\n\r\n\t<local:DropDownButton.ItemsSource>\r\n\t\t<x:Array Type=\"{x:Type local:DimensionEventArgs}\">\r\n\t\t\t<local:DimensionEventArgs Action=\"Sort Ascending\" DimensionID=\"{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DimensionButton}}, Path=Dimension.DisplayValue}\"/>\r\n\t\t\t<local:DimensionEventArgs Action=\"Sort Descending\" DimensionID=\"{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DimensionButton}}, Path=Dimension.DisplayValue}\"/>\r\n\t\t\t<local:DimensionEventArgs Action=\"Hide\" DimensionID=\"{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DimensionButton}}, Path=Dimension.DisplayValue}\"/>\r\n\t\t</x:Array>\r\n\t</local:DropDownButton.ItemsSource>\r\n\r\n\r\nModified the DataTemplate as follows:\r\n\r\n\t<DataTemplate x:Key=\"DimensionButtonItemTemplate\">\r\n\t\t<Border Background=\"Yellow\" Padding=\"10\">\r\n\t\t\t<CheckBox Content=\"{Binding Action}\" \r\n\t\t\t\t\t  IsChecked=\"{Binding RelativeSource={RelativeSource AncestorType=local:DimensionButton}, Path=SortAscending}\" \r\n\t\t\t\t\t  Command=\"{Binding RelativeSource={RelativeSource AncestorType=local:MyControl}, Path=DimensionEventCommand}\"\r\n\t\t\t\t\t  CommandParameter=\"{Binding}\">\r\n\t\t\t\t\r\n\t\t\t</CheckBox>\r\n\t\t</Border>\r\n\t</DataTemplate>\r\n\t\r\n\t\r\nDimensionEventArgs class:\t\r\n\t\r\n\tpublic class DimensionEventArgs  :Control\r\n\t{\r\n\r\n\t\t//  Dimension.DisplayName is guaranteed to be unique and is also the ID\r\n\t\tpublic string DimensionID\r\n\t\t{\r\n\t\t\tget { return (string)GetValue(DimensionIDProperty); }\r\n\t\t\tset { SetValue(DimensionIDProperty, value); }\r\n\t\t}\r\n\r\n\t\tpublic static readonly DependencyProperty DimensionIDProperty =\r\n\t\t\tDependencyProperty.Register(\"DimensionID\", typeof(string), typeof(DimensionEventArgs), new PropertyMetadata(null));\r\n\r\n\r\n\t\tpublic string Action\r\n\t\t{\r\n\t\t\tget { return (string)GetValue(ActionProperty); }\r\n\t\t\tset { SetValue(ActionProperty, value); }\r\n\t\t}\r\n\r\n\t\tpublic static readonly DependencyProperty ActionProperty =\r\n\t\t\tDependencyProperty.Register(\"Action\", typeof(string), typeof(DimensionEventArgs), new PropertyMetadata(null));\r\n\t}\r\n\r\n\r\nI appreciate any assistance.  \r\n\r\n\r\nVersions:\r\n\r\n\tC:\\Users\\sam>dotnet --info\r\n\t.NET SDK (reflecting any global.json):\r\n\t Version:   6.0.201\r\n\t Commit:    ef40e6aa06\r\n\r\n\tRuntime Environment:\r\n\t OS Name:     Windows\r\n\t OS Version:  10.0.19044\r\n\t OS Platform: Windows\r\n\t RID:         win10-x64\r\n\t Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.201\\\r\n\r\n\tHost (useful for support):\r\n\t  Version: 6.0.3\r\n\t  Commit:  c24d9a9c91\r\n\r\nVisual Studio 2022 17.1 latest.","Url":"https://github.com/dotnet/wpf/issues/6261","RelatedDescription":"Closed issue \"Bindings for CommandParameter do not work\" (#6261)"},{"Id":"1171042765","IsPullRequest":false,"CreatedAt":"2022-03-16T13:41:49","Actor":"sampath-narayanan","Number":"6262","RawContent":null,"Title":"Getting wrong size while calculate the size of contenttemplate. ","State":"open","Body":"* Windows version: 10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n **Problem description:**\r\n\r\n**What I'm doing**\r\nI have a contentcontrol in my window. I have loaded the content template to the contentcontrol. I have loaded the Expander control and ListView whose visibility is set to collapsed to the contenttemplate initially. In runtime when i click the expand button in the ExpanderControl, I will set the ListView visibility to visible. \r\n\r\n**Problem**\r\nI'm trying to calculate the size of the contenttemplate using following code. But I'm getting wrong size. \r\n\r\n```\r\nthis.control.Content = ItemTemplate1.ContentTemplate;\r\nthis.control.ContentTemplate = ItemTemplate1.ContentTemplate;\r\nthis.control.Measure(new Size());\r\nvar controlsize = Size.Empty;\r\nthis.control.Measure(new Size(double.PositiveInfinity, double.PositiveInfinity));\r\ncontrolsize = this.control.DesiredSize;\r\n```\r\n\r\nMean while if I set the listview visibility as visible in compile time itself, then I'm getting the correct size with same code shown above.\r\n\r\n**Gif :**\r\n\r\n![ezgif com-gif-maker (10)](https://user-images.githubusercontent.com/88649640/158601682-27c64191-d76f-4794-a5d9-2129c0f4e1bd.gif)\r\n\r\n **Actual behavior:** \r\n\r\nWhile calculating size of the content template whose visibility is set in runtime, we are getting wrong size as shown in the gif.\r\n \r\n **Expected behavior:**\r\n\r\nNeed to get the correct size of the content template.\r\n \r\n **Minimal repro:**\r\n\r\n1. Run the attached sample\r\n2. Expand the content template 1\r\n3. Click the button \"Template Height of ContentTemplate 1\"\r\n4. you will get a size of 31, 29.\r\n5. Click the button \"Template Height of ContentTemplate 2\"\r\n6. you will get a size of 402,429\r\n\r\nPlease find the sample from the attachment.\r\n[WpfApp2.zip](https://github.com/dotnet/wpf/files/8262591/WpfApp2.zip)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6262","RelatedDescription":"Open issue \"Getting wrong size while calculate the size of contenttemplate. \" (#6262)"},{"Id":"1170470623","IsPullRequest":true,"CreatedAt":"2022-03-16T02:41:42","Actor":"ThomasGoulet73","Number":"6260","RawContent":null,"Title":"[Managed DWrite] Migrate FontCollectionLoader to managed","State":"open","Body":"Contributes to #5305\r\nDepends on #6171\r\n\r\n## Description\r\nMigrate DWrite FontCollectionLoader to managed.\r\n\r\n## Customer Impact\r\nIt might be faster and should allow better support of trimming and the support of NativeAOT once everything is migrated to C#.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + CI + I tested a few apps that uses custom fonts to test this code path.\r\n\r\n## Risk\r\nLow. For the most part, it is a copy of the C++ code manually rewritten to C# with as little changes as possible.","Url":"https://github.com/dotnet/wpf/pull/6260","RelatedDescription":"Open PR \"[Managed DWrite] Migrate FontCollectionLoader to managed\" (#6260)"},{"Id":"1170256790","IsPullRequest":true,"CreatedAt":"2022-03-15T21:19:05","Actor":"dotnet-maestro[bot]","Number":"6259","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220315.2\r\n- **Date Produced**: March 15, 2022 8:26:36 PM UTC\r\n- **Commit**: 7deb7cca1efe8e3e9930d6c17bd1802f8f29fbcf\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22164.9 to 7.0.0-preview.3.22165.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22164.9 to 7.0.0-preview.3.22165.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.3.22163.2 to 7.0.0-preview.3.22165.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a2d4493...7deb7cc\r\n[2]: https://github.com/dotnet/runtime/compare/accf6fb...bc5e386\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6259","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6259)"},{"Id":"1170057549","IsPullRequest":false,"CreatedAt":"2022-03-15T18:52:50","Actor":"RaulFunezp","Number":"6258","RawContent":null,"Title":"Me too. A helping workaround is using a global.json in solution dir:","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/6258","RelatedDescription":"Closed issue \"Me too. A helping workaround is using a global.json in solution dir:\" (#6258)"},{"Id":"1169120195","IsPullRequest":true,"CreatedAt":"2022-03-15T03:16:29","Actor":"dotnet-maestro[bot]","Number":"6257","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220314.9\r\n- **Date Produced**: March 15, 2022 2:25:44 AM UTC\r\n- **Commit**: a2d4493edb0a6623d584d23895fd88185099b7e4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22164.8 to 7.0.0-preview.3.22164.9][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22164.8 to 7.0.0-preview.3.22164.9][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/09eb296...a2d4493\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6257","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6257)"},{"Id":"1169071502","IsPullRequest":true,"CreatedAt":"2022-03-15T01:33:51","Actor":"dotnet-maestro[bot]","Number":"6256","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220314.8\r\n- **Date Produced**: March 15, 2022 12:47:32 AM UTC\r\n- **Commit**: 09eb29692cb7c0c13bef50826d5fa6af97a683b6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22164.4 to 7.0.0-preview.3.22164.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22164.4 to 7.0.0-preview.3.22164.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ba73da8...09eb296\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6256","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6256)"},{"Id":"1168975671","IsPullRequest":true,"CreatedAt":"2022-03-14T22:49:40","Actor":"dotnet-maestro[bot]","Number":"6255","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220314.4\r\n- **Date Produced**: March 14, 2022 9:57:03 PM UTC\r\n- **Commit**: ba73da8eec5ff38342040e6298367c0da17c8081\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22161.1 to 7.0.0-preview.3.22164.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22161.1 to 7.0.0-preview.3.22164.4][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.3.22160.15 to 7.0.0-preview.3.22163.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/4b94463...ba73da8\r\n[2]: https://github.com/dotnet/runtime/compare/5ce2b9f...accf6fb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6255","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6255)"},{"Id":"1168628055","IsPullRequest":true,"CreatedAt":"2022-03-14T16:32:06","Actor":"bgrainger","Number":"6254","RawContent":null,"Title":"Eliminate memory copy when reading font data","State":"open","Body":"Fixes #6236\r\n\r\n## Description\r\n\r\nUsing a `<Resource>` font in WPF currently causes a lot of allocation, GC pinning, and memory copying. This is entirely avoidable by returning a pointer to the already-loaded font data to DWrite.\r\n\r\n## Customer Impact\r\n\r\nWithout this fix, customers are forced to hook DWrite APIs and supply their own font-loading implementation; e.g., https://faithlife.codes/blog/2019/06/improving-wpf-text-display-performance/.\r\n\r\n## Regression\r\n\r\nNot a regression.\r\n\r\n## Testing\r\n\r\nManual testing using a test app: https://github.com/bgrainger/EmbeddedFontPerformance\r\n\r\n## Risk\r\n\r\nRisk is low. This fix has been prototyped in a commercial WPF application that's been shipping for 5 years (see blog post above). Since the font source is an `UnmanagedMemoryStream`, we can rely on its data being present in memory at least as long as we hold a reference to the stream. (And since, practically speaking, the font data is backed by the assembly that contains it being mmap'ed into the process' address space, it's going to be safe to dereference it for the lifetime of the application.)\r\n","Url":"https://github.com/dotnet/wpf/pull/6254","RelatedDescription":"Open PR \"Eliminate memory copy when reading font data\" (#6254)"},{"Id":"1168330176","IsPullRequest":false,"CreatedAt":"2022-03-14T12:48:17","Actor":"redseujac75","Number":"6253","RawContent":null,"Title":"Tooltips are still broken in 6.0.3 - in some ways worse than before, is it possible the merge resolution was unsuccessful? Now tooltips seem to disappear everywhere. Run the popup-repro @ https://github.com/amirburbea/PopupRepro","State":"closed","Body":"Tooltips are still broken in 6.0.3 - in some ways worse than before, is it possible the merge resolution was unsuccessful? Now tooltips seem to disappear everywhere. Run the popup-repro @ https://github.com/amirburbea/PopupRepro\r\n\r\nChange the app between .NET5 & .NET6, check out tooltips in a ListBox (left) and in a ComboBox (right). It seems broken in both, whereas before it was only broken in the ComboBox.\r\n\r\n_Originally posted by @amirburbea in https://github.com/dotnet/wpf/issues/6063#issuecomment-1064069083_","Url":"https://github.com/dotnet/wpf/issues/6253","RelatedDescription":"Closed issue \"Tooltips are still broken in 6.0.3 - in some ways worse than before, is it possible the merge resolution was unsuccessful? Now tooltips seem to disappear everywhere. Run the popup-repro @ https://github.com/amirburbea/PopupRepro\" (#6253)"},{"Id":"1165665259","IsPullRequest":true,"CreatedAt":"2022-03-14T04:32:47","Actor":"dotnet-maestro[bot]","Number":"6241","RawContent":null,"Title":"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:934472a4-9da1-4b66-da04-08d961c27f17)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 934472a4-9da1-4b66-da04-08d961c27f17\r\n- **Build**: 20220311.2\r\n- **Date Produced**: March 12, 2022 1:33:54 AM UTC\r\n- **Commit**: c8d46e6b93f648dd15d27210af19b62f98205daa\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-rtm.22153.2 to 6.0.0-rtm.22161.2][2]\r\n\r\n[2]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC69a705c&targetVersion=GCc8d46e6&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:934472a4-9da1-4b66-da04-08d961c27f17)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6241","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#6241)"},{"Id":"1167463425","IsPullRequest":true,"CreatedAt":"2022-03-13T02:57:03","Actor":"lindexi","Number":"6252","RawContent":null,"Title":"Optimize the code of OSVersionHelper","State":"open","Body":"\r\n\r\n## Description\r\n\r\nWe can not run the WPF application in the system which version lower than win7. And it will return fast without call the RtlVerifyVersionInfo method.\r\n\r\n## Customer Impact\r\n\r\nImprove performance?\r\n\r\n## Regression\r\n\r\nNone.\r\n\r\n## Testing\r\n\r\nJust CI.\r\n\r\n## Risk\r\n\r\nLow.\r\n","Url":"https://github.com/dotnet/wpf/pull/6252","RelatedDescription":"Open PR \"Optimize the code of OSVersionHelper\" (#6252)"},{"Id":"1167297288","IsPullRequest":false,"CreatedAt":"2022-03-12T14:02:24","Actor":"deeprobin","Number":"6251","RawContent":null,"Title":"Unable to build WPF","State":"open","Body":"```\r\nE:\\external\\dotnet\\wpf>build.cmd -pack -ci -configuration Release -prepareMachine /p:Platform=x86\r\n\r\n// ...\r\n\r\n  UIAutomationTypes -> E:\\external\\dotnet\\wpf\\artifacts\\bin\\UIAutomationTypes\\Release\\net7.0\\UIAutomationTypes.dll\r\n  .NETCoreApp,Version=7.0.AssemblyAttributes.cpp\r\n  UIAutomationProvider-ref -> E:\\external\\dotnet\\wpf\\artifacts\\bin\\UIAutomationProvider-ref\\Release\\net7.0\\UIAutomation\r\n  Provider.dll\r\nLINK : fatal error LNK1104: cannot open file 'MSVCURT_netcore.LIB' [E:\\external\\dotnet\\wpf\\src\\Microsoft.DotNet.Wpf\\src\r\n\\DirectWriteForwarder\\DirectWriteForwarder.vcxproj]\r\n##vso[task.logissue type=error;sourcepath=LINK;linenumber=0;columnnumber=0;code=LNK1104;](NETCORE_ENGINEERING_TELEMETRY=Build) cannot open file 'MSVCURT_netcore.LIB'\r\n  UIAutomationClient-ref -> E:\\external\\dotnet\\wpf\\artifacts\\bin\\UIAutomationClient-ref\\Release\\net7.0\\UIAutomationClie\r\n  nt.dll\r\n  UIAutomationClientSideProviders-ref -> E:\\external\\dotnet\\wpf\\artifacts\\bin\\UIAutomationClientSideProviders-ref\\Relea\r\n  se\\net7.0\\UIAutomationClientSideProviders.dll\r\n  UIAutomationProvider -> E:\\external\\dotnet\\wpf\\artifacts\\bin\\UIAutomationProvider\\Release\\net7.0\\UIAutomationProvider\r\n  .dll\r\n  PresentationCore-ref -> E:\\external\\dotnet\\wpf\\artifacts\\bin\\PresentationCore-ref\\Release\\net7.0\\PresentationCore.dll\r\n\r\nFehler beim Buildvorgang.\r\n\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error : Fehler beim Abrufen von Informationen zu \"runtime.win-x86.Microsoft.DotNet.Wpf.DncEng\" aus der Remotequelle\r\n \"https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e760\r\n1/nuget/v3/flat2/runtime.win-x86.microsoft.dotnet.wpf.dnceng/index.json\". [E:\\external\\dotnet\\wpf\\artifacts\\obj\\effects\r\n\\Win32\\Release\\CppSupport\\CppSupport_effects.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error :   Fehler beim Senden der Anforderung. [E:\\external\\dotnet\\wpf\\artifacts\\obj\\effects\\Win32\\Release\\CppSuppor\r\nt\\CppSupport_effects.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error :   Die Verbindung mit dem Remoteserver kann nicht hergestellt werden. [E:\\external\\dotnet\\wpf\\artifacts\\obj\\\r\neffects\\Win32\\Release\\CppSupport\\CppSupport_effects.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error :   Ein Socketvorgang konnte nicht ausgeführt werden, da dem System Pufferspeicher fehlte oder eine Warteschl\r\nange voll war [E:\\external\\dotnet\\wpf\\artifacts\\obj\\effects\\Win32\\Release\\CppSupport\\CppSupport_effects.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error : Fehler beim Herunterladen von Paket \"runtime.win-x86.Microsoft.DotNet.Wpf.DncEng.7.0.0-preview.3.22118.1\" v\r\non \"https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/e31c6eea-0277-49f3-8194-142be67a9\r\nf72/nuget/v3/flat2/runtime.win-x86.microsoft.dotnet.wpf.dnceng/7.0.0-preview.3.22118.1/runtime.win-x86.microsoft.dotnet\r\n.wpf.dnceng.7.0.0-preview.3.22118.1.nupkg\". [E:\\external\\dotnet\\wpf\\artifacts\\obj\\DynamicCall\\Win32\\Release\\CppSupport\\\r\nCppSupport_DynamicCall.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error : Fehler beim Senden der Anforderung. [E:\\external\\dotnet\\wpf\\artifacts\\obj\\DynamicCall\\Win32\\Release\\CppSupp\r\nort\\CppSupport_DynamicCall.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error :   Die Verbindung mit dem Remoteserver kann nicht hergestellt werden. [E:\\external\\dotnet\\wpf\\artifacts\\obj\\\r\nDynamicCall\\Win32\\Release\\CppSupport\\CppSupport_DynamicCall.csproj]\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets(130,\r\n5): error :   Ein Socketvorgang konnte nicht ausgeführt werden, da dem System Pufferspeicher fehlte oder eine Warteschl\r\nange voll war [E:\\external\\dotnet\\wpf\\artifacts\\obj\\DynamicCall\\Win32\\Release\\CppSupport\\CppSupport_DynamicCall.csproj]\r\nLINK : fatal error LNK1104: cannot open file 'MSVCURT_netcore.LIB' [E:\\external\\dotnet\\wpf\\src\\Microsoft.DotNet.Wpf\\src\r\n\\DirectWriteForwarder\\DirectWriteForwarder.vcxproj]\r\n    0 Warnung(en)\r\n    3 Fehler\r\n\r\nVerstrichene Zeit 00:01:55.90\r\nBuild failed with exit code 1. Check errors above.\r\n```\r\n\r\nDo you have a solution for this problem?","Url":"https://github.com/dotnet/wpf/issues/6251","RelatedDescription":"Open issue \"Unable to build WPF\" (#6251)"},{"Id":"1166939349","IsPullRequest":true,"CreatedAt":"2022-03-11T22:57:49","Actor":"dotnet-maestro[bot]","Number":"6248","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220311.1\r\n- **Date Produced**: March 11, 2022 10:00:01 PM UTC\r\n- **Commit**: 4b944630e9d5678ddb3a9808e062e5173702db59\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22160.3 to 7.0.0-preview.3.22161.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22160.3 to 7.0.0-preview.3.22161.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.3.22159.12 to 7.0.0-preview.3.22160.15][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/564463d...4b94463\r\n[2]: https://github.com/dotnet/runtime/compare/7e7736d...5ce2b9f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6248","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6248)"},{"Id":"1166893477","IsPullRequest":false,"CreatedAt":"2022-03-11T21:31:28","Actor":"ryan-weil","Number":"6247","RawContent":null,"Title":"AssemblyLoadContext - Assemblies with WPF Window Cannot Be Unloaded","State":"open","Body":" **Problem description:**\r\nAssemblyLoadContext's unload method fails (does not garbage collect/unload the assembly) when the assembly has a WPF window. There is a thread about this issue [here in the main dotnet runtime GitHub](https://github.com/dotnet/runtime/issues/13226), but they recommended someone create a thread in the WPF GitHub .","Url":"https://github.com/dotnet/wpf/issues/6247","RelatedDescription":"Open issue \"AssemblyLoadContext - Assemblies with WPF Window Cannot Be Unloaded\" (#6247)"},{"Id":"1166775931","IsPullRequest":false,"CreatedAt":"2022-03-11T19:26:08","Actor":"vsfeedback","Number":"6246","RawContent":null,"Title":"Missing LostKeyboardFocus event in Windows 11","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Missing-LostKeyboardFocus-event-in-Windo/1678933)._\n\n---\nWhen the MainWindow's LostKeyboardFocus event is triggered in my WPF (bridge) app, i.e. when the user clicks the mouse outside my app, the MainWindow will be hidden with Hide() in the LostKeyboardFocus handler. If the user clicks the app icon in the taskbar another time, the new app instance sends a message to the already existing MainWindow, whereupon it shows itself again with Show(). The new app instance will then be closed.\n\nUnfortunately, under Windows 11, when the MainWindow is displayed again, the LostKeyboardFocus event is no longer triggered if the user clicks outside the MainWindow. However, under Windows 8.1 and under Windows 10, the LostKeyboardFocus event is triggered. Under Windows 11, only when the user clicks inside the app and then outside the app, the LostKeyboardFocus event is triggered and the MainWindow can be hidden again.\n\nI asked in the developer forum, but there the problem could not be reproduced. [https://docs.microsoft.com/en-us/answers/questions/746213/missing-lostkeyboardfocus-event-in-windows-11.html] ()\n\nSample project: [https://1drv.ms/u/s!AnJkahC5qjfigQTcZXXX36fj8ah9]()\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/28/2022, 10:46 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6246","RelatedDescription":"Open issue \"Missing LostKeyboardFocus event in Windows 11\" (#6246)"},{"Id":"1166766503","IsPullRequest":true,"CreatedAt":"2022-03-11T19:13:36","Actor":"AustinWise","Number":"6245","RawContent":null,"Title":"Fix setting DPI awareness","State":"open","Body":"## Description\r\n\r\nCurrently DPI awareness will be enabled *only if* a `DisableDpiAwarenessAttribute` attribute is applied to the entry assembly. Which does not make a lot of sense. This also does not match the behavior of .NET 6.\r\n\r\nThis PR changes the logic to always enable DPI awareness *unless* a `DisableDpiAwarenessAttribute` attribute is applied to the entry assembly.\r\n\r\n## Customer Impact\r\n\r\nWPF applications are not DPI aware. This can be seen by:\r\n\r\n```\r\ndotnet new wpf\r\ndotnet run\r\n```\r\n\r\nAnd then checking the DPI Awareness column in Task Manager. On .NET 6 the DPI awareness is \"System\". In .NET 7 preview 1, it is \"Unaware\".\r\n\r\n## Regression\r\n\r\nThis regression was introduced by #5765, which migrated the DPI awareness enablement code from C++ to C#.\r\n\r\n## Testing\r\n\r\n```\r\ndotnet new wpf\r\n```\r\n\r\nThen replace the contents of `MainWindow.xml.cs` with:\r\n\r\n```csharp\r\nusing System.Windows;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace test\r\n{\r\n    /// <summary>\r\n    /// Interaction logic for MainWindow.xaml\r\n    /// </summary>\r\n    public partial class MainWindow : Window\r\n    {\r\n        [DllImport(\"User32\", EntryPoint = \"IsProcessDPIAware\", CharSet = CharSet.Auto, SetLastError = true)]\r\n        internal static extern bool IsProcessDPIAware();\r\n\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            this.Title = IsProcessDPIAware().ToString();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResults of running this program on different versions of WPF:\r\n\r\n|.NET Version|title|\r\n|--|--|\r\n|6.0.3|True|\r\n|7 Preview 1|False|\r\n|This PR|True|\r\n\r\n## Risk\r\n\r\nLow.","Url":"https://github.com/dotnet/wpf/pull/6245","RelatedDescription":"Open PR \"Fix setting DPI awareness\" (#6245)"},{"Id":"1166297603","IsPullRequest":false,"CreatedAt":"2022-03-11T11:17:05","Actor":"trivalik","Number":"6244","RawContent":null,"Title":"BindingExpressionBase.ValidateWithoutUpdate does never validate","State":"open","Body":"* .NET Core Version: 6.0\r\n* Windows version: 21H2\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nAdding a ValidationRule in code behind (because it rely on a value which is not known on startup) does not update validation the intuition way. Try to get arround this and call `ValidationWithoutUpdate` does nothing.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nYou have to call UpdateSource() before ValidateWithoutUpdate()\r\n **Expected behavior:**\r\n ValidateWithoutUpdate() would update validation without require of UpdateSource()\r\n **Minimal repro:**\r\n\r\n```\r\n    public partial class MainWindow : Window\r\n    {\r\n        public class NameRule : ValidationRule\r\n        {\r\n            public int AdditionalInformationWhichWouldRequireBinding { get; set; }\r\n            public override ValidationResult Validate(object value, CultureInfo cultureInfo)\r\n            {\r\n                int age = 0;\r\n                try\r\n                {\r\n                    if (((string)value).Length > 0)\r\n                        age = int.Parse((String)value);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    return new ValidationResult(false, $\"Illegal characters or {e.Message}\");\r\n                }\r\n\r\n                if(AdditionalInformationWhichWouldRequireBinding < age)\r\n                    return new ValidationResult(false, $\"Illegal Range\");\r\n\r\n                return ValidationResult.ValidResult;\r\n            }\r\n        }\r\n\r\n        NameRule _nameRule;\r\n\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n\r\n            var binding = BindingOperations.GetBinding(txtNewName, TextBox.TextProperty);\r\n            var bindingex = BindingOperations.GetBindingExpression(txtNewName, TextBox.TextProperty);\r\n            var role = new NameRule();\r\n            binding.ValidationRules.Add(role);\r\n            _nameRule = role;\r\n            DataContextChanged += MainWindow_DataContextChanged;\r\n            DataContext = new NewViewModel\r\n            {\r\n                NewName = \"abc\"\r\n            };\r\n        }\r\n\r\n        private void MainWindow_DataContextChanged(object sender, DependencyPropertyChangedEventArgs e)\r\n        {\r\n            _nameRule.AdditionalInformationWhichWouldRequireBinding = ((NewViewModel)DataContext).RequiredForValidation;\r\n            var binding = BindingOperations.GetBindingExpression(txtNewName, TextBox.TextProperty);\r\n\r\n            binding.UpdateSource();\r\n            binding.ValidateWithoutUpdate();\r\n        }\r\n    }\r\n\r\n    class NewViewModel : INotifyPropertyChanged\r\n    {\r\n        private string newName;\r\n\r\n        public string NewName { get => newName;\r\n            set {\r\n                newName = value;\r\n                PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(NewName)));\r\n            }\r\n        }\r\n\r\n        public int RequiredForValidation { get; set; }\r\n\r\n        public event PropertyChangedEventHandler? PropertyChanged;\r\n    }\r\n}\r\n```\r\n\r\nXAML:\r\n```\r\n<TextBox x:Name=\"txtNewName\" Text=\"{Binding NewName}\"/>\r\n```\r\n\r\nAdditional:\r\n- The first value which is validated in above example is `string.Empty` not `\"abc\"`.\r\n- if ValidationResult.ValidResult is returned `ValidateWithoutUpdate` throws NullReferenceException\r\n```\r\n   at System.Windows.Data.BindingExpression.ConvertProposedValue(Object value)\r\n   at System.Windows.Data.BindingExpression.ValidateAndConvertProposedValue(Collection`1& values)\r\n   at System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate()\r\n   at WpfNet6Test.MainWindow.MainWindow_DataContextChanged(Object sender, DependencyPropertyChangedEventArgs e)\r\n```\r\n- Solution would be to wait until Expression is activated and delay force valdiation with:\r\n```\r\nDispatcher.BeginInvoke(DispatcherPriority.Normal, new Action(ForceValidation));\r\n\r\n        private void ForceValidation()\r\n        {\r\n            var binding = BindingOperations.GetBindingExpression(txtNewName, TextBox.TextProperty);\r\n            binding.UpdateSource();\r\n        }\r\n```\r\nbut `ValidateWithoutUpdate` is still without function.\r\n","Url":"https://github.com/dotnet/wpf/issues/6244","RelatedDescription":"Open issue \"BindingExpressionBase.ValidateWithoutUpdate does never validate\" (#6244)"},{"Id":"1165703122","IsPullRequest":true,"CreatedAt":"2022-03-10T21:14:17","Actor":"dotnet-maestro[bot]","Number":"6243","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220310.3\r\n- **Date Produced**: March 10, 2022 7:52:53 PM UTC\r\n- **Commit**: 564463d2c266342313ba4a3a25d09b7f154efba1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22160.2 to 7.0.0-preview.3.22160.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22160.2 to 7.0.0-preview.3.22160.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f3137b7...564463d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6243","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6243)"},{"Id":"1165682034","IsPullRequest":true,"CreatedAt":"2022-03-10T20:48:42","Actor":"dotnet-maestro[bot]","Number":"6242","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220310.2\r\n- **Date Produced**: March 10, 2022 7:52:59 PM UTC\r\n- **Commit**: f3137b707606a8b3dc4d173e49bf60b2caa65e12\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22160.1 to 7.0.0-preview.3.22160.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22160.1 to 7.0.0-preview.3.22160.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.3.22158.2 to 7.0.0-preview.3.22159.12][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/3dfd257...f3137b7\r\n[2]: https://github.com/dotnet/runtime/compare/8342a08...7e7736d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6242","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6242)"},{"Id":"1165580100","IsPullRequest":true,"CreatedAt":"2022-03-10T18:35:54","Actor":"dotnet-maestro[bot]","Number":"6240","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20220311.1\r\n- **Date Produced**: March 11, 2022 9:02:12 PM UTC\r\n- **Commit**: 879df783283dfb44c7653493fdf7fd7b07ba6b01\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.22122.7 to 6.0.0-beta.22161.1][2]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22122.7 to 6.0.0-beta.22161.1][2]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.22122.7 to 6.0.0-beta.22161.1][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.22122.7 to 6.0.0-beta.22161.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22122.7 to 6.0.0-beta.22161.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/7215d82...879df78\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6240","RelatedDescription":"Open PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6240)"},{"Id":"1165101112","IsPullRequest":true,"CreatedAt":"2022-03-10T11:48:25","Actor":"dotnet-maestro[bot]","Number":"6239","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220310.1\r\n- **Date Produced**: March 10, 2022 11:01:17 AM UTC\r\n- **Commit**: 3dfd257f55843fbb2c9127d7febc538db4cffcd2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22159.3 to 7.0.0-preview.3.22160.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22159.3 to 7.0.0-preview.3.22160.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8ff1ac0...3dfd257\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6239","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6239)"},{"Id":"1164782337","IsPullRequest":true,"CreatedAt":"2022-03-10T07:42:11","Actor":"trivalik","Number":"6238","RawContent":null,"Title":"fix typo \"forthe\"","State":"closed","Body":"fix typo \"forthe\", no risk\r\n","Url":"https://github.com/dotnet/wpf/pull/6238","RelatedDescription":"Closed or merged PR \"fix typo \"forthe\"\" (#6238)"},{"Id":"1164742544","IsPullRequest":true,"CreatedAt":"2022-03-10T04:35:59","Actor":"dotnet-maestro-bot","Number":"6237","RawContent":null,"Title":"[automated] Merge branch 'release/3.1' => 'main'","State":"open","Body":"I detected changes in the release/3.1 branch which have not been merged yet to main. I'm a robot and am [configured](https://github.com/dotnet/versions/blob/main/Maestro/subscriptions.json) to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1 by the following committers:\n\n* vseanreesermsft\n* dotnet-maestro[bot]\n* dipeshmsft\n* dotnet-bot\n* ryalanms\n* jonfortescue\n* wtgodbe\n* SamBent\n* mmitche\n* ChadNedzlek\n* arpitmathur\n* rladuca\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/wpf merge/release/3.1-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/wpf merge/release/3.1-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/wpf/pull/6237","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1' => 'main'\" (#6237)"},{"Id":"1164574457","IsPullRequest":false,"CreatedAt":"2022-03-09T23:53:31","Actor":"bgrainger","Number":"6236","RawContent":null,"Title":"Poor performance for `<Resource>` fonts","State":"open","Body":"* .NET Version: 6.0\r\n* Windows version: Windows 10 21H2 (19044.1526)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:**\r\n\r\nWhen using a font that is embedded as a `<Resource>` (see [fonts as resource items](https://docs.microsoft.com/en-us/dotnet/desktop/wpf/advanced/packaging-fonts-with-applications?view=netframeworkdesktop-4.8#adding-fonts-as-resource-items)), the performance of rendering text can be extremely poor.\r\n\r\nThis was first noted in a production .NET 4.8 WPF Application; a detailed writeup of the problem and a solution that was found is at https://faithlife.codes/blog/2019/06/improving-wpf-text-display-performance/.\r\n \r\n **Actual behavior:**\r\n\r\ndotTrace shows that very large amounts of time are spent in `MS.Internal.Text.TextInterface.FontFileStream.ReadFileFragment`. Additionally, large amounts of memory are allocated and the program spends a lot of time in GC.\r\n\r\n![image](https://user-images.githubusercontent.com/188129/157559025-b8fbe90b-aab3-401e-8779-84f1159c066f.png)\r\n \r\n **Expected behavior:**\r\n\r\nRendering a `<Resource>` font is extremely efficient because the resource is already mmap'ed into memory and returning its data could be as simple as a pointer addition.\r\n \r\n **Minimal repro:**\r\n\r\nAn example repro is at https://github.com/bgrainger/EmbeddedFontPerformance. Clone the repo, build the code, and scroll the text box. You'll notice that it can take several seconds to draw the next screen of text (depending on how large the window is).\r\n\r\nThe following text complements that repo and describes how it reproduces the problem:\r\n\r\nThis reproduces most easily with the [Noto Sans CJK font](https://github.com/googlefonts/noto-cjk) (perhaps because of the large number of glyphs that have to be read?).\r\n\r\nEmbed the font:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <Resource Include=\"NotoSansCJKtc-Regular.otf\" />\r\n  </ItemGroup>\r\n```\r\n\r\nThen create a text box that references the font and contains a large amount of Chinese text:\r\n\r\n```xml\r\n    <Grid>\r\n        <ScrollViewer>\r\n            <TextBlock FontFamily=\"./#Noto Sans CJK TC\" TextWrapping=\"Wrap\">\r\n            <!-- place Chinese text here -->\r\n            </TextBlock>\r\n        </ScrollViewer>\r\n    </Grid>\r\n```\r\n\r\nRun the app and scroll the ScrollViewer.","Url":"https://github.com/dotnet/wpf/issues/6236","RelatedDescription":"Open issue \"Poor performance for `<Resource>` fonts\" (#6236)"},{"Id":"1164381750","IsPullRequest":true,"CreatedAt":"2022-03-09T20:26:39","Actor":"dotnet-maestro[bot]","Number":"6235","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220309.3\r\n- **Date Produced**: March 9, 2022 7:35:56 PM UTC\r\n- **Commit**: 8ff1ac0c439a7c876583b65a90b5862b840ffa7d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22159.2 to 7.0.0-preview.3.22159.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22159.2 to 7.0.0-preview.3.22159.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/de16144...8ff1ac0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6235","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6235)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-03-17T03:30:28.8140233Z","RunDurationInMilliseconds":474}