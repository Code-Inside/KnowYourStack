{"Data":{"GitHub":{"Issues":[{"Id":"3336319229","IsPullRequest":true,"CreatedAt":"2025-08-20T02:13:03","Actor":"dotnet-maestro[bot]","Number":"11061","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"open","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [f1124ab6-1481-4f33-a146-eb9bc5b1b331](https://maestro.dot.net/subscriptions?search=f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n- **Build**: [20250819.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2775489)\n- **Date Produced**: August 19, 2025 10:18:34 PM UTC\n- **Commit**: [04752cb2abae96e13adee371bf45a334fc7a32d2](https://github.com/dotnet/dotnet/commit/04752cb2abae96e13adee371bf45a334fc7a32d2)\n- **Commit Diff**: [5c3434d...04752cb](https://github.com/dotnet/dotnet/compare/5c3434d8b831745673c31e186906f463e1036301...04752cb2abae96e13adee371bf45a334fc7a32d2)\n- **Branch**: [main](https://github.com/dotnet/dotnet/tree/main)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25418.105 to 10.0.0-beta.25419.104][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.1.25418.105 to 10.0.0-rc.1.25419.104][1]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Private.Windows.Core.TestUtilities\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n\n[1]: https://github.com/dotnet/dotnet/compare/5c3434d8b8...04752cb2ab\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/e58b086a85a1df5762c8980308f7e4e330edd0aa...5bb3e45c964be0076b22510ce60218284c7bba53\n- https://github.com/dotnet/aspnetcore/compare/d757bfd514024f4403f6bb2fb5bb4894337a54d8...334fe40eecd4e8d5c73c0486fc188f07639018da\n- https://github.com/dotnet/msbuild/compare/c4c851ab59a0e6a5521e1910eeff8f57c8d3f6b4...b85b8a5813da73efd3920c98a03d1c7666c83006\n- https://github.com/dotnet/runtime/compare/10bc77650ffd5462f9b66cbc8f631460e722c74f...090dd070138d70eb4397ba5fdc1f525e3331b75f\n- https://github.com/dotnet/sdk/compare/b4882e0c3d6794aacc7b3ce645e3da0cde0f7aeb...7adbd114e3d8e44e518f0e811622048d3b98108c\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11061)","Url":"https://github.com/dotnet/wpf/pull/11061","RelatedDescription":"Open PR \"[main] Source code updates from dotnet/dotnet\" (#11061)"},{"Id":"3334523464","IsPullRequest":false,"CreatedAt":"2025-08-19T14:03:36","Actor":"vsfeedback","Number":"11060","RawContent":null,"Title":"Issue: protobuf-net.BuildTools Not Generating C# from .proto in WPF .NET 8.0 Project","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Issue:-protobuf-netBuildTools-Not-Gener/10945475)._\n\n---\nEnvironment:\n\nProject type: WPF (.NET 8.0)\nUsing protobuf-net v3.2.56 and protobuf-net. BuildTools v3.2.52 via NuGet\nproto file placed under Protos\\messages.proto\nVisual Studio 2022 (latest version)\n\nI dunno whats wrong, my .csproj includes:\n```\n&lt;ItemGroup&gt;\n  &lt;Protobuf Include=\"Protos\\messages.proto\" ProtoRoot=\"Protos\" /&gt;\n  &lt;AdditionalFiles Include=\"Protos\\messages.proto\" /&gt;\n&lt;/ItemGroup&gt;\n```\n\nI also set Build Action = C# analyzer additional file in the properties for messages.proto, no build errors from the generator, but no generated .cs appears under obj/Debug/net8.0-windows/protobuf-net/;  I confirmed that protobuf-net. BuildTools is installed and referenced properly.\n\nAny idea why source generator isn't running?\nare there specific limitations for WPF or .NET 8 SDK-style projects? is there a known workaround for forcing code generation in such cases?\n\nThanks!\n\n---\n### Original Comments\n\n#### Ankit Virdi on 7/31/2025, 04:44 PM: \n\n<p>I checked the documentation for Protobuf, it doesnt mention .NET 8.00 so I tried it with 6.0 Framework, didn’t work? I should probably redo the whole project from scratch in a .NET 6.0 template?</p>\n\n#### Feedback Bot on 8/1/2025, 05:22 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/11060","RelatedDescription":"Open issue \"Issue: protobuf-net.BuildTools Not Generating C# from .proto in WPF .NET 8.0 Project\" (#11060)"},{"Id":"3334260663","IsPullRequest":false,"CreatedAt":"2025-08-19T12:49:03","Actor":"lindexi","Number":"11059","RawContent":null,"Title":"Bug in calculation algorithm of IncrementalStrokeHitTester","State":"open","Body":"### Description\n\nThere is a calculation error in WPF’s IncrementalStrokeHitTester. Occasionally, when I use IncrementalStrokeHitTester and provide an eraser trajectory that should only split the stroke into two new strokes, the whole stroke is erased instead.\n\nI have managed to reproduce this issue with a minimal test case. Using the following data:\n\n```\n{X=445.3333333333333,Y=456,P=0.7618542313575745},\n{X=448,Y=456,P=0.7618542313575745},\n{X=450,Y=455.3333333333333,P=0.7742698192596436},\n{X=452,Y=455.3333333333333,P=0.7923250794410706},\n{X=454,Y=455.3333333333333,P=0.7947957515716553},\n{X=456,Y=455.3333333333333,P=0.7871016263961792},\n{X=458,Y=455.3333333333333,P=0.7873656749725342},\n{X=460,Y=455.3333333333333,P=0.7871317267417908},\n{X=462,Y=455.3333333333333,P=0.7867388129234314},\n{X=464.66666666666663,Y=456,P=0.7443132400512695},\n{X=466.66666666666663,Y=456,P=0.7917653322219849},\n{X=468.66666666666663,Y=456.66666666666663,P=0.7867511510848999},\n{X=472,Y=456.66666666666663,P=0.7043896913528442},\n{X=474,Y=457.3333333333333,P=0.7800122499465942},\n{X=476,Y=457.3333333333333,P=0.7910786271095276},\n{X=478,Y=458,P=0.7841806411743164},\n{X=482,Y=458.66666666666663,P=0.6613860726356506},\n{X=484.66666666666663,Y=459.3333333333333,P=0.7315411567687988},\n{X=486.66666666666663,Y=460,P=0.7758287191390991},\n{X=488.66666666666663,Y=460,P=0.785304844379425},\n{X=492,Y=460.66666666666663,P=0.6987720131874084},\n{X=496,Y=461.3333333333333,P=0.6533879637718201},\n{X=500,Y=462,P=0.6456292271614075},\n{X=503.3333333333333,Y=462,P=0.6683430075645447},\n{X=505.3333333333333,Y=462.66666666666663,P=0.7513852119445801},\n{X=510,Y=463.3333333333333,P=0.5926470756530762},\n{X=514,Y=464,P=0.621231198310852},\n{X=516,Y=464.66666666666663,P=0.7479339241981506},\n{X=518,Y=465.3333333333333,P=0.7547337412834167},\n{X=520.6666666666666,Y=465.3333333333333,P=0.7243622541427612},\n{X=526.6666666666666,Y=466,P=0.5270907282829285},\n{X=529.3333333333333,Y=467.3333333333333,P=0.6958931684494019},\n{X=534,Y=468,P=0.6012994050979614},\n{X=538,Y=468.66666666666663,P=0.6275204420089722},\n{X=542.6666666666666,Y=469.3333333333333,P=0.5978454351425171},\n{X=546,Y=470,P=0.6662331819534302},\n{X=552.6666666666666,Y=470.66666666666663,P=0.5002615451812744},\n{X=555.3333333333333,Y=471.3333333333333,P=0.6958120465278625},\n{X=562,Y=472,P=0.4994753301143646},\n{X=567.3333333333333,Y=472.66666666666663,P=0.5455721616744995},\n{X=573.3333333333333,Y=474,P=0.5134470462799072},\n{X=580.6666666666666,Y=474.66666666666663,P=0.4518575370311737},\n{X=585.3333333333333,Y=475.3333333333333,P=0.5670377612113953},\n{X=589.3333333333333,Y=476,P=0.609724223613739},\n{X=594.6666666666666,Y=476.66666666666663,P=0.5481007099151611},\n{X=601.3333333333333,Y=477.3333333333333,P=0.4885927140712738},\n{X=606.6666666666666,Y=478,P=0.5432637929916382},\n{X=610,Y=478.66666666666663,P=0.6355723142623901},\n{X=616.6666666666666,Y=479.3333333333333,P=0.47008851170539856},\n{X=622,Y=480,P=0.5248528122901917},\n{X=628.6666666666666,Y=480,P=0.46539586782455444},\n{X=636.6666666666666,Y=480.66666666666663,P=0.39966750144958496},\n{X=642,Y=480.66666666666663,P=0.509570300579071},\n{X=647.3333333333333,Y=482,P=0.5069840550422668},\n{X=652,Y=482,P=0.56694495677948},\n{X=654,Y=482,P=0.7375491857528687},\n{X=662,Y=482.66666666666663,P=0.4425170123577118},\n{X=666.6666666666666,Y=482.66666666666663,P=0.5797702074050903},\n{X=669.3333333333333,Y=482.66666666666663,P=0.7043377757072449},\n{X=676,Y=482.66666666666663,P=0.49506327509880066},\n{X=680,Y=482.66666666666663,P=0.6218303442001343},\n{X=684.6666666666666,Y=482.66666666666663,P=0.5944092869758606},\n{X=689.3333333333333,Y=482.66666666666663,P=0.5880598425865173},\n{X=694,Y=482.66666666666663,P=0.5764558911323547},\n{X=696,Y=482.66666666666663,P=0.7410839796066284},\n{X=700,Y=482.66666666666663,P=0.626220166683197},\n{X=704,Y=482.66666666666663,P=0.6229243278503418},\n{X=707.3333333333333,Y=482.66666666666663,P=0.6664982438087463},\n{X=714.6666666666666,Y=482.66666666666663,P=0.45310068130493164},\n{X=720.6666666666666,Y=482.66666666666663,P=0.4970242381095886},\n{X=724,Y=482.66666666666663,P=0.6377686858177185},\n{X=728.6666666666666,Y=482.66666666666663,P=0.5830304622650146},\n{X=733.3333333333333,Y=482,P=0.5852826237678528},\n{X=735.3333333333333,Y=482,P=0.7534965872764587},\n{X=739.3333333333333,Y=481.3333333333333,P=0.6395262479782104},\n{X=742,Y=481.3333333333333,P=0.7220669984817505},\n{X=746,Y=480.66666666666663,P=0.6478912830352783},\n{X=750,Y=480,P=0.6395424604415894},\n{X=754,Y=478.66666666666663,P=0.629923403263092},\n{X=759.3333333333333,Y=478,P=0.5632662177085876},\n{X=762.6666666666666,Y=477.3333333333333,P=0.6644474864006042},\n{X=765.3333333333333,Y=476.66666666666663,P=0.7117174863815308},\n{X=768.6666666666666,Y=476,P=0.6776741743087769},\n{X=773.3333333333333,Y=474.66666666666663,P=0.5986015200614929},\n{X=777.3333333333333,Y=473.3333333333333,P=0.6267250180244446},\n{X=781.3333333333333,Y=471.3333333333333,P=0.6099798679351807},\n{X=784.6666666666666,Y=470.66666666666663,P=0.6539067625999451},\n{X=790.6666666666666,Y=468.66666666666663,P=0.49772119522094727},\n{X=792.6666666666666,Y=468,P=0.7275203466415405},\n{X=796,Y=466.66666666666663,P=0.6488282680511475},\n{X=800,Y=465.3333333333333,P=0.6072457432746887},\n{X=804,Y=463.3333333333333,P=0.5964605212211609},\n{X=807.3333333333333,Y=462,P=0.6561574339866638},\n{X=810,Y=460.66666666666663,P=0.6968104839324951},\n{X=813.3333333333333,Y=458.66666666666663,P=0.6486343741416931},\n{X=818,Y=456.66666666666663,P=0.5831184983253479},\n{X=820.6666666666666,Y=455.3333333333333,P=0.6963025331497192},\n{X=822.6666666666666,Y=454,P=0.7399721741676331},\n{X=825.3333333333333,Y=452.66666666666663,P=0.7092769145965576},\n{X=828.6666666666666,Y=451.3333333333333,P=0.6766396164894104},\n{X=833.3333333333333,Y=448.66666666666663,P=0.5740551948547363},\n{X=835.3333333333333,Y=447.3333333333333,P=0.7345168590545654},\n{X=837.3333333333333,Y=446.66666666666663,P=0.7650047540664673},\n{X=840.6666666666666,Y=445.3333333333333,P=0.6749776005744934},\n{X=844.6666666666666,Y=442.66666666666663,P=0.5888175368309021},\n{X=848.6666666666666,Y=440.66666666666663,P=0.5972996354103088},\n{X=852,Y=438.66666666666663,P=0.6244710683822632},\n{X=854,Y=437.3333333333333,P=0.7188596725463867},\n{X=856.6666666666666,Y=436,P=0.6917470097541809},\n{X=858.6666666666666,Y=434.66666666666663,P=0.7351683378219604},\n{X=862.6666666666666,Y=432.66666666666663,P=0.6261351704597473},\n{X=864.6666666666666,Y=431.3333333333333,P=0.7430726289749146},\n{X=866.6666666666666,Y=430.66666666666663,P=0.7724213600158691},\n{X=868.6666666666666,Y=429.3333333333333,P=0.7554715871810913},\n{X=871.3333333333333,Y=428.66666666666663,P=0.7384610176086426},\n{X=875.3333333333333,Y=426.66666666666663,P=0.6147278547286987},\n{X=877.3333333333333,Y=426,P=0.7556149363517761},\n{X=880,Y=425.3333333333333,P=0.7179256677627563},\n{X=882,Y=424.66666666666663,P=0.7604349851608276},\n{X=884,Y=424,P=0.7805911302566528},\n{X=886,Y=423.3333333333333,P=0.7828847765922546},\n{X=888,Y=422.66666666666663,P=0.78639817237854},\n{X=890,Y=422,P=0.7878957390785217},\n{X=892,Y=421.3333333333333,P=0.7883377075195312},\n{X=894,Y=421.3333333333333,P=0.7963496446609497},\n{X=896,Y=421.3333333333333,P=0.7972534894943237},\n{X=898,Y=420.66666666666663,P=0.7801092267036438},\n{X=900,Y=420.66666666666663,P=0.7869842052459717},\n{X=902,Y=420.66666666666663,P=0.7963632345199585},\n{X=904,Y=420,P=0.7890701293945312},\n{X=906,Y=420,P=0.7968790531158447},\n{X=908,Y=420,P=0.8703685998916626},\n```\n\nWhen passing the point (684.9383585999957, 446.44199735085795) to IncrementalStrokeHitTester, it erases the entire stroke. However, using `Stroke.GetEraseResult` with the same input correctly returns two segments as expected.\n\nHere is my minimal reproduction demo code (full project uploaded to GitHub: https://github.com/lindexi/lindexi_gd/tree/7f7f914c05829be1feb090ab05b0514df4e46e97/WPFDemo/RarlereninemniBohinabairhalljere ):\n\n```csharp\n        var stylusPointCollection = GetTestData();\n\n        var stroke = new Stroke(stylusPointCollection);\n     \n        var x = 684.9383585999957;\n        var y = 446.44199735085795;\n\n        var strokeCollection = new StrokeCollection([stroke]);\n        var rectangleStylusShape = new RectangleStylusShape(50, 70);\n        var incrementalStrokeHitTester = strokeCollection.GetIncrementalStrokeHitTester(rectangleStylusShape);\n\n        var point = new Point(x, y);\n\n        incrementalStrokeHitTester.StrokeHit += (o, args) =>\n        {\n            var pointEraseResults = args.GetPointEraseResults();\n            if (pointEraseResults.Count == 0)\n            {\n                Debugger.Break();\n\n                GC.KeepAlive(point);\n            }\n        };\n\n        incrementalStrokeHitTester.AddPoint(point);\n\n    private static StylusPointCollection GetTestData()\n    {\n        var test =\n            \"\"\"\n            {X=445.3333333333333,Y=456,P=0.7618542313575745},\n            {X=448,Y=456,P=0.7618542313575745},\n            {X=450,Y=455.3333333333333,P=0.7742698192596436},\n            {X=452,Y=455.3333333333333,P=0.7923250794410706},\n            {X=454,Y=455.3333333333333,P=0.7947957515716553},\n            {X=456,Y=455.3333333333333,P=0.7871016263961792},\n            {X=458,Y=455.3333333333333,P=0.7873656749725342},\n            {X=460,Y=455.3333333333333,P=0.7871317267417908},\n            {X=462,Y=455.3333333333333,P=0.7867388129234314},\n            {X=464.66666666666663,Y=456,P=0.7443132400512695},\n            {X=466.66666666666663,Y=456,P=0.7917653322219849},\n            {X=468.66666666666663,Y=456.66666666666663,P=0.7867511510848999},\n            {X=472,Y=456.66666666666663,P=0.7043896913528442},\n            {X=474,Y=457.3333333333333,P=0.7800122499465942},\n            {X=476,Y=457.3333333333333,P=0.7910786271095276},\n            {X=478,Y=458,P=0.7841806411743164},\n            {X=482,Y=458.66666666666663,P=0.6613860726356506},\n            {X=484.66666666666663,Y=459.3333333333333,P=0.7315411567687988},\n            {X=486.66666666666663,Y=460,P=0.7758287191390991},\n            {X=488.66666666666663,Y=460,P=0.785304844379425},\n            {X=492,Y=460.66666666666663,P=0.6987720131874084},\n            {X=496,Y=461.3333333333333,P=0.6533879637718201},\n            {X=500,Y=462,P=0.6456292271614075},\n            {X=503.3333333333333,Y=462,P=0.6683430075645447},\n            {X=505.3333333333333,Y=462.66666666666663,P=0.7513852119445801},\n            {X=510,Y=463.3333333333333,P=0.5926470756530762},\n            {X=514,Y=464,P=0.621231198310852},\n            {X=516,Y=464.66666666666663,P=0.7479339241981506},\n            {X=518,Y=465.3333333333333,P=0.7547337412834167},\n            {X=520.6666666666666,Y=465.3333333333333,P=0.7243622541427612},\n            {X=526.6666666666666,Y=466,P=0.5270907282829285},\n            {X=529.3333333333333,Y=467.3333333333333,P=0.6958931684494019},\n            {X=534,Y=468,P=0.6012994050979614},\n            {X=538,Y=468.66666666666663,P=0.6275204420089722},\n            {X=542.6666666666666,Y=469.3333333333333,P=0.5978454351425171},\n            {X=546,Y=470,P=0.6662331819534302},\n            {X=552.6666666666666,Y=470.66666666666663,P=0.5002615451812744},\n            {X=555.3333333333333,Y=471.3333333333333,P=0.6958120465278625},\n            {X=562,Y=472,P=0.4994753301143646},\n            {X=567.3333333333333,Y=472.66666666666663,P=0.5455721616744995},\n            {X=573.3333333333333,Y=474,P=0.5134470462799072},\n            {X=580.6666666666666,Y=474.66666666666663,P=0.4518575370311737},\n            {X=585.3333333333333,Y=475.3333333333333,P=0.5670377612113953},\n            {X=589.3333333333333,Y=476,P=0.609724223613739},\n            {X=594.6666666666666,Y=476.66666666666663,P=0.5481007099151611},\n            {X=601.3333333333333,Y=477.3333333333333,P=0.4885927140712738},\n            {X=606.6666666666666,Y=478,P=0.5432637929916382},\n            {X=610,Y=478.66666666666663,P=0.6355723142623901},\n            {X=616.6666666666666,Y=479.3333333333333,P=0.47008851170539856},\n            {X=622,Y=480,P=0.5248528122901917},\n            {X=628.6666666666666,Y=480,P=0.46539586782455444},\n            {X=636.6666666666666,Y=480.66666666666663,P=0.39966750144958496},\n            {X=642,Y=480.66666666666663,P=0.509570300579071},\n            {X=647.3333333333333,Y=482,P=0.5069840550422668},\n            {X=652,Y=482,P=0.56694495677948},\n            {X=654,Y=482,P=0.7375491857528687},\n            {X=662,Y=482.66666666666663,P=0.4425170123577118},\n            {X=666.6666666666666,Y=482.66666666666663,P=0.5797702074050903},\n            {X=669.3333333333333,Y=482.66666666666663,P=0.7043377757072449},\n            {X=676,Y=482.66666666666663,P=0.49506327509880066},\n            {X=680,Y=482.66666666666663,P=0.6218303442001343},\n            {X=684.6666666666666,Y=482.66666666666663,P=0.5944092869758606},\n            {X=689.3333333333333,Y=482.66666666666663,P=0.5880598425865173},\n            {X=694,Y=482.66666666666663,P=0.5764558911323547},\n            {X=696,Y=482.66666666666663,P=0.7410839796066284},\n            {X=700,Y=482.66666666666663,P=0.626220166683197},\n            {X=704,Y=482.66666666666663,P=0.6229243278503418},\n            {X=707.3333333333333,Y=482.66666666666663,P=0.6664982438087463},\n            {X=714.6666666666666,Y=482.66666666666663,P=0.45310068130493164},\n            {X=720.6666666666666,Y=482.66666666666663,P=0.4970242381095886},\n            {X=724,Y=482.66666666666663,P=0.6377686858177185},\n            {X=728.6666666666666,Y=482.66666666666663,P=0.5830304622650146},\n            {X=733.3333333333333,Y=482,P=0.5852826237678528},\n            {X=735.3333333333333,Y=482,P=0.7534965872764587},\n            {X=739.3333333333333,Y=481.3333333333333,P=0.6395262479782104},\n            {X=742,Y=481.3333333333333,P=0.7220669984817505},\n            {X=746,Y=480.66666666666663,P=0.6478912830352783},\n            {X=750,Y=480,P=0.6395424604415894},\n            {X=754,Y=478.66666666666663,P=0.629923403263092},\n            {X=759.3333333333333,Y=478,P=0.5632662177085876},\n            {X=762.6666666666666,Y=477.3333333333333,P=0.6644474864006042},\n            {X=765.3333333333333,Y=476.66666666666663,P=0.7117174863815308},\n            {X=768.6666666666666,Y=476,P=0.6776741743087769},\n            {X=773.3333333333333,Y=474.66666666666663,P=0.5986015200614929},\n            {X=777.3333333333333,Y=473.3333333333333,P=0.6267250180244446},\n            {X=781.3333333333333,Y=471.3333333333333,P=0.6099798679351807},\n            {X=784.6666666666666,Y=470.66666666666663,P=0.6539067625999451},\n            {X=790.6666666666666,Y=468.66666666666663,P=0.49772119522094727},\n            {X=792.6666666666666,Y=468,P=0.7275203466415405},\n            {X=796,Y=466.66666666666663,P=0.6488282680511475},\n            {X=800,Y=465.3333333333333,P=0.6072457432746887},\n            {X=804,Y=463.3333333333333,P=0.5964605212211609},\n            {X=807.3333333333333,Y=462,P=0.6561574339866638},\n            {X=810,Y=460.66666666666663,P=0.6968104839324951},\n            {X=813.3333333333333,Y=458.66666666666663,P=0.6486343741416931},\n            {X=818,Y=456.66666666666663,P=0.5831184983253479},\n            {X=820.6666666666666,Y=455.3333333333333,P=0.6963025331497192},\n            {X=822.6666666666666,Y=454,P=0.7399721741676331},\n            {X=825.3333333333333,Y=452.66666666666663,P=0.7092769145965576},\n            {X=828.6666666666666,Y=451.3333333333333,P=0.6766396164894104},\n            {X=833.3333333333333,Y=448.66666666666663,P=0.5740551948547363},\n            {X=835.3333333333333,Y=447.3333333333333,P=0.7345168590545654},\n            {X=837.3333333333333,Y=446.66666666666663,P=0.7650047540664673},\n            {X=840.6666666666666,Y=445.3333333333333,P=0.6749776005744934},\n            {X=844.6666666666666,Y=442.66666666666663,P=0.5888175368309021},\n            {X=848.6666666666666,Y=440.66666666666663,P=0.5972996354103088},\n            {X=852,Y=438.66666666666663,P=0.6244710683822632},\n            {X=854,Y=437.3333333333333,P=0.7188596725463867},\n            {X=856.6666666666666,Y=436,P=0.6917470097541809},\n            {X=858.6666666666666,Y=434.66666666666663,P=0.7351683378219604},\n            {X=862.6666666666666,Y=432.66666666666663,P=0.6261351704597473},\n            {X=864.6666666666666,Y=431.3333333333333,P=0.7430726289749146},\n            {X=866.6666666666666,Y=430.66666666666663,P=0.7724213600158691},\n            {X=868.6666666666666,Y=429.3333333333333,P=0.7554715871810913},\n            {X=871.3333333333333,Y=428.66666666666663,P=0.7384610176086426},\n            {X=875.3333333333333,Y=426.66666666666663,P=0.6147278547286987},\n            {X=877.3333333333333,Y=426,P=0.7556149363517761},\n            {X=880,Y=425.3333333333333,P=0.7179256677627563},\n            {X=882,Y=424.66666666666663,P=0.7604349851608276},\n            {X=884,Y=424,P=0.7805911302566528},\n            {X=886,Y=423.3333333333333,P=0.7828847765922546},\n            {X=888,Y=422.66666666666663,P=0.78639817237854},\n            {X=890,Y=422,P=0.7878957390785217},\n            {X=892,Y=421.3333333333333,P=0.7883377075195312},\n            {X=894,Y=421.3333333333333,P=0.7963496446609497},\n            {X=896,Y=421.3333333333333,P=0.7972534894943237},\n            {X=898,Y=420.66666666666663,P=0.7801092267036438},\n            {X=900,Y=420.66666666666663,P=0.7869842052459717},\n            {X=902,Y=420.66666666666663,P=0.7963632345199585},\n            {X=904,Y=420,P=0.7890701293945312},\n            {X=906,Y=420,P=0.7968790531158447},\n            {X=908,Y=420,P=0.8703685998916626},\n            \"\"\";\n\n        var stylusPointCollection = new StylusPointCollection();\n\n        var stringReader = new StringReader(test);\n        while (stringReader.ReadLine() is { } line)\n        {\n            var regex = GetPointInfoRegex();\n            var match = regex.Match(line);\n            if (match.Success)\n            {\n                var x = match.Groups[1].Value;\n                var y = match.Groups[2].Value;\n                var p = match.Groups[3].Value;\n                // Do something with the extracted values\n                //Console.WriteLine($\"X: {x}, Y: {y}, P: {p}\");\n                stylusPointCollection.Add(new StylusPoint(double.Parse(x), double.Parse(y), float.Parse(p)));\n            }\n            else\n            {\n                Console.WriteLine(\"No match found.\");\n            }\n        }\n\n        return stylusPointCollection;\n    }\n\n    [GeneratedRegex(@\"\\{X=(?<X>-?\\d+(?:\\.\\d+)?),\\s*Y=(?<Y>-?\\d+(?:\\.\\d+)?),\\s*P=(?<P>-?\\d+(?:\\.\\d+)?)}\\,?\")]\n    private static partial Regex GetPointInfoRegex();\n```\n\nRunning this code shows that calling `incrementalStrokeHitTester.AddPoint(point)` triggers the StrokeHit event, but `StrokeHitEventArgs.GetPointEraseResults()` returns a StrokeCollection with 0 strokes—meaning the whole stroke was erased when only a split should occur at XY=(684,446), WH=(50,70).\n\nTo make this issue clearer, I’ve visualized both the stroke and eraser range in the UI with the following code:\n\n```csharp\n        var geometry = stroke.GetGeometry();\n        Canvas.Children.Add(new Path()\n        {\n            Data = geometry,\n            Fill = Brushes.Black\n        });\n        Canvas.Children.Add(new Rectangle()\n        {\n            Margin = new Thickness(x, y, 0, 0),\n            Width = rectangleStylusShape.Width,\n            Height = rectangleStylusShape.Height,\n            Stroke = Brushes.Red,\n            StrokeThickness = 2\n        });\n\n        var eraseResult = stroke.GetEraseResult(new Rect(x,y, rectangleStylusShape.Width, rectangleStylusShape.Height));\n        if (eraseResult.Count > 0)\n        {\n            // It can get the correct result from GetEraseResult\n        }\n```\n\nThe result looks like this:\n\n<img width=\"852\" height=\"472\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/63bf3d25-ff81-49d4-83c2-1f272706d79e\" />\n\nThis demonstrates that IncrementalStrokeHitTester has a calculation bug in this scenario.\n\n### Reproduction Steps\n\nClone my demo project code: https://github.com/lindexi/lindexi_gd/tree/7f7f914c05829be1feb090ab05b0514df4e46e97/WPFDemo/RarlereninemniBohinabairhalljere\n\nYou can clone my project by the command line:\n\n```\nmkdir RarlereninemniBohinabairhalljere && cd RarlereninemniBohinabairhalljere\ngit init\ngit remote add origin https://github.com/lindexi/lindexi_gd.git\ngit pull origin 7f7f914c05829be1feb090ab05b0514df4e46e97\ncd WPFDemo/RarlereninemniBohinabairhalljere\n```\n\nRun the project in VisualStudio, and you can find the VisualStudio enter the break point.\n\n### Expected behavior\n\nThe IncrementalStrokeHitTester can split into two segments.\n\n### Actual behavior\n\nThe IncrementalStrokeHitTester erases the entire stroke. As the code shows, we can find it can get the correct result from Stroke.GetEraseResult\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/11059","RelatedDescription":"Open issue \"Bug in calculation algorithm of IncrementalStrokeHitTester\" (#11059)"},{"Id":"3333186440","IsPullRequest":true,"CreatedAt":"2025-08-19T07:08:29","Actor":"dotnet-maestro[bot]","Number":"11058","RawContent":null,"Title":"[release/10.0] Source code updates from dotnet/dotnet","State":"open","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:2d003289-13dc-445c-a652-0b25a8fa6f91)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [2d003289-13dc-445c-a652-0b25a8fa6f91](https://maestro.dot.net/subscriptions?search=2d003289-13dc-445c-a652-0b25a8fa6f91)\n- **Build**: [20250816.9](https://dev.azure.com/dnceng/internal/_build/results?buildId=2773676)\n- **Date Produced**: August 18, 2025 6:04:11 PM UTC\n- **Commit**: [7f2a07b481a3d24677ebcf6a45e7e27c8ff95a4e](https://github.com/dotnet/dotnet/commit/7f2a07b481a3d24677ebcf6a45e7e27c8ff95a4e)\n- **Commit Diff**: [a01724d...7f2a07b](https://github.com/dotnet/dotnet/compare/a01724db6d16445177cb31c6f300d38b0af06290...7f2a07b481a3d24677ebcf6a45e7e27c8ff95a4e)\n- **Branch**: [release/10.0.1xx](https://github.com/dotnet/dotnet/tree/release/10.0.1xx)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25416.105 to 10.0.0-beta.25416.109][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.2.25416.105 to 10.0.0-rc.2.25416.109][1]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Private.Windows.Core.TestUtilities\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:2d003289-13dc-445c-a652-0b25a8fa6f91)\n\n[1]: https://github.com/dotnet/dotnet/compare/a01724db6d...7f2a07b481\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/ea9e51a7080f13abb409a9dcfd9ea957ecab01ae...fac534d85b77789bd4daf2b4c916117f1ca381e7\n- https://github.com/dotnet/aspnetcore/compare/d757bfd514024f4403f6bb2fb5bb4894337a54d8...52453ff9e545324516fa49e99d11b2c811d4557f\n- https://github.com/dotnet/msbuild/compare/279cffc400c3e233364358fcc26fcd724466378c...c4c851ab59a0e6a5521e1910eeff8f57c8d3f6b4\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11058)","Url":"https://github.com/dotnet/wpf/pull/11058","RelatedDescription":"Open PR \"[release/10.0] Source code updates from dotnet/dotnet\" (#11058)"},{"Id":"3333184537","IsPullRequest":true,"CreatedAt":"2025-08-19T07:07:48","Actor":"dotnet-maestro[bot]","Number":"11057","RawContent":null,"Title":"[release/10.0-rc1] Source code updates from dotnet/dotnet","State":"open","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:59b729d1-5468-4f7d-bb2a-92153fa653f1)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [59b729d1-5468-4f7d-bb2a-92153fa653f1](https://maestro.dot.net/subscriptions?search=59b729d1-5468-4f7d-bb2a-92153fa653f1)\n- **Build**: [20250818.10](https://dev.azure.com/dnceng/internal/_build/results?buildId=2774928)\n- **Date Produced**: August 19, 2025 3:57:24 AM UTC\n- **Commit**: [60fecc0f99696a998bfd1fca8ed314bc591a3b9b](https://github.com/dotnet/dotnet/commit/60fecc0f99696a998bfd1fca8ed314bc591a3b9b)\n- **Commit Diff**: [8c49b05...60fecc0](https://github.com/dotnet/dotnet/compare/8c49b059243665b9c1a4ce01c24bedb4f5641f15...60fecc0f99696a998bfd1fca8ed314bc591a3b9b)\n- **Branch**: [release/10.0.1xx-rc1](https://github.com/dotnet/dotnet/tree/release/10.0.1xx-rc1)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25416.112 to 10.0.0-beta.25418.110][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.1.25416.112 to 10.0.0-rc.1.25418.110][1]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Private.Windows.Core.TestUtilities\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:59b729d1-5468-4f7d-bb2a-92153fa653f1)\n\n[1]: https://github.com/dotnet/dotnet/compare/8c49b05924...60fecc0f99\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/msbuild/compare/279cffc400c3e233364358fcc26fcd724466378c...b85b8a5813da73efd3920c98a03d1c7666c83006\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11057)","Url":"https://github.com/dotnet/wpf/pull/11057","RelatedDescription":"Open PR \"[release/10.0-rc1] Source code updates from dotnet/dotnet\" (#11057)"},{"Id":"3333178229","IsPullRequest":false,"CreatedAt":"2025-08-19T07:05:23","Actor":"dotnet-maestro-bot","Number":"11056","RawContent":null,"Title":"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/9.0](https://github.com/dotnet/wpf/commits/release/9.0/) in `dotnet/wpf` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-wpf?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/wpf/issues/11056","RelatedDescription":"Open issue \"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch\" (#11056)"},{"Id":"3320483768","IsPullRequest":true,"CreatedAt":"2025-08-19T07:02:58","Actor":"dotnet-maestro[bot]","Number":"11050","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n\n[marker]: <> (Begin:f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [f1124ab6-1481-4f33-a146-eb9bc5b1b331](https://maestro.dot.net/subscriptions?search=f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n- **Build**: [20250818.5](https://dev.azure.com/dnceng/internal/_build/results?buildId=2774705)\n- **Date Produced**: August 18, 2025 11:03:40 PM UTC\n- **Commit**: [5c3434d8b831745673c31e186906f463e1036301][3]\n- **Commit Diff**: [520c71b...5c3434d](https://github.com/dotnet/dotnet/compare/520c71b5277fc1f72dbec14da03ca55205d6c8e5...5c3434d8b831745673c31e186906f463e1036301)\n- **Branch**: [main](https://github.com/dotnet/dotnet/tree/main)\n\n**New Dependencies**\n- Added [10.0.0-rc.1.25418.105][3]\n  - System.Private.Windows.Core.TestUtilities\n\n**Updated Dependencies**\n- From [10.0.0-beta.25411.109 to 10.0.0-beta.25418.105][4]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.1.25411.109 to 10.0.0-rc.1.25418.105][4]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n\n\n\n[1]: https://github.com/dotnet/dotnet/compare/520c71b527...adfea8e331\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11050)\n[2]: https://github.com/dotnet/dotnet/compare/520c71b527...5088919af0\n\n[3]: https://github.com/dotnet/dotnet/commit/5c3434d8b831745673c31e186906f463e1036301\n[4]: https://github.com/dotnet/dotnet/compare/520c71b527...5c3434d8b8\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/d27184f7cb92b4abb4b20e91ecb5c43bc43de65b...e58b086a85a1df5762c8980308f7e4e330edd0aa\n- https://github.com/dotnet/aspnetcore/compare/92237e25c229daa8617892cdda70de982795689d...d757bfd514024f4403f6bb2fb5bb4894337a54d8\n- https://github.com/dotnet/diagnostics/compare/0dd6f2bab2a10c27e6330517e5760357370efeec...a321e262b120841f4bd7651da46826589404ac66\n- https://github.com/dotnet/efcore/compare/54033a4938012625ad17c4278d6b483bb29f2ad3...118bb7238c33c646537210ae7837694f85ee9671\n- https://github.com/dotnet/emsdk/compare/2ee4aa55713eb7c15e3123b122d96c51682bade8...8e74ba43cab6ddac051bf98184d96aa903ae2240\n- https://github.com/dotnet/fsharp/compare/d82b8df8f72083a3f2dce36e75df128664be4e94...a3e663d51d5ee259c27b199a038b5fe7a2b3f5e6\n- https://github.com/dotnet/msbuild/compare/911849e7ee34b6995bf7e531a843c93c4c059727...c4c851ab59a0e6a5521e1910eeff8f57c8d3f6b4\n- https://github.com/dotnet/razor/compare/9ab78c78721106dcf827e397ff71b07114577712...64d001100992653a06a7e1da94eee01da62b74f7\n- https://github.com/dotnet/roslyn/compare/aa440bea4abc32e5a189eff9d0cc4726321a714d...7c7cfd9c3fee9f3be48c1f8b7f1d139cfb3f5942\n- https://github.com/dotnet/runtime/compare/b267b85fd0ad76c74548757bd2bb96a4497ff2de...10bc77650ffd5462f9b66cbc8f631460e722c74f\n- https://github.com/dotnet/sdk/compare/0062d0a65486d4278299df3243b5164444c940d3...b4882e0c3d6794aacc7b3ce645e3da0cde0f7aeb\n- https://github.com/dotnet/source-build-reference-packages/compare/693e7af6b70890dc58a6c2426ca37d8e083346e7...299471506deb40dc03945ecc920932f95027fec8\n- https://github.com/microsoft/vstest/compare/829937612b95e623785d2e0bb970395676d22b4d...4d2e4b05ee14d1b06d0029c97c1109ba8d09e93a\n- https://github.com/dotnet/winforms/compare/53b30edce6ac9b61e868676d2f58e3ca97c44db0...7fa23ac13d4ccdd667b04dea308925760f28b92e\n\n[marker]: <> (End:Footer:CodeFlow PR)","Url":"https://github.com/dotnet/wpf/pull/11050","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#11050)"},{"Id":"3327334699","IsPullRequest":true,"CreatedAt":"2025-08-19T07:02:08","Actor":"dotnet-maestro[bot]","Number":"11055","RawContent":null,"Title":"[release/10.0-rc1] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n\n\n[marker]: <> (Begin:59b729d1-5468-4f7d-bb2a-92153fa653f1)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [59b729d1-5468-4f7d-bb2a-92153fa653f1](https://maestro.dot.net/subscriptions?search=59b729d1-5468-4f7d-bb2a-92153fa653f1)\n- **Build**: [20250816.12](https://dev.azure.com/dnceng/internal/_build/results?buildId=2773843)\n- **Date Produced**: August 17, 2025 11:35:57 AM UTC\n- **Commit**: [8c49b059243665b9c1a4ce01c24bedb4f5641f15](https://github.com/dotnet/dotnet/commit/8c49b059243665b9c1a4ce01c24bedb4f5641f15)\n- **Commit Diff**: [520c71b...8c49b05](https://github.com/dotnet/dotnet/compare/520c71b5277fc1f72dbec14da03ca55205d6c8e5...8c49b059243665b9c1a4ce01c24bedb4f5641f15)\n- **Branch**: [release/10.0.1xx-rc1](https://github.com/dotnet/dotnet/tree/release/10.0.1xx-rc1)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25411.109 to 10.0.0-beta.25416.112][4]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.1.25411.109 to 10.0.0-rc.1.25416.112][4]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Private.Windows.Core.TestUtilities\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:59b729d1-5468-4f7d-bb2a-92153fa653f1)\n\n\n\n\n[1]: https://github.com/dotnet/dotnet/compare/520c71b527...670981cadc\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11055)\n[2]: https://github.com/dotnet/dotnet/compare/520c71b527...42f3bc164b\n\n[3]: https://github.com/dotnet/dotnet/compare/520c71b527...4584978afb\n\n[4]: https://github.com/dotnet/dotnet/compare/520c71b527...8c49b05924\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/d27184f7cb92b4abb4b20e91ecb5c43bc43de65b...ea9e51a7080f13abb409a9dcfd9ea957ecab01ae\n- https://github.com/dotnet/aspnetcore/compare/92237e25c229daa8617892cdda70de982795689d...52453ff9e545324516fa49e99d11b2c811d4557f\n- https://github.com/dotnet/command-line-api/compare/0b4618bc860374941e605d8eb1d2bc29c32801db...e292617c0f829bfe777c7ad51467c6a509a9aff8\n- https://github.com/dotnet/diagnostics/compare/0dd6f2bab2a10c27e6330517e5760357370efeec...a321e262b120841f4bd7651da46826589404ac66\n- https://github.com/dotnet/efcore/compare/54033a4938012625ad17c4278d6b483bb29f2ad3...5f505fd5a89f16d760847b975d49a4ef1490b47a\n- https://github.com/dotnet/emsdk/compare/2ee4aa55713eb7c15e3123b122d96c51682bade8...8e74ba43cab6ddac051bf98184d96aa903ae2240\n- https://github.com/dotnet/fsharp/compare/d82b8df8f72083a3f2dce36e75df128664be4e94...790342807a482e022dc180527eff93d1a54b31c9\n- https://github.com/dotnet/msbuild/compare/911849e7ee34b6995bf7e531a843c93c4c059727...279cffc400c3e233364358fcc26fcd724466378c\n- https://github.com/dotnet/razor/compare/9ab78c78721106dcf827e397ff71b07114577712...64d001100992653a06a7e1da94eee01da62b74f7\n- https://github.com/dotnet/roslyn/compare/aa440bea4abc32e5a189eff9d0cc4726321a714d...633a6e3e03bd53bcc351a4f8eeaaff8db7c6acae\n- https://github.com/dotnet/runtime/compare/b267b85fd0ad76c74548757bd2bb96a4497ff2de...2768fd5056bea821fa0144b98dfe4aadaa0aaff0\n- https://github.com/dotnet/sdk/compare/0062d0a65486d4278299df3243b5164444c940d3...b4882e0c3d6794aacc7b3ce645e3da0cde0f7aeb\n- https://github.com/dotnet/source-build-reference-packages/compare/693e7af6b70890dc58a6c2426ca37d8e083346e7...299471506deb40dc03945ecc920932f95027fec8\n- https://github.com/microsoft/vstest/compare/829937612b95e623785d2e0bb970395676d22b4d...4d2e4b05ee14d1b06d0029c97c1109ba8d09e93a\n- https://github.com/dotnet/winforms/compare/53b30edce6ac9b61e868676d2f58e3ca97c44db0...687601b22acf6103be3bad76826ac21a6ed5580a\n\n[marker]: <> (End:Footer:CodeFlow PR)","Url":"https://github.com/dotnet/wpf/pull/11055","RelatedDescription":"Closed or merged PR \"[release/10.0-rc1] Source code updates from dotnet/dotnet\" (#11055)"},{"Id":"3326740979","IsPullRequest":true,"CreatedAt":"2025-08-19T07:00:47","Actor":"dotnet-maestro[bot]","Number":"11053","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [2bde0aa3-7165-43c9-100b-08dcbc30275f](https://maestro.dot.net/subscriptions?search=2bde0aa3-7165-43c9-100b-08dcbc30275f)\n- **Build**: [20250815.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2772919)\n- **Date Produced**: August 15, 2025 6:43:15 PM UTC\n- **Commit**: [d87d66c43d0660e5c8e84e667c5c8a8140bce888](https://github.com/dotnet/arcade/commit/d87d66c43d0660e5c8e84e667c5c8a8140bce888)\n- **Branch**: [release/9.0](https://github.com/dotnet/arcade/tree/release/9.0)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [9.0.0-beta.25407.2 to 9.0.0-beta.25415.3][1]\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.CodeAnalysis\n    - Microsoft.DotNet.GenAPI\n    - Microsoft.DotNet.Helix.Sdk\n\n[1]: https://github.com/dotnet/arcade/compare/e298236913...d87d66c43d\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11053)","Url":"https://github.com/dotnet/wpf/pull/11053","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#11053)"},{"Id":"3326740260","IsPullRequest":true,"CreatedAt":"2025-08-19T07:00:20","Actor":"dotnet-maestro[bot]","Number":"11052","RawContent":null,"Title":"[release/10.0] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n[marker]: <> (Begin:2d003289-13dc-445c-a652-0b25a8fa6f91)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [2d003289-13dc-445c-a652-0b25a8fa6f91](https://maestro.dot.net/subscriptions?search=2d003289-13dc-445c-a652-0b25a8fa6f91)\n- **Build**: [20250816.5](https://dev.azure.com/dnceng/internal/_build/results?buildId=2773551)\n- **Date Produced**: August 16, 2025 7:41:20 PM UTC\n- **Commit**: [a01724db6d16445177cb31c6f300d38b0af06290](https://github.com/dotnet/dotnet/commit/a01724db6d16445177cb31c6f300d38b0af06290)\n- **Commit Diff**: [520c71b...a01724d](https://github.com/dotnet/dotnet/compare/520c71b5277fc1f72dbec14da03ca55205d6c8e5...a01724db6d16445177cb31c6f300d38b0af06290)\n- **Branch**: [release/10.0.1xx](https://github.com/dotnet/dotnet/tree/release/10.0.1xx)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25411.109 to 10.0.0-beta.25416.105][2]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.1.25411.109 to 10.0.0-rc.2.25416.105][2]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Private.Windows.Core.TestUtilities\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:2d003289-13dc-445c-a652-0b25a8fa6f91)\n\n\n[1]: https://github.com/dotnet/dotnet/compare/520c71b527...f8a57b66e6\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11052)\n[2]: https://github.com/dotnet/dotnet/compare/520c71b527...a01724db6d\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/d27184f7cb92b4abb4b20e91ecb5c43bc43de65b...ea9e51a7080f13abb409a9dcfd9ea957ecab01ae\n- https://github.com/dotnet/aspnetcore/compare/92237e25c229daa8617892cdda70de982795689d...d757bfd514024f4403f6bb2fb5bb4894337a54d8\n- https://github.com/dotnet/command-line-api/compare/0b4618bc860374941e605d8eb1d2bc29c32801db...e292617c0f829bfe777c7ad51467c6a509a9aff8\n- https://github.com/dotnet/diagnostics/compare/0dd6f2bab2a10c27e6330517e5760357370efeec...a321e262b120841f4bd7651da46826589404ac66\n- https://github.com/dotnet/efcore/compare/54033a4938012625ad17c4278d6b483bb29f2ad3...5f505fd5a89f16d760847b975d49a4ef1490b47a\n- https://github.com/dotnet/emsdk/compare/2ee4aa55713eb7c15e3123b122d96c51682bade8...8e74ba43cab6ddac051bf98184d96aa903ae2240\n- https://github.com/dotnet/fsharp/compare/d82b8df8f72083a3f2dce36e75df128664be4e94...790342807a482e022dc180527eff93d1a54b31c9\n- https://github.com/dotnet/msbuild/compare/911849e7ee34b6995bf7e531a843c93c4c059727...279cffc400c3e233364358fcc26fcd724466378c\n- https://github.com/dotnet/razor/compare/9ab78c78721106dcf827e397ff71b07114577712...64d001100992653a06a7e1da94eee01da62b74f7\n- https://github.com/dotnet/roslyn/compare/aa440bea4abc32e5a189eff9d0cc4726321a714d...633a6e3e03bd53bcc351a4f8eeaaff8db7c6acae\n- https://github.com/dotnet/runtime/compare/b267b85fd0ad76c74548757bd2bb96a4497ff2de...d1691e1cc3b45df903e3ca67d550277fc2a7bafa\n- https://github.com/dotnet/sdk/compare/0062d0a65486d4278299df3243b5164444c940d3...b4882e0c3d6794aacc7b3ce645e3da0cde0f7aeb\n- https://github.com/dotnet/source-build-reference-packages/compare/693e7af6b70890dc58a6c2426ca37d8e083346e7...299471506deb40dc03945ecc920932f95027fec8\n- https://github.com/microsoft/vstest/compare/829937612b95e623785d2e0bb970395676d22b4d...4d2e4b05ee14d1b06d0029c97c1109ba8d09e93a\n- https://github.com/dotnet/winforms/compare/53b30edce6ac9b61e868676d2f58e3ca97c44db0...687601b22acf6103be3bad76826ac21a6ed5580a\n\n[marker]: <> (End:Footer:CodeFlow PR)","Url":"https://github.com/dotnet/wpf/pull/11052","RelatedDescription":"Closed or merged PR \"[release/10.0] Source code updates from dotnet/dotnet\" (#11052)"},{"Id":"3326858637","IsPullRequest":false,"CreatedAt":"2025-08-16T04:29:21","Actor":"KotaroTONOIKE","Number":"11054","RawContent":null,"Title":"KeyboardFocus should be visually clearly indicated for better user experience, which is in Aero but Fluent regresses","State":"open","Body":"### Summary\n\nIn recent WPF themes (e.g., Fluent), `KeyboardFocus` may be present but not visually indicated. This is a regression from older themes like Aero and Classic, which provided clear, predictable focus feedback.\n\n### Why this is a design flaw\n\n- Users cannot determine which control will respond to the next key press.\n- Aero provided a clear visual indicator via `FocusVisualStyle` and animation.\n- Fluent omits this, leading to ambiguity and reduced accessibility.\n\n### Suggested Resolution\n\n- Reinstate visual feedback for `KeyboardFocus` in default templates.\n- Use `FocusVisualStyle` or `IsKeyboardFocused` triggers to provide consistent feedback.\n\n### Philosophical Note\n\nA UI that accepts input without revealing its focus state violates the principle of explicit responsibility modeling. Aero got this right. Fluent regressed.","Url":"https://github.com/dotnet/wpf/issues/11054","RelatedDescription":"Open issue \"KeyboardFocus should be visually clearly indicated for better user experience, which is in Aero but Fluent regresses\" (#11054)"},{"Id":"3319271821","IsPullRequest":true,"CreatedAt":"2025-08-14T10:21:10","Actor":"akoeplinger","Number":"11049","RawContent":null,"Title":"Add System.Private.Windows.Core.TestUtilities to Version.Details.xml","State":"closed","Body":"So the VMR can properly override the version used.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11049)","Url":"https://github.com/dotnet/wpf/pull/11049","RelatedDescription":"Closed or merged PR \"Add System.Private.Windows.Core.TestUtilities to Version.Details.xml\" (#11049)"},{"Id":"3314856023","IsPullRequest":false,"CreatedAt":"2025-08-14T08:33:17","Actor":"cTrares","Number":"11045","RawContent":null,"Title":".NET 8.0.19 update causes 2+ minute delay for all Windows startup applications – persists even after uninstall","State":"closed","Body":"### Description\n\n🐞 Description\n\nAfter installing the .NET Desktop Runtime 8.0.19 (August 5, 2025), I consistently experience a system-wide delay affecting all applications configured to start with Windows. These applications (e.g., KeePass, OneDrive, etc.) normally appear in the system tray within ~25 seconds of logging in.\n\n>> I can provide Windows ADK Boot traces if needed (before and after installation) <<\n\nAfter this update is applied, it takes 2 minutes and 30 seconds for all startup applications to fully load and appear in the tray. This happens every time, even across multiple reboots.\n\nThe delay affects all startup programs equally — there is no single application causing a bottleneck. The system otherwise performs normally once everything is finally loaded.\n\nThe problem occurs regardless of installation method (Windows Update or manual installer from dotnet.microsoft.com) and persists even after uninstalling the runtime. Only restoring a clean system image resolves the issue.\n\n\n\n\n\n\n\n### Reproduction Steps\n\n🔁 Steps to Reproduce\n    Restore a clean system image with all updates except .NET 8.0.19.\n    Install .NET Desktop Runtime 8.0.19 (via Windows Update or manual installer).\n    Reboot the system.\n    Log in and measure how long it takes for all system tray startup programs to appear.\n\n### Expected behavior\n\n\n✅ Expected Behavior\nStartup applications appear in the system tray within ~25 seconds of logging into Windows.\n\n### Actual behavior\n\n❌ Actual Behavior\nAfter installing .NET 8.0.19, it takes 2 minutes and 30 seconds for all startup programs to appear.\nThe delay is consistent and system-wide.\n\nUninstalling the runtime does not revert the behavior — only restoring a full system image resolves the issue.\n\n### Regression?\n\nThis appears to be a regression that significantly degrades the Windows startup experience. I am happy to provide additional traces or logs if needed.\n\n### Known Workarounds\n\nnot to upgradt to this version (currently Windows-Update Paused)\n\n### Configuration\n\n🖥️ Environment\n    Windows Version: Windows 11 24H2 Build 26100.4770\n\n    .NET Runtime Version: Windows Desktop Runtime 8.0.19 (35118 win-x64)\n\n    Installation Method: Tested via Windows Update and manual installer\n\n    Fast Startup: Disabled\n    GPU Driver: Latest NVIDIA driver as of August 2025\n    System Image: Clean baseline used for reproducible testing\n    Reproducibility: 100%, across multiple reboots\n\n### Other information\n\n📊 Additional Info\n    No unusual CPU or memory load during the delay (CPU ~2–3%).\n    Windows Defender shows occasional activity but not enough to explain the delay.\n    No errors or warnings in Event Viewer during startup.\n    Fast Startup is disabled – full boot path is always used.\n    Fully updated system with latest drivers.\n\nsee services and autostart config\n\n<img width=\"537\" height=\"647\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3656cfe8-ebc4-4168-b333-94efa7cdc458\" />\n\n<img width=\"536\" height=\"628\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4f674b54-4bc9-4093-a8c0-cb9ea8e4048a\" />\n\nI can provide Windows ADK Boot traces if needed (before and after installation)","Url":"https://github.com/dotnet/wpf/issues/11045","RelatedDescription":"Closed issue \".NET 8.0.19 update causes 2+ minute delay for all Windows startup applications – persists even after uninstall\" (#11045)"},{"Id":"3320505773","IsPullRequest":true,"CreatedAt":"2025-08-14T02:23:37","Actor":"lindexi","Number":"11051","RawContent":null,"Title":"Fix incorrect touch point coordinates when running application on secondary screen with WM_Pointer enabled","State":"open","Body":"Fixes https://github.com/dotnet/wpf/issues/8517\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\nIn the GetOriginOffsetsLogical method, the expected behavior is to return coordinates relative to the current screen. However, due to Windows' mechanism, when operating on a non-primary screen, the method returns coordinates relative to the primary screen. This leads to issue #8517. The fix involves subtracting the Left and Top values of displayRect during the calculation, ensuring that the resulting coordinates are relative to the current screen rather than the primary screen, thereby resolving the touch offset problem.\r\n\r\n## Customer Impact\r\n\r\nFix the bug.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nThe https://github.com/dotnet-campus/wpf/pull/9 was tested for two years in many my users device. And this PR is pick from https://github.com/dotnet-campus/wpf/pull/9\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\r\nLow. For the vast majority of users, this has no impact. Most users have only a single touchscreen, in which case the displayRect's Left and Top values are both zero. This means that point.x - displayRect.left and point.y - displayRect.top will not alter the x and y values of the point.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11051)","Url":"https://github.com/dotnet/wpf/pull/11051","RelatedDescription":"Open PR \"Fix incorrect touch point coordinates when running application on secondary screen with WM_Pointer enabled\" (#11051)"},{"Id":"3316917941","IsPullRequest":false,"CreatedAt":"2025-08-13T11:11:19","Actor":"vsfeedback","Number":"11046","RawContent":null,"Title":"Windows 11 22598 - WPF tooltips disappear almost instantly","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Windows-11-22598---WPF-tooltips-disappea/10946747)._\n\n---\n[severity:It's more difficult to complete my work]\nThis was originally posted at https://learn.microsoft.com/en-us/answers/questions/817785/windows-11-22598-100-tooltip-problem-with-wpf-apps \n\n**It was specifically requested by Hui Liu-MSFT to report it here.**\n\n&gt; ... Tooltips in WPF V4.8 apps (and earlier versions) are not working in Windows 11 build 22598.100. They appear but then immediately disappear. It happens in all WPF based apps. Tooltips are ok in Winforms apps and also .NET 5.0 WPF apps are ok.\n\n...\n\n&gt; ... others have started seeing this too. It sounds like it might be related to high DPI displays and the Windows 11 preview (which includes a buggy .NET 4.8.1). \n\n...\n\n&gt; ... If I move the mouse over the Tooltip control and stop moving the mouse no problem. But if I move the mouse a minuscule amount the Tooltip disappears. This suggests the WPF Tooltip implementation display and close are controlled only by MouseMove events. Then, with the slightest of mouse movements (especially high-res displays) the Tooltip display is cancelled. Reducing display resolution improves the issue significantly, but not a satisfactory solution.\n\n...\n\nThere was also a simple reproduction example:\n\n&gt; To prove it I created a brand new WPF .NET 4.8 App, dragged on a button and added a tooltip.\n&gt;\n&gt; ```\n&gt; &lt;Grid&gt;\n&gt; &lt;Button ToolTip=\"Test Tooltip\" Content=\"Button\" HorizontalAlignment=\"Left\" Margin=\"92,60,0,0\" VerticalAlignment=\"Top\"/&gt;\n&gt; &lt;/Grid&gt;\n&gt; ```\n&gt;\n&gt; The tooltip displays very briefly then disappears, far too quick to read. It happens in all WPF .NET 4 apps regardless of how complex they are. From the very simplest (shown above) to much more complex apps evolved over 10 years. WFP app with .NET 5/6 and WinForms are working fine.\n\n---\n### Original Comments\n\n#### David Hollman on 8/4/2025, 08:00 PM: \n\n<p><a target='_blank' href=\"https://github.com/dotnet/wpf/issues/10015\">https://github.com/dotnet/wpf/issues/10015</a> is the same / similar</p>\n\n#### Feedback Bot on 8/5/2025, 10:41 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/11046","RelatedDescription":"Closed issue \"Windows 11 22598 - WPF tooltips disappear almost instantly\" (#11046)"},{"Id":"3312245891","IsPullRequest":true,"CreatedAt":"2025-08-13T07:35:41","Actor":"dotnet-maestro[bot]","Number":"11043","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n[marker]: <> (Begin:f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [f1124ab6-1481-4f33-a146-eb9bc5b1b331](https://maestro.dot.net/subscriptions?search=f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n- **Build**: [20250811.9](https://dev.azure.com/dnceng/internal/_build/results?buildId=2770003)\n- **Date Produced**: August 12, 2025 7:04:28 PM UTC\n- **Commit**: [520c71b5277fc1f72dbec14da03ca55205d6c8e5](https://github.com/dotnet/dotnet/commit/520c71b5277fc1f72dbec14da03ca55205d6c8e5)\n- **Commit Diff**: [e9f665e...520c71b](https://github.com/dotnet/dotnet/compare/e9f665e52848a3615736c099e5631af531b66a5c...520c71b5277fc1f72dbec14da03ca55205d6c8e5)\n- **Branch**: [main](https://github.com/dotnet/dotnet/tree/main)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25409.103 to 10.0.0-beta.25411.109][2]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CodeAnalysis\n  - Microsoft.DotNet.GenAPI\n  - Microsoft.DotNet.Helix.Sdk\n- From [10.0.0-rc.1.25409.103 to 10.0.0-rc.1.25411.109][2]\n  - Microsoft.Dotnet.WinForms.ProjectTemplates\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Private.Winforms\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Diagnostics.EventLog\n  - System.DirectoryServices\n  - System.Drawing.Common\n  - System.Formats.Nrbf\n  - System.IO.Packaging\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Security.Cryptography.Xml\n  - System.Security.Permissions\n  - System.Windows.Extensions\n\n[marker]: <> (End:f1124ab6-1481-4f33-a146-eb9bc5b1b331)\n\n\n[1]: https://github.com/dotnet/dotnet/compare/e9f665e528...8c7b3dcd2b\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11043)\n[2]: https://github.com/dotnet/dotnet/compare/e9f665e528...520c71b527\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/95661c3ef63e20a0cbdec21d70b23efd66de6d04...d27184f7cb92b4abb4b20e91ecb5c43bc43de65b\n- https://github.com/dotnet/aspnetcore/compare/a0991ea1ddcd0329ddd464959b2b0a59e52edb86...92237e25c229daa8617892cdda70de982795689d\n- https://github.com/dotnet/cecil/compare/2478ada175a4089ab1310960d2590810e9adc4f9...2a768f2c8a54077cd7d788bb135caeb4d7206a15\n- https://github.com/dotnet/diagnostics/compare/3fe51329543feaa2aff6e60e396191efc09ab0ba...0dd6f2bab2a10c27e6330517e5760357370efeec\n- https://github.com/dotnet/efcore/compare/83c65146d02e9d2113ad1fc428c6420050694c51...54033a4938012625ad17c4278d6b483bb29f2ad3\n- https://github.com/dotnet/emsdk/compare/b7028483caf8304909c9f3ee17a8f5b3c685f5bc...2ee4aa55713eb7c15e3123b122d96c51682bade8\n- https://github.com/dotnet/fsharp/compare/8a47c17ef927a1408d7901e187fd4985e7a8a44d...d82b8df8f72083a3f2dce36e75df128664be4e94\n- https://github.com/dotnet/razor/compare/82b663038ebe314d21a426c12724d0358d921760...9ab78c78721106dcf827e397ff71b07114577712\n- https://github.com/dotnet/roslyn-analyzers/compare/5261191c4ec2e273dc4400328a6e81ba7f677b82...d45048f958379c63acfc716136a5e2466f21c5d4\n- https://github.com/dotnet/runtime/compare/d39490d67dd2496f7e714d28e2ae463b976b4f87...b267b85fd0ad76c74548757bd2bb96a4497ff2de\n- https://github.com/dotnet/scenario-tests/compare/086c9380ad71ac75c8af5d5091d3ad339fc842e1...082359066ee0064039b9b1f1f025bdd0507d06de\n- https://github.com/dotnet/sdk/compare/a9c5b0cb6d9e37f97e13c2d10dd2044dbc9d94be...0062d0a65486d4278299df3243b5164444c940d3\n- https://github.com/dotnet/source-build-reference-packages/compare/9983f7e81995ad689b7f31969c7dbbde6d824e86...693e7af6b70890dc58a6c2426ca37d8e083346e7\n- https://github.com/dotnet/sourcelink/compare/34093320251efce9d7e74ee87903e8c72b6b303f...9b949eeb2d5dba635c06ae936b50d2141b0aabe2\n- https://github.com/dotnet/symreader/compare/fa7beaad398b79ab5fb7b83c150a08433bb5a46b...9994998c0b0fab5efd5cbe2e13a3ea74f4e8e6e1\n- https://github.com/dotnet/templating/compare/fad809e3e578387bddd0fe91f61e3c9f52b0a472...b67630f060f02a6f5ef7cfcea731dce0d13e1ad6\n- https://github.com/microsoft/vstest/compare/d9e6ea3247d11e5f2ee088cabdcd988eec2906ed...829937612b95e623785d2e0bb970395676d22b4d\n- https://github.com/dotnet/windowsdesktop/compare/bca9d0332260245ae5a67c2d4c39b6fcc0ba45ec...5cf429afe4ec59b46e8b792bb1aac1bdd5f2d235\n- https://github.com/dotnet/winforms/compare/7add703893cba1d93b0485b13a5df25afe3efffc...53b30edce6ac9b61e868676d2f58e3ca97c44db0\n- https://github.com/dotnet/xdt/compare/3ae5c14d94509e8ffed62d10685ca4a4159754df...ec086785dfa9af4a0dc58eca3e5c969e3d0c6003\n\n[marker]: <> (End:Footer:CodeFlow PR)","Url":"https://github.com/dotnet/wpf/pull/11043","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#11043)"},{"Id":"3317240192","IsPullRequest":false,"CreatedAt":"2025-08-13T07:28:49","Actor":"jlj001031","Number":"11048","RawContent":null,"Title":"Why WPF's title bar customization is so uncontrollable and unreasonable","State":"open","Body":"When I write a WPF program, I want to customize the window title bar to make better use of the title bar area. However, it encounters very, very many problems, such as: losing system animations, losing border shadows, maximizing coverage of the taskbar, maximizing beyond the edges of the screen, etc. These problems have troubled me for a long time and have not been fully resolved so far. \nIn my opinion, this is not a problem that should arise in a modern development framework, and even to say that these problems are very stupid and unreasonable, making me feel that the WPF development process is unpredictable and incomprehensible. In the process of solving these problems at Google, I found many people who encountered the same problems, this is not a new problem, but has existed for several years, whether from the perspective of development requirements or design concepts, these problems should not exist, I need to re-examine the rationality of this framework, I hope this problem can be perfectly solved.","Url":"https://github.com/dotnet/wpf/issues/11048","RelatedDescription":"Open issue \"Why WPF's title bar customization is so uncontrollable and unreasonable\" (#11048)"},{"Id":"3313632293","IsPullRequest":false,"CreatedAt":"2025-08-13T05:16:30","Actor":"james1301","Number":"11044","RawContent":null,"Title":"What is happening with this issue","State":"closed","Body":"### Description\n\nWhat is happening with this issue #6655\n\n### Reproduction Steps\n\nSee issue\n\n### Expected behavior\n\nSee issue\n\n### Actual behavior\n\nSee issue\n\n### Regression?\n\nSee issue\n\n### Known Workarounds\n\nSee issue\n\n### Impact\n\nSee issue\n\n### Configuration\n\nSee issue\n\n### Other information\n\nSee issue","Url":"https://github.com/dotnet/wpf/issues/11044","RelatedDescription":"Closed issue \"What is happening with this issue\" (#11044)"},{"Id":"3316923614","IsPullRequest":false,"CreatedAt":"2025-08-13T05:11:01","Actor":"vsfeedback","Number":"11047","RawContent":null,"Title":"Adding reference to System.Windows.Forms.Integration in a WPF app","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Adding-reference-to-SystemWindowsForms/10941610)._\n\n---\n[severity:It's more difficult to complete my work]\n[WinFormsNuGet.zip](https://aka.ms/dc/file?name=Be241d7135ef140289d996bd7f798b793638888561083255355_WinFormsNuGet.zip&tid=e241d7135ef140289d996bd7f798b793638888561083255355)\n\nThe attached solution is an empty Win Forms control created by the VS and a nearly empty default WPF app which adds the control using &lt;wfi:WindowsFormsHost&gt;\n\nWinFormsNuGet\\WpfApp\\MainWindow.xaml(13,10): error MC3074: The tag 'WindowsFormsHost' does not exist in XML namespace 'clr-namespace:System.Windows.Forms.Integration;assembly=System.Windows.Forms.Integration'. Line 13 Position 10.\n\nThe problem is that the reference\nxmlns:wfi=\"clr-namespace:System.Windows.Forms.Integration;assembly=System.Windows.Forms.Integration\"\ndoes not really work. I see \"Assembly ... was not found\" error on it when I point the mouse.\n\nThe first thing is that the above error is wrong. It suggests that the assembly has been loaded.\n\nThe attached project is the exact solution which was suggested by the https://developercommunity.visualstudio.com/t/SystemWindowsFormsIntegation/683788 and which referred to https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/walkthrough-hosting-a-windows-forms-control-in-wpf-by-using-xaml\nIt does not work.\n\nIt does work if I use References &gt; Add Project reference (Why project reference BTW?) &gt; Browse &gt; and select\nC:\\Program Files\\dotnet\\packs\\Microsoft.WindowsDesktop.App.Ref\\8.0.18\\ref\\net8.0\\WindowsFormsIntegration.dll\n\nIt is kind of awkward and error prone manual work. We do not want to suggest this to users of our control. \nThere is no NuGet package for the assembly. \nIt seems that the &lt;UseWindowsForms&gt;true&lt;/UseWindowsForms&gt; was supposed to resolve the reference automatically, but someone did not finish the work.\n\nI thought NuGet was designed to avoid unsafe browse for dll way of adding refs?\n\nThanks\nNikolai\n\n\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/24/2025, 08:53 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/11047","RelatedDescription":"Open issue \"Adding reference to System.Windows.Forms.Integration in a WPF app\" (#11047)"},{"Id":"3297090038","IsPullRequest":false,"CreatedAt":"2025-08-11T20:42:42","Actor":"NeroXc92","Number":"11033","RawContent":null,"Title":"First Control in Visual Tree Ignores Styles from Nested ResourceDictionary in MergedDictionaries","State":"closed","Body":"### Description\n\nMicrosoft Visual Studio Community 2022 - Preview\n17.14.11 Preview 1.0\n\n.NET 10 Preview 5\n\n**Issue:**\nWhen using `ResourceDictionary.MergedDictionaries` inside `Resources`, and defining styles in a nested dictionary (not from a separate file), the first control in the visual tree (e.g. CheckBox) does not apply the defined style (e.g. FontFamily).\n\n<img width=\"1680\" height=\"504\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/482a6ca5-bc36-44d6-a755-5ec184b758a9\" />\n\n### Reproduction Steps\n\n```xaml\n<Window.Resources>\n    <ResourceDictionary>\n        <ResourceDictionary.MergedDictionaries>\n            <ResourceDictionary>\n                <Style TargetType=\"CheckBox\">\n                    <Setter Property=\"FontFamily\" Value=\"Cascadia Code\"/>\n                </Style>\n            </ResourceDictionary>\n        </ResourceDictionary.MergedDictionaries>\n    </ResourceDictionary>\n</Window.Resources>\n<WindowChrome.WindowChrome>\n    <WindowChrome NonClientFrameEdges=\"None\"\n                  UseAeroCaptionButtons=\"False\"\n                  CaptionHeight=\"35\"/>\n</WindowChrome.WindowChrome>\n\n<Grid Background=\"#1f1f1f\">\n    <StackPanel Width=\"320\"\n                VerticalAlignment=\"Center\"\n                HorizontalAlignment=\"Center\">\n        \n        <CheckBox IsChecked=\"True\" Content=\"check 1\" Foreground=\"White\" />\n        <CheckBox IsChecked=\"True\" Content=\"check 2\" Foreground=\"White\" />\n        <CheckBox IsChecked=\"True\" Content=\"check 3\" Foreground=\"White\" />\n    </StackPanel>\n</Grid>\n```\n\n### Expected behavior\n\nAll CheckBoxes should use Cascadia Code.\n\n### Actual behavior\n\nFirst CheckBox uses Segoe UI, others use Cascadia Code.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/11033","RelatedDescription":"Closed issue \"First Control in Visual Tree Ignores Styles from Nested ResourceDictionary in MergedDictionaries\" (#11033)"},{"Id":"3309013386","IsPullRequest":false,"CreatedAt":"2025-08-11T08:35:59","Actor":"ViktorHofer","Number":"11042","RawContent":null,"Title":"Unpin sourcelink dependencies","State":"open","Body":"They are currently pinned in Version.Details.xml to an 8.0.0 version. This issue tracks un-pinning them and using the live version instead.","Url":"https://github.com/dotnet/wpf/issues/11042","RelatedDescription":"Open issue \"Unpin sourcelink dependencies\" (#11042)"},{"Id":"3304331067","IsPullRequest":true,"CreatedAt":"2025-08-11T05:11:41","Actor":"dotnet-maestro[bot]","Number":"11040","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [3e242e43-3358-4aa6-cbf7-08db9e4fbff5](https://maestro.dot.net/subscriptions?search=3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n- **Build**: [20250807.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2767075)\n- **Date Produced**: August 7, 2025 4:53:08 PM UTC\n- **Commit**: [a5ec3fab69ac440afe6764b2e046af6e8fcafa74](https://github.com/dotnet/arcade/commit/a5ec3fab69ac440afe6764b2e046af6e8fcafa74)\n- **Branch**: [release/8.0](https://github.com/dotnet/arcade/tree/release/8.0)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [8.0.0-beta.25310.3 to 8.0.0-beta.25407.1][1]\n    - Microsoft.DotNet.ApiCompat\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.CodeAnalysis\n    - Microsoft.DotNet.GenAPI\n    - Microsoft.DotNet.Helix.Sdk\n\n[1]: https://github.com/dotnet/arcade/compare/2ce3f8c7b2...a5ec3fab69\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 8.0.119\n  - Updates tools.dotnet to 8.0.119\n\n[marker]: <> (End:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11040)","Url":"https://github.com/dotnet/wpf/pull/11040","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#11040)"},{"Id":"3307042414","IsPullRequest":false,"CreatedAt":"2025-08-10T00:46:23","Actor":"lfmissonb","Number":"11041","RawContent":null,"Title":"```Rect.Contains(double x, double y)``` returns ```true``` for points on both right and bottom edges","State":"open","Body":"### Description\n\n```Rect.Contains(double x, double y)``` returns ```true``` for points on both right and bottom edges\n\n### Reproduction Steps\n\n```\nConsole.WriteLine(new Rect(0, 0, 1, 1).Contains(0, 0));\nConsole.WriteLine(new Rect(0, 0, 1, 1).Contains(0, 1));\nConsole.WriteLine(new Rect(0, 0, 1, 1).Contains(1, 0));\nConsole.WriteLine(new Rect(0, 0, 1, 1).Contains(1, 1));\n```\n\n### Expected behavior\n\noutput:\nTrue\nFalse\nFalse\nFalse\n\n### Actual behavior\n\noutput:\nTrue\nTrue\nTrue\nTrue\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n[https://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/WindowsBase/System/Windows/Rect.cs#L763](url)\n```\n            return ((x >= _x) && (x - _width <= _x) &&\n                    (y >= _y) && (y - _height <= _y));\n```\nexpected:\n```\n            return ((x >= _x) && (x - _width < _x) &&\n                    (y >= _y) && (y - _height < _y));\n```","Url":"https://github.com/dotnet/wpf/issues/11041","RelatedDescription":"Open issue \"```Rect.Contains(double x, double y)``` returns ```true``` for points on both right and bottom edges\" (#11041)"},{"Id":"3302737742","IsPullRequest":false,"CreatedAt":"2025-08-08T05:57:09","Actor":"TerenceYL","Number":"11039","RawContent":null,"Title":"[Feature Request] Add option to force 100% UI rendering in WPF regardless of system DPI scaling","State":"open","Body":"In modern enterprise environments, it's common to use laptops with a default display scaling of **150%**, while external monitors remain at **100%**. This mixed-DPI setup—despite having the same resolution—causes WPF applications to behave inconsistently:\n\n- UI elements are resized unexpectedly  \n- Text becomes oversized or blurry  \n- Layouts break or overflow  \n- Critical functionality becomes inaccessible  \n\nThis severely impacts usability, maintainability, and business productivity.\n\n---\n\n### Request:\n\nPlease add a manifest setting or API that allows developers to **force WPF applications to render at 100% scale**, regardless of the system's DPI settings or PerMonitorV2 behavior.\n\n#### Suggested options:\n\n- Manifest tag:\n  ```xml\n  <dpiAwareness>fixed96dpi</dpiAwareness>\n  ```\n- API call:\n  ```csharp\n  SetProcessDpiFixed96(); // Forces 96 DPI rendering\n  ```\n- Windows setting:\n  “Allow apps to ignore display scaling” toggle for advanced users\n\n---\n\n### Why this matters:\n\n- Current DPI Awareness modes (`system`, `perMonitor`, `perMonitorV2`) do not allow full control over rendering scale  \n- Even with `SetProcessDpiAwareness()` or `SetProcessDPIAware()`, Windows 11 still enforces DPI scaling when dragging windows between monitors  \n- Developers have no reliable way to ensure consistent UI rendering across mixed-DPI environments\n\n---\n\n### Impact:\n\nThis issue affects thousands of enterprise applications and users globally. It causes visual inconsistencies, functional errors, and user frustration—ultimately hindering productivity and contributing to economic inefficiency.\n\n---\n","Url":"https://github.com/dotnet/wpf/issues/11039","RelatedDescription":"Open issue \"[Feature Request] Add option to force 100% UI rendering in WPF regardless of system DPI scaling\" (#11039)"},{"Id":"3298624774","IsPullRequest":true,"CreatedAt":"2025-08-08T05:15:08","Actor":"dotnet-maestro[bot]","Number":"11036","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [2bde0aa3-7165-43c9-100b-08dcbc30275f](https://maestro.dot.net/subscriptions?search=2bde0aa3-7165-43c9-100b-08dcbc30275f)\n- **Build**: [20250807.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2767076)\n- **Date Produced**: August 7, 2025 4:43:13 PM UTC\n- **Commit**: [e29823691315ed6b3acff20d5bdf3b0be7628283](https://github.com/dotnet/arcade/commit/e29823691315ed6b3acff20d5bdf3b0be7628283)\n- **Branch**: [release/9.0](https://github.com/dotnet/arcade/tree/release/9.0)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [9.0.0-beta.25380.1 to 9.0.0-beta.25407.2][2]\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.CodeAnalysis\n    - Microsoft.DotNet.GenAPI\n    - Microsoft.DotNet.Helix.Sdk\n\n[2]: https://github.com/dotnet/arcade/compare/7e67a7b4b6...e298236913\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 9.0.109\n  - Updates tools.dotnet to 9.0.109\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11036)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/11036","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#11036)"},{"Id":"3297203231","IsPullRequest":true,"CreatedAt":"2025-08-08T05:14:37","Actor":"vseanreesermsft","Number":"11035","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11035)","Url":"https://github.com/dotnet/wpf/pull/11035","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#11035)"},{"Id":"3297179452","IsPullRequest":true,"CreatedAt":"2025-08-08T05:14:10","Actor":"vseanreesermsft","Number":"11034","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/11034)","Url":"https://github.com/dotnet/wpf/pull/11034","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#11034)"},{"Id":"3300806347","IsPullRequest":false,"CreatedAt":"2025-08-07T14:43:44","Actor":"trebahl","Number":"11038","RawContent":null,"Title":"ComponentDispatcher.(Enter|Leave)ThreadModal should be called by System.Windows.MessageBox.Show","State":"open","Body":"### Description\n\nWindow.ShowDialog calls (Enter|Leave)ThreadModal but MessageBox.Show does not. In windows forms, Application.(Enter|Leave)ThreadModal was called by both.\n\n### Reproduction Steps\n\n```\nComponentDispatcher.EnterThreadModal += (o, e) => { whatever(); };\nMessageBox.Show(\"blah\");\n```\n\n\n### Expected behavior\n\n`whatever()` should be called\n\n### Actual behavior\n\nit's not\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/11038","RelatedDescription":"Open issue \"ComponentDispatcher.(Enter|Leave)ThreadModal should be called by System.Windows.MessageBox.Show\" (#11038)"},{"Id":"3299950529","IsPullRequest":false,"CreatedAt":"2025-08-07T10:36:49","Actor":"DoctorKrolic","Number":"11037","RawContent":null,"Title":"If tooltip is closed from code behind it still \"thinks\" that it occupies its rect","State":"open","Body":"### Description\n\nIn our app we use tooltips extensively. Given the requirements, we have to sometimes manually manipulate tooltips from code behid by openning and closing them. As it turned out, tooltips become shamely broken when you touch their `IsOpen` property. This is one of such bugs that can clearly be reproduced in a minimalistic setup\n\n### Reproduction Steps\n\n1. Create a default WPF app\n2. Content of `MainWidow.xaml` (this is just to make a tooltip with somewhat decent area so that wrong behavior is more visible):\n```xaml\n<Window x:Class=\"TestWPFTooltips.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:TestWPFTooltips\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\n    <StackPanel HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\">\n        <Button Padding=\"10\" Content=\"Press me\">\n            <Button.ToolTip>\n                <ToolTip Opened=\"ToolTip_Opened\">\n                    <TextBlock Padding=\"10\">\n                        Test\n                    </TextBlock>\n                </ToolTip>\n            </Button.ToolTip>\n        </Button>\n    </StackPanel>\n</Window>\n```\n3. Content of `MainWindow.xaml.cs`:\n```cs\nusing System.Windows;\nusing System.Windows.Controls;\n\nnamespace TestWPFTooltips;\n\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n    }\n\n    private async void ToolTip_Opened(object sender, RoutedEventArgs e)\n    {\n        await Task.Delay(3000);\n\n        var tooltip = (ToolTip)sender;\n\n        if (tooltip.IsOpen)\n        {\n            tooltip.IsOpen = false;\n        }\n    }\n}\n```\n\n### Expected behavior\n\nWhen a tooltip is closed from code behind it continues behaving as usual so that closing from code behind and closing from \"natural\" behavior is the same thing\n\n### Actual behavior\n\nAfter the tooltip is closed from code behind it still \"thinks\" it occupies its rea, so that when you move your mouse over that area and return to the target element tooltip is not automatically opened again. However, if you move your mouse somewhere else and return to the target element the tooltip is opened correctly:\n\n![Image](https://github.com/user-attachments/assets/7ae0cc68-aeb1-464c-b9fd-14acb7563b73)\n\n### Regression?\n\nTested on .NET 8, 9 and 10 P6, so probably not (we are not interested in .NET Framework behavior since our app is running on .NET 8)\n\n### Known Workarounds\n\nOn the tooltip target subscribe to `MouseEnter` and `MouseLeave` events and open/close tooltip manually from code behind to restore built-in behavior\n\n### Impact\n\nI have to waste my dev time to fix basic UI behavior instead of focusing on product-related features\n\n### Configuration\n\n.NET 8/9/10P6\nWindows 10 22H2 19045.5371 x64\nI don't think this is tied to the OS/CPU architecture\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/11037","RelatedDescription":"Open issue \"If tooltip is closed from code behind it still \"thinks\" that it occupies its rect\" (#11037)"},{"Id":"3294450542","IsPullRequest":false,"CreatedAt":"2025-08-06T14:26:21","Actor":"super-brian","Number":"11031","RawContent":null,"Title":"Use UIAutomationClient/UIAutomationTypes for CSharpCompilation.Create()","State":"closed","Body":"Ok, I want to compile a string which is a c# script/code in my app.\nI did what https://github.com/dotnet/wpf/issues/8880 says so now AutomationElement/AutomationEvent is accessible.\nBut the issue is... how to use UIAutomationClient and/or UIAutomationTypes as references for CSharpCompilation.Create()\nI looked at the code in https://github.com/jaredpar/basic-reference-assemblies and tried this but failed with error:\n\n      var assembly = typeof(AutomationElement).GetTypeInfo().Assembly;\n      var names = assembly.GetManifestResourceNames(); // this is to get the name to be used in the next line, so you can ignore.\n      var stream = assembly.GetManifestResourceStream(\"FxResources.UIAutomationClient.SR.resources\");\n      var bytes = new byte[stream.Length];\n      using var memoryStream = new MemoryStream(bytes);\n      stream.CopyTo(memoryStream);\n      var iArray = ImmutableCollectionsMarshal.AsImmutableArray(bytes);\n      var ref = AssemblyMetadata.CreateFromImage(iArray).GetReference()\n     CSharpCompilation.Create(..., ..., new[] {ref}, ...);\n     using (var dllStream = new MemoryStream())\n     {\n        var emitResult = cSharpCompilation.Emit(dllStream);\n\nHere, emiResult says \n\nerror CS0009: Metadata file '<in-memory assembly>' could not be opened -- PE image doesn't contain managed metadata. | Microsoft.CodeAnalysis.Diagnostic {Microsoft.CodeAnalysis.CSharp.CSDiagnostic}\n\nSo, in short, I have byte array, then how could I use that as a reference for CSharpCompilation.Create()\nMaybe the issue is that the resource is NOT a managed code... then how to use it for CSharpCompilation.Create()?\nThanks!\n","Url":"https://github.com/dotnet/wpf/issues/11031","RelatedDescription":"Closed issue \"Use UIAutomationClient/UIAutomationTypes for CSharpCompilation.Create()\" (#11031)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-08-20T03:30:27.69143Z","RunDurationInMilliseconds":488}