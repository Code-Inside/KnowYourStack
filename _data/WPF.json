{"Data":{"GitHub":{"Issues":[{"Id":"830844236","IsPullRequest":false,"CreatedAt":"2021-03-15T00:40:24","Actor":"lindexi","Number":"4283","RawContent":null,"Title":"WPF can not handle special damaged font","State":"closed","Body":"\r\n\r\n\r\n\r\n* .NET Core Version: All\r\n* Windows version: Any\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n **Problem description:**\r\n\r\nWhen we use the special damaged font, the WPF layout system will break. And we can not do something to handle it.\r\n\r\nThe step:\r\n\r\n1. Clone the [https://github.com/walterlv/Walterlv.Demo.WpfBadFontCrash](https://github.com/walterlv/Walterlv.Demo.WpfBadFontCrash) repo\r\n2. Install the `不给糖就捣蛋的万圣节.TTF` font in the Walterlv.Demo.WpfBadFontCrash folder\r\n3. Add the code to MainWindow.xaml and then build and run the application\r\n\r\n```xml\r\n    <TextBlock Text=\"ABCDEFGH\" FontFamily=\"不给糖就捣蛋的万圣节\" />\r\n```\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n\r\nAnd you will find the application throw the exception.\r\n\r\n```\r\nSystem.IO.FileFormatException: Invalid file format.\r\n   at MS.Internal.Text.TextInterface.Native.Util.ConvertHresultToException(Int32 hr)\r\n   at MS.Internal.Text.TextInterface.Font.CreateFontFace()\r\n   at MS.Internal.Text.TextInterface.Font.AddFontFaceToCache()\r\n   at MS.Internal.Text.TextInterface.Font.GetFontFace()\r\n   at System.Windows.Media.GlyphTypeface..ctor(Font font)\r\n   at MS.Internal.FontFace.PhysicalFontFamily.GetGlyphTypeface(FontStyle style, FontWeight weight, FontStretch stretch)\r\n   at MS.Internal.FontFace.PhysicalFontFamily.MS.Internal.FontFace.IFontFamily.GetTypefaceMetrics(FontStyle style, FontWeight weight, FontStretch stretch)\r\n   at System.Windows.Media.Typeface.ConstructCachedTypeface()\r\n   at System.Windows.Media.Typeface.get_CachedTypeface()\r\n   at System.Windows.Media.Typeface.CheckFastPathNominalGlyphs(CharacterBufferRange charBufferRange, Double emSize, Single pixelsPerDip, Double scalingFactor, Double widthMax, Boolean keepAWord, Boolean numberSubstitution, CultureInfo cultureInfo, TextFormattingMode textFormattingMode, Boolean isSideways, Boolean breakOnTabs, Int32& stringLengthFit)\r\n   at MS.Internal.TextFormatting.SimpleRun.CreateSimpleTextRun(CharacterBufferRange charBufferRange, TextRun textRun, TextFormatterImp formatter, Int32 widthLeft, Boolean emergencyWrap, Boolean breakOnTabs, Double pixelsPerDip)\r\n   at MS.Internal.TextFormatting.SimpleRun.Create(FormatSettings settings, CharacterBufferRange charString, TextRun textRun, Int32 cp, Int32 cpFirst, Int32 runLength, Int32 widthLeft, Int32 idealRunOffsetUnRounded, Double pixelsPerDip)\r\n   at MS.Internal.TextFormatting.SimpleTextLine.Create(FormatSettings settings, Int32 cpFirst, Int32 paragraphWidth, Double pixelsPerDip)\r\n   at MS.Internal.TextFormatting.TextFormatterImp.FormatLineInternal(TextSource textSource, Int32 firstCharIndex, Int32 lineLength, Double paragraphWidth, TextParagraphProperties paragraphProperties, TextLineBreak previousLineBreak, TextRunCache textRunCache)\r\n   at MS.Internal.TextFormatting.TextFormatterImp.FormatLine(TextSource textSource, Int32 firstCharIndex, Double paragraphWidth, TextParagraphProperties paragraphProperties, TextLineBreak previousLineBreak, TextRunCache textRunCache)\r\n   at System.Windows.Controls.TextBlock.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Decorator.MeasureOverride(Size constraint)\r\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Window.MeasureOverrideHelper(Size constraint)\r\n   at System.Windows.Window.MeasureOverride(Size availableSize)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Interop.HwndSource.set_RootVisual(Visual value)\r\n   at System.Windows.Window.SetRootVisual()\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.CreateSourceWindowDuringShow()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n``` \r\n\r\nAnd the WPF layout system will break.\r\n\r\nIt also makes UWP application not work\r\n \r\n **Expected behavior:**\r\n\r\nWe can handle the exception to fix the WPF layout system\r\n \r\n **Minimal repro:**\r\n\r\n[https://github.com/walterlv/Walterlv.Demo.WpfBadFontCrash](https://github.com/walterlv/Walterlv.Demo.WpfBadFontCrash)","Url":"https://github.com/dotnet/wpf/issues/4283","RelatedDescription":"Closed issue \"WPF can not handle special damaged font\" (#4283)"},{"Id":"830760584","IsPullRequest":true,"CreatedAt":"2021-03-13T00:54:46","Actor":"lindexi","Number":"4282","RawContent":null,"Title":"Fix comment typo in MarkupCompilePass2.cs","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/4282","RelatedDescription":"Open PR \"Fix comment typo in MarkupCompilePass2.cs\" (#4282)"},{"Id":"830245724","IsPullRequest":false,"CreatedAt":"2021-03-12T17:02:51","Actor":"kronic","Number":"4281","RawContent":null,"Title":"Running on .NET Core / .NET 5.0 exhibits huge memory leak when resizing, and uses alot more memory in general","State":"closed","Body":"In Avalonia we have had a similar problem, and one of our users tried to compare Avalonia and WPF and found that WPF also has the same/similar issue.\r\n\r\nSee [AvaloniaUI/Avalonia#5646](https://github.com/AvaloniaUI/Avalonia/issues/5646) for details.\r\n\r\n* .NET Core Version: 5.0.3\r\n* Windows version: Windows 10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019). no.\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n**Problem description:**\r\nFor example, WPF:\r\n**WPF IDLE**\r\n![image](https://user-images.githubusercontent.com/29813338/110678442-5f3a0b00-81e7-11eb-8d75-aef8761357c9.png)\r\n \r\n**WPF After Resizing**\r\n![image](https://user-images.githubusercontent.com/29813338/110678466-65c88280-81e7-11eb-8869-765afc032709.png)\r\n\r\n**Actual behavior:**\r\n**Expected behavior:**\r\n \r\n**Minimal repro:**\r\n[AvaloniaTest.zip](https://github.com/AvaloniaUI/Avalonia/files/6118107/AvaloniaTest.zip) (File says Avalonia, but contains WPF repros also)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/4281","RelatedDescription":"Closed issue \"Running on .NET Core / .NET 5.0 exhibits huge memory leak when resizing, and uses alot more memory in general\" (#4281)"},{"Id":"830182508","IsPullRequest":true,"CreatedAt":"2021-03-12T15:11:49","Actor":"dotnet-maestro[bot]","Number":"4280","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210312.1\r\n- **Date Produced**: 3/12/2021 2:29 PM\r\n- **Commit**: b8014c7e3d454863169551b227f4843619dc3f44\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21161.4 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21161.4 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/d8abb6a...b8014c7\r\n[2]: https://github.com/dotnet/runtime/compare/d67c5a1...1353e38\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4280","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4280)"},{"Id":"830096939","IsPullRequest":true,"CreatedAt":"2021-03-12T13:41:57","Actor":"dotnet-maestro[bot]","Number":"4278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20210310.7\r\n- **Date Produced**: 3/11/2021 12:00 AM\r\n- **Commit**: 7f13798e5f567b72ffe63205bf49839245f0f8c1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/dcc1a4e...7f13798\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4278)"},{"Id":"830116744","IsPullRequest":false,"CreatedAt":"2021-03-12T13:25:01","Actor":"TysonMN","Number":"4279","RawContent":null,"Title":"Exception on DataGrid selection with a particular setup","State":"open","Body":"## Problem description\r\n\r\nUnder a particular set of circumstances, selecting a cell in a [`DataGrid`](https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.datagrid) causes the application crash.  The circumstances include\r\n1. adding data to the backing `ObservableCollection<>` of the `DataGrid` by\r\n2. triggering an `ICommand` bound to an element inside a [`MenuItem`](https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.menuitem),\r\n3. the `SelectedItem` was `null` before this trigger, and\r\n4. the set by WPF to make (the binding of) `SelectedItem` not `null` is ignored.\r\n\r\n## Steps to reproduce\r\nMy minimal reproduction is available at [TysonMN/ExceptionOnDataGridSelection](https://github.com/TysonMN/ExceptionOnDataGridSelection).\r\n\r\n1. Run that reproduction\r\n2. Click the `MenuItem`\r\n3. Click the `Button`\r\n4. Click the only cell in the only row and column of the `DataGrid`.\r\n\r\nHere are some additional details in case they matter.\r\n\r\n* .NET Core Version:\r\n  - Version: 5.0.201\r\n  - Commit: a09bd5c86c\r\n* Windows version: 1909 (OS Build 18363.1440)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n## Expected behavior\r\n \r\nI expect that cell to have focus.  I do not expect the cell to appear selected.  I do not expect an exception to be thrown.  I do not expect the application to crash.\r\n\r\n## Actual behavior\r\n \r\nThe application crashes because the exception \r\n```\r\nSystem.ArgumentNullException: 'Value cannot be null.\r\nParameter name: item'\r\n```\r\nis thrown with stack trace\r\n```\r\nPresentationFramework.dll!System.Windows.Automation.Peers.DataGridItemAutomationPeer.DataGridItemAutomationPeer(object item, System.Windows.Automation.Peers.DataGridAutomationPeer dataGridPeer)\tUnknown\r\nPresentationFramework.dll!System.Windows.Automation.Peers.DataGridAutomationPeer.CreateItemAutomationPeer(object item)\tUnknown\r\nPresentationFramework.dll!System.Windows.Automation.Peers.ItemsControlAutomationPeer.FindOrCreateItemAutomationPeer(object item)\tUnknown\r\nPresentationFramework.dll!System.Windows.Automation.Peers.DataGridAutomationPeer.RaiseAutomationSelectionEvents(System.Windows.Controls.SelectionChangedEventArgs e)\tUnknown\r\nPresentationFramework.dll!System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs e)\tUnknown\r\nPresentationFramework.dll!System.Windows.Controls.Primitives.Selector.SelectionChanger.End()\tUnknown\r\nPresentationFramework.dll!System.Windows.Controls.DataGrid.MakeFullRowSelection(System.Windows.Controls.ItemsControl.ItemInfo info, bool allowsExtendSelect, bool allowsMinimalSelect)\tUnknown\r\nPresentationFramework.dll!System.Windows.Controls.DataGrid.HandleSelectionForCellInput(System.Windows.Controls.DataGridCell cell, bool startDragging, bool allowsExtendSelect, bool allowsMinimalSelect)\tUnknown\r\nPresentationFramework.dll!System.Windows.Controls.DataGridCell.OnAnyMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs e)\tUnknown\r\nPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\tUnknown\r\nPresentationCore.dll!System.Windows.RoutedEventHandlerInfo.InvokeHandler(object target, System.Windows.RoutedEventArgs routedEventArgs)\tUnknown\r\nPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\tUnknown\r\nPresentationCore.dll!System.Windows.UIElement.ReRaiseEventAs(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args, System.Windows.RoutedEvent newEvent)\tUnknown\r\nPresentationCore.dll!System.Windows.UIElement.OnMouseDownThunk(object sender, System.Windows.Input.MouseButtonEventArgs e)\tUnknown\r\nPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\tUnknown\r\nPresentationCore.dll!System.Windows.RoutedEventHandlerInfo.InvokeHandler(object target, System.Windows.RoutedEventArgs routedEventArgs)\tUnknown\r\nPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\tUnknown\r\nPresentationCore.dll!System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args)\tUnknown\r\nPresentationCore.dll!System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs args)\tUnknown\r\nPresentationCore.dll!System.Windows.Input.InputManager.ProcessStagingArea()\tUnknown\r\nPresentationCore.dll!System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs input)\tUnknown\r\nPresentationCore.dll!System.Windows.Input.InputProviderSite.ReportInput(System.Windows.Input.InputReport inputReport)\tUnknown\r\nPresentationCore.dll!System.Windows.Interop.HwndMouseInputProvider.ReportInput(System.IntPtr hwnd, System.Windows.Input.InputMode mode, int timestamp, System.Windows.Input.RawMouseActions actions, int x, int y, int wheel)\tUnknown\r\nPresentationCore.dll!System.Windows.Interop.HwndMouseInputProvider.FilterMessage(System.IntPtr hwnd, MS.Internal.Interop.WindowMessage msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\nPresentationCore.dll!System.Windows.Interop.HwndSource.InputFilterMessage(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\nWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\nWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\tUnknown\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\tUnknown\r\nWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n[Native to Managed Transition]\t\r\n[Managed to Native Transition]\t\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame)\tUnknown\r\nPresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore)\tUnknown\r\nPresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window)\tUnknown\r\nProject.exe!MyNamespace.App.Main()\tUnknown\r\n```\r\n\r\n![2021-03-12_06-58-24_557](https://user-images.githubusercontent.com/34664007/110943061-5ee16300-8300-11eb-88e4-f8052ce494dd.gif)\r\n\r\n## Workarounds\r\n\r\n1. Remove the `MenuItem` but keep the `Button`.  (This is the is the most surprising workaround to me.)\r\n2. Initialize the backing `ObservableCollection<>` with an element.  Clicking on that element does not reproduce the problem.  However, clicking the `Button` and then clicking either element still reproduces the problem.\r\n3. Initialize the backing `ObservableCollection<>` with the value `2` and change the getter of `MySelectedItem` to always return `2`.\r\n4. Change `MySelectedItem` into an auto property.\r\n\r\n## Additional comments\r\n\r\nI created this minimal working example based on the reproduction provided in https://github.com/elmish/Elmish.WPF/issues/371.\r\n\r\nI think it is reasonable to consider that the backing logic of the `SelectedItem` could ignore the value set by WPF.\r\n\r\nIn that initial issue, the set by WPF was not being completely ignored.  Instead, it was being queued with the `Dispatcher` for later processing via `InvokeAsync`.  WPF calls `TryGetMember` after calling `TrySetMember` (for the same member of course), so from the perspective of WPF at that moment, it appears as though its call to `TrySetMember` was ignored.  I decided to go back to using `Invoke` when handling UI events (c.f. https://github.com/elmish/Elmish.WPF/pull/374), so the present issue is not blocking us over at Elmish.WPF.\r\n\r\nNonetheless, I think it would be reasonable to allow the user to toggle the ability select a row in a `DataGrid`.  When the toggle is in the \"selection-not-possible state\", then the selection behavior would be the same as the reproduction that I have provided.","Url":"https://github.com/dotnet/wpf/issues/4279","RelatedDescription":"Open issue \"Exception on DataGrid selection with a particular setup\" (#4279)"},{"Id":"829811068","IsPullRequest":true,"CreatedAt":"2021-03-12T07:16:27","Actor":"dotnet-maestro[bot]","Number":"4277","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210311.4\r\n- **Date Produced**: 3/12/2021 6:38 AM\r\n- **Commit**: d8abb6a0e6752c7ea9609da535cc038bac48c2a8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21161.1 to 6.0.0-preview.3.21161.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21161.1 to 6.0.0-preview.3.21161.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/fcc6b67...d8abb6a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4277","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4277)"},{"Id":"829729568","IsPullRequest":false,"CreatedAt":"2021-03-12T03:43:46","Actor":"Erapchu","Number":"4276","RawContent":null,"Title":"WPF Rendering issue on any machine","State":"open","Body":"* .NET Version: 5\r\n* Windows version: Windows 10 20H2 (OS Build 19042.867)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes, also .NET Framework 4.5.2, and all .NET Core versions.\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nWPF windows stop rendering at all when use BitmapCache on any window's control or root control and first shown WPF window was hidden by set Visibility to Hidden or call Hide() method.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nThere's no exceptions or fatal crashes. All WPF windows that use BitmapCache just stop rendering at all! While FIRST hidden window will not be shown.\r\n\r\n **Expected behavior:**\r\nWPF Windows should render normally.\r\n \r\n **Minimal repro:**\r\nPlease follow this steps to catch problem on your machine or build any project below. Please, help me resolve it.\r\n\r\nhttps://github.com/Erapchu/GhostWindows\r\nhttps://github.com/Erapchu/GhostWindowsCore\r\n\r\n1. Create empty WPF project.\r\n2. Use property CacheMode=\"BitmapCache\" in MainWindow's Grid;\r\n3. Show MainWindow on start application, then hide it. Show new MainWindow. You can use a code below. Additionally remove StartupUri in App.xaml\r\n4. Press Ctrl + Alt + Del or Win + L and try to interact with showed window (resize, minimize) it should be broken now.\r\n\r\nIn App.xaml.cs OnStartup overrided method:\r\n`var window1 = new MainWindow();\r\nwindow1.Show();\r\nawait Task.Delay(1000);\r\nwindow1.Hide();\r\nvar window2 = new MainWindow();\r\nwindow2.Show();` ","Url":"https://github.com/dotnet/wpf/issues/4276","RelatedDescription":"Open issue \"WPF Rendering issue on any machine\" (#4276)"},{"Id":"829626120","IsPullRequest":true,"CreatedAt":"2021-03-12T00:34:14","Actor":"wtgodbe","Number":"4275","RawContent":null,"Title":"[release/5.0] Merge internal commits","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/4275","RelatedDescription":"Closed or merged PR \"[release/5.0] Merge internal commits\" (#4275)"},{"Id":"829625809","IsPullRequest":true,"CreatedAt":"2021-03-12T00:18:36","Actor":"wtgodbe","Number":"4274","RawContent":null,"Title":"[release/3.1] Merge internal commits","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/4274","RelatedDescription":"Closed or merged PR \"[release/3.1] Merge internal commits\" (#4274)"},{"Id":"829431396","IsPullRequest":false,"CreatedAt":"2021-03-11T18:51:18","Actor":"vsfeedback","Number":"4273","RawContent":null,"Title":"On Intel Core 11 generation CPU, cannot refresh images continuously on the WriteableBitmap class of WPF","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/On-Intel-Core-11-generation-CPU-cannot-/1364945)._\n\n---\nThe WPF writeablebitmap object is used to refresh the image control in the order of red, green and blue. Only the color refreshed for the first time takes effect.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/10/2021, 07:21 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/4273","RelatedDescription":"Open issue \"On Intel Core 11 generation CPU, cannot refresh images continuously on the WriteableBitmap class of WPF\" (#4273)"},{"Id":"829203890","IsPullRequest":true,"CreatedAt":"2021-03-11T14:58:14","Actor":"dotnet-maestro[bot]","Number":"4272","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210311.1\r\n- **Date Produced**: 3/11/2021 2:19 PM\r\n- **Commit**: fcc6b67fe62cf104fb9cc38628ab7546c3a2e1d9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21160.24 to 6.0.0-preview.3.21161.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21160.24 to 6.0.0-preview.3.21161.1][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/775aef0...fcc6b67\r\n[2]: https://github.com/dotnet/runtime/compare/3eddf4a...d67c5a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4272","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4272)"},{"Id":"829130876","IsPullRequest":true,"CreatedAt":"2021-03-11T13:47:00","Actor":"dotnet-maestro[bot]","Number":"4271","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20210310.1\r\n- **Date Produced**: 3/10/2021 12:31 PM\r\n- **Commit**: dcc1a4e5315b4f956d228f46999e8135701d8d4f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/287fba3...dcc1a4e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4271)"},{"Id":"828855449","IsPullRequest":true,"CreatedAt":"2021-03-11T07:51:43","Actor":"dotnet-maestro[bot]","Number":"4270","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210310.24\r\n- **Date Produced**: 3/11/2021 6:59 AM\r\n- **Commit**: 775aef04bf1f5d2c8af3ff01c622749438bc464f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21160.23 to 6.0.0-preview.3.21160.24][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21160.23 to 6.0.0-preview.3.21160.24][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/be9ee20...775aef0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4270","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4270)"},{"Id":"828825549","IsPullRequest":true,"CreatedAt":"2021-03-11T07:15:21","Actor":"dotnet-maestro[bot]","Number":"4269","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210310.23\r\n- **Date Produced**: 3/11/2021 6:38 AM\r\n- **Commit**: be9ee20c4234671c1e8f798df4ee781a2c99ab61\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21160.21 to 6.0.0-preview.3.21160.23][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21160.21 to 6.0.0-preview.3.21160.23][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21154.7 to 6.0.0-preview.3.21159.16][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/87eae3d...be9ee20\r\n[2]: https://github.com/dotnet/runtime/compare/d11c029...3eddf4a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4269","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4269)"},{"Id":"828732017","IsPullRequest":true,"CreatedAt":"2021-03-11T05:30:01","Actor":"dotnet-maestro[bot]","Number":"4268","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210310.21\r\n- **Date Produced**: 3/11/2021 4:31 AM\r\n- **Commit**: 87eae3dd268d264a9efa45f0c16b900827d6431c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21160.20 to 6.0.0-preview.3.21160.21][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21160.20 to 6.0.0-preview.3.21160.21][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/c7f0cd1...87eae3d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4268","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4268)"},{"Id":"828713359","IsPullRequest":true,"CreatedAt":"2021-03-11T04:51:04","Actor":"dotnet-maestro[bot]","Number":"4267","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210310.19\r\n- **Date Produced**: 3/11/2021 4:20 AM\r\n- **Commit**: ea15d1c56fd2860190c8e472eca95f1225ad9718\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21160.18 to 6.0.0-preview.3.21160.19][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21160.18 to 6.0.0-preview.3.21160.19][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/5282a15...ea15d1c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4267","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4267)"},{"Id":"828685756","IsPullRequest":true,"CreatedAt":"2021-03-11T04:19:47","Actor":"dotnet-maestro[bot]","Number":"4266","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210310.18\r\n- **Date Produced**: 3/11/2021 3:47 AM\r\n- **Commit**: 5282a1583fab0b82acff6a7ac43586c4743a6e4c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21158.8 to 6.0.0-preview.3.21160.18][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21158.8 to 6.0.0-preview.3.21160.18][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/2393aae...5282a15\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4266","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4266)"},{"Id":"828244063","IsPullRequest":false,"CreatedAt":"2021-03-10T19:40:33","Actor":"danwalmsley","Number":"4265","RawContent":null,"Title":"Running on .NET Core / .NET 5.0 exhibits huge memory leak when resizing, and uses alot more memory in general","State":"open","Body":"In Avalonia we have had a similar problem, and one of our users tried to compare Avalonia and WPF and found that WPF also has the same/similar issue.\r\n\r\nSee https://github.com/AvaloniaUI/Avalonia/issues/5646 for details.\r\n\r\n* .NET Core Version: 5.0.3\r\n* Windows version: Windows 10\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019). no.\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nFor example, WPF:\r\n**WPF IDLE**\r\n![image](https://user-images.githubusercontent.com/29813338/110678442-5f3a0b00-81e7-11eb-8d75-aef8761357c9.png)\r\n\r\n**WPF After Resizing**\r\n![image](https://user-images.githubusercontent.com/29813338/110678466-65c88280-81e7-11eb-8869-765afc032709.png)\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\n **Expected behavior:**\r\n \r\n **Minimal repro:**\r\n[AvaloniaTest.zip](https://github.com/AvaloniaUI/Avalonia/files/6118107/AvaloniaTest.zip) (File says Avalonia, but contains WPF  repros also)","Url":"https://github.com/dotnet/wpf/issues/4265","RelatedDescription":"Open issue \"Running on .NET Core / .NET 5.0 exhibits huge memory leak when resizing, and uses alot more memory in general\" (#4265)"},{"Id":"828098133","IsPullRequest":true,"CreatedAt":"2021-03-10T19:17:26","Actor":"mmitche","Number":"4261","RawContent":null,"Title":"[release/5.0] Remove legacy RestoreSources","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/4261","RelatedDescription":"Closed or merged PR \"[release/5.0] Remove legacy RestoreSources\" (#4261)"},{"Id":"828133789","IsPullRequest":true,"CreatedAt":"2021-03-10T18:46:26","Actor":"dotnet-maestro[bot]","Number":"4263","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1b2e9dc5-44be-480a-8167-08d86afc0648\r\n- **Build**: 20210309.7\r\n- **Date Produced**: 3/9/2021 10:02 PM\r\n- **Commit**: 917ded6b428fc30b40f5ba4e35eb0c863d7f69e1\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 5.0.0-beta.21159.2 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 5.0.0-beta.21159.2 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21159.2 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21159.2 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 5.0.0-beta.21159.2 to 5.0.0-beta.21159.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f185e9d...917ded6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4263","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#4263)"},{"Id":"828139064","IsPullRequest":true,"CreatedAt":"2021-03-10T18:35:23","Actor":"dotnet-maestro[bot]","Number":"4264","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: f6560d32-4c6b-4ed3-5c71-08d72a4d3f20\r\n- **Build**: 20210308.9\r\n- **Date Produced**: 3/9/2021 12:40 AM\r\n- **Commit**: ab42d248928f65dd174a2383f3256e68d9379bb7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21110.10 to 2.0.0-beta.21158.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/251249a...ab42d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4264","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#4264)"},{"Id":"828125150","IsPullRequest":false,"CreatedAt":"2021-03-10T17:59:06","Actor":"vsfeedback","Number":"4262","RawContent":null,"Title":"WPF Application (.Net Framework 4.8): Keyboard delay in DataGrid when surrounding Border has a shadow.","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/WPF-Application-Net-Framework-48:-Ke/1362581)._\n\n---\n[severity:It's more difficult to complete my work]\nMy DataGrid contains 32 rows with 32 check boxes. The DataGrid is the child of a border with a shadow.\nWhen I click a check box and hit a cursor key (e.g. Up), then my application hangs for 10 seconds (Depending on number of check box columns).\nWhen I remove the shadow, everything's ok.\n\nXAML:\n```\n    \n        \n            \n        \n\n        \n\n            \n                \n                    \n                     ... 30 more check box columns\n                    \n                \n            \n        \n\n    \n```\n\n\nCode Behind:\n\n```\nInitializeComponent();\ntestDataGrid.ItemsSource = new bool[32]; // Any array to create rows\n```\n\n[CheckboxColumnTest.zip](https://aka.ms/dc/file?name=B6508572ff87f4ffe9283a70e9328df69637508786763633100_CheckboxColumnTest.zip&tid=6508572ff87f4ffe9283a70e9328df69637508786763633100)\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/9/2021, 07:11 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/4262","RelatedDescription":"Open issue \"WPF Application (.Net Framework 4.8): Keyboard delay in DataGrid when surrounding Border has a shadow.\" (#4262)"},{"Id":"826708829","IsPullRequest":true,"CreatedAt":"2021-03-09T22:32:00","Actor":"dotnet-maestro[bot]","Number":"4260","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210308.8\r\n- **Date Produced**: 3/9/2021 2:05 AM\r\n- **Commit**: 2393aae46944b9c90322d4d814ab1a323d283a02\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21155.1 to 6.0.0-preview.3.21158.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21155.1 to 6.0.0-preview.3.21158.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f9eb3c5...2393aae\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4260","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#4260)"},{"Id":"826625192","IsPullRequest":true,"CreatedAt":"2021-03-09T21:29:35","Actor":"dotnet-maestro[bot]","Number":"4259","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1b2e9dc5-44be-480a-8167-08d86afc0648\r\n- **Build**: 20210309.2\r\n- **Date Produced**: 3/9/2021 4:15 PM\r\n- **Commit**: f185e9dfcae59cf5024d3ce17884f03c8f8f4c70\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d8c68c8...f185e9d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4259","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#4259)"},{"Id":"825893981","IsPullRequest":true,"CreatedAt":"2021-03-09T13:52:26","Actor":"dotnet-maestro[bot]","Number":"4258","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20210305.1\r\n- **Date Produced**: 3/5/2021 3:50 PM\r\n- **Commit**: 287fba3cbedce004fbd9823c268327960a69ca88\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f95dc73...287fba3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4258","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4258)"},{"Id":"825167617","IsPullRequest":true,"CreatedAt":"2021-03-09T01:56:36","Actor":"dotnet-maestro[bot]","Number":"4257","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20210308.7\r\n- **Date Produced**: 3/9/2021 1:49 AM\r\n- **Commit**: 2cdbcecfbf5238928afd8800c67c9758a7db00d4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.3.21155.1 to 6.0.0-preview.3.21158.7][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.3.21155.1 to 6.0.0-preview.3.21158.7][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f9eb3c5...2cdbcec\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4257","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/winforms\" (#4257)"},{"Id":"824495919","IsPullRequest":true,"CreatedAt":"2021-03-08T12:04:59","Actor":"lindexi","Number":"4256","RawContent":null,"Title":"Remove unused local variable `node3Bounds` in MS.Internal.Ink.StrokeNode.GetPointsAtMiddleSegment","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/4256","RelatedDescription":"Open PR \"Remove unused local variable `node3Bounds` in MS.Internal.Ink.StrokeNode.GetPointsAtMiddleSegment\" (#4256)"},{"Id":"823936187","IsPullRequest":true,"CreatedAt":"2021-03-07T14:52:48","Actor":"Nirmal4G","Number":"4255","RawContent":null,"Title":"[release/5.0] Switch between either WinFX targets","State":"open","Body":"Closes #4253\r\n\r\nMaster PRs: #2976\r\n\r\n## Description\r\n\r\nWhen using the Desktop SDK, the build double imports both Full framework and Core `WinFX` targets, leading to build break.\r\nAlso, there's no straight forward way to switch between either `WinFX` targets as needed. This patch provides such mechanism through `ImportFrameworkWinFXTargets`.\r\n\r\n_Although there is a workaround for the above issue, they require modifying the installation of the .NET SDKs. So, it's preferable to have them fixed at least for Current (`v5.0`) .NET SDK._\r\n\r\n## Customer Impact\r\n\r\nWe (_and possibly many others like me_) have a large set of NETCLR WPF projects that can't move to CoreCLR right now. I have recently converted them to sdk-style projects with the `WindowsDesktop` SDK which includes custom tasks that are meant for Full framework projects. We also have some silverlight projects to maintain and I recently converted them to sdk-style too. Seems they also need WinFX targets.\r\n\r\nSo, to use the official `WindowsDesktop`, we want to switch between either `WinFX` targets for our custom tasks to take effect. This patch is just allowing that. We're migrating our projects and tools to `.NET` CoreCLR and it'll take some time. Until then, we need this ability to maintain our projects.\r\n\r\n## Regression\r\n\r\nYes, Desktop SDK and WinFX targets were introduced since v3.0!\r\n\r\n## Testing\r\n\r\nManual testing and mostly with our WPF projects builds against both .NET `Core` and `Full` framework CLRs.\r\n\r\n## Risk\r\n\r\nThere should be minimal to no risk to most when taking this patch.\r\nBut, if you're building both Full framework and Core projects with heavily modified build like ours, depending on the behaviour of the double import, then Yes, the build will break.\r\nHowever, if you already have your workarounds placed, then there should be no problem. You can also remove those workarounds when updating to the SDK with this patch as it fixes the issue.","Url":"https://github.com/dotnet/wpf/pull/4255","RelatedDescription":"Open PR \"[release/5.0] Switch between either WinFX targets\" (#4255)"},{"Id":"823934324","IsPullRequest":true,"CreatedAt":"2021-03-07T14:44:17","Actor":"Nirmal4G","Number":"4254","RawContent":null,"Title":"[release/3.1] WinFX casing and double-import fixes","State":"open","Body":"Closes #4253\r\n\r\nMaster PRs: #2975 and #2976\r\n\r\n## Description\r\n\r\nCasing of `WinFX` is wrong in file name of the props/targets leading to file not found errors in case-sensitive file systems, leading to build break.\r\nWhen using the Desktop SDK, the build double imports both Full framework and Core `WinFX` targets, leading to build break.\r\nAlso, there's no straight forward way to switch between either `WinFX` targets as needed. This patch provides such mechanism through `ImportFrameworkWinFXTargets`.\r\n\r\n_Although, there are workarounds for the above issues, they require modifying the installation of the .NET SDKs. So, it's preferable to have them fixed at least for LTS (`v3.1`) .NET SDK._\r\n\r\n## Customer Impact\r\n\r\n - dotnet/sdk#11108\r\n - novotnyllc/MSBuildSdkExtras#224\r\n - novotnyllc/MSBuildSdkExtras#207\r\n\r\n## Regression\r\n\r\nYes, Desktop SDK and WinFX targets were introduced since v3.0!\r\n\r\n## Testing\r\n\r\nManual testing and mostly with our WPF projects builds against both .NET `Core` and `Full` framework CLRs.\r\n\r\n## Risk\r\n\r\nThere should be minimal to no risk to most when taking this patch.\r\nBut, if you're building both Full framework and Core projects with heavily modified build like ours, depending on the exact casing and behaviour of the double import, then Yes, the build will break.\r\nHowever, if you already have your workarounds placed, then there should be no problem. You can also remove those workarounds when updating to the SDK with this patch as it fixes those issues.","Url":"https://github.com/dotnet/wpf/pull/4254","RelatedDescription":"Open PR \"[release/3.1] WinFX casing and double-import fixes\" (#4254)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-03-15T05:30:35.6537932Z","RunDurationInMilliseconds":509}