{"Data":{"GitHub":{"Issues":[{"Id":"2792466946","IsPullRequest":true,"CreatedAt":"2025-01-16T11:31:42","Actor":"h3xds1nz","Number":"10303","RawContent":null,"Title":"Use source-generated regex instead of runtime compilation (SYSLIB1045)","State":"open","Body":"Fixes #10302\r\n\r\n## Description\r\n\r\nUse `GeneratedRegex` attribute to allow for source-generation of regexes at compile time for improved performance.\r\n\r\nWe only use regexes in two places which could effectively be removed but for now we should at least take advantage of the highest-performing form of regular expressions on .NET.\r\n\r\nIn the PBT case, we have to use a pre-processor statement to comfort NetFX scenario, which will later need naming-styles suppression.\r\n\r\nNote: `RegexOptions.Compiled` is ignored in source-generated regexes, so I've removed it.\r\n\r\n## Customer Impact\r\n\r\nImproved performance, cleaner codebase.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nWhile the second occurence was fixed manually because analyzer won't flag it (guess nobody thought someone is declaring regex inline with a const), the change is straightforward.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10303)","Url":"https://github.com/dotnet/wpf/pull/10303","RelatedDescription":"Open PR \"Use source-generated regex instead of runtime compilation (SYSLIB1045)\" (#10303)"},{"Id":"2792466135","IsPullRequest":false,"CreatedAt":"2025-01-16T11:31:18","Actor":"h3xds1nz","Number":"10302","RawContent":null,"Title":"SYSLIB1045: Use [GeneratedRegex] for compile time source generation","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/syslib-diagnostics/syslib1040-1049","Url":"https://github.com/dotnet/wpf/issues/10302","RelatedDescription":"Open issue \"SYSLIB1045: Use [GeneratedRegex] for compile time source generation\" (#10302)"},{"Id":"2792192232","IsPullRequest":true,"CreatedAt":"2025-01-16T09:40:09","Actor":"h3xds1nz","Number":"10301","RawContent":null,"Title":"[StyleCleanUp] ThreadStatic fields should not use inline initialization (CA2019)","State":"open","Body":"Fixes #10300 \r\n\r\n## Description\r\n\r\nAvoid initializing `[ThreadStatic]` variables inline to prevent mistakes as it may lead you into thinking that such value will be initialized for all instances of the variable, not just the first thread.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow. I've checked that fields that require initialization are properly initialized elsewhere.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10301)","Url":"https://github.com/dotnet/wpf/pull/10301","RelatedDescription":"Open PR \"[StyleCleanUp] ThreadStatic fields should not use inline initialization (CA2019)\" (#10301)"},{"Id":"2792180788","IsPullRequest":false,"CreatedAt":"2025-01-16T09:35:24","Actor":"h3xds1nz","Number":"10300","RawContent":null,"Title":"CA2019: ThreadStatic fields should not use inline initialization","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2019","Url":"https://github.com/dotnet/wpf/issues/10300","RelatedDescription":"Open issue \"CA2019: ThreadStatic fields should not use inline initialization\" (#10300)"},{"Id":"2791934601","IsPullRequest":false,"CreatedAt":"2025-01-16T07:42:37","Actor":"himgoyalmicro","Number":"10299","RawContent":null,"Title":"CA1846: Prefer AsSpan over Substring","State":"open","Body":"Link to issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1846\n\n## Rule Description: \nSubstring allocates a new string object on the heap and performs a full copy of the extracted text. String manipulation is a performance bottleneck for many programs. Allocating many small, short-lived strings on a hot path can create enough collection pressure to impact performance. The O(n) copies created by Substring become relevant when the substrings get large. The [Span<T>](https://learn.microsoft.com/en-us/dotnet/api/system.span-1) and [ReadOnlySpan<T>](https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1) types were created to solve these performance problems.\n\nMany APIs that accept strings also have overloads that accept a ReadOnlySpan<System.Char> argument. When such overloads are available, you can improve performance by calling AsSpan instead of Substring.","Url":"https://github.com/dotnet/wpf/issues/10299","RelatedDescription":"Open issue \"CA1846: Prefer AsSpan over Substring\" (#10299)"},{"Id":"2791934483","IsPullRequest":false,"CreatedAt":"2025-01-16T07:42:33","Actor":"himgoyalmicro","Number":"10298","RawContent":null,"Title":"CA1845: Use span-based 'string.Concat'","State":"open","Body":"Link to issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1845\n\n## Rule Description: \n> Calling Substring produces a copy of the extracted substring. By using AsSpan instead of Substring and calling the overload of string.Concat that accepts spans, you can eliminate the unnecessary string allocation.","Url":"https://github.com/dotnet/wpf/issues/10298","RelatedDescription":"Open issue \"CA1845: Use span-based 'string.Concat'\" (#10298)"},{"Id":"2791934129","IsPullRequest":false,"CreatedAt":"2025-01-16T07:42:20","Actor":"himgoyalmicro","Number":"10297","RawContent":null,"Title":"CA1847: Use String.Contains(char) instead of String.Contains(string) with single characters","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1847\n\n## Rule Description:\n> When searching for a single character, String.Contains(char) offers better performance than String.Contains(string).","Url":"https://github.com/dotnet/wpf/issues/10297","RelatedDescription":"Open issue \"CA1847: Use String.Contains(char) instead of String.Contains(string) with single characters\" (#10297)"},{"Id":"2791929129","IsPullRequest":false,"CreatedAt":"2025-01-16T07:40:01","Actor":"himgoyalmicro","Number":"10296","RawContent":null,"Title":"CA2251: Use String.Equals over String.Compare","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2251\n\n## Rule Description\n> [String.Compare](https://learn.microsoft.com/en-us/dotnet/api/system.string.compare) is designed to produce a total-order comparison that can be used for sorting. If you only care whether the strings are equal, it is both clearer and likely faster to use an equivalent overload of [String.Equals](https://learn.microsoft.com/en-us/dotnet/api/system.string.equals).","Url":"https://github.com/dotnet/wpf/issues/10296","RelatedDescription":"Open issue \"CA2251: Use String.Equals over String.Compare\" (#10296)"},{"Id":"2791909688","IsPullRequest":false,"CreatedAt":"2025-01-16T07:28:59","Actor":"bent-rasmussen","Number":"10295","RawContent":null,"Title":"Fluent Theme: Expander is slow to collapse in .NET 9.0.1","State":"open","Body":"### Description\n\nMy company is preparing a preview version of our app using the new fluent theme but we were surprised to find this regression in 9.0.1 (the slowness was introduced after upgrading from SDK 9.0.101 to SDK 9.0.102) - nothing else changed:\n\n![Image](https://github.com/user-attachments/assets/75c7aa58-3301-4f56-915d-62cb3c7ab1c0)\n\n### Reproduction Steps\n\nI have not been able to create a minimal repro yet.\n\n### Expected behavior\n\nFast collapse.\n\n### Actual behavior\n\nSlow collapse.\n\n### Regression?\n\n* It was fast in SDK 9.0.101.\n* It is now slow in SDK 9.0.102.\n\n### Known Workarounds\n\nUse prior version of .NET.\n\n### Impact\n\nPoor UX.\n\n### Configuration\n\nMicrosoft Windows 11 Pro\nWindows 10.0.26100 Build 26100\nSurface Pro 8\n.NET 9.0.1 (SDK 9.0.102)\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10295","RelatedDescription":"Open issue \"Fluent Theme: Expander is slow to collapse in .NET 9.0.1\" (#10295)"},{"Id":"2791859339","IsPullRequest":false,"CreatedAt":"2025-01-16T06:59:33","Actor":"himgoyalmicro","Number":"10294","RawContent":null,"Title":"CA1507: Use nameof in place of string","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1507\n\n## Rule Description \n\nRule CA1507 flags the use of a string literal as an argument to a method or constructor where a [nameof](https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/nameof) (NameOf in Visual Basic) expression would add maintainability. The rule fires if all of the following conditions are met:\n\n- The argument is a string literal or constant.\n- The argument corresponds to a string-typed parameter of the method or the constructor that's being invoked (that is, there is no conversion involved at the call site).\n- Either:\n  - The declared name of the parameter is paramName and the constant value of the string literal matches the name of a parameter of the method, lambda, or local function within which the method or constructor is being invoked.\n  - The declared name of the parameter is propertyName and the constant value of the string literal matches the name of a property of the type within which the method or constructor is being invoked.","Url":"https://github.com/dotnet/wpf/issues/10294","RelatedDescription":"Open issue \"CA1507: Use nameof in place of string\" (#10294)"},{"Id":"2791746478","IsPullRequest":false,"CreatedAt":"2025-01-16T05:35:13","Actor":"harshit7962","Number":"10293","RawContent":null,"Title":"IDE0040","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/10293","RelatedDescription":"Closed issue \"IDE0040\" (#10293)"},{"Id":"2791710123","IsPullRequest":true,"CreatedAt":"2025-01-16T05:02:15","Actor":"dotnet-maestro[bot]","Number":"10292","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 2bde0aa3-7165-43c9-100b-08dcbc30275f\n- **Build**: 20250115.2\n- **Date Produced**: January 15, 2025 7:09:49 PM UTC\n- **Commit**: c4bbc67763bf0c5a868862df874079380e647d61\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/8cc6ecd76c...c4bbc67763\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 9.0.102\n  - Updates tools.dotnet to 9.0.102\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10292)","Url":"https://github.com/dotnet/wpf/pull/10292","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#10292)"},{"Id":"2791709221","IsPullRequest":true,"CreatedAt":"2025-01-16T05:01:24","Actor":"dotnet-maestro[bot]","Number":"10291","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20250115.4\n- **Date Produced**: January 15, 2025 9:28:38 PM UTC\n- **Commit**: 612bd6f952dbd1eea3548bec0b87b44fa506e348\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25065.4][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25065.4][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25065.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25065.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/98b4ae348f...612bd6f952\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 10.0.100-alpha.1.25064.3\n  - Updates tools.dotnet to 10.0.100-alpha.1.25064.3\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10291)","Url":"https://github.com/dotnet/wpf/pull/10291","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10291)"},{"Id":"2791088381","IsPullRequest":false,"CreatedAt":"2025-01-15T22:26:19","Actor":"richlander","Number":"10290","RawContent":null,"Title":"Please update the install script","State":"open","Body":"Scripts: https://github.com/dotnet/install-scripts/\n\nRelated: https://github.com/dotnet/core/issues/9671\n\nhttps://github.com/dotnet/wpf/blob/2fa8170912e376da061c5c4f3deeebaa795911d7/dotnet-test-install.ps1#L1040-L1055\n\n","Url":"https://github.com/dotnet/wpf/issues/10290","RelatedDescription":"Open issue \"Please update the install script\" (#10290)"},{"Id":"2790761161","IsPullRequest":true,"CreatedAt":"2025-01-15T20:12:11","Actor":"h3xds1nz","Number":"10289","RawContent":null,"Title":"Fix InvalidCastException in Can/ConvertTo methods from KeyConverter","State":"open","Body":"## Description\r\n\r\nSending this in now when #8215 was finally merged as I've discovered this during development of #9697 but wanted to wait until I can fix the TODOs in the unit tests as well.\r\n\r\nFixes `InvalidCastException` thrown from `CanConvertTo` when unboxing cast is performed on `value` that was not `null` but was of a different type than `Key` or the underlying storage (`int`), e.g. an object or a different value type.\r\nCan* methods should not (and converters do not intentionally) throw in them but this is simple a programmer's error, it is not documented behavior either, hence the fix for this.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.input.keyconverter.canconvertto?view=windowsdesktop-8.0\r\n\r\nFixes the same issue in `ConvertTo` by throwing the proper (NotSupported) exception.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.input.keyconverter.convertto?view=windowsdesktop-8.0\r\n\r\n## Customer Impact\r\n\r\nLess unexpected exceptions thrown.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, unit test.\r\n\r\n## Risk\r\n\r\nThere might be a concern that a code was passing `int` instead of `Key` which is the underlying storage type, so it survives the unboxing hard cast that was being performed but not the type `is` check. We may therefore for back-compat include check for both `Key` and `int` but other converters just check for their type, so in my honest opinion it would be best to unify the behaviour and mention in release notes.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10289)","Url":"https://github.com/dotnet/wpf/pull/10289","RelatedDescription":"Open PR \"Fix InvalidCastException in Can/ConvertTo methods from KeyConverter\" (#10289)"},{"Id":"2790649223","IsPullRequest":false,"CreatedAt":"2025-01-15T19:18:08","Actor":"h3xds1nz","Number":"10288","RawContent":null,"Title":"SA1400: Element should declare an access modifier","State":"open","Body":"More info: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1400.md\n\nGets fixed as part of #10284.","Url":"https://github.com/dotnet/wpf/issues/10288","RelatedDescription":"Open issue \"SA1400: Element should declare an access modifier\" (#10288)"},{"Id":"2790644868","IsPullRequest":false,"CreatedAt":"2025-01-15T19:15:25","Actor":"h3xds1nz","Number":"10287","RawContent":null,"Title":"IDE0330: Prefer 'System.Threading.Lock'","State":"open","Body":"More info: https://learn.microsoft.com/cs-cz/dotnet/fundamentals/code-analysis/style-rules/ide0330","Url":"https://github.com/dotnet/wpf/issues/10287","RelatedDescription":"Open issue \"IDE0330: Prefer 'System.Threading.Lock'\" (#10287)"},{"Id":"2790638958","IsPullRequest":false,"CreatedAt":"2025-01-15T19:11:51","Actor":"h3xds1nz","Number":"10286","RawContent":null,"Title":"CA1825: Avoid zero-length array allocations","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1825","Url":"https://github.com/dotnet/wpf/issues/10286","RelatedDescription":"Open issue \"CA1825: Avoid zero-length array allocations\" (#10286)"},{"Id":"2790636755","IsPullRequest":false,"CreatedAt":"2025-01-15T19:10:33","Actor":"h3xds1nz","Number":"10285","RawContent":null,"Title":"IDE0082: Convert typeof to nameof","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0082","Url":"https://github.com/dotnet/wpf/issues/10285","RelatedDescription":"Open issue \"IDE0082: Convert typeof to nameof\" (#10285)"},{"Id":"2790633179","IsPullRequest":false,"CreatedAt":"2025-01-15T19:08:20","Actor":"h3xds1nz","Number":"10284","RawContent":null,"Title":"IDE0040: Add accessibility modifiers","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0040","Url":"https://github.com/dotnet/wpf/issues/10284","RelatedDescription":"Open issue \"IDE0040: Add accessibility modifiers\" (#10284)"},{"Id":"2790619131","IsPullRequest":true,"CreatedAt":"2025-01-15T19:01:29","Actor":"dotnet-maestro[bot]","Number":"10283","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250115.5\n- **Date Produced**: January 16, 2025 7:04:32 AM UTC\n- **Commit**: 3b8e1a6346bfc7acda9c2c3816815825686fdc34\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25064.7 to 10.0.0-alpha.1.25065.5][4]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25064.7 to 10.0.0-alpha.1.25065.5][4]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25064.7 to 10.0.0-alpha.1.25065.5][4]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Management**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Speech**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17][5]\n\n[4]: https://github.com/dotnet/winforms/compare/92f6da9cb0...3b8e1a6346\n[5]: https://github.com/dotnet/runtime/compare/56d28a6d28...2da9a85776\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10283)\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10283","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10283)"},{"Id":"2790403172","IsPullRequest":false,"CreatedAt":"2025-01-15T17:15:20","Actor":"himgoyalmicro","Number":"10282","RawContent":null,"Title":"CA2249: Consider using String.Contains instead of String.IndexOf","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2249\n\n## Rule Description\n\n> When [IndexOf](https://learn.microsoft.com/en-us/dotnet/api/system.string.indexof) is used to check if the result is equal to -1 or greater or equal than 0, the call can be safely substituted with [Contains](https://learn.microsoft.com/en-us/dotnet/api/system.string.contains) without an impact on performance.","Url":"https://github.com/dotnet/wpf/issues/10282","RelatedDescription":"Open issue \"CA2249: Consider using String.Contains instead of String.IndexOf\" (#10282)"},{"Id":"2789554333","IsPullRequest":true,"CreatedAt":"2025-01-15T11:31:50","Actor":"harshit7962","Number":"10281","RawContent":null,"Title":"Correcting ITextPointer when using cursor indicator","State":"open","Body":"## Description\r\nUsing accessibility option of _text cursor indicator_ in `RichTextBox` sometimes lead to crashing applications due to Invariant assert [here](https://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/TextRangeAdaptor.cs/#L462). Adding `Normalize()` call in changed location moves the `end` to the `start` if this invariant assert fails and hence essentially corrects the cursor position.\r\n\r\n## Customer Impact\r\nAccessibility fix. Allowing the usage of text cursor indicator with RichTextBox.\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n_None_\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal Build Pass\r\nSample Application Testing\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10281)","Url":"https://github.com/dotnet/wpf/pull/10281","RelatedDescription":"Open PR \"Correcting ITextPointer when using cursor indicator\" (#10281)"},{"Id":"2788870279","IsPullRequest":false,"CreatedAt":"2025-01-15T10:23:14","Actor":"dotnet-maestro-bot","Number":"10280","RawContent":null,"Title":"[dnceng-bot] Branch `wpf/release/8.0` can't be merged to Azdo internal branch","State":"closed","Body":"Branch [release/8.0](https://github.com/dotnet/wpf/commits/release/8.0/) in `dotnet/wpf` repo can't be mirrored from GitHub to Azure [internal/release/8.0](https://dev.azure.com/dnceng/internal/_git/dotnet-wpf?version=GBinternal%2Frelease%2F8.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/wpf/issues/10280","RelatedDescription":"Closed issue \"[dnceng-bot] Branch `wpf/release/8.0` can't be merged to Azdo internal branch\" (#10280)"},{"Id":"2788053228","IsPullRequest":true,"CreatedAt":"2025-01-15T06:54:11","Actor":"vseanreesermsft","Number":"10279","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10279)","Url":"https://github.com/dotnet/wpf/pull/10279","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#10279)"},{"Id":"2788028225","IsPullRequest":true,"CreatedAt":"2025-01-15T05:23:53","Actor":"vseanreesermsft","Number":"10278","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10278)","Url":"https://github.com/dotnet/wpf/pull/10278","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#10278)"},{"Id":"2787398665","IsPullRequest":true,"CreatedAt":"2025-01-15T05:23:17","Actor":"dotnet-maestro[bot]","Number":"10275","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 3e242e43-3358-4aa6-cbf7-08db9e4fbff5\n- **Build**: 20250110.1\n- **Date Produced**: January 10, 2025 3:11:29 PM UTC\n- **Commit**: c255aae7f2b128fa20a4441f0e192c3c53561621\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.24516.1 to 8.0.0-beta.25060.1][1]\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24516.1 to 8.0.0-beta.25060.1][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.24516.1 to 8.0.0-beta.25060.1][1]\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.24516.1 to 8.0.0-beta.25060.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24516.1 to 8.0.0-beta.25060.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/f7fb1fec01...c255aae7f2\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10275)","Url":"https://github.com/dotnet/wpf/pull/10275","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#10275)"},{"Id":"2785032322","IsPullRequest":true,"CreatedAt":"2025-01-15T05:22:38","Actor":"dotnet-maestro[bot]","Number":"10274","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25061.3 to 10.0.0-alpha.1.25063.12 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250114.7\n- **Date Produced**: January 14, 2025 11:54:24 PM UTC\n- **Commit**: 92f6da9cb051207ad7ea054ca43a6521fe31b38b\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25061.2 to 10.0.0-alpha.1.25064.7][6]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25061.2 to 10.0.0-alpha.1.25064.7][6]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25061.2 to 10.0.0-alpha.1.25064.7][6]\n\n[6]: https://github.com/dotnet/winforms/compare/4406e6e4f8...92f6da9cb0\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10274)\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10274","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10274)"},{"Id":"2788021993","IsPullRequest":true,"CreatedAt":"2025-01-14T18:49:19","Actor":"vseanreesermsft","Number":"10277","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10277)","Url":"https://github.com/dotnet/wpf/pull/10277","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#10277)"},{"Id":"2783936342","IsPullRequest":false,"CreatedAt":"2025-01-13T13:16:20","Actor":"BekaSlayer","Number":"10273","RawContent":null,"Title":"Localization issue with vertical ScrollBar context menu in Polish etc.","State":"open","Body":"### Description\n\nSame issue like https://github.com/dotnet/wpf/issues/8292\n\n### Reproduction Steps\n\nCreate default wpf app and add grid with scroll.\n\n### Expected behavior\n\n![Image](https://github.com/user-attachments/assets/f66143da-2012-4898-ac1e-62583eee4f17)\n\n### Actual behavior\n\n![Image](https://github.com/user-attachments/assets/e300e2d9-1127-4d92-b274-538ad28f0bca)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nhttps://github.com/dotnet/wpf/issues/8292\n\n### Impact\n\nProbably issue can be on another language too.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10273","RelatedDescription":"Open issue \"Localization issue with vertical ScrollBar context menu in Polish etc.\" (#10273)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-17T03:30:27.2980463Z","RunDurationInMilliseconds":436}