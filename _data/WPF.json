{"Data":{"GitHub":{"Issues":[{"Id":"2568298096","IsPullRequest":true,"CreatedAt":"2024-10-05T20:05:34","Actor":"ThomasGoulet73","Number":"9902","RawContent":null,"Title":"[Managed DWrite] Migrate part of DWriteTypeConverter to managed","State":"open","Body":"Contributes to dotnet/wpf#5305\r\n\r\n## Description\r\nMigrate part of DWriteTypeConverter to managed. I also removed some dead code from my previous Managed DWrite PR. I changed the name of `DWriteTypeConverter` in PresentationCore to `DWriteTypeConverterEx` because it conflicted with the one in DirectWriteForwarder.\r\n\r\n## Customer Impact\r\nIt might be faster and should allow better support of trimming and the support of NativeAOT once everything is migrated to C#.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal testing.\r\n\r\n## Risk\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9902)","Url":"https://github.com/dotnet/wpf/pull/9902","RelatedDescription":"Open PR \"[Managed DWrite] Migrate part of DWriteTypeConverter to managed\" (#9902)"},{"Id":"2568164841","IsPullRequest":false,"CreatedAt":"2024-10-05T15:09:10","Actor":"josefblaha","Number":"9901","RawContent":null,"Title":"Clipboard.SetText fails with CLIPBRD_E_CANT_OPEN","State":"open","Body":"### Description\r\n\r\nMost of the time, the call to `Clipboard.SetText` takes several hundred milliseconds and then fails with CLIPBRD_E_CANT_OPEN in the flush operation.\r\n\r\nThe WinForms implementation works fine. Why is that? What is special about the WPF implementation? What is this \"flushing\" concept anyway? In Win32 API, there is no flushing. You just allocate a buffer and handover its ownership by calling `SetClipboardData`.\r\n\r\n### Reproduction Steps\r\n\r\nAttempt to copy text to clipboard in a WPF app like this:\r\n```csharp\r\nClipboard.SetText(\"text\");\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nIt should place the text in clipboard immediately.\r\n\r\n### Actual behavior\r\n\r\nMost of the time, it takes several hundred milliseconds and then fails with the following exception:\r\n```\r\nSystem.Runtime.InteropServices.COMException (0x800401D0): Module OpenClipboard failed (0x800401D0 (CLIPBRD_E_CANT_OPEN))\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode, IntPtr errorInfo)\r\n   at System.Windows.Clipboard.Flush()\r\n   at WpfCopyTest.MainWindow.CopyButton_OnClick(Object sender, RoutedEventArgs e) in D:\\Documents\\WpfCopyTest\\MainWindow.xaml.cs:line 39\r\n```\r\n\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\nThe same code using `System.Windows.Forms.Clipboard` instead of `System.Windows.Clipboard` works without a problem.\r\n\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n.NET 8.0.400, Windows 11 23H2, x64\r\n\r\nI don't think I have anything unusual installed that would monitor the clipboard and block it.\r\nI tried disabling Windows clipboard history with no effect.\r\n\r\n\r\n### Other information\r\n\r\nIt doesn't look like a widespread issue, perhaps it's configuration specific.\r\n\r\nPossibly related to #9106.\r\n\r\nThe reason I'm involved is that I'm trying to fix the clipboard issue in PowerToys: https://github.com/microsoft/PowerToys/issues/25437","Url":"https://github.com/dotnet/wpf/issues/9901","RelatedDescription":"Open issue \"Clipboard.SetText fails with CLIPBRD_E_CANT_OPEN\" (#9901)"},{"Id":"2568011393","IsPullRequest":true,"CreatedAt":"2024-10-05T12:59:45","Actor":"dotnet-maestro[bot]","Number":"9900","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 2bde0aa3-7165-43c9-100b-08dcbc30275f\r\n- **Build**: 20241003.2\r\n- **Date Produced**: October 3, 2024 6:29:55 PM UTC\r\n- **Commit**: beb827ded6acdff8c7333dfc6583cc984a8f2620\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24501.3 to 9.0.0-beta.24503.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.24501.3 to 9.0.0-beta.24503.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.24501.3 to 9.0.0-beta.24503.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24501.3 to 9.0.0-beta.24503.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e879259c14...beb827ded6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9900)","Url":"https://github.com/dotnet/wpf/pull/9900","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#9900)"},{"Id":"2567951747","IsPullRequest":true,"CreatedAt":"2024-10-05T12:15:28","Actor":"dotnet-maestro[bot]","Number":"9899","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241004.4\r\n- **Date Produced**: October 4, 2024 10:13:12 PM UTC\r\n- **Commit**: f209a925b15bc66ecb9a8825bd9595937bbe3aa1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24503.1 to 10.0.0-beta.24504.4][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24503.1 to 10.0.0-beta.24504.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24503.1 to 10.0.0-beta.24504.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24503.1 to 10.0.0-beta.24504.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/36084e26cd...f209a925b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9899)","Url":"https://github.com/dotnet/wpf/pull/9899","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#9899)"},{"Id":"2567595718","IsPullRequest":true,"CreatedAt":"2024-10-05T02:01:19","Actor":"dotnet-maestro[bot]","Number":"9898","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:381f8ff1-4857-4887-5005-08dcbc3022d8)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 381f8ff1-4857-4887-5005-08dcbc3022d8\r\n- **Build**: 20241004.2\r\n- **Date Produced**: October 4, 2024 2:06:19 PM UTC\r\n- **Commit**: f9ea17ed57c1d2f5c1675f2c20547e53379af754\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-rtm.24502.12 to 9.0.0-rtm.24504.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-rtm.24502.12 to 9.0.0-rtm.24504.2][1]\r\n  - **System.Drawing.Common**: [from 9.0.0-rtm.24502.12 to 9.0.0-rtm.24504.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.CodeDom**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.IO.Ports**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Management**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Speech**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rtm.24501.6 to 9.0.0-rtm.24503.8][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/856508c70a...f9ea17ed57\r\n[2]: https://github.com/dotnet/runtime/compare/58801184a1...3429fee9ed\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:381f8ff1-4857-4887-5005-08dcbc3022d8)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9898)","Url":"https://github.com/dotnet/wpf/pull/9898","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/winforms\" (#9898)"},{"Id":"2567595376","IsPullRequest":true,"CreatedAt":"2024-10-05T02:00:30","Actor":"dotnet-maestro[bot]","Number":"9897","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241004.3\r\n- **Date Produced**: October 4, 2024 5:06:46 PM UTC\r\n- **Commit**: efe6e112d821ad55a060f5c7e244c85a2478e9c3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24503.2 to 10.0.0-alpha.1.24504.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24503.2 to 10.0.0-alpha.1.24504.3][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24503.2 to 10.0.0-alpha.1.24504.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24503.1 to 10.0.0-alpha.1.24503.11][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/caf4fb9f82...efe6e112d8\r\n[2]: https://github.com/dotnet/runtime/compare/2358c592c2...f05bfc40ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9897)","Url":"https://github.com/dotnet/wpf/pull/9897","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#9897)"},{"Id":"2566611025","IsPullRequest":true,"CreatedAt":"2024-10-04T15:11:19","Actor":"dipeshmsft","Number":"9896","RawContent":null,"Title":"[release/9.0] Removing invalid Fluent DataGridColumn styles","State":"open","Body":"Fixes # <!-- Issue Number --> #9755 \r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. --> #9757 \r\n\r\n## Description\r\nRemoves the invalid Fluent DataGridColumn styles, which can cause the application to crash when they are accessed explicitly.\r\n\r\n## Customer Impact\r\nDevelopers trying to iterate through the Fluent theme ResourceDictionary will not face crash in their applications. Will allow easier migration to use the Fluent styles.\r\n\r\n## Regression\r\nNot really, as this is part of the new Fluent styles being introduced in .NET 9. However, anyone who tries to use the new styles may face the following issues.\r\n\r\n## Testing\r\nLocal build, reproduction app and WPF Gallery application.\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nMinimal, no one is using the above styles currently ( except for .NET 9 preview and rc releases )\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9896)","Url":"https://github.com/dotnet/wpf/pull/9896","RelatedDescription":"Open PR \"[release/9.0] Removing invalid Fluent DataGridColumn styles\" (#9896)"},{"Id":"2566235041","IsPullRequest":true,"CreatedAt":"2024-10-04T14:08:43","Actor":"dotnet-maestro[bot]","Number":"9894","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241003.1\r\n- **Date Produced**: October 3, 2024 5:41:45 PM UTC\r\n- **Commit**: 36084e26cde6e5902e0d7ada5b097efd79835682\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24501.6 to 10.0.0-beta.24503.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24501.6 to 10.0.0-beta.24503.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24501.6 to 10.0.0-beta.24503.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24501.6 to 10.0.0-beta.24503.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/121ea593b1...36084e26cd\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9894)","Url":"https://github.com/dotnet/wpf/pull/9894","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9894)"},{"Id":"2566425475","IsPullRequest":true,"CreatedAt":"2024-10-04T13:48:45","Actor":"h3xds1nz","Number":"9895","RawContent":null,"Title":"Add test coverage for public API surface of TextDecorationCollectionConverter","State":"open","Body":"## Description\r\n\r\nAdds test coverage for `TextDecorationCollectionConverter`. Both the original and my PR #9778 have been tested against this.\r\n\r\n- Again, this class is rather inconsistent with others.\r\n    - Static `ConvertFromString` will return `null` on `null` but instance method will throw with `NotSupportedException`\r\n    - While `ConvertTo` claims it only supports `InstanceDescriptor` as `destinationType`, it calls into base which will gladly accept `string` and based on the value type it will either return `string.Empty` (if value was null), or it returns the type name using `ToString`.\r\n- I did not even include those edge cases because they should be rather fixed imho for more consistent behavior.\r\n\r\n## Customer Impact\r\n\r\nImproved test coverage on public surface.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow.\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9895)","Url":"https://github.com/dotnet/wpf/pull/9895","RelatedDescription":"Open PR \"Add test coverage for public API surface of TextDecorationCollectionConverter\" (#9895)"},{"Id":"2565913481","IsPullRequest":true,"CreatedAt":"2024-10-04T09:29:23","Actor":"h3xds1nz","Number":"9893","RawContent":null,"Title":"Remove RunClassConstructor proxy from SecurityHelper for code quality","State":"open","Body":"## Description\r\n\r\nOne of the few leftover remnants from CAS times is the `SecurityHelper.RunClassConstructor` the RunClassConstructor method from `RuntimeHelpers`. There is no reason for this, only makes people wonder what is \"security\" doing here.\r\n\r\nFollows PRs like #9521, #9733 etc.\r\n\r\n## Customer Impact\r\n\r\nBetter code quality of the code base.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nPretty much none.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9893)","Url":"https://github.com/dotnet/wpf/pull/9893","RelatedDescription":"Open PR \"Remove RunClassConstructor proxy from SecurityHelper for code quality\" (#9893)"},{"Id":"2561456386","IsPullRequest":true,"CreatedAt":"2024-10-04T05:52:29","Actor":"dotnet-maestro[bot]","Number":"9877","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241001.6\r\n- **Date Produced**: October 2, 2024 2:24:48 AM UTC\r\n- **Commit**: 121ea593b1d0860ae0e5f5747850a60b23cc2968\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24476.2 to 10.0.0-beta.24501.6][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24476.2 to 10.0.0-beta.24501.6][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24476.2 to 10.0.0-beta.24501.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24476.2 to 10.0.0-beta.24501.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7e8b8f4f32...121ea593b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9877)","Url":"https://github.com/dotnet/wpf/pull/9877","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9877)"},{"Id":"2563875139","IsPullRequest":true,"CreatedAt":"2024-10-04T05:52:17","Actor":"dotnet-maestro[bot]","Number":"9885","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:381f8ff1-4857-4887-5005-08dcbc3022d8)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 381f8ff1-4857-4887-5005-08dcbc3022d8\r\n- **Build**: 20241002.12\r\n- **Date Produced**: October 3, 2024 4:25:48 AM UTC\r\n- **Commit**: 856508c70a15183eaac3328ee9cc2d40b7806435\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-rtm.24502.8 to 9.0.0-rtm.24502.12][1]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-rtm.24502.8 to 9.0.0-rtm.24502.12][1]\r\n  - **System.Drawing.Common**: [from 9.0.0-rtm.24502.8 to 9.0.0-rtm.24502.12][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/388decbda4...856508c70a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:381f8ff1-4857-4887-5005-08dcbc3022d8)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9885)","Url":"https://github.com/dotnet/wpf/pull/9885","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/winforms\" (#9885)"},{"Id":"2560348284","IsPullRequest":true,"CreatedAt":"2024-10-04T05:51:27","Actor":"vseanreesermsft","Number":"9873","RawContent":null,"Title":"Update branding to 8.0.11","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9873)","Url":"https://github.com/dotnet/wpf/pull/9873","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.11\" (#9873)"},{"Id":"2560348120","IsPullRequest":true,"CreatedAt":"2024-10-04T05:50:34","Actor":"vseanreesermsft","Number":"9872","RawContent":null,"Title":"Update branding to 6.0.36","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9872)","Url":"https://github.com/dotnet/wpf/pull/9872","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.36\" (#9872)"},{"Id":"2565462277","IsPullRequest":false,"CreatedAt":"2024-10-04T05:12:03","Actor":"vsfeedback","Number":"9892","RawContent":null,"Title":"MSB3030 Can`t copy resources.dll with localized resources because it missing. Visual Studio 2022","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/MSB3030-Cant-copy-resourcesdll-with-lo/10756922)._\n\n---\nHello, friends!\n\nI have a Visual Studio solution with project of WPF application which I want to localize. This solution also including other class library project with localized resources (Strings.resx, Strings.ru.resx, Strings.uk.resx). For this assembly setted “en” as neutral language. For try build solution i get next exeption:\n\n> 1>C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Enterprise\\\\MSBuild\\\\Current\\\\Bin\\\\amd64\\\\Microsoft.Common.CurrentVersion.targets(4958,5): error MSB3030: failed to copy file “obj\\\\Debug\\\\net8.0-windows10.0.19041.0\\\\ru\\\\Telesyk.SmartTable.Localization.resources.dll” - file not found.  \n> 1>C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Enterprise\\\\MSBuild\\\\Current\\\\Bin\\\\amd64\\\\Microsoft.Common.CurrentVersion.targets(4958,5): error MSB3030: failed to copy file “obj\\\\Debug\\\\net8.0-windows10.0.19041.0\\\\uk\\\\Telesyk.SmartTable.Localization.resources.dll” - file not found.\n\nThis scheme used to work perfectly, but not today. I have not been able to find a solution to this problem for quite a long time.\n\n---\n### Original Comments\n\n#### Feedback Bot on 10/4/2024, 09:15 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/9892","RelatedDescription":"Open issue \"MSB3030 Can`t copy resources.dll with localized resources because it missing. Visual Studio 2022\" (#9892)"},{"Id":"2565162079","IsPullRequest":true,"CreatedAt":"2024-10-03T23:43:33","Actor":"h3xds1nz","Number":"9891","RawContent":null,"Title":"Add test coverage for public API surface of MouseActionConverter","State":"open","Body":"## Description\r\n\r\nAdds test coverage for `MouseActionConverter`. I've also fixed an unintentional behavioral change I've introduced with #9676, which would mean it wouldn't throw `InvalidEnumArgumentException` due to passing wrong value type to the exception.\r\n\r\n- As I've outlined previously, there are basically two (in my opinion) bugs in the class\r\n    - `CanConvertTo` throws `InvalidCastException` due to a cast when you pass an `int`\r\n    - The same thing happens in `ConvertTo` when you pass an `int` within range\r\n\r\n## Customer Impact\r\n\r\nImproved test coverage on public surface.\r\n\r\n## Regression\r\n\r\nFixing my own oversight at the same time.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9891)","Url":"https://github.com/dotnet/wpf/pull/9891","RelatedDescription":"Open PR \"Add test coverage for public API surface of MouseActionConverter\" (#9891)"},{"Id":"2565146256","IsPullRequest":true,"CreatedAt":"2024-10-03T23:22:13","Actor":"ThomasGoulet73","Number":"9890","RawContent":null,"Title":"Replace PartialList with ReadOnlyCollection","State":"open","Body":"## Description\r\nReadOnlyCollection does the same thing as PartialList but it's more optimized due to the fact that it does not support wrapping a range of a list and instead just forwards the read-only call to the wrapped list. It's also better to use a collection from the BCL than our own where possible.\r\n\r\nI also removed the constructor that allowed passing a list without a range to discourage the use of PartialList when we don't need the range feature and I removed an unused static method in PartialList.\r\n\r\nHere's benchmark where I do a foreach on PartialList vs ReadOnlyCollection:\r\n```\r\n| Method             | Mean     | Error    | StdDev   | Ratio | Gen0   | Allocated | Alloc Ratio |\r\n|------------------- |---------:|---------:|---------:|------:|-------:|----------:|------------:|\r\n| PartialList        | 34.57 ns | 0.334 ns | 0.313 ns |  1.00 | 0.0043 |      72 B |        1.00 |\r\n| ReadOnlyCollection | 20.38 ns | 0.181 ns | 0.161 ns |  0.59 | 0.0024 |      40 B |        0.56 |\r\n```\r\n\r\n## Customer Impact\r\nBetter perf.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal testing.\r\n\r\n## Risk\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9890)","Url":"https://github.com/dotnet/wpf/pull/9890","RelatedDescription":"Open PR \"Replace PartialList with ReadOnlyCollection\" (#9890)"},{"Id":"2564852948","IsPullRequest":false,"CreatedAt":"2024-10-03T19:29:16","Actor":"robert-abeo","Number":"9889","RawContent":null,"Title":"Fluent2 TabItem MinWidth Is Too Large","State":"open","Body":"### Description\n\nA MinWidth for TabItem of 180 is far too large for the Fluent theme. Remember WinUI doesn't have a TabControl, it has a TabView with page tabs that can be torn off and re-ordered, etc. It's a different design/use-case.\r\n\r\nFor existing WPF apps a MinWidth of 180 breaks the UI and requires re-templating.\n\n### Reproduction Steps\n\nhttps://github.com/dotnet/wpf/blob/673c35418e5416e486e6651b69b89712a36fcf5c/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Styles/TabControl.xaml#L228\n\n### Expected behavior\n\n1. The MinWidth should be much smaller -- in fact removing it is better\r\n2. There needs to be a lightweight styling resource to set this without re-templating (if it stays)\r\n\r\nNote that WinUI doesn't set a value at all here:\r\n\r\nhttps://github.com/microsoft/microsoft-ui-xaml/blob/d74a0332cf0d5e58f12eddce1070fa7a79b4c2db/src/controls/dev/TabView/TabView.xaml#L296\n\n### Actual behavior\n\n180 is hard-coded\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9889","RelatedDescription":"Open issue \"Fluent2 TabItem MinWidth Is Too Large\" (#9889)"},{"Id":"2564844251","IsPullRequest":true,"CreatedAt":"2024-10-03T19:24:31","Actor":"h3xds1nz","Number":"9888","RawContent":null,"Title":"Optimize FigureLength struct conversion to string, reduce allocations","State":"open","Body":"## Description\r\n\r\nOptimizes conversion of `FigureLength` to `string`. Simplifies Can* methods, adds some documentation.\r\n- The benchmark is done with #9887 which allows for better perf navigating through the methods.\r\n\r\n### Simple ToString conversion\r\n\r\n| Method    | figureLength | Mean [ns]   | Error [ns] | StdDev [ns] | Gen0   | Code Size [B] | Allocated [B] |\r\n|---------- |------------- |------------:|-----------:|------------:|-------:|--------------:|--------------:|\r\n| Original  | 999          | 102.3501 ns |  2.0471 ns |   3.0640 ns | 0.0048 |       4,171 B |          80 B |\r\n| PR__EDIT  | 999          |  76.9590 ns |  1.3950 ns |   1.2367 ns | 0.0029 |         957 B |          48 B |\r\n\r\n```csharp\r\nyield return new FigureLength(999.0, FigureUnitType.Column);\r\n```\r\n\r\n## Customer Impact\r\n\r\nImproved performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, conversion tests.\r\n\r\n## Risk\r\n\r\nLow; do note that #9887 should be taken first imho.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9888)","Url":"https://github.com/dotnet/wpf/pull/9888","RelatedDescription":"Open PR \"Optimize FigureLength struct conversion to string, reduce allocations\" (#9888)"},{"Id":"2564843812","IsPullRequest":true,"CreatedAt":"2024-10-03T19:24:16","Actor":"h3xds1nz","Number":"9887","RawContent":null,"Title":"Redefine FigureLength as readonly struct to prevent defensive copies","State":"open","Body":"## Description\r\n\r\nSince `FigureLength` is immutable by design, we should adjust it to `readonly struct`. This will also prevent defensive copies. It will also improve code quality. **This is not a breaking change**.\r\n\r\n- I've also simplified the ctor a bit, which will also offer a very minor performance benefit (it does not matter).\r\n- Minor cleanup of the usual `IEquatable` functions to save precious code lines and simplify it.\r\n- The value was being set to `0.0` in case of `Auto` but when queried, it is set to `1.0`.\r\n     - I couldn't see a reason for it, the only thing that made sense was the hash code creation but the hash code is not unique even for basic values. It is too easy to get duplicates. This should be fixed later, I'll create a tracking issue.\r\n\r\n## Customer Impact\r\n\r\nPossibly a bit of perf and a clear directive that `FigureLength` and all its methods are not adjusting the state of the `struct`.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, base testing, type creation, etc.\r\n\r\n## Risk\r\n\r\nI do not asses any, since the struct is immutable and this is not a breaking change. It is a change to a public type but such changes have been done previously in runtime, see for example [#97421](https://github.com/dotnet/runtime/pull/97421).\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9887)","Url":"https://github.com/dotnet/wpf/pull/9887","RelatedDescription":"Open PR \"Redefine FigureLength as readonly struct to prevent defensive copies\" (#9887)"},{"Id":"2564038777","IsPullRequest":false,"CreatedAt":"2024-10-03T13:14:25","Actor":"robert-abeo","Number":"9886","RawContent":null,"Title":"Wrong Resource Usage in Fluent2 Button Styles","State":"open","Body":"### Description\n\nThe following line has the wrong resource. It's using a level 2 resource key `ControlElevationBorderBrush` but should be using the button-specific level 3 one.\r\n\r\nhttps://github.com/dotnet/wpf/blob/673c35418e5416e486e6651b69b89712a36fcf5c/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Styles/Button.xaml#L58\r\n\r\nLooks like the accent button styles are incorrect in a similar way. In fact the resource keys we should be using are commented out. I suspect elevation brush needs to be fixed overall.\n\n### Reproduction Steps\n\nSee code.\n\n### Expected behavior\n\nWe should be using the proper resource key:\r\n\r\nhttps://github.com/dotnet/wpf/blob/673c35418e5416e486e6651b69b89712a36fcf5c/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Themes/Fluent.Dark.xaml#L341\r\n\r\nWhich for some reason is commented out. All these resources need to be re-actived and used in the templates. This includes the accent button ones:\r\n\r\nhttps://github.com/dotnet/wpf/blob/673c35418e5416e486e6651b69b89712a36fcf5c/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Themes/Fluent.Dark.xaml#L327-L329\n\n### Actual behavior\n\nAs described above.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9886","RelatedDescription":"Open issue \"Wrong Resource Usage in Fluent2 Button Styles\" (#9886)"},{"Id":"2563560520","IsPullRequest":false,"CreatedAt":"2024-10-03T09:30:06","Actor":"h3xds1nz","Number":"9884","RawContent":null,"Title":"[API Proposal]: Mark BrowserInteropHelper/DynamicScriptObject as obsolete","State":"open","Body":"### Background and motivation\r\n\r\nEven though XBAP is unsupported and all of the code inside is a dead code (#9855 and #9865), those classes weren't marked as obsolete during removal. Marking it as obsolete will help to developers migrating apps from .NET Framework, and will emit clear message/warnings.\r\n\r\n### API Proposal\r\n\r\n```diff\r\nnamespace System.Windows.Interop;\r\n\r\n+ [Obsolete(DiagnosticId = Obsoletions.XBAPDiagId)]\r\n  public static class BrowserInteropHelper\r\n  {\r\n  }\r\n\r\n+ [Obsolete(DiagnosticId = Obsoletions.XBAPDiagId)]\r\n  public sealed class DynamicScriptObject : DynamicObject\r\n  {\r\n  }\r\n```\r\n\r\n### Risks\r\n\r\nThere are only benefits.","Url":"https://github.com/dotnet/wpf/issues/9884","RelatedDescription":"Open issue \"[API Proposal]: Mark BrowserInteropHelper/DynamicScriptObject as obsolete\" (#9884)"},{"Id":"2561589698","IsPullRequest":true,"CreatedAt":"2024-10-03T08:56:28","Actor":"dotnet-maestro[bot]","Number":"9878","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 2bde0aa3-7165-43c9-100b-08dcbc30275f\r\n- **Build**: 20241001.3\r\n- **Date Produced**: October 1, 2024 4:34:18 PM UTC\r\n- **Commit**: e879259c14f58a55983b9a70dd3034cc650ee961\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24473.1 to 9.0.0-beta.24501.3][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.24473.1 to 9.0.0-beta.24501.3][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.24473.1 to 9.0.0-beta.24501.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24473.1 to 9.0.0-beta.24501.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1230437de1...e879259c14\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9878)","Url":"https://github.com/dotnet/wpf/pull/9878","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#9878)"},{"Id":"2560529770","IsPullRequest":true,"CreatedAt":"2024-10-03T08:46:52","Actor":"dotnet-maestro[bot]","Number":"9876","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:381f8ff1-4857-4887-5005-08dcbc3022d8)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 381f8ff1-4857-4887-5005-08dcbc3022d8\r\n- **Build**: 20241002.8\r\n- **Date Produced**: October 2, 2024 5:09:36 PM UTC\r\n- **Commit**: 388decbda4d707d996bb1820f17d6fa805f6e47c\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-rtm.24501.3 to 9.0.0-rtm.24502.8][3]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-rtm.24501.3 to 9.0.0-rtm.24502.8][3]\r\n  - **System.Drawing.Common**: [from 9.0.0-rtm.24501.3 to 9.0.0-rtm.24502.8][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.CodeDom**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Data.Odbc**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Data.OleDb**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.DirectoryServices**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.IO.Packaging**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.IO.Ports**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Management**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Reflection.Context**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Security.Permissions**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Speech**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rtm.24480.7 to 9.0.0-rtm.24501.6][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/5ef6d46e55...388decbda4\r\n[4]: https://github.com/dotnet/runtime/compare/3d3a8ed3d5...58801184a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:381f8ff1-4857-4887-5005-08dcbc3022d8)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9876)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/9876","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/winforms\" (#9876)"},{"Id":"2563106550","IsPullRequest":true,"CreatedAt":"2024-10-03T04:38:46","Actor":"ThomasGoulet73","Number":"9883","RawContent":null,"Title":"Improve font performance in FamilyCollection.GetFontFromFamily","State":"open","Body":"## Description\r\nI improved performance and allocations by using the new GetAlternateLookup introduced in .Net 9.0. This is a followup to dotnet/wpf#7794 where GetAlternateLookup wasn't available at the time.\r\n\r\nHere's the result of my benchmark:\r\n```\r\n|          Method |     Mean |   Error |  StdDev | Ratio | RatioSD |   Gen0 | Allocated | Alloc Ratio |\r\n|---------------- |---------:|--------:|--------:|------:|--------:|-------:|----------:|------------:|\r\n| LookupFamilyOld | 344.6 ns | 4.59 ns | 4.29 ns |  1.00 |    0.00 | 0.0706 |   1.16 KB |        1.00 |\r\n| LookupFamilyNew | 333.0 ns | 3.23 ns | 2.86 ns |  0.97 |    0.02 | 0.0687 |   1.13 KB |        0.97 |\r\n```\r\n\r\n## Customer Impact\r\nBetter perf.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nI ran FamilyCollection.GetFontFromFamily with different combinations to make sure that the result was the same.\r\n\r\n## Risk\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9883)","Url":"https://github.com/dotnet/wpf/pull/9883","RelatedDescription":"Open PR \"Improve font performance in FamilyCollection.GetFontFromFamily\" (#9883)"},{"Id":"2562947997","IsPullRequest":true,"CreatedAt":"2024-10-03T01:47:41","Actor":"JeremyKuhne","Number":"9882","RawContent":null,"Title":"Remove SecurityCriticalData/Class","State":"open","Body":"These are CAS holdovers from .NET Framework that add unnecessary complexity. (They are making it more difficult for me to do interop work.)\r\n\r\nUses more modern / safer syntax where I've modified code. I've also removed a few asserts where they then fall over on the next line anyway.\r\n\r\nSimilar to and should follow #7161 and #6561\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9882)","Url":"https://github.com/dotnet/wpf/pull/9882","RelatedDescription":"Open PR \"Remove SecurityCriticalData/Class\" (#9882)"},{"Id":"2562419789","IsPullRequest":false,"CreatedAt":"2024-10-02T18:49:15","Actor":"brswan","Number":"9881","RawContent":null,"Title":"When Popup (combobox, tooltip, menu item, etc) is shown within an app with a DataGrid, the DataGrid becomes slow and less responsive.","State":"open","Body":"### Description\r\n\r\nWhen Popup (combobox, tooltip, menu item, etc) is shown within an app with a DataGrid, the DataGrid becomes slow and less responsive.  When debugging this problem, we output properties from before and after the popup was shown.  It appears the datagrid has several properties that get changed when only a popup is shown.  Properties of interest include SizeToContentV, HasStarCellsU, HasGroup3CellsInAutoRows.\r\n\r\n![Screenshot 2024-10-02 134404](https://github.com/user-attachments/assets/852933de-68b2-47e6-b514-74dc0632f7d8)\r\n\r\nI ran a performance profiler and can see that after the popup is shown the Layout time increases by a major factor as well as the frame rate drops substantially.\r\n\r\n![Screenshot 2024-10-02 142645](https://github.com/user-attachments/assets/eaf1fd5a-c75e-41cc-a3cd-cecbc31e8334)\r\n\r\n\r\nI have tried to fix the datagrid column width and row height to no avail.  I have also overridden the cell template with fixed size values and this did not work either.\r\n\r\n\r\n![datagrid-02](https://github.com/user-attachments/assets/18e4e010-afc2-4346-99c5-d3fe9b7ad944)\r\n\r\n[DataGridTest.zip](https://github.com/user-attachments/files/17234655/DataGridTest.zip)\r\n\r\n### Reproduction Steps\r\n\r\n- Create an app with a combobox and datagrid (see attachment).  \r\n- Run the app and vertically scroll.  Scrolling will be smooth without lag.  \r\n- Open the combobox to show the items panel.  You do not need to select an item - the panel just needs to be shown\r\n- Close combobox panel\r\n- Vertically scroll the datagrid and you will see lag (it may be slight lag but it is an indicator of the problem)\r\n\r\nApps with more complex UIs will display this issue more apparently.  \r\n\r\nIncluded app has a button Export that will export all properties of the app.  You can export before following the steps above.  Then export again once slowness occurs and you will see properties are changed from before and after combobox items are displayed.  Please see screen shot from Description for comparison.\r\n\r\n### Expected behavior\r\n\r\nDatagrid should behave the same way before  a Popup (combobox, tooltip, menu item, etc) is shown and after.\r\n\r\n### Actual behavior\r\n\r\nDatagrid is responsive before a Popup (combobox, tooltip, menu item, etc) is shown.  After the popup is shown, datagrid slows.\r\n\r\n### Regression?\r\n\r\nProblem exists in NET6 and NET8\r\n\r\n### Known Workarounds\r\n\r\nNone at this time\r\n\r\n### Impact\r\n\r\nDatagrid in the app becomes slow and sluggish to use.  Our app is a real-time app that requires the datagrid to be responsive to user input.\r\n\r\n### Configuration\r\n\r\nWindows 11 Pro 23H2 OS Build 22631.4169\r\nVisual Studio 2022 Version 17.9.6\r\nx64\r\n\r\n### Other information\r\n\r\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9881","RelatedDescription":"Open issue \"When Popup (combobox, tooltip, menu item, etc) is shown within an app with a DataGrid, the DataGrid becomes slow and less responsive.\" (#9881)"},{"Id":"2560397882","IsPullRequest":false,"CreatedAt":"2024-10-01T23:50:48","Actor":"BenCamps","Number":"9874","RawContent":null,"Title":"When window closed with DataGrid cell is in edit mode, active edits are not committed","State":"open","Body":"### Description\r\n\r\nThe in WPF general default behavior for an editable control that supports text input is to push binding update to source when the control loses focus. \r\nWhen the user closes the active window and focused elements automatically loose focus and this causes any edits on the focused control to be pushed before the window closes. \r\nHowever with the DataGrid control, if the window is closed and there is a text cell in edit mode it doesn't cause the binding to push the cell contents.\r\n\r\nThis issue seems to be due to the cell control retaining keyboard focus after it has lost logical focus. Which would make since if the cell was composed of multiple separate controls which could lose and gain focus while the cell was still being edited. \r\nSee [DataGridCell.OnAnyLostFocus](https://github.com/dotnet/wpf/blob/0d959af10519bdb23c19cd435611f10bdebe78bf/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/DataGridCell.cs#L553)\r\nHowever when logical focus leaves the visual hierarchy of the current cell, then the current cell selection should be cleared. \r\n\r\n\r\n\r\n### Reproduction Steps\r\n\r\n1.  Create a window with a DataGrid element\r\n2.  Bind the DataGrid to a collection of items\r\n\r\nWhile running program \r\n 1. Begin editing DataGrid \r\n 2. Change cell value\r\n 3. Close window\r\n\r\nAttached simple application for reproducing issue: [WpfDataGridAppClosingIssue.zip](https://github.com/user-attachments/files/17216658/WpfDataGridAppClosingIssue.zip)\r\ncell\r\n\r\n### Expected behavior\r\n\r\nWhen app closes current edits are committed\r\n\r\n### Actual behavior\r\n\r\ncell edits are not committed when window closes\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\nSet Binding.UpdateSourceTrigger to UpdateSourceTrigger.LostFocus for each editable data grid column. \r\nThis workaround method does have some side effects: that I'm aware of, cells always push binding when cell lose focus rather than when row exited.\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9874","RelatedDescription":"Open issue \"When window closed with DataGrid cell is in edit mode, active edits are not committed\" (#9874)"},{"Id":"2560309393","IsPullRequest":true,"CreatedAt":"2024-10-01T22:16:08","Actor":"h3xds1nz","Number":"9871","RawContent":null,"Title":"Replace ArrayList in BitmapMetadataBlockWriter, fix RemoveWriterByIndex bug","State":"open","Body":"## Description\r\n\r\nReplaces backing `ArrayList` in `BitmapMetadataBlockWriter` and `BitmapMetadataBlockWriterEnumerator`.\r\n\r\nAlso fixes a bug in `RemoveWriterByIndex` function, which would previously not remove the writer.\r\n\r\nSample benchmark showing difference between `ArrayList` and `List<T>` with reference type can be found f.e. in #9432.\r\n\r\n## Customer Impact\r\n\r\nImproved performance, decreased allocations, a bug fix.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, work with `BitmapMetadata`.\r\n\r\n## Risk\r\n\r\nLow but note that things might actually work properly and a bit faster now.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9871)","Url":"https://github.com/dotnet/wpf/pull/9871","RelatedDescription":"Open PR \"Replace ArrayList in BitmapMetadataBlockWriter, fix RemoveWriterByIndex bug\" (#9871)"},{"Id":"2560250702","IsPullRequest":true,"CreatedAt":"2024-10-01T21:32:05","Actor":"h3xds1nz","Number":"9870","RawContent":null,"Title":"Replace ArrayList with List<GlyphRun> in PtsHost for performance/code quality","State":"open","Body":"## Description\r\n\r\nReplaces `ArrayList` with `List<GlyphRun>` to function as a temporary array. Improves code quality by swapping to generic collection. Also makes `AddGlyphRunRecursive` function static as it does not use any instance members.\r\n\r\nSample benchmark showing difference between `ArrayList` and `List<T>` with reference type can be found f.e. in #9432.\r\n\r\n## Customer Impact\r\n\r\nImproved performance, getting rid of `ArrayList`.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone, changes are minimal.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9870)","Url":"https://github.com/dotnet/wpf/pull/9870","RelatedDescription":"Open PR \"Replace ArrayList with List<GlyphRun> in PtsHost for performance/code quality\" (#9870)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-06T03:30:29.3626249Z","RunDurationInMilliseconds":493}