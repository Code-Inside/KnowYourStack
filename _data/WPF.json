{"Data":{"GitHub":{"Issues":[{"Id":"2959067843","IsPullRequest":true,"CreatedAt":"2025-03-30T19:57:13","Actor":"h3xds1nz","Number":"10681","RawContent":null,"Title":"Avoid boxing booleans and allocations in UncommonField<bool>","State":"open","Body":"Fixes #10677\r\nFixes #4114\r\n\r\n## Description\r\n\r\nEven though `UncommonField` itself is generic, the underlying value storage (EffectiveValues) is not, therefore values saved in uncommon field end up being boxed same way `DependencyProperty` values are.\r\n\r\nA common case is storing a `boolean` (mostly `true`), which we can easily special-case using our `BooleanBoxes`.\r\n\r\nWhile I could fix `Unset` values for value types, this wasn't originally done so that would be a behavioral change (though it would probably help in some cases to free up some memory).\r\n\r\n## Customer Impact\r\n\r\nSee #10677 for impact of this change.\r\n\r\n## Regression\r\n\r\nDepends how you look at it, given the history. But it was boxing in the original, so I guess not.\r\n\r\n## Testing\r\n\r\nLocal build, verifying functionality accross different scenarios (`GridView`, `HiearchicalVirtualization` via `TreeView`/`VirtualizingStackPanel`, etc.)\r\n\r\n## Risk\r\n\r\nLow, this just adds a generic path for `bool` that is otherwise eliminated.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10681)","Url":"https://github.com/dotnet/wpf/pull/10681","RelatedDescription":"Open PR \"Avoid boxing booleans and allocations in UncommonField<bool>\" (#10681)"},{"Id":"2959043192","IsPullRequest":true,"CreatedAt":"2025-03-30T19:03:48","Actor":"h3xds1nz","Number":"10680","RawContent":null,"Title":"Remove unused dead code in ElementUtil, make class static","State":"open","Body":"## Description\r\n\r\nRemoves dead code inside `ElementUtil` which is everything but 1 method. Also makes the class `static` as it is nothing more but a static method holder that has no instance (previously prevented using `private` constructor).\r\n\r\nLastly a format has been done since I removed most of the code anyways.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone, just unused dead code.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10680)","Url":"https://github.com/dotnet/wpf/pull/10680","RelatedDescription":"Open PR \"Remove unused dead code in ElementUtil, make class static\" (#10680)"},{"Id":"2959041472","IsPullRequest":false,"CreatedAt":"2025-03-30T19:00:10","Actor":"h3xds1nz","Number":"10679","RawContent":null,"Title":"Invoke in ElementUtil and ElementProxy cause unnecessary delegate allocations","State":"open","Body":"_I might bundle this up with some Dispatcher improvements to support generic invocations at least for internal use, so it would be a bigger PR. We will see, won't be right away._\n\n### Description\n\nThe `Invoke` method from `ElementUtil` is causing unnecessary allocations due to the attempt to catch exceptions from another thread (if invoked on) and re-throw on the current thread. This further comes the from already allocating delegates inside `ElementProxy` that use this `Invoke` exclusively.\n\n### Showcase\n\n![Image](https://github.com/user-attachments/assets/353dad78-c91f-497b-a338-1cf7a7becf9e)\n\n### Repro\n\nNote: This repro is specifically crafted to highlight an issue like this.\n\nhttps://github.com/h3xds1nz/UIAPerformancePitfalls","Url":"https://github.com/dotnet/wpf/issues/10679","RelatedDescription":"Open issue \"Invoke in ElementUtil and ElementProxy cause unnecessary delegate allocations\" (#10679)"},{"Id":"2959041370","IsPullRequest":false,"CreatedAt":"2025-03-30T19:00:00","Actor":"h3xds1nz","Number":"10678","RawContent":null,"Title":"Unnecessary allocations in UIElementAutomationPeer of Matrix/Transform","State":"open","Body":"Note that I will submit a PR in the coming days for this issue, so its more of an FYI.\n\n### Description\n\n`CalculateVisibleBoundingRect` attempts to perform an intersection out of matrix transformation from the AP owner to the parent, using matrix inversion. In most simple cases, there will either be identity matrix or just a standard matrix transform.\n\nIn the case displayed, `TrySimpleTransformToAncestor` returns a `Matrix`, which then inside `InternalTransformToAncestor` creates a `MatrixTransform`, which is forced to box this `Matrix`, just to immediately invoke `Inverse` property (inherited via `Transform` abstraction), which is then inverted and once again, a `MatrixTransform` is created and `Matrix` must be boxed.\n\nAll this can be special-cased with a few lines avoided and done on stack instead, which in this case would save around 800 MB, which is most of what this app has allocated.\n\n### Showcase\n\n![Image](https://github.com/user-attachments/assets/cf0b9212-1a0e-47da-a3a1-90721b702a28)\n\n### Repro\n\nNote: This repro is specifically crafted to highlight an issue like this.\n\nhttps://github.com/h3xds1nz/UIAPerformancePitfalls","Url":"https://github.com/dotnet/wpf/issues/10678","RelatedDescription":"Open issue \"Unnecessary allocations in UIElementAutomationPeer of Matrix/Transform\" (#10678)"},{"Id":"2959041252","IsPullRequest":false,"CreatedAt":"2025-03-30T18:59:44","Actor":"h3xds1nz","Number":"10677","RawContent":null,"Title":"Unnecessary allocations in UncommonField<T> for bool","State":"open","Body":"_Note that I will submit a PR in the coming days for this issue, so its more of an FYI._\n\n### Description\n\n#4220 attempted to fix this problem but it completely changed the behaviour and so it was reverted (plus, it won't really fix the problem as the values then get boxed during insertion anyways (and it won't prevent insertion due to the fact that most paths are inserting `true` and default is `false`)).\n\nBefore it was reverted, in #6528, Stephen added boolean path (it gets compiled only for the `bool` generic paths) which solves the problem for insertions as well, but during the reversal in #7426 this was made useless once again, because you now box during `ReferenceEquals` check, so that optimization is pointless.\n\nMy repro is for UIA but the same will occur for HiearchicalVirtualization for example (see #4114).\n\n### Showcase\n\n![Image](https://github.com/user-attachments/assets/24b6ce80-b8a8-4388-9426-9e0ffa28aeb6)\n\n### Repro\n\nNote: This repro is specifically crafted to highlight an issue like this.\n\nhttps://github.com/h3xds1nz/UIAPerformancePitfalls","Url":"https://github.com/dotnet/wpf/issues/10677","RelatedDescription":"Open issue \"Unnecessary allocations in UncommonField<T> for bool\" (#10677)"},{"Id":"2959041215","IsPullRequest":false,"CreatedAt":"2025-03-30T18:59:37","Actor":"h3xds1nz","Number":"10676","RawContent":null,"Title":"Unnecessary delegate/closure allocations in UIElementAutomationPeer","State":"open","Body":"_Note that I will submit a PR in the coming days for this issue, so its more of an FYI._\n\n### Description\n\n`GetChildrenCore` and `GetRootAutomationPeer` both allocate a new delegate and closure each time they execute with the call to `iterate` function that the callback is passed into. Given that both capture a single local parameter, we can easily just modify the function signature and pass the parameter by `ref`, saving easily 220 MB in this case.\n\n### Showcase\n\n![Image](https://github.com/user-attachments/assets/b1e7d42c-d972-4343-a77b-4239d16c748c)\n\n### Repro\n\nNote: This repro is specifically crafted to highlight an issue like this.\n\nhttps://github.com/h3xds1nz/UIAPerformancePitfalls","Url":"https://github.com/dotnet/wpf/issues/10676","RelatedDescription":"Open issue \"Unnecessary delegate/closure allocations in UIElementAutomationPeer\" (#10676)"},{"Id":"2958969040","IsPullRequest":true,"CreatedAt":"2025-03-30T16:35:32","Actor":"h3xds1nz","Number":"10675","RawContent":null,"Title":"[StyleCleanUp] Use ArgumentOutOfRangeException throw helper (CA1512)","State":"open","Body":"Fixes #10674 \r\n\r\n## Description\r\n\r\nFixes the leftover violations via suppressions as there's currently a bug I've described in https://github.com/dotnet/roslyn-analyzers/issues/7617. To be honest, `Duration` could simply implement `IEquatable<T>`/`IComparable<T>`.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10675)","Url":"https://github.com/dotnet/wpf/pull/10675","RelatedDescription":"Open PR \"[StyleCleanUp] Use ArgumentOutOfRangeException throw helper (CA1512)\" (#10675)"},{"Id":"2958967561","IsPullRequest":false,"CreatedAt":"2025-03-30T16:32:13","Actor":"h3xds1nz","Number":"10674","RawContent":null,"Title":"CA1512: Use ArgumentOutOfRangeException throw helper","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1512","Url":"https://github.com/dotnet/wpf/issues/10674","RelatedDescription":"Open issue \"CA1512: Use ArgumentOutOfRangeException throw helper\" (#10674)"},{"Id":"2958048568","IsPullRequest":true,"CreatedAt":"2025-03-29T14:21:38","Actor":"h3xds1nz","Number":"10673","RawContent":null,"Title":"Replace ArrayList from CompositionAdorner with List<AttributeRange>","State":"open","Body":"## Description\r\n\r\nReplaces `ArrayList` with `List<AttributeRange>` to increase type safety and promote strongly-typed code. Most of the perf benefits beyond t0 were now erased in post .NET 9 as the `ArrayList` methods are usually successfully de-abstracted but that doesn't really matter as its still a benefit to use a generic collection type instead e.g. to bypass cast checks.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow, just a type swap on private collection.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10673)","Url":"https://github.com/dotnet/wpf/pull/10673","RelatedDescription":"Open PR \"Replace ArrayList from CompositionAdorner with List<AttributeRange>\" (#10673)"},{"Id":"2957754224","IsPullRequest":true,"CreatedAt":"2025-03-29T05:01:25","Actor":"dotnet-maestro[bot]","Number":"10672","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: [20250328.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2674409)\n- **Date Produced**: March 29, 2025 3:06:21 AM UTC\n- **Commit**: [7d1967403f5b12406763c666f41e3358bb542ced](https://github.com/dotnet/arcade/commit/7d1967403f5b12406763c666f41e3358bb542ced)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25177.3 to 10.0.0-beta.25178.2][2]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25177.3 to 10.0.0-beta.25178.2][2]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25177.3 to 10.0.0-beta.25178.2][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25177.3 to 10.0.0-beta.25178.2][2]\n\n[2]: https://github.com/dotnet/arcade/compare/d66a7cfe1b...7d1967403f\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10672)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10672","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10672)"},{"Id":"2957724237","IsPullRequest":true,"CreatedAt":"2025-03-29T04:12:11","Actor":"ThomasGoulet73","Number":"10671","RawContent":null,"Title":"[Cleanup] Use named arguments in PresentationFramework","State":"open","Body":"Contributes to dotnet/wpf#10018\r\n\r\n## Description\r\nI replaced comments specifying an argument name with named arguments, which were introduced in C# 7. This improves readability and maintainability.\r\n\r\nMy changes are in 2 commits. The first commit is automated changes using regexes and the second commit is manual changes where the comment is outdated or formatted differently than the parameter name.\r\n\r\n**Note: The compiled IL is identical.**\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + validated IL.\r\n\r\n## Risk\r\nLow to none.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10671)","Url":"https://github.com/dotnet/wpf/pull/10671","RelatedDescription":"Open PR \"[Cleanup] Use named arguments in PresentationFramework\" (#10671)"},{"Id":"2957614094","IsPullRequest":false,"CreatedAt":"2025-03-29T01:26:38","Actor":"jpribele","Number":"10670","RawContent":null,"Title":"crash when running with Address Sanitizer on","State":"open","Body":"### Description\n\nThis is a bit of shot in the dark. We getting this crash when using are application with and address sanitizer turned on. \n```\n- =================================================================\n- ==11160==ERROR: AddressSanitizer: unknown-crash on address 0x7ff8362de130 at pc 0x7ff839a93d49 bp 0x00b5dbe7ed00 sp 0x00b5dbe7e4d0\n- READ of size 8 at 0x7ff8362de130 thread T11\n- ==11160==*** WARNING: Failed to initialize DbgHelp!              ***\n- ==11160==*** Most likely this means that the app is already      ***\n- ==11160==*** using DbgHelp, possibly with incompatible flags.    ***\n- ==11160==*** Due to technical reasons, symbolization might crash ***\n- ==11160==*** or produce wrong results.                           ***\n-     #0 0x7ff839a93d48 in _asan_wrap_GlobalUnlock+0xb8 (clang_rt.asan_dynamic-x86_64.dll+0x180043d48)\n-     #1 0x7ff836158740 in RenderOptions_EnableHardwareAccelerationInRdp+0x568c0 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x180058740)\n-     #2 0x7ff83615f1b5 in RenderOptions_EnableHardwareAccelerationInRdp+0x5d335 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18005f1b5)\n-     #3 0x7ff83615e46f in RenderOptions_EnableHardwareAccelerationInRdp+0x5c5ef (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18005e46f)\n-     #4 0x7ff83615549d in RenderOptions_EnableHardwareAccelerationInRdp+0x5361d (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18005549d)\n-     #5 0x7ff836154bf6 in RenderOptions_EnableHardwareAccelerationInRdp+0x52d76 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x180054bf6)\n-     #6 0x7ff8361547d2 in RenderOptions_EnableHardwareAccelerationInRdp+0x52952 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800547d2)\n-     #7 0x7ff836153e5e in RenderOptions_EnableHardwareAccelerationInRdp+0x51fde (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x180053e5e)\n-     #8 0x7ff83623f85c in MilUtility_ArcToBezier+0xaf4c (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18013f85c)\n-     #9 0x7ff83622cec8 in InteropDeviceBitmap_GetAsSoftwareBitmap+0x19c8 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18012cec8)\n-     #10 0x7ff83622ccc4 in InteropDeviceBitmap_GetAsSoftwareBitmap+0x17c4 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18012ccc4)\n-     #11 0x7ff83621983c in MILCreateFactory+0x9bc (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18011983c)\n-     #12 0x7ff83620787f in MilContent_DetachFromHwnd+0x5750f (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18010787f)\n-     #13 0x7ff836206a6f in MilContent_DetachFromHwnd+0x566ff (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x180106a6f)\n-     #14 0x7ff83620529e in MilContent_DetachFromHwnd+0x54f2e (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x18010529e)\n-     #15 0x7ff8361f45b7 in MilContent_DetachFromHwnd+0x44247 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800f45b7)\n-     #16 0x7ff8361f4428 in MilContent_DetachFromHwnd+0x440b8 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800f4428)\n-     #17 0x7ff8361f4539 in MilContent_DetachFromHwnd+0x441c9 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800f4539)\n-     #18 0x7ff8361b130d in MilContent_DetachFromHwnd+0xf9d (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b130d)\n-     #19 0x7ff8361b148e in MilContent_DetachFromHwnd+0x111e (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b148e)\n-     #20 0x7ff8361b11a2 in MilContent_DetachFromHwnd+0xe32 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b11a2)\n-     #21 0x7ff839aa4d2e in _asan_default_suppressions__dll+0x130e (clang_rt.asan_dynamic-x86_64.dll+0x180054d2e)\n-     #22 0x7ff8a9c17373 in BaseThreadInitThunk+0x13 (C:\\Windows\\System32\\KERNEL32.DLL+0x180017373)\n-     #23 0x7ff8aba9cc90 in RtlUserThreadStart+0x20 (C:\\Windows\\SYSTEM32\\ntdll.dll+0x18004cc90)\n- \n- Address 0x7ff8362de130 is a wild pointer inside of access range of size 0x000000000008.\n- SUMMARY: AddressSanitizer: unknown-crash (clang_rt.asan_dynamic-x86_64.dll+0x180043d48) in _asan_wrap_GlobalUnlock+0xb8\n- Shadow bytes around the buggy address:\n-   0x11fb1c95bbd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bbe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bbf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n- =>0x11fb1c95bc20: 00 00 00 00 00 00[00]00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n-   0x11fb1c95bc70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n- Shadow byte legend (one shadow byte represents 8 application bytes):\n-   Addressable:           00\n-   Partially addressable: 01 02 03 04 05 06 07\n-   Heap left redzone:       fa\n-   Freed heap region:       fd\n-   Stack left redzone:      f1\n-   Stack mid redzone:       f2\n-   Stack right redzone:     f3\n-   Stack after return:      f5\n-   Stack use after scope:   f8\n-   Global redzone:          f9\n-   Global init order:       f6\n-   Poisoned by user:        f7\n-   Container overflow:      fc\n-   Array cookie:            ac\n-   Intra object redzone:    bb\n-   ASan internal:           fe\n-   Left alloca redzone:     ca\n-   Right alloca redzone:    cb\n- Thread T11 created by T7 here:\n-     #0 0x7ff839aa6b37 in _asan_wrap_CreateThread+0x77 (clang_rt.asan_dynamic-x86_64.dll+0x180056b37)\n-     #1 0x7ff8361b128d in MilContent_DetachFromHwnd+0xf1d (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b128d)\n-     #2 0x7ff8361b0881 in MilContent_DetachFromHwnd+0x511 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b0881)\n-     #3 0x7ff8361b112e in MilContent_DetachFromHwnd+0xdbe (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b112e)\n-     #4 0x7ff8361b072d in MilContent_DetachFromHwnd+0x3bd (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b072d)\n-     #5 0x7ff8361b054d in MilContent_DetachFromHwnd+0x1dd (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b054d)\n-     #6 0x7ff8361b00d7 in MILRelease+0x181d7 (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\wpfgfx_cor3.dll+0x1800b00d7)\n-     #7 0x7ff83d96a144  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationCore.dll+0x1802fa144)\n-     #8 0x7ff83d92a9e0  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationCore.dll+0x1802ba9e0)\n-     #9 0x7ff83d92c100  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationCore.dll+0x1802bc100)\n-     #10 0x7ff83d991a52  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationCore.dll+0x180321a52)\n-     #11 0x7ff83d99a49c  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationCore.dll+0x18032a49c)\n-     #12 0x7ff83e8b505e  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationFramework.dll+0x18068505e)\n-     #13 0x7ff83df07db3  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\System.Xaml.dll+0x180067db3)\n-     #14 0x7ff83df11e8d  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\System.Xaml.dll+0x180071e8d)\n-     #15 0x7ff83dee2046  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\System.Xaml.dll+0x180042046)\n-     #16 0x7ff83dee03eb  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\System.Xaml.dll+0x1800403eb)\n-     #17 0x7ff83dededd8  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\System.Xaml.dll+0x18003edd8)\n-     #18 0x7ff83e6afb12  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationFramework.dll+0x18047fb12)\n-     #19 0x7ff83e6af5fc  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationFramework.dll+0x18047f5fc)\n-     #20 0x7ff83e6af365  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationFramework.dll+0x18047f365)\n-     #21 0x7ff83e6b5275  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationFramework.dll+0x180485275)\n-     #22 0x7ff83e535fcf  (D:\\packages\\DotNetSdk\\8.0.303_21038920\\installed\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.7\\PresentationFramework.dll+0x180305fcf)\n-     #23 0x7ff7e7c76d9f  (<unknown module>)```\n\n### Reproduction Steps\n\nNo real repro steps. \n\n### Expected behavior\n\nNo crash\n\n### Actual behavior\n\nnot crash\n\n### Regression?\n\nno idea if it is a regression or not\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10670","RelatedDescription":"Open issue \"crash when running with Address Sanitizer on\" (#10670)"},{"Id":"2956952484","IsPullRequest":true,"CreatedAt":"2025-03-28T19:01:25","Actor":"dotnet-maestro[bot]","Number":"10669","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25176.7 to 10.0.0-preview.4.25177.9 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: [20250329.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2674965)\n- **Date Produced**: March 30, 2025 6:11:36 AM UTC\n- **Commit**: [a3ece863faf99059663a526b3af04c1eb638d123](https://github.com/dotnet/winforms/commit/a3ece863faf99059663a526b3af04c1eb638d123)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25177.2 to 10.0.0-preview.4.25179.1][4]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25177.2 to 10.0.0-preview.4.25179.1][4]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25177.2 to 10.0.0-preview.4.25179.1][4]\n\n[4]: https://github.com/dotnet/winforms/compare/5d908dd29c...a3ece863fa\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10669)\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10669","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10669)"},{"Id":"2955932564","IsPullRequest":true,"CreatedAt":"2025-03-28T11:48:07","Actor":"h3xds1nz","Number":"10668","RawContent":null,"Title":"[StyleCleanUp] Avoid legacy suppression format, use GlobalSuppressions (IDE0077)","State":"open","Body":"Fixes #10375\r\n\r\n## Description\r\n\r\nSending this in as #10373 was fixed in the code base. Uses the new typed format for suppressions and moves the UIA's `CodeQuality_Approved` into the de facto standardized `GlobalSuppressions` file for consistency with other projects.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10668)","Url":"https://github.com/dotnet/wpf/pull/10668","RelatedDescription":"Open PR \"[StyleCleanUp] Avoid legacy suppression format, use GlobalSuppressions (IDE0077)\" (#10668)"},{"Id":"2954831032","IsPullRequest":false,"CreatedAt":"2025-03-28T11:31:47","Actor":"Symbai","Number":"10662","RawContent":null,"Title":"StringFormat on Tooltip doesn't work","State":"closed","Body":"### Description\n\nI think this bug exists since forever. If you're trying to use StringFormat on tooltip it won't work. If this is expected or can't be fixed I suggest to hide StringFormat in Intellisense. But I have the feeling it can be fixed. When it accepts text and displays text it should be able to honor StringFormat.\n\nSee https://stackoverflow.com/questions/197095/wpf-binding-with-stringformat-doesnt-work-on-tooltips\n\n### Reproduction Steps\n\n```XAML\n<TextBlock\n    Text=\"{Binding Number, StringFormat=N0}\"\n    ToolTip=\"{Binding Number, StringFormat=N0}\" />\n```\n\n`public int Number { get; set; } = 1_000_000;`\n\n### Expected behavior\n\n1,000,000\n\n### Actual behavior\n\n1000000\n\n### Regression?\n\nNo\n\n### Known Workarounds\n\n```XAML\n<TextBlock Text=\"{Binding Number, StringFormat=N0}\">\n    <TextBlock.ToolTip>\n        <ToolTip \n            Content=\"{Binding Number, StringFormat=N0}\"\n            ContentStringFormat=\"N0\" />\n    </TextBlock.ToolTip>\n</TextBlock>\n```\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET 9\nx64\nWindows 11\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10662","RelatedDescription":"Closed issue \"StringFormat on Tooltip doesn't work\" (#10662)"},{"Id":"2955851678","IsPullRequest":false,"CreatedAt":"2025-03-28T11:13:53","Actor":"h3xds1nz","Number":"10667","RawContent":null,"Title":"Dead code / CAS / XBAP removals tracker for .NET 10","State":"open","Body":"This issue serves for tracking dead code removals and clean up from CAS / XBAP that wasn't previously done. Issues either already made it (or hopefully will, for this effort to be worth it) make it into .NET 10:\n\n- [x] #6561\n- [x] #7161 \n- [x] #7485 \n- [x] #9292 \n- [x] #9698 \n- [ ] #9736\n- [x] #9744\n- [x] #9749\n- [x] #9838\n- [x] #9855\n- [x] #9858 \n- [x] #9862\n- [x] #9863\n- [x] #9865\n- [x] #9882\n- [x] #9943\n- [ ] #9975 (passed tests)\n- [ ] #9990\n- [ ] #10220\n- [ ] #10227 \n- [x] #10236 \n- [ ] #10245\n- [ ] #10388\n- [ ] #10635\n- [ ] #10636\n- [ ] #10641 \n- [ ] #10664 \n- [ ] #10666\n- [ ] #10680","Url":"https://github.com/dotnet/wpf/issues/10667","RelatedDescription":"Open issue \"Dead code / CAS / XBAP removals tracker for .NET 10\" (#10667)"},{"Id":"2955768708","IsPullRequest":true,"CreatedAt":"2025-03-28T10:46:52","Actor":"h3xds1nz","Number":"10666","RawContent":null,"Title":"Remove WinRT ReflectionHelper dead code (compiled, not used)","State":"open","Body":"## Description\r\n\r\nRemoves the `ReflectionHelper` static class from the `WindowsRuntime` namespace. We do use `ReflectionHelper`, but that's one put in `System.Windows.Markup` that's used pretty much by all libraries and is a different from this impl.\r\n\r\nThis one popped up in `netfx4` during the inclusion of `WinRT` into the codebase but wasn't used.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone, unused dead code.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10666)","Url":"https://github.com/dotnet/wpf/pull/10666","RelatedDescription":"Open PR \"Remove WinRT ReflectionHelper dead code (compiled, not used)\" (#10666)"},{"Id":"2955033899","IsPullRequest":true,"CreatedAt":"2025-03-28T10:30:56","Actor":"dotnet-maestro[bot]","Number":"10663","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: [20250327.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2673483)\n- **Date Produced**: March 27, 2025 10:51:35 PM UTC\n- **Commit**: [d66a7cfe1bad9e444b94b8a2a2676f60be07173c](https://github.com/dotnet/arcade/commit/d66a7cfe1bad9e444b94b8a2a2676f60be07173c)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25175.4 to 10.0.0-beta.25177.3][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25175.4 to 10.0.0-beta.25177.3][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25175.4 to 10.0.0-beta.25177.3][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25175.4 to 10.0.0-beta.25177.3][1]\n\n[1]: https://github.com/dotnet/arcade/compare/1560b3406a...d66a7cfe1b\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10663)","Url":"https://github.com/dotnet/wpf/pull/10663","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10663)"},{"Id":"2950548397","IsPullRequest":true,"CreatedAt":"2025-03-28T10:30:30","Actor":"dotnet-maestro[bot]","Number":"10658","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25174.9 to 10.0.0-preview.4.25176.7 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: [20250327.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2673594)\n- **Date Produced**: March 28, 2025 1:41:59 AM UTC\n- **Commit**: [5d908dd29c55b43598b14ece5a8e5429b965c058](https://github.com/dotnet/winforms/commit/5d908dd29c55b43598b14ece5a8e5429b965c058)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25174.6 to 10.0.0-preview.4.25177.2][5]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25174.6 to 10.0.0-preview.4.25177.2][5]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25174.6 to 10.0.0-preview.4.25177.2][5]\n\n[5]: https://github.com/dotnet/winforms/compare/5e9dab651d...5d908dd29c\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10658)\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10658","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10658)"},{"Id":"2955516048","IsPullRequest":true,"CreatedAt":"2025-03-28T09:27:15","Actor":"h3xds1nz","Number":"10664","RawContent":null,"Title":"Remove ShaperBuffers/OpenTypeLayoutCache and NetFX v3.X dead code","State":"open","Body":"## Description\r\n\r\nRemoves `ShaperBuffers`/`ShapingOptions`/`ShaperFeaturesList` classes that are pure dead code. Actually unused since `netfx4` after swapping in `PresentationCore` from the old engine (`IShaper`/`IShapingEngine`) and `PresentationFontCache`.\r\n\r\n`CachedFontFace` / `CachedFontFamily` / `FontCacheLogic` / `CachedCompositeFamily` / `IPCCacheManager` are not included in compilation at all but they were in the repo for no reason, really, since we use `DWrite` now.\r\n\r\n`FontCacheConstants` were included in the compilation but the class is just full of constants.\r\n\r\n`FeatureTags` are `OpenType` feature tags that are publicly known and can be retrieved anytime.\r\n\r\nCode removed in `OpenTypeLayout` / `OpenTypeCommon` cascades by removing one uncalled method after another; `OpenTypeLayoutCache` is only used by one of these uncalled methods.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, app run with typography, opentype fonts stuff.\r\n\r\n## Risk\r\n\r\nLow as it is a lot to remove but all is unused dead code.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10664)","Url":"https://github.com/dotnet/wpf/pull/10664","RelatedDescription":"Open PR \"Remove ShaperBuffers/OpenTypeLayoutCache and NetFX v3.X dead code\" (#10664)"},{"Id":"2951640607","IsPullRequest":true,"CreatedAt":"2025-03-28T08:33:37","Actor":"siagupta0202","Number":"10660","RawContent":null,"Title":"Making visibility of ScrollViewer as Auto in ComboBox","State":"closed","Body":"Fixes #10571 \r\n\r\n## Description\r\n\r\nMakes visibility of ScrollViewer as Auto in ComboBox\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\nNo\r\n## Testing\r\n\r\nlocal build pass, tested with sample applications\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10660)","Url":"https://github.com/dotnet/wpf/pull/10660","RelatedDescription":"Closed or merged PR \"Making visibility of ScrollViewer as Auto in ComboBox\" (#10660)"},{"Id":"2949594301","IsPullRequest":true,"CreatedAt":"2025-03-28T05:59:14","Actor":"siagupta0202","Number":"10655","RawContent":null,"Title":"Fixes color for AccentButtonBackgroundPressed in HC mode and sets Foreground for MouseOver trigger in AccentButtonStyle","State":"closed","Body":"Fixes #10413 \r\n\r\n## Description\r\n\r\nFixes color for AccentButtonBackgroundPressed in HC mode and sets Foreground for MouseOver trigger in AccentButtonStyle.\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\nNo\r\n## Testing\r\n\r\nlocal build pass, tested with sample applications\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10655)","Url":"https://github.com/dotnet/wpf/pull/10655","RelatedDescription":"Closed or merged PR \"Fixes color for AccentButtonBackgroundPressed in HC mode and sets Foreground for MouseOver trigger in AccentButtonStyle\" (#10655)"},{"Id":"2953379650","IsPullRequest":true,"CreatedAt":"2025-03-27T15:40:52","Actor":"mmitche","Number":"10661","RawContent":null,"Title":"Explicitly set PackageProjectUrl","State":"closed","Body":"Avoids automatic override when doing VMR builds.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10661)","Url":"https://github.com/dotnet/wpf/pull/10661","RelatedDescription":"Closed or merged PR \"Explicitly set PackageProjectUrl\" (#10661)"},{"Id":"2948421436","IsPullRequest":false,"CreatedAt":"2025-03-27T05:22:11","Actor":"vsfeedback","Number":"10652","RawContent":null,"Title":"WPF desktop application Tooltip appears briefly before disappearing.","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/WPF-desktop-application-Tooltip-appears-/10878438)._\n\n---\n[severity:It bothers me. A fix would be nice]\n**It makes Tooltips very unreliable in recommended high resolution screen modes.**\nMoving mouse over control Tooltip briefly appears before dissappearing.\nIf I move the mouse over the Tooltip control and stop moving the mouse no problem. But if I move the mouse a minuscule amount the Tooltip disappears.\n\nThe situation can be greatly improved by reducing the display resolution.\n\nThis suggests the WPF Tooltip implementation display and close are controlled only by MouseMove events. Then, with the slightest of mouse movements (especially high-res displays) the Tooltip display is cancelled. \n\n---\n### Original Comments\n\n#### Feedback Bot on 25/3/2025, 02:57 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/10652","RelatedDescription":"Closed issue \"WPF desktop application Tooltip appears briefly before disappearing.\" (#10652)"},{"Id":"2950911557","IsPullRequest":true,"CreatedAt":"2025-03-26T22:32:37","Actor":"h3xds1nz","Number":"10659","RawContent":null,"Title":"Add test coverage for public API surface of VirtualizationCacheLengthConverter","State":"open","Body":"## Description\r\n\r\nAdds test coverage for `VirtualizationCacheLengthConverter`. Sending these to support the #9364 PR.\r\n\r\nAlso adds the project for `PresentationFramework` unit tests as we don't have it yet.\r\n\r\n## Customer Impact\r\n\r\nImproved test coverage on public API surface.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10659)","Url":"https://github.com/dotnet/wpf/pull/10659","RelatedDescription":"Open PR \"Add test coverage for public API surface of VirtualizationCacheLengthConverter\" (#10659)"},{"Id":"2950114377","IsPullRequest":true,"CreatedAt":"2025-03-26T15:59:14","Actor":"h3xds1nz","Number":"10657","RawContent":null,"Title":"Fix measuring passes in AdornerLayer of the underlying Adorner elements","State":"open","Body":"Fixes #10640 \r\n\r\n## Description\r\n\r\nMarks `AdornerLayer` dirty when any of the `Adorners` is dirty and forces a measure pass so that the position is updated.\r\n\r\nDue to the aggressive performance optimization to only re-render when size/position changes (including transforms),\r\na case such as this has been overlooked so the position of the respective Adorner's is wrong while all flags are correct.\r\n\r\nThis could have been workarounded via synchronous `UpdateLayout` pass called by the user or invoking visual re-invalidation but due to its asynchronous nature this would only work the second time around.\r\n\r\nI have also removed the redundant assigment of cached `RenderSize`/`Transform` and in-lined the two calls instead.\r\n\r\nThis shall not add any unnecessary overhead according to my testing.\r\n\r\n## Customer Impact\r\n\r\nIf the fix is not taken, customers will continue to observe unwanted behaviour and will be required to use computionally expensive and synchronous updates to receive the correct position for Adorners upon adorned `UIElement` changes.\r\n\r\n## Regression\r\n\r\nNot according to my tests, this seems to be present both on `.NET Core` and `NETFX`.\r\n\r\n## Testing\r\n\r\nLocal build, repro tests from #10640, tests with adorners.\r\n\r\n## Risk\r\n\r\nMedium, it would be beneficial to test more real-life examples of adorners.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10657)","Url":"https://github.com/dotnet/wpf/pull/10657","RelatedDescription":"Open PR \"Fix measuring passes in AdornerLayer of the underlying Adorner elements\" (#10657)"},{"Id":"2949618204","IsPullRequest":false,"CreatedAt":"2025-03-26T13:28:50","Actor":"siagupta0202","Number":"10656","RawContent":null,"Title":"[Fluent] Fix ComboBox Style","State":"open","Body":"### Description\nThis is a subissue to track the issues related to ComboBox apart from the ones mentioned in the parent issue #10393. Currently we have the following issues:\n\n- [x] #10571 \n- [ ] #10470 \n- [ ] #10359 \n- [ ] Missing resource as mentioned in #10571 ","Url":"https://github.com/dotnet/wpf/issues/10656","RelatedDescription":"Open issue \"[Fluent] Fix ComboBox Style\" (#10656)"},{"Id":"2949293775","IsPullRequest":false,"CreatedAt":"2025-03-26T11:45:43","Actor":"n9","Number":"10654","RawContent":null,"Title":"A way to handle exceptions from ValueChangedEventManager","State":"open","Body":"WPF uses the `ValueChangedEventManager` to track .NET objects that do not implement the  `INotifyPropertyChanged` interface. There is already an issue to add a runtime switch option to disable the `ValueChangedEventManager` (https://github.com/dotnet/wpf/issues/10148).\n\nThis issue is not about disabling the `ValueChangedEventManager` completely, but about being able to handle an exception when for example `Equals` (used in ``ConcurrentDictionary`2.TryGetValue``) throws an `Exception`, as in the following example, where the exception is caused by the state of COM objects:\n\n```\nSystem.Runtime.InteropServices.COMException (0x80040201): An event was unable to invoke any of the subscribers (0x80040201)\n at UIAutomationClient.CUIAutomation8Class.IUIAutomation6_CompareElements(IUIAutomationElement el1, IUIAutomationElement el2)\n at MyApp.AutomationElement.Equals(Object obj)\n at System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(TKey key, TValue& value)\n at System.ComponentModel.PropertyDescriptor.RemoveValueChanged(Object component, EventHandler handler)\n at MS.Internal.Data.ValueChangedEventManager.ValueChangedRecord.StopListening()\n at MS.Internal.Data.ValueChangedEventManager.Purge(Object source, Object data, Boolean purgeAll)\n at MS.Internal.WeakEventTable.Purge(Boolean purgeAll)\n at MS.Internal.WeakEventTable.OnShutDown()\n at System.Windows.Threading.Dispatcher.ShutdownImplInSecurityContext(Object state)\n at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\n at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n--- End of stack trace from previous location ---\n at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\n at System.Windows.Threading.Dispatcher.ShutdownImpl()\n at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\n at System.Windows.Application.RunDispatcher(Object ignore)\n at System.Windows.Application.RunInternal(Window window)\n at MyApp.Main()\n```","Url":"https://github.com/dotnet/wpf/issues/10654","RelatedDescription":"Open issue \"A way to handle exceptions from ValueChangedEventManager\" (#10654)"},{"Id":"2948484501","IsPullRequest":false,"CreatedAt":"2025-03-26T06:00:22","Actor":"Raghav-Sudhakar","Number":"10653","RawContent":null,"Title":"When FlowDirection is set to RightToLeft text is misplaced","State":"open","Body":"### Description\n\nWhen setting the flowdirection from RightToLeft and set the Text property as \"25 days.8 hours:30 minutes:10 sec\". The output text appears as days.8 hours:30 minutes:10 sec 25.\n\n### Reproduction Steps\n\n1. Run the sample.\n2. You can notice that when i set the text it is misplaced.\n\n### Expected behavior\n\nWhen i set the text as \"25 days.8 hours:30 minutes:10 sec\". I need the text to appear as \"25 days.8 hours:30 minutes:10 sec\".\n\n### Actual behavior\n\nWhen i set the text as \"25 days.8 hours:30 minutes:10 sec\" it appears as days.8 hours:30 minutes:10 sec 25.\n\n### Other information\n\n[WpfApp1.zip](https://github.com/user-attachments/files/19461272/WpfApp1.zip)","Url":"https://github.com/dotnet/wpf/issues/10653","RelatedDescription":"Open issue \"When FlowDirection is set to RightToLeft text is misplaced\" (#10653)"},{"Id":"2948406785","IsPullRequest":true,"CreatedAt":"2025-03-26T05:39:54","Actor":"dotnet-maestro[bot]","Number":"10651","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: [20250325.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2671881)\n- **Date Produced**: March 25, 2025 10:46:04 PM UTC\n- **Commit**: [1560b3406a8ebf9e267f7a1dddbf5238dd378081](https://github.com/dotnet/arcade/commit/1560b3406a8ebf9e267f7a1dddbf5238dd378081)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25174.1 to 10.0.0-beta.25175.4][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25174.1 to 10.0.0-beta.25175.4][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25174.1 to 10.0.0-beta.25175.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25174.1 to 10.0.0-beta.25175.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/cf68aacc3f...1560b3406a\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10651)","Url":"https://github.com/dotnet/wpf/pull/10651","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10651)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-31T03:30:26.1416262Z","RunDurationInMilliseconds":445}