{"Data":{"GitHub":{"Issues":[{"Id":"2761468088","IsPullRequest":true,"CreatedAt":"2024-12-28T05:02:54","Actor":"dotnet-maestro[bot]","Number":"10210","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20241226.1\n- **Date Produced**: December 27, 2024 1:43:05 AM UTC\n- **Commit**: ae8d2a08f1021624ae37cdd5b65f6c05e58a051b\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/ae0923d109...ae8d2a08f1\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10210)","Url":"https://github.com/dotnet/wpf/pull/10210","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10210)"},{"Id":"2761220159","IsPullRequest":false,"CreatedAt":"2024-12-27T19:46:53","Actor":"alraseensaad","Number":"10209","RawContent":null,"Title":"TreeViewItem Chevron show wrong angel direction on FlowDirection=\"RightToLeft\"","State":"open","Body":"### Description\n\nThe Chevron icon of the TreeViewItem is displayed on wrong angle direction when the FlowDirection is set to RightToLeft or when running in Arabic cultures.\n\n### Reproduction Steps\n\ncreate a TreeView with children and sub children and sent the FlowDirection to RightToLeft \n```\n <TreeView Grid.Column=\"1\"\n           FlowDirection=\"RightToLeft\">\n     <TreeViewItem Header=\"Root\">\n         <TreeViewItem Header=\"Child 1\">\n             <TreeViewItem Header=\"Grandchild 1\" />\n             <TreeViewItem Header=\"Grandchild 2\" />\n         </TreeViewItem>\n         <TreeViewItem Header=\"Child 2\">\n             <TreeViewItem Header=\"Grandchild 3\" />\n             <TreeViewItem Header=\"Grandchild 4\" />\n         </TreeViewItem>\n     </TreeViewItem>\n </TreeView>\n```\n\n### Expected behavior\n\nThe chevron icon points to the left (<) when the TreeViewItem is closed and changes to point downward (v) when the TreeViewItem is open.\n![Image](https://github.com/user-attachments/assets/1b96d0ed-5b16-48f4-bd2f-167b09a40a67)\n\n\n### Actual behavior\n\nThe chevron icon points to the right (>) when the TreeViewItem is closed and changes to point upward (^) when the TreeViewItem is open.\n![Image](https://github.com/user-attachments/assets/35071c2f-3087-47d4-aa94-3452e16c090b)\n\n\n### Regression?\n\nit just appears on flaunt theme\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\nwindows 11\ndotnet 9\n\n### Other information\n\n\n[TreeViewChevron.zip](https://github.com/user-attachments/files/18263093/TreeViewChevron.zip)\n","Url":"https://github.com/dotnet/wpf/issues/10209","RelatedDescription":"Open issue \"TreeViewItem Chevron show wrong angel direction on FlowDirection=\"RightToLeft\"\" (#10209)"},{"Id":"2761188466","IsPullRequest":true,"CreatedAt":"2024-12-27T19:01:02","Actor":"dotnet-maestro[bot]","Number":"10208","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24625.1 to 10.0.0-alpha.1.24626.2 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20241227.1\n- **Date Produced**: December 28, 2024 6:36:19 AM UTC\n- **Commit**: 03734f7ef8c7eed09c6e10b3ac138313f79b6012\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24626.1 to 10.0.0-alpha.1.24627.1][3]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24626.1 to 10.0.0-alpha.1.24627.1][3]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24626.1 to 10.0.0-alpha.1.24627.1][3]\n\n[3]: https://github.com/dotnet/winforms/compare/6c67825a18...03734f7ef8\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10208)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10208","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10208)"},{"Id":"2760965203","IsPullRequest":true,"CreatedAt":"2024-12-27T14:43:52","Actor":"dotnet-maestro[bot]","Number":"10207","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241226.1\r\n- **Date Produced**: December 27, 2024 1:43:05 AM UTC\r\n- **Commit**: ae8d2a08f1021624ae37cdd5b65f6c05e58a051b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24623.1 to 10.0.0-beta.24626.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ae0923d109...ae8d2a08f1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10207)","Url":"https://github.com/dotnet/wpf/pull/10207","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10207)"},{"Id":"2758643091","IsPullRequest":true,"CreatedAt":"2024-12-27T06:05:59","Actor":"lindexi","Number":"10204","RawContent":null,"Title":"Reduce magic numbers in FrugalList.cs","State":"closed","Body":"\r\n## Description\r\n\r\nCode clean. Replacing hard-coded value with const.\r\n\r\n## Customer Impact\r\n\r\nNone.\r\n\r\n## Regression\r\n\r\nNone.\r\n\r\n## Testing\r\n\r\nNone.\r\n\r\n## Risk\r\n\r\nNone. I do not change any behavior\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10204)","Url":"https://github.com/dotnet/wpf/pull/10204","RelatedDescription":"Closed or merged PR \"Reduce magic numbers in FrugalList.cs\" (#10204)"},{"Id":"2757180411","IsPullRequest":true,"CreatedAt":"2024-12-27T05:22:15","Actor":"dotnet-maestro[bot]","Number":"10202","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20241223.1\n- **Date Produced**: December 23, 2024 3:50:45 PM UTC\n- **Commit**: ae0923d109be7ddf2a5d99e3bf685f72132edeaf\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24622.1 to 10.0.0-beta.24623.1][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24622.1 to 10.0.0-beta.24623.1][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24622.1 to 10.0.0-beta.24623.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24622.1 to 10.0.0-beta.24623.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/8589bd2a21...ae0923d109\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10202)","Url":"https://github.com/dotnet/wpf/pull/10202","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10202)"},{"Id":"2754899311","IsPullRequest":true,"CreatedAt":"2024-12-27T05:21:50","Actor":"dotnet-maestro[bot]","Number":"10201","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241222.1\r\n- **Date Produced**: December 22, 2024 10:48:30 PM UTC\r\n- **Commit**: 8589bd2a216025d753b5f107081bfa28a2d51bb8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4f2968fce0...8589bd2a21\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10201)","Url":"https://github.com/dotnet/wpf/pull/10201","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10201)"},{"Id":"2753313207","IsPullRequest":true,"CreatedAt":"2024-12-27T05:21:23","Actor":"dotnet-maestro[bot]","Number":"10198","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20241226.1\n- **Date Produced**: December 27, 2024 1:44:21 AM UTC\n- **Commit**: 6c67825a183011bf73abf12e8b72aa548590bcb4\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24617.1 to 10.0.0-alpha.1.24626.1][11]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24617.1 to 10.0.0-alpha.1.24626.1][11]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24617.1 to 10.0.0-alpha.1.24626.1][11]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Management**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Speech**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24625.1][12]\n\n[11]: https://github.com/dotnet/winforms/compare/d195a5f103...6c67825a18\n[12]: https://github.com/dotnet/runtime/compare/aa9cd3b323...2b60d82ef3\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10198)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10198","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10198)"},{"Id":"2746789529","IsPullRequest":false,"CreatedAt":"2024-12-27T05:15:30","Actor":"vsfeedback","Number":"10190","RawContent":null,"Title":"New regression for AssemblyName in WPF apps","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/New-regression-for-AssemblyName-in-WPF-a/10805141)._\n\n---\n[severity:It's more difficult to complete my work] [regression] [worked-in:17.11/net8]\n## History\nThis regression has similarities to https://github.com/dotnet/wpf/issues/5711 and my own https://developercommunity.visualstudio.com/t/Some-build-properties-not-handled-correc/1612152. There is however a distinct new aspect to it.\n\nI have a sln with several projects (class libraries, wpf libraries and winform libraries). To have consistent naming i defined AssemblyName in Directory.Build.props using macros. This worked fine but broke in wpf projects when updating from net6 to net7, as described in the linked issues.\n\n### Work around then\nMy work around was to keep the macro-based AssemblyName in Directory.Build.props, but to override it with a hard coded AssemblyName in the csproj-files of the wpf projects. This way i kept the dynamic naming for most projects, except for the wpf projects. This has worked fine through net7 and net8.\n\n## New issue\nOn update to net9 a similar problem appeared, regardless of updating projects themselves from net8 to net9 or not. It turns out, after some research, that it occurs when there is an AssemblyName element **both** in csproj **and** in Directory.Build.props, which is exactly what have as my previous workaround.\n\nSo maybe I can go back to only having AssemblyName in Directory.Build.props? Nope. Only thing that works is to have AssemblyName **only** in csproj in my wpf project. For all other projects it still works fine using Directory.Build.props. **Catch-22!**\n\n### Work around now\nIt turns out that AssemblyName in csproj now works with macros, also in wpf projects. So I can work around this problem by defining the desired assembly name in a temporary macro in Directory.Build.props and the define AssemblyName is csproj by referencing this temporary macro.\n\n### Example\nI have attached a simple wpf project to illustrate the problem. Must be loaded on a computer **with net9** installed. It comes with the problem in place. Comment out AssemblyName line in Directory.Build.props to make it work (ReBuild!)\n\n## Future\nInvestigation these issues has been quite time consuming and disrupting. First time it took quite long and I only stumbled across the pattern and  the work around. This time I had a hunch from last time and was able nail it in a few hours, still with quite some luck.\n\nBt why are wpf project so special? Why don't they have the same build property resolution as other projects? This needs to be consolidated so we do not have more of these surprises in the future. I used to look forward to updates on .net and VS. I hope I can in the future as well.\n\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/4/2024, 06:46 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/10190","RelatedDescription":"Closed issue \"New regression for AssemblyName in WPF apps\" (#10190)"},{"Id":"2760399664","IsPullRequest":false,"CreatedAt":"2024-12-27T05:04:28","Actor":"vsfeedback","Number":"10206","RawContent":null,"Title":"Linegeometry works not with other GeometryTypes","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Linegeometry-works-not-with-other-Geomet/10818976)._\n\n---\n[severity:It's more difficult to complete my work] [regression]\nIf i Use LineGeometry together with other GeometryTypes, the Debugger generates a criticaal Errormesssage, almost if Line Geometry ia the Last geometryobject\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/26/2024, 03:22 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/10206","RelatedDescription":"Open issue \"Linegeometry works not with other GeometryTypes\" (#10206)"},{"Id":"2760399257","IsPullRequest":false,"CreatedAt":"2024-12-27T05:03:54","Actor":"vsfeedback","Number":"10205","RawContent":null,"Title":"Problems with Rendering a StackLayout","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Problems-with-Rendering-a-StackLayout/10818521)._\n\n---\n[severity:I'm unable to use this version] [regression]\nWithin My Code i Use a StackLayout, it is Fillable,but not Renderable, The Contents of the StackLayout will be not Rendered, still the Stacklayout has the right Orientation\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/25/2024, 06:52 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Markus Lein on 12/25/2024, 05:43 PM: \n\n(private comment, text removed)","Url":"https://github.com/dotnet/wpf/issues/10205","RelatedDescription":"Open issue \"Problems with Rendering a StackLayout\" (#10205)"},{"Id":"2757645876","IsPullRequest":false,"CreatedAt":"2024-12-24T11:32:03","Actor":"ushasundarajan","Number":"10203","RawContent":null,"Title":"Application freezes and becomes unresponsive while using Fluent theme of PresentationFrameWork in .NET 90 project","State":"open","Body":"### Description\n\nWe have updated all our controls to support NET 9.0.  When using Fluent theme of PresentationFrameWork, the application freezes and becomes unresponsive within few seconds. The application runs fine while using other themes like Aero, Luna, Classic of PresentationFrameWork. We have previously reported similar issue related to custom themes and already reported in https://github.com/dotnet/wpf/issues/10020 that crashes the application. \n\nTried the below code as well that was recommended:\n\n<ItemGroup>\n    <RuntimeHostConfigurationOption Include=\"Switch.System.Windows.Controls.DisableDynamicResourceOptimization\" Value=\"true\" />\n</ItemGroup>\n\nThe issue is replicating even after using this! \n\n### Reproduction Steps\n\nWe’ve attached samples project demonstrating this issue and video reference for Issue replication.\n\nReplication Procedure:\n\n- Run the below sample\n- Right click on the search bar of PropertyGrid\n- See the application freezes and becomes unreponsive\n\n**Samples:**\n\nIssue replicating sample while using Fluent theme of PresentationFrameWork:\n[PropertyGridNet90.zip](https://github.com/user-attachments/files/18239002/PropertyGridNet90.zip)\n\n**Issue replicating videos:**\nhttps://github.com/user-attachments/assets/48cb5069-4dd9-4c03-b566-8349d23854b9\n\nhttps://github.com/user-attachments/assets/7b4e9b93-f300-4339-aa58-be46f349be0a\n\n\n\n\n\n\n\n### Expected behavior\n\nWhile right clicking the search bar while using Fluent theme the application should not freeze, and the context menu should be visible.\n\n### Actual behavior\n\nWhile right clicking the search bar while using Fluent theme the application freezes and closes automatically within few seconds.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10203","RelatedDescription":"Open issue \"Application freezes and becomes unresponsive while using Fluent theme of PresentationFrameWork in .NET 90 project\" (#10203)"},{"Id":"2753762564","IsPullRequest":true,"CreatedAt":"2024-12-23T14:54:18","Actor":"dotnet-maestro[bot]","Number":"10200","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20241222.1\n- **Date Produced**: December 22, 2024 10:48:30 PM UTC\n- **Commit**: 8589bd2a216025d753b5f107081bfa28a2d51bb8\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][2]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][2]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24617.2 to 10.0.0-beta.24622.1][2]\n\n[2]: https://github.com/dotnet/arcade/compare/4f2968fce0...8589bd2a21\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10200)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10200","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10200)"},{"Id":"2753654129","IsPullRequest":false,"CreatedAt":"2024-12-21T00:11:13","Actor":"seanhalliday","Number":"10199","RawContent":null,"Title":"TextMetrics+FullTextLine.Dispose() gets slower over time until a GC","State":"open","Body":"I have working on some optimizations to some of our controls to make scrolling faster and I noticed that while scrolling it initially was fast but the more I used it, the more laggy it became.  When I profiled with dotTrace it showed that FullTextLine.Dispose() was taking more time.  If I force a GC.Collect I get speed back and FullTextLine.Dispose is fast again.  Unfortunately this calls into PresentationNative.LoDisposeLine which is not open source so I am unable to determine why it gets slower.  \nIs there a workaround or a method I can call (even via reflection) that would trigger whatever GC.Collect is triggering?","Url":"https://github.com/dotnet/wpf/issues/10199","RelatedDescription":"Open issue \"TextMetrics+FullTextLine.Dispose() gets slower over time until a GC\" (#10199)"},{"Id":"2751495306","IsPullRequest":true,"CreatedAt":"2024-12-20T00:02:35","Actor":"ViktorHofer","Number":"10197","RawContent":null,"Title":"Fix winforms private package TFM when building inside VMR","State":"closed","Body":"Unblocks https://github.com/dotnet/sdk/pull/45563","Url":"https://github.com/dotnet/wpf/pull/10197","RelatedDescription":"Closed or merged PR \"Fix winforms private package TFM when building inside VMR\" (#10197)"},{"Id":"2743785489","IsPullRequest":false,"CreatedAt":"2024-12-19T08:50:50","Actor":"YkTru","Number":"10182","RawContent":null,"Title":"[TreeView] - Weird deselection/defocus behavior when source changes","State":"closed","Body":"### Description\n\n**UI Deselection:** In the video, you’ll notice that when I click or select an item, the background turns blue. However, after repeatedly pressing MoveUp **on Level > 0** (ie works only at the root level), while the data source updates correctly, the UI loses the Focus/SelectedItem visual state (i.e., the blue background disappears), which is visually confusing.\n\nhttps://github.com/user-attachments/assets/07d60cdf-15f9-4168-a686-f4212bc2a174\n\n\n### Reproduction Steps\n\nI added a `TreeViewSelectedItemBehavior` (_WPF Behavior_) to enable SelectedItem-like functionality on the TreeView. (I intentionally avoided using `SelectedPath/Value/Index`.)\n\nHere's the full [repo](https://github.com/YkTru/SubModelSelectedItemRecursive.DynamicBindings.MRE)\n\nHere's the code for the WPF Behavior, there is some GPT-o1 generated code since I couldnt make - and still can't - the TreeView select/focus the selected item after data source update:\n```cs\nusing System;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Media;\nusing Microsoft.Xaml.Behaviors;\n\nnamespace MRE.WPF.Custom\n{\n    public class TreeViewSelectedItemBehavior : Behavior<TreeView>\n    {\n        public static readonly DependencyProperty SelectedItemProperty =\n            DependencyProperty.Register(\n                nameof(SelectedItem),\n                typeof(object),\n                typeof(TreeViewSelectedItemBehavior),\n                new FrameworkPropertyMetadata(\n                    null,\n                    FrameworkPropertyMetadataOptions.BindsTwoWayByDefault,\n                    OnSelectedItemChanged));\n\n        public object SelectedItem\n        {\n            get => GetValue(SelectedItemProperty);\n            set => SetValue(SelectedItemProperty, value);\n        }\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n            if (AssociatedObject != null)\n            {\n                AssociatedObject.SelectedItemChanged += OnTreeViewSelectedItemChanged;\n                Console.WriteLine(\"TreeViewSelectedItemBehavior attached.\");\n            }\n        }\n\n        protected override void OnDetaching()\n        {\n            if (AssociatedObject != null)\n            {\n                AssociatedObject.SelectedItemChanged -= OnTreeViewSelectedItemChanged;\n                Console.WriteLine(\"TreeViewSelectedItemBehavior detached.\");\n            }\n\n            base.OnDetaching();\n        }\n\n        private void OnTreeViewSelectedItemChanged(object sender, RoutedPropertyChangedEventArgs<object> e)\n        {\n            SelectedItem = e.NewValue;\n            Console.WriteLine($\"TreeView SelectedItem changed to: {SelectedItem}\");\n        }\n\n        private static void OnSelectedItemChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            if (d is TreeViewSelectedItemBehavior behavior && behavior.AssociatedObject != null)\n            {\n                var treeView = behavior.AssociatedObject;\n                var newSelectedItem = e.NewValue;\n\n                Console.WriteLine($\"DependencyProperty SelectedItem changed to: {newSelectedItem}\");\n\n                if (newSelectedItem != null)\n                {\n                    SelectAndFocusTreeViewItem(treeView, newSelectedItem);\n                    treeView.Focus();\n                }\n            }\n        }\n\n        private static void SelectAndFocusTreeViewItem(TreeView treeView, object itemToSelect)\n        {\n            if (treeView == null || itemToSelect == null)\n                return;\n\n            Console.WriteLine($\"Attempting to select item: {itemToSelect}\");\n\n            foreach (var item in treeView.Items)\n            {\n                if (SelectTreeViewItemRecursive(treeView.ItemContainerGenerator.ContainerFromItem(item) as TreeViewItem,\n                        itemToSelect))\n                {\n                    break;\n                }\n            }\n        }\n\n        private static bool SelectTreeViewItemRecursive(TreeViewItem treeViewItem, object itemToSelect)\n        {\n            if (treeViewItem == null)\n                return false;\n\n            Console.WriteLine($\"Checking TreeViewItem: {treeViewItem.DataContext}\");\n\n            if (treeViewItem.DataContext == itemToSelect)\n            {\n                Console.WriteLine($\"TreeViewItem matched and selected: {itemToSelect}\");\n                treeViewItem.IsSelected = true;\n                treeViewItem.Focus();\n                treeViewItem.BringIntoView();\n                return true;\n            }\n\n            treeViewItem.IsExpanded = true;\n            treeViewItem.ApplyTemplate();\n\n            var itemsHostPanel = (Panel)VisualTreeHelper.GetChild(treeViewItem, 0);\n            if (itemsHostPanel != null)\n            {\n                for (int i = 0; i < treeViewItem.Items.Count; i++)\n                {\n                    var childItem = (TreeViewItem)treeViewItem.ItemContainerGenerator.ContainerFromIndex(i);\n                    if (SelectTreeViewItemRecursive(childItem, itemToSelect))\n                    {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n}\n\n```\n\n```xaml\n        <TreeView\n            Grid.Row=\"1\"\n            ItemsSource=\"{Binding TopChildren}\">\n            <TreeView.ItemContainerStyle>\n                <Style\n                    TargetType=\"{x:Type TreeViewItem}\">\n                    <Setter\n                        Property=\"IsExpanded\"\n                        Value=\"True\" />\n                </Style>\n            </TreeView.ItemContainerStyle>\n            <TreeView.ItemTemplate>\n                <HierarchicalDataTemplate\n                    ItemsSource=\"{Binding Children}\">\n                    <StackPanel\n                        Orientation=\"Horizontal\">\n                        <TextBlock\n                            Text=\"{Binding Data}\" />\n                    </StackPanel>\n                </HierarchicalDataTemplate>\n            </TreeView.ItemTemplate>\n            <b:Interaction.Behaviors>\n                <custom:TreeViewSelectedItemBehavior\n                    SelectedItem=\"{Binding SelectedItem, Mode=TwoWay}\" />\n            </b:Interaction.Behaviors>\n        </TreeView>\n\n\n        <ListView\n            Grid.Row=\"2\"\n            ItemsSource=\"{Binding TopChildren[0].Children[0].Children}\"\n            SelectedItem=\"{Binding SelectedItem, Mode=TwoWay}\">\n            <ListView.ItemTemplate>\n                <HierarchicalDataTemplate\n                    ItemsSource=\"{Binding Children}\">\n                    <StackPanel\n                        Margin=\"10,0,0,0\"\n                        Orientation=\"Horizontal\">\n                        <TextBlock\n                            Text=\"{Binding Data}\" />\n                    </StackPanel>\n                </HierarchicalDataTemplate>\n            </ListView.ItemTemplate>\n        </ListView>\n```\n\n### Expected behavior\n\nThe \"blue background\" should remain visible when an item is moved up/down *at any level*.\n\n\n### Actual behavior\n\nThe model and UI data source are updating, but it seems the *UI* selected or focused item (I’m not sure which \"triggers\" the blue background) is not. What’s odd is that the property editor updates correctly and allows me to change its content, so it always knows which item is selected. However, the TreeView itself doesn’t appear to be aware of this.\n\nNote: the fact that I bind to ListView out-of-box `SelectedItem` shows that the UI visual bug might not come from the custom behavior I've added to the TreeView.\n\nThank You","Url":"https://github.com/dotnet/wpf/issues/10182","RelatedDescription":"Closed issue \"[TreeView] - Weird deselection/defocus behavior when source changes\" (#10182)"},{"Id":"2749412541","IsPullRequest":true,"CreatedAt":"2024-12-19T07:23:59","Actor":"himgoyalmicro","Number":"10196","RawContent":null,"Title":"Updating PresentationBuildTasksTfm to Net 10","State":"closed","Body":"Fix build/test failures in sdk repo for wpf. https://github.com/dotnet/sdk/pull/45376#issuecomment-2541268312\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10196)","Url":"https://github.com/dotnet/wpf/pull/10196","RelatedDescription":"Closed or merged PR \"Updating PresentationBuildTasksTfm to Net 10\" (#10196)"},{"Id":"2747787458","IsPullRequest":true,"CreatedAt":"2024-12-19T05:09:57","Actor":"dotnet-maestro[bot]","Number":"10193","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241217.2\r\n- **Date Produced**: December 17, 2024 2:16:03 PM UTC\r\n- **Commit**: 4f2968fce08735a7e22fca6bd4c99d003221d716\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e0abaf3431...4f2968fce0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10193)","Url":"https://github.com/dotnet/wpf/pull/10193","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10193)"},{"Id":"2748096457","IsPullRequest":true,"CreatedAt":"2024-12-18T16:24:06","Actor":"dotnet-maestro[bot]","Number":"10195","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20241217.2\n- **Date Produced**: December 17, 2024 2:16:03 PM UTC\n- **Commit**: 4f2968fce08735a7e22fca6bd4c99d003221d716\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24616.1 to 10.0.0-beta.24617.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/e0abaf3431...4f2968fce0\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10195)","Url":"https://github.com/dotnet/wpf/pull/10195","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10195)"},{"Id":"2747977168","IsPullRequest":false,"CreatedAt":"2024-12-18T15:28:06","Actor":"hooligan495","Number":"10194","RawContent":null,"Title":".net 8 WPF app that is published to a single file does not appear to preserve font references","State":"closed","Body":"I have a .net 8 WPF application that I point to a system font that I've installed on my system (Roboto).  When testing and running the application via Visual Studio, it's working fine.   \n\nWhen I get to the packaging step for my application, I publish it to a single file application.   When I run my application in this manner the application reverts back to using the segoe ui fonts. (I can tell this because when I run the unpublished version of my code PRocess Monitor shows my app opening the Roboto font files.  Yet when I run the Published single file version, Process Monitor shows that the application opening the segoe ui font files. )\n\nDocumentation and searching haven't helped me figure out if I am doing something wrong, does anyone here have any suggestions? ","Url":"https://github.com/dotnet/wpf/issues/10194","RelatedDescription":"Closed issue \".net 8 WPF app that is published to a single file does not appear to preserve font references\" (#10194)"},{"Id":"2743844124","IsPullRequest":false,"CreatedAt":"2024-12-18T06:15:22","Actor":"Case-Closed-X","Number":"10184","RawContent":null,"Title":"TitleBar buttons are scaled very small at a resolution of 4K","State":"closed","Body":"### Description\n\nWPF Gallery Preview close button doesn’t have corners, the close button will be displayed as shown in the picture at a resolution of 3840 * 2160.\n\nAnother issue is that the minimize, maximize, and close buttons are scaled very small at a resolution of 3840 * 2160.\n\n### Actual behavior\n\n![Image](https://github.com/user-attachments/assets/bc36d8e0-26f3-4a93-961c-886ddd7d0869)\n\n\n### Expected behavior\n\n![Image](https://github.com/user-attachments/assets/d440c0ae-ccaf-4631-829b-bd734ecc1fbb)\n\n\n### Reproduction Steps\n\nLaunch WPF Gallery Preview and change the system resolution to 3840 * 2160.\n\n","Url":"https://github.com/dotnet/wpf/issues/10184","RelatedDescription":"Closed issue \"TitleBar buttons are scaled very small at a resolution of 4K\" (#10184)"},{"Id":"2746796820","IsPullRequest":false,"CreatedAt":"2024-12-18T05:17:39","Actor":"vsfeedback","Number":"10192","RawContent":null,"Title":"WPF 3D model example throws OutOfMemoryException from render thread after resuming from hibernation","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/WPF-3D-model-example-throws-OutOfMemoryE/10793983)._\n\n---\n[severity:Other]\nUsing the Viewport3D and GeometryModel3D features in .NET 4.8 application seem to always cause an exception when Windows 11 computer resumes from hibernation.\n\nApplying this example XAML into the WPF application template in Visual Studio 2022 produces an application which will throw after computer is hibernated and resumed.\nhttps://learn.microsoft.com/en-us/dotnet/desktop/wpf/graphics-multimedia/how-to-create-a-3-d-scene?view=netframeworkdesktop-4.8#create-a-3d-scene-in-xaml\n\n**Sample VS solution:**\n[WPF3DBugTest.zip](https://aka.ms/dc/file?name=B6ae0c4a614104028a101029fc5486400638676163101131965_WPF3DBugTest.zip&tid=6ae0c4a614104028a101029fc5486400638676163101131965)\n\n**Issue repro steps:**\n1. Build the provided application with Visual Studio 2022\n2. Configure Visual Studio to stop on OutOfMemoryException and run the application with debugger attached\n2. Hibernate Windows\n3. Turn computer back on and login\n4. Try to move or resize the application window\n5. Visual Studio stops on exception, resuming closes the application.\n\nI have noted that running the application without debugger attached might not cause visible issues, or the repro steps might not be reliable. However, in a more complex application utilizing WPF 3D features an exception always occurs.\n\nThe crash occurs as OutOfMemoryException is thrown in WPF render thread.\n\n```\nSystem.OutOfMemoryException\nHResult=0x8007000E\nMessage=Insufficient memory to continue the execution of the program.\nSource=PresentationCore\nStackTrace:\nat System.Windows.Media.Composition.DUCE.Channel.SyncFlush()\nat System.Windows.Interop.HwndTarget.UpdateWindowSettings(Boolean enableRenderTarget, Nullable`1 channelSet)\nat System.Windows.Interop.HwndTarget.UpdateWindowPos(IntPtr lParam)\nat System.Windows.Interop.HwndTarget.HandleMessage(WindowMessage msg, IntPtr wparam, IntPtr lparam)\nat System.Windows.Interop.HwndSource.HwndTargetFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\nat MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled) in MS.Win32\\HwndWrapper.cs:line 221\nat MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o) in MS.Win32\\HwndSubclass.cs:line 253\nat System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs) in System.Windows.Threading\\ExceptionWrapper.cs:line 73\nat System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler) in System.Windows.Threading\\ExceptionWrapper.cs:line 24\nat System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs) in System.Windows.Threading\\Dispatcher.cs:line 1021\nat MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam) in MS.Win32\\HwndSubclass.cs:line 207\n```\n\n**Windows information:**\nEdition\tWindows 11 Pro\nVersion\t24H2\nOS build\t26100.2314\nExperience\tWindows Feature Experience Pack 1000.26100.32.0\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/20/2024, 07:21 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n","Url":"https://github.com/dotnet/wpf/issues/10192","RelatedDescription":"Open issue \"WPF 3D model example throws OutOfMemoryException from render thread after resuming from hibernation\" (#10192)"},{"Id":"2746793275","IsPullRequest":false,"CreatedAt":"2024-12-18T05:14:28","Actor":"vsfeedback","Number":"10191","RawContent":null,"Title":"Separating Mouse Cursor movement when touch operation is performed on WPF application","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Separating-Mouse-Cursor-movement-when-to/10799886)._\n\n---\n[severity:It bothers me. A fix would be nice]\n\n[MainWindow.xaml](https://aka.ms/dc/file?name=B5b2de958b07e4db584ab44e45f2ec491638682164542109995_MainWindow.xaml&tid=5b2de958b07e4db584ab44e45f2ec491638682164542109995)\n\n[MainWindow.xaml.cs](https://aka.ms/dc/file?name=B4a659f569b31444da6de69bd462ec651638682164918512598_MainWindow.xaml.cs&tid=4a659f569b31444da6de69bd462ec651638682164918512598)\nWe would like to seek a technical help on simulating the behavior of virtual touch pad in our application on windows 10.\nFollowing are the details based on the analysis done so far.\n\n**Problem Statement:**\n- When touch operations are performed on a WPF application, the mouse cursor/pointer moves to the same location where first touch is done.\n- Mouse cursor/pointer is not visible\n \n**Expected output:**\n- The mouse cursor/pointer should move on desktop when user performs touch and drag operation on an application\n- We don’t want mouse cursor/pointer to move its position when touch operation is performed\n\n**Sample application details:**\n- Application type : WPF app\n- Canvas is added on window to capture touch events.\n- Dot Net Framework : 4.8\nNote: The sample XAML and Code behind is attached to this message\n \n**Analysis done so far:**\nThe following option were tried, but we couldn’t get the mouse cursor separated from touch operations:\n\n1. Using hooks to filter the low-level mouse events\n    [- API name: SetWindowsHookEx]()\n                  a. The hook is applied to capture the Low-level mouse input events using Hook procedure for WH_MOUSE_LL = 14;\n    -  In call back function check as below:\n                  a. If touch is active and if mouse event is received then filter out the mouse events\n                            `private static IntPtr MouseHookCallback(int nCode, IntPtr wParam, IntPtr lParam)`\n2. Mouse cursor/pointer movement\n    -  It is observed that when touch is performed the cursor/pointers is not visible\n    - We tried to set the visibility with Native Win32 API; s but couldn't get the cursor visible\n\n**Query:**\nWe would like to seek help to get the mouse cursor/pointer movement and visibility on screen and controlled by touch operations from custom application in WPF\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/27/2024, 07:25 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### U_1405585 on 12/4/2024, 03:10 PM: \n\n(private comment, text removed)","Url":"https://github.com/dotnet/wpf/issues/10191","RelatedDescription":"Open issue \"Separating Mouse Cursor movement when touch operation is performed on WPF application\" (#10191)"},{"Id":"2746621860","IsPullRequest":true,"CreatedAt":"2024-12-18T03:28:58","Actor":"dotnet-maestro[bot]","Number":"10189","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241217.1\r\n- **Date Produced**: December 17, 2024 2:10:29 PM UTC\r\n- **Commit**: d195a5f10338c2f15433f01e3dbfbdb2b10ba2a3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24616.3 to 10.0.0-alpha.1.24617.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24616.3 to 10.0.0-alpha.1.24617.1][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24616.3 to 10.0.0-alpha.1.24617.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/79a1bfbfa9...d195a5f103\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10189)","Url":"https://github.com/dotnet/wpf/pull/10189","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10189)"},{"Id":"2744918481","IsPullRequest":true,"CreatedAt":"2024-12-17T19:20:55","Actor":"dotnet-maestro[bot]","Number":"10187","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241216.1\r\n- **Date Produced**: December 17, 2024 8:34:48 AM UTC\r\n- **Commit**: e0abaf3431b0fe3c9f9902aa42f6008b1250e75e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24613.2 to 10.0.0-beta.24616.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24613.2 to 10.0.0-beta.24616.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24613.2 to 10.0.0-beta.24616.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24613.2 to 10.0.0-beta.24616.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/255d5e0c89...e0abaf3431\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10187)","Url":"https://github.com/dotnet/wpf/pull/10187","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10187)"},{"Id":"2744971605","IsPullRequest":true,"CreatedAt":"2024-12-17T13:38:25","Actor":"harshit7962","Number":"10188","RawContent":null,"Title":"[StyleCleanUp] Address IDE warnings Part 3","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n- **IDE0030:** Null check can be simplified\r\n- **IDE0031:** Use null propagation\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings, and hence easing out the overall understanding. \r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nWill be taken in the next test pass\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10188)","Url":"https://github.com/dotnet/wpf/pull/10188","RelatedDescription":"Open PR \"[StyleCleanUp] Address IDE warnings Part 3\" (#10188)"},{"Id":"2744680139","IsPullRequest":true,"CreatedAt":"2024-12-17T11:29:09","Actor":"himgoyalmicro","Number":"10186","RawContent":null,"Title":"[StyleCleanUp] Addressing CA warnings Part 2","State":"open","Body":"## Description\r\n\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR https://github.com/dotnet/wpf/pull/10080 and references to the issue https://github.com/dotnet/wpf/issues/10017.\r\n\r\nThe current changes address the following Errors/Warnings in the src folder of WPF:\r\n\r\n- **CA1507**: Use nameof in place of string\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings and hence easing out the overall understanding.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression\r\n\r\nNone\r\n\r\n## Testing\r\n\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\n\r\nLow\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10186)","Url":"https://github.com/dotnet/wpf/pull/10186","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing CA warnings Part 2\" (#10186)"},{"Id":"2744372602","IsPullRequest":true,"CreatedAt":"2024-12-17T09:21:24","Actor":"siagupta0202","Number":"10185","RawContent":null,"Title":"[StyleCleanUp] Addressing IDE warnings","State":"open","Body":"\r\n\r\n## Description\r\n\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR https://github.com/dotnet/wpf/pull/10080 and references to the issue https://github.com/dotnet/wpf/issues/10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n\r\nIDE0150: Prefer 'null' check over type check\r\n\r\n\r\n## Customer Impact\r\n\r\nNone\r\n## Regression\r\n\r\nNone\r\n## Testing\r\n\r\nLocal build pass\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10185)","Url":"https://github.com/dotnet/wpf/pull/10185","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing IDE warnings\" (#10185)"},{"Id":"2743814532","IsPullRequest":true,"CreatedAt":"2024-12-17T06:53:39","Actor":"dotnet-maestro[bot]","Number":"10183","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241216.3\r\n- **Date Produced**: December 17, 2024 2:24:19 AM UTC\r\n- **Commit**: 79a1bfbfa9b508b4ff1108f89c29157a68e48de1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24614.1 to 10.0.0-alpha.1.24616.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24614.1 to 10.0.0-alpha.1.24616.3][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24614.1 to 10.0.0-alpha.1.24616.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a5281d9a60...79a1bfbfa9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10183)","Url":"https://github.com/dotnet/wpf/pull/10183","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10183)"},{"Id":"2741274214","IsPullRequest":false,"CreatedAt":"2024-12-16T04:06:21","Actor":"Symbai","Number":"10181","RawContent":null,"Title":"Datagrid column sort is not reacting to databinding changes","State":"open","Body":"### Description\n\nHas this been always the case? When I sort a column in a Datagrid by clicking on it, it only sorts the column once. If anything in the cells of the column changes, the column is not sorted again. I tried with and without CollectionView (but I didn't used the collectionview sort because if the Datagrid already has sorting I expect it to work on its own)\n\nShouldn't the column sort react to databinding changes? What's the purpose of allowing sort in WPF when, if it has to react on databinding changes, we have to add our own sorting instead?\n\n### Reproduction Steps\n\n1. Use code below\n2. Launch app\n3. Click on the column to sort\n4. Press the button\n\n```XAML\n<Window\n    x:Class=\"WpfApp12.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:local=\"clr-namespace:WpfApp12\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    Title=\"MainWindow\"\n    Width=\"800\"\n    Height=\"450\"\n    mc:Ignorable=\"d\">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"Auto\" />\n            <RowDefinition Height=\"*\" />\n        </Grid.RowDefinitions>\n        <Button\n            Grid.Row=\"0\"\n            Click=\"Button_Click\"\n            Content=\"Make Changes\" />\n        <DataGrid\n            Grid.Row=\"1\"\n            AutoGenerateColumns=\"False\"\n            ItemsSource=\"{Binding Items}\">\n            <DataGrid.Columns>\n                <DataGridTextColumn\n                    Width=\"200\"\n                    Binding=\"{Binding Name}\"\n                    CanUserSort=\"True\"\n                    Header=\"Name\" />\n            </DataGrid.Columns>\n        </DataGrid>\n    </Grid>\n</Window>\n\n```\n\n```C#\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        DataContext = this;\n        InitializeComponent();\n        Items.Add(new MyData { Name = \"Item 1\" });\n        Items.Add(new MyData { Name = \"Item 2\" });\n        Items.Add(new MyData { Name = \"Item 3\" });\n        Items.Add(new MyData { Name = \"Item 4\" });\n        Items.Add(new MyData { Name = \"Item 5\" });\n    }\n\n    public ObservableCollection<MyData> Items { get; } = new();\n\n    private void Button_Click(object sender, RoutedEventArgs e)\n    {\n        Items[2].Name = \"Changed\";\n    }\n}\npublic class MyData : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    protected void OnPropertyChanged(string propertyName)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n\n    string _Name;\n    public string Name\n    {\n        get => _Name;\n        set\n        {\n            if (value == _Name) return;\n            _Name = value;\n            OnPropertyChanged(nameof(Name));\n        }\n    }\n}\n```\n\n### Expected behavior\n\n![Image](https://github.com/user-attachments/assets/62fb0335-e180-4fdb-8d06-7c8cfddf1bc9)\n\n\n### Actual behavior\n\n![Image](https://github.com/user-attachments/assets/0cc16e20-3fb4-425e-be38-27bb5937370a)\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET 8.0\nx64\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10181","RelatedDescription":"Open issue \"Datagrid column sort is not reacting to databinding changes\" (#10181)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-29T03:30:26.3627182Z","RunDurationInMilliseconds":415}