{"Data":{"GitHub":{"Issues":[{"Id":"1099827492","IsPullRequest":true,"CreatedAt":"2022-01-12T05:29:19","Actor":"singhashish-wpf","Number":"5941","RawContent":null,"Title":"Mismatch of PBT version between WinFX Targets and PBT csproj","State":"closed","Body":"Fixes # \r\nhttps://github.com/dotnet/sdk/pull/23293\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\nhttps://github.com/dotnet/sdk/pull/23293\r\n\r\n## Description\r\nMismatch of the TargetFramework used to create the package and to locate the task DLL.\r\nPBT csproj has net7.0 while winfx targets had net6.0\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nNone\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nNone\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nBuild CI and SDK Tests\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nNone\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/5941","RelatedDescription":"Closed or merged PR \"Mismatch of PBT version between WinFX Targets and PBT csproj\" (#5941)"},{"Id":"1099506913","IsPullRequest":true,"CreatedAt":"2022-01-11T19:11:30","Actor":"dotnet-maestro[bot]","Number":"5940","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220111.1\r\n- **Date Produced**: January 11, 2022 6:34:42 PM UTC\r\n- **Commit**: 39621106b91bd9f17769ebb6eca82c0da2432f76\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22060.4 to 7.0.0-alpha.1.22061.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22060.4 to 7.0.0-alpha.1.22061.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ecc4c45...3962110\r\n[2]: https://github.com/dotnet/runtime/compare/a2af629...917d369\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5940","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5940)"},{"Id":"1099383541","IsPullRequest":false,"CreatedAt":"2022-01-11T16:31:11","Actor":"aquinn39","Number":"5939","RawContent":null,"Title":"Stylus.SetIsPressAndHoldEnabled does not work when Switch.System.Windows.Input.Stylus.EnablePointerSupport is enabled","State":"open","Body":"* .NET Core Version: 6.0.1\r\n* Windows version: 22000.376 (Though this seems to occur on all versions of Windows that Switch.System.Windows.Input.Stylus.EnablePointerSupport is supported on)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n\r\n \r\n **Problem description:**\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nTapping and holding on a control with Stylus.IsPressAndHoldEnabled disabled while the app has Switch.System.Windows.Input.Stylus.EnablePointerSupport enabled simply results in the same behaviour as if Stylus.IsPressAndHoldEnabled was enabled (pressing and holding results in a right click rather than a normal click, also if the control is something like a button, its state does not indicate that it is currently in the pressed state). Basically, Stylus.IsPressAndHoldEnabled has no effect when Switch.System.Windows.Input.Stylus.EnablePointerSupport is on.\r\n \r\n **Expected behavior:**\r\n Stylus.IsPressAndHoldEnabled being set to false on a control should have the same effect as it does when Switch.System.Windows.Input.Stylus.EnablePointerSupport is disabled.\r\n\r\n **Minimal repro:**\r\nCreate a new WPF app, call         AppContext.SetSwitch(\"Switch.System.Windows.Input.Stylus.EnablePointerSupport\", \"True\") in the application startup event. Then, set Stylus.IsPressAndHoldEnabled to disabled on any control, such as a button (e.g. Stylus.SetIsPressAndHoldEnabled(Button1, False)). Stylus.IsPressAndHoldEnabled will have no effect on the control.","Url":"https://github.com/dotnet/wpf/issues/5939","RelatedDescription":"Open issue \"Stylus.SetIsPressAndHoldEnabled does not work when Switch.System.Windows.Input.Stylus.EnablePointerSupport is enabled\" (#5939)"},{"Id":"1099352245","IsPullRequest":false,"CreatedAt":"2022-01-11T16:06:43","Actor":"aquinn39","Number":"5938","RawContent":null,"Title":"Add Support for Pen Scrolling","State":"open","Body":"In a Windows 10 update years ago (I think 1709), pen behaviour was changed so that dragging the pen scrolls (like with a touch screen) in GDI apps, UWP apps and Microsoft Edge WebViews but was not updated for WPF. As such, pen scrolling does not scroll in WPF even if touch screen scrolling is enabled via ScrollViewer.PanningMode.","Url":"https://github.com/dotnet/wpf/issues/5938","RelatedDescription":"Open issue \"Add Support for Pen Scrolling\" (#5938)"},{"Id":"1099344367","IsPullRequest":false,"CreatedAt":"2022-01-11T15:59:48","Actor":"aquinn39","Number":"5937","RawContent":null,"Title":"Add Horizontal MouseWheel Scrolling Support","State":"open","Body":"Currently, MouseWheel events are only sent in response to horizontal mouse wheel scrolling; no event is sent for horizontal scrolling despite Windows sending a window message in response to horizontal mouse/touchpad scrolling. This means that horizontal scrolling does nothing in WPF apps, unless the app manually listens for and interprets the horizontal mouse wheel event and responds to it manually.","Url":"https://github.com/dotnet/wpf/issues/5937","RelatedDescription":"Open issue \"Add Horizontal MouseWheel Scrolling Support\" (#5937)"},{"Id":"1099337004","IsPullRequest":false,"CreatedAt":"2022-01-11T15:53:16","Actor":"aquinn39","Number":"5936","RawContent":null,"Title":"Have the ScrollViewer take into account the Delta value when responding to mousewheel events","State":"open","Body":"At the moment, the WPF ScrollViewer always scrolls a fixed amount in response to mouse wheel events despite MouseWheelEventArgs returning the Delta value (The value that Windows sends as part of mouse wheel scrolling messages that determines how fast content should scroll. Because of this, scrolling with precision scrolling devices such as touchpads scrolls ridiculously fast, making scrolling with devices like touchpads pretty much useless.\r\nIf the ScrollViewer could respond properly to the MouseWheelEventArgs.Delta value (i.e. scroll an appropriate amount depending on the delta value, which is just an integer), this would make scrolling in WPF so much better and greatly improve the user experience.","Url":"https://github.com/dotnet/wpf/issues/5936","RelatedDescription":"Open issue \"Have the ScrollViewer take into account the Delta value when responding to mousewheel events\" (#5936)"},{"Id":"1098759659","IsPullRequest":true,"CreatedAt":"2022-01-11T09:38:40","Actor":"singhashish-wpf","Number":"5934","RawContent":null,"Title":"Remove .net6.0; not required","State":"closed","Body":"Fixes \r\n[**https://github.com/dotnet/sdk/pull/23293**\r\n](https://github.com/dotnet/sdk/pull/23293)\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n[**https://github.com/dotnet/sdk/pull/23293**\r\n](https://github.com/dotnet/sdk/pull/23293)\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nTests in dotnet SDK failing.\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nNone\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nCI Build and Run SDK Tests\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nNone\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/5934","RelatedDescription":"Closed or merged PR \"Remove .net6.0; not required\" (#5934)"},{"Id":"1098864439","IsPullRequest":false,"CreatedAt":"2022-01-11T08:47:16","Actor":"Junjun-zhao","Number":"5935","RawContent":null,"Title":"[dotnet-sdk-7.0.100-alpha.1.22057.7] Transmogrify Launch failed with exception about unable to load type 'System.Windows.Media.MILCMD_POP'","State":"open","Body":"**Application Name**: Transmogrify, SUBSTitute (These two apps affected)\r\n**OS:** Windows 10 RS5\r\n**CPU**: X64\r\n**.NET Build Number**: dotnet-sdk-7.0.100-alpha.1.22057.7\r\n\r\n**Verify Scenarios:**\r\n1). Windows10 RS5 x64+dotnet-sdk-7.0.100-alpha.1.22057.7: Fail\r\n2). Windows10 RS5 x64+dotnet-sdk-7.0.100-alpha.1.21568.2: Pass\r\n3). Windows10 RS5 x64+dotnet-sdk-6.0.200-preview.21603.2: Pass\r\n\r\n**App Source and App Checking at:** https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1460206\r\n\r\n**Repro steps:**\r\n\r\n**This is .net core3.0 app, but we are running it on 7.0, machine only have 7.0 installed, and DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX=2, so it runs on 7.0**\r\n\r\n1) Copy Transmogrify from server to local machine.\r\n2) Launch Transmogrify.exe\r\n\r\n**Expected Result:**\r\nApp launch successful.\r\n\r\n**Actual Result:**\r\nApp launch failed.\r\n\r\n**Exceptions from Event Log:**\r\n```\r\nApplication: Transmogrify.exe\r\nCoreCLR Version: 7.0.22.5610\r\n.NET Version: 7.0.0-alpha.1.22056.10\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.Windows.Markup.XamlParseException: 'The invocation of the constructor on type 'Transmogrify.Pages.ProjectOverviewControls.OverviewRibbon' that matches the specified binding constraints threw an exception.' Line number '12' and line position '10'.\r\n ---> System.Reflection.ReflectionTypeLoadException: Unable to load one or more of the requested types.\r\nType 'System.Windows.Media.MILCMD_POP' from assembly 'PresentationCore, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' has zero size.\r\n   at System.Reflection.RuntimeModule.GetTypes(RuntimeModule module)\r\n   at System.Reflection.Assembly.GetTypes()\r\n   at Transmogrify.Services.LibraryService.<>c.<GetAvailableEndpointTypes>b__6_1(Assembly a) in E:\\App Source\\Transmogrify\\Transmogrify\\Services\\LibraryService.cs:line 34\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Func`2 predicate, Boolean& found)\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at Transmogrify.Services.LibraryService.GetAvailableEndpointTypes() in E:\\App Source\\Transmogrify\\Transmogrify\\Services\\LibraryService.cs:line 35\r\n   at Transmogrify.Pages.ProjectOverviewControls.OverviewRibbon.AddEndPointTypesToMenu() in E:\\App Source\\Transmogrify\\Transmogrify\\Pages\\ProjectOverviewControls\\OverviewRibbon.xaml.cs:line 36\r\n   at Transmogrify.Pages.ProjectOverviewControls.OverviewRibbon..ctor() in E:\\App Source\\Transmogrify\\Transmogrify\\Pages\\ProjectOverviewControls\\OverviewRibbon.xaml.cs:line 29\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)\r\nSystem.TypeLoadException: Type 'System.Windows.Media.MILCMD_POP' from assembly 'PresentationCore, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' has zero size.\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n   at System.Windows.Application.LoadBamlStreamWithSyncInfo(Stream stream, ParserContext pc)\r\n   at MS.Internal.AppModel.AppModelKnownContentFactory.BamlConverter(Stream stream, Uri baseUri, Boolean canUseTopLevelBrowser, Boolean sandboxExternalContent, Boolean allowAsync, Boolean isJournalNavigation, XamlReader& asyncObjectConverter)\r\n   at MS.Internal.AppModel.MimeObjectFactory.GetObjectAndCloseStream(Stream s, ContentType contentType, Uri baseUri, Boolean canUseTopLevelBrowser, Boolean sandboxExternalContent, Boolean allowAsync, Boolean isJournalNavigation, XamlReader& asyncObjectConverter)\r\n   at System.Windows.Navigation.NavigationService.GetObjectFromResponse(WebRequest request, WebResponse response, Uri destinationUri, Object navState)\r\n   at System.Windows.Navigation.NavigationService.DoNavigate(Uri source, NavigationMode f, Object navState)\r\n   at System.Windows.Navigation.NavigateQueueItem.Dispatch(Object obj)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at Transmogrify.App.Main()\r\n```\r\n\r\n**Minimal Repro steps:**\r\ndotnet-sdk-7.0.100-alpha.1.22057.7 sdk should be installed on the machine.\r\n1. Create a .NET 6.0 WPF project.\r\n2. Add Using System.Windows; namespace in MainWindow.xaml.cs file.\r\n3. Add following highlighted code in MainWindows's construct function:\r\n```\r\npublic partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n\r\n            Assembly[] assemblies = AppDomain.CurrentDomain.GetAssemblies();\r\n            IEnumerable<Type> lst2 = assemblies.SelectMany(a => a.GetTypes()).Where(a => a.Name.StartsWith(\"MILCMD\"));\r\n            Type type = lst2.FirstOrDefault(a => a.FullName == \"System.Windows.Media.MILCMD_POP\");\r\n        }\r\n    }\r\n```\r\n4. Build the project.\r\n5. Go to bin\\Debug\\net6.0-windows folder, assign the Microsoft.WindowsDesktop.App to 7.0.0-alpha.1.22055.1:\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"net6.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"6.0.0-rc.2.21452.2\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \" 7.0.0-alpha.1.22055.1\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n6. Launch the exe under bin\\Debug\\net6.0-windows\r\n\r\nReproduce demo attached in https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1460206.\r\n\r\n**Expected Result:** \r\nThe exe can run successfully.\r\n\r\n**Actual Result:**\r\nExe doesn't launch successfully.\r\n\r\n**Exception from Event Viewer:**\r\n\r\n```\r\nApplication: GetTypeException.exe\r\nCoreCLR Version: 7.0.22.5610\r\n.NET Version: 7.0.0-alpha.1.22056.10\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.Windows.Markup.XamlParseException: 'The invocation of the constructor on type 'GetTypeException.MainWindow' that matches the specified binding constraints threw an exception.' Line number '6' and line position '9'.\r\n ---> System.Reflection.ReflectionTypeLoadException: Unable to load one or more of the requested types.\r\nType 'System.Windows.Media.MILCMD_POP' from assembly 'PresentationCore, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' has zero size.\r\n   at System.Reflection.RuntimeModule.GetTypes(RuntimeModule module)\r\n   at System.Reflection.Assembly.GetTypes()\r\n   at GetTypeException.MainWindow.<>c.<.ctor>b__0_0(Assembly a) in C:\\Users\\v-weiwc\\source\\repos\\GetTypeException\\GetTypeException\\MainWindow.xaml.cs:line 29\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Func`2 predicate, Boolean& found)\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at GetTypeException.MainWindow..ctor() in C:\\Users\\v-weiwc\\source\\repos\\GetTypeException\\GetTypeException\\MainWindow.xaml.cs:line 30\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)\r\nSystem.TypeLoadException: Type 'System.Windows.Media.MILCMD_POP' from assembly 'PresentationCore, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' has zero size.\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n   at System.Windows.Application.LoadBamlStreamWithSyncInfo(Stream stream, ParserContext pc)\r\n   at System.Windows.Application.DoStartup()\r\n   at System.Windows.Application.<.ctor>b__1_0(Object unused)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at GetTypeException.App.Main()\r\n```\r\n\r\n**Findings:**\r\n1)  Compare the PresentationCore.dll version from dotnet-sdk-7.0.100-alpha.1.22057.7 and dotnet-sdk-7.0.100-alpha.1.21568.2, we found they have different versions. In dotnet-sdk-7.0.100-alpha.1.22057.7, it is 7.0.22.5501, and in dotnet-sdk-7.0.100-alpha.1.21568.2, it is 7.0.21.56606.\r\n2) Since the error is unable to load 'System.Windows.Media.MILCMD_POP' type from PresentationCore.dll, we use ILSpy to reflect the PresentationCore.dll, and found 'System.Windows.Media.MILCMD_POP' type exists in dotnet-sdk-7.0.100-alpha.1.22057.7 and the access modifier is internal, no difference with dotnet-sdk-7.0.100-alpha.1.21568.2.\r\n3) We tried retarget the app from .netcore3.0 to .net 7.0, the same exception when finding 'System.Windows.Media.MILCMD_POP' type.\r\n\r\n@dotnet-actwx-bot @dotnet/compat\r\n","Url":"https://github.com/dotnet/wpf/issues/5935","RelatedDescription":"Open issue \"[dotnet-sdk-7.0.100-alpha.1.22057.7] Transmogrify Launch failed with exception about unable to load type 'System.Windows.Media.MILCMD_POP'\" (#5935)"},{"Id":"1098663788","IsPullRequest":true,"CreatedAt":"2022-01-11T05:17:45","Actor":"ThomasGoulet73","Number":"5933","RawContent":null,"Title":"Replace IsAssignableFrom with is in converters","State":"open","Body":"## Description\r\nReplace IsAssignableFrom with is in converters. It is faster, has smaller IL and smaller JIT code.\r\n\r\nI used [this benchmark](https://gist.github.com/ThomasGoulet73/86043718584c119dc746b1df108ca871) to ensure that it is in fact faster with `MenuScrollingVisibilityConverter` as an example.\r\n\r\nHere is the result:\r\n```\r\n| Method |    values | parameter |     Mean |    Error |   StdDev | Ratio |  Gen 0 | Code Size | Allocated |\r\n|------- |---------- |---------- |---------:|---------:|---------:|------:|-------:|----------:|----------:|\r\n|    Old | Object[4] |         0 | 41.75 ns | 0.623 ns | 0.552 ns |  1.00 | 0.0076 |   1,037 B |      24 B |\r\n|    New | Object[4] |         0 | 14.18 ns | 0.175 ns | 0.146 ns |  0.34 | 0.0076 |     936 B |      24 B |\r\n```\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nTested a few converters locally.\r\n\r\n## Risk\r\nNone.\r\n","Url":"https://github.com/dotnet/wpf/pull/5933","RelatedDescription":"Open PR \"Replace IsAssignableFrom with is in converters\" (#5933)"},{"Id":"1098506818","IsPullRequest":true,"CreatedAt":"2022-01-10T23:57:17","Actor":"SamBent","Number":"5932","RawContent":null,"Title":"Crash after closing a tooltip's Popup directly","State":"open","Body":"Fixes #5730\r\n\r\n## Description\r\n\r\nClosing a tooltip's Popup directly (as opposed to closing the ToolTip and letting WPF close the Popup in response) causes WPF to clear some private state on the ToolTip while leaving its IsOpen=true.  When the ToolTip is eventually closed, WPF uses that state and crashes because it's null.\r\n\r\nFixed by preserving the private state until the ToolTip itself is closed, and adding logic to ensure that the state is cleared even if the Popup was already closed before the ToolTip closed.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nFixes a regression.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nYes.\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow.  The fix itself is safe.  The customer reports did not include repros, so there's a small risk that there are crashing scenarios that this fix doesn't address.","Url":"https://github.com/dotnet/wpf/pull/5932","RelatedDescription":"Open PR \"Crash after closing a tooltip's Popup directly\" (#5932)"},{"Id":"1098499172","IsPullRequest":true,"CreatedAt":"2022-01-10T23:39:44","Actor":"SamBent","Number":"5931","RawContent":null,"Title":"ToolTips in popups (or any context where capture is active)","State":"open","Body":"Fixes #5716\r\n\r\n## Description\r\n\r\nThe new 6.0 tooltip behavior computes a \"safe area\" in which the user can move the mouse without dismissing the tooltip.  It's computed with coordinates relative to the owner's PresentationSource (hwnd), but the mouse movements were tracked relative to the input provider's PresentationSource.  These are often the same, but not when the tooltip's owner comes from a Popup (or similar context that captures mouse input away from the normal input provider).  This dismisses the tooltip immediately - the logic thinks the mouse has left the safe area.\r\n\r\nFixed by converting the mouse position to the correct coordinate system - relative to the tooltip owner's PresentationSource.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nFixes a regression.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nYes.\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow.  Applies the correct coordinate transformation before checking the mouse position.","Url":"https://github.com/dotnet/wpf/pull/5931","RelatedDescription":"Open PR \"ToolTips in popups (or any context where capture is active)\" (#5931)"},{"Id":"1098492776","IsPullRequest":true,"CreatedAt":"2022-01-10T23:26:30","Actor":"SamBent","Number":"5930","RawContent":null,"Title":"Skip InitialShowDelay when replacing the current tooltip","State":"open","Body":"Fixes #5703\r\n\r\n## Description\r\n\r\nMoving the mouse from a control A that is showing a tooltip, to another control B that has a tooltip, should show B's tooltip immediately (ignoring its InitialShowDelay).  This works correctly if A's tooltip is closed before checking whether B has a tooltip, which was always the case prior to .NET 6.0.  The new tooltip behavior in 6.0 can keep A's tooltip open longer, and now needs to check whether a tooltip is already open when it decides that B wants to open its tooltip.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nFixes a regression.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nYes.\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow.  Handles a case that couldn't happen in .NET 5.","Url":"https://github.com/dotnet/wpf/pull/5930","RelatedDescription":"Open PR \"Skip InitialShowDelay when replacing the current tooltip\" (#5930)"},{"Id":"1098461967","IsPullRequest":true,"CreatedAt":"2022-01-10T23:11:40","Actor":"dotnet-maestro[bot]","Number":"5929","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220110.4\r\n- **Date Produced**: January 10, 2022 10:29:14 PM UTC\r\n- **Commit**: ecc4c459fcd02317fb72a6995aef553fcd2bec76\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22060.1 to 7.0.0-alpha.1.22060.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22060.1 to 7.0.0-alpha.1.22060.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/35d2cd8...ecc4c45\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5929","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5929)"},{"Id":"1097962240","IsPullRequest":true,"CreatedAt":"2022-01-10T14:49:40","Actor":"dotnet-maestro[bot]","Number":"5928","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220110.1\r\n- **Date Produced**: January 10, 2022 2:15:04 PM UTC\r\n- **Commit**: 35d2cd89bbe3b2fff53b012247029df3ca988242\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22059.1 to 7.0.0-alpha.1.22060.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22059.1 to 7.0.0-alpha.1.22060.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/4cd87f4...35d2cd8\r\n[2]: https://github.com/dotnet/runtime/compare/ce2165d...a2af629\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5928","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5928)"},{"Id":"1097208551","IsPullRequest":false,"CreatedAt":"2022-01-10T06:36:11","Actor":"xiao-cao-x","Number":"5927","RawContent":null,"Title":"In gooutinue, the callback C# function has an exception System.ExecutionEngineException when updating the UI","State":"closed","Body":"When I call back the C# function in `goroutinue` of  `Golang` to update the `WPF UI`, an exception occurred and it could not be caught.\r\n\r\n```\r\nSystem.ExecutionEngineException\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/76673990/148685922-7712afee-725b-41f9-98c6-24978dc6351e.png)\r\n\r\n![image](https://user-images.githubusercontent.com/76673990/148685998-368d6339-55b9-4112-bcc6-c980248d1c89.png)\r\n\r\n\r\n`ViewModel` is in `TabItem` of `TabControl`\r\n![image](https://user-images.githubusercontent.com/76673990/148686042-4c5a4aff-9c3e-42f5-ba04-6460a77cd78d.png)\r\n\r\nThe exception here cannot be `catch`\r\n![image](https://user-images.githubusercontent.com/76673990/148686089-0e765fab-0eab-4a38-9083-ca190106bf65.png)\r\n\r\nThe `Output` function is called by `Golang` through `syscall`\r\n![image](https://user-images.githubusercontent.com/76673990/148686175-e69f5270-adfa-4ac6-8e15-239d1bc03020.png)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/5927","RelatedDescription":"Closed issue \"In gooutinue, the callback C# function has an exception System.ExecutionEngineException when updating the UI\" (#5927)"},{"Id":"1097208170","IsPullRequest":true,"CreatedAt":"2022-01-09T14:37:41","Actor":"dotnet-maestro[bot]","Number":"5926","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220109.1\r\n- **Date Produced**: January 9, 2022 2:09:40 PM UTC\r\n- **Commit**: 4cd87f412add5b82d6c379480dd69e97f68ac6fa\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22058.1 to 7.0.0-alpha.1.22059.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22058.1 to 7.0.0-alpha.1.22059.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/389f845...4cd87f4\r\n[2]: https://github.com/dotnet/runtime/compare/bc7f6c2...ce2165d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5926","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5926)"},{"Id":"1097095991","IsPullRequest":true,"CreatedAt":"2022-01-09T03:35:44","Actor":"lindexi","Number":"5925","RawContent":null,"Title":"Remove the unnecessary calculate code in ImageSource.cs","State":"open","Body":"\r\n\r\n## Description\r\n\r\nShould we remove the calculate when dpif equals 96.0F?\r\n\r\n    return (double)(pixels * (96.0F / dpif));\r\n    When dpif == 96.0F\r\n    (double)(pixels * (96.0F / dpif)) \r\n      = (double)(pixels * (96.0F / 96.0F)) \r\n      = (double)(pixels * 1) \r\n      = (double)(pixels) \r\n\r\n## Customer Impact\r\n\r\nNone.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\nJust CI\r\n\r\n## Risk\r\n\r\nLow.\r\n","Url":"https://github.com/dotnet/wpf/pull/5925","RelatedDescription":"Open PR \"Remove the unnecessary calculate code in ImageSource.cs\" (#5925)"},{"Id":"1097033762","IsPullRequest":true,"CreatedAt":"2022-01-08T21:16:46","Actor":"dotnet-maestro[bot]","Number":"5924","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220108.1\r\n- **Date Produced**: January 8, 2022 8:42:47 PM UTC\r\n- **Commit**: 389f8453c095584475e8da1fcbb8d9f2d6461715\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22057.6 to 7.0.0-alpha.1.22058.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22057.6 to 7.0.0-alpha.1.22058.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/5ae807a...389f845\r\n[2]: https://github.com/dotnet/runtime/compare/ef49cd0...bc7f6c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5924","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5924)"},{"Id":"1096874326","IsPullRequest":false,"CreatedAt":"2022-01-08T09:02:51","Actor":"lindexi","Number":"5923","RawContent":null,"Title":"Binding non-public property behavior changed between dotnet core 3.1 and net45","State":"closed","Body":" **Problem description:**\r\n\r\nWe can binding with two way mode to the property with \"private set\" in .NET Framework 4.5.\r\n\r\n\r\n```csharp\r\n    class ViewModel : INotifyPropertyChanged\r\n    {\r\n        public string Name\r\n        {\r\n            get => _name;\r\n            private set\r\n            {\r\n                _name = value;\r\n                OnPropertyChanged();\r\n            }\r\n        }\r\n\r\n        private string _name;\r\n\r\n        public event PropertyChangedEventHandler PropertyChanged;\r\n\r\n        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)\r\n        {\r\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\r\n        }\r\n    }\r\n```\r\n\r\n\r\n```xml\r\n  <TextBox Margin=\"10,10,10,10\" Text=\"{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}\"></TextBox>\r\n```\r\n\r\nBut it will throw the XamlParseException when we run the same code in .NET Core 3.1 or greater.\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\nIt will throw the XamlParseException.\r\n\r\nThe InnerException is \r\n\r\n```\r\nSystem.InvalidOperationException: 'A TwoWay or OneWayToSource binding cannot work on the read-only property 'Name' of type 'GogeeceldeaLabacheleabe.ViewModel'.'\r\n``` \r\n\r\n **Expected behavior:**\r\n\r\nWork well like the .NET Framework 4.5\r\n \r\n **Minimal repro:**\r\n\r\nDemo: https://github.com/lindexi/lindexi_gd/tree/01bb068fd7f714313e44cdbcfdf5d0b5630f1bac/GogeeceldeaLabacheleabe\r\n\r\nSee https://developercommunity.visualstudio.com/t/wpf-after-visual-studio-2017-update-a-twoway-or-on/171772 and \r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/5923","RelatedDescription":"Closed issue \"Binding non-public property behavior changed between dotnet core 3.1 and net45\" (#5923)"},{"Id":"1096828315","IsPullRequest":true,"CreatedAt":"2022-01-08T04:15:00","Actor":"ThomasGoulet73","Number":"5922","RawContent":null,"Title":"Fix build failing when using multiple SDK","State":"open","Body":"Fixes #5921\r\n\r\n## Description\r\nFixes a build error when using multiple SDKs in the SDK attribute when `IncludePackageReferencesDuringMarkupCompilation` is set to true. Loops through every SDKs in the SDK attribute and adds them to the generated project separately.\r\n\r\nI used this code from the MSBuild repo to split the SDKs: https://github.com/dotnet/msbuild/blob/main/src/Build/Construction/ProjectRootElement.cs#L1907.\r\n\r\n## Customer Impact\r\nDevelopers cannot build projects with multiple SDKs.\r\n\r\n## Regression\r\nThis is an accidental regression introduced in the .Net 6 SDK when `IncludePackageReferencesDuringMarkupCompilation` was changed to true by default. The same bug is happening in the .Net 5 SDK when overriding `IncludePackageReferencesDuringMarkupCompilation` to true.\r\n\r\n## Testing\r\nTested build of a project with multiple SDKs.\r\n\r\n## Risk\r\nLow.\r\n\r\nNote to reviewer: I recommend reviewing this PR using the diff without whitespace because the indentation changed a lot: https://github.com/dotnet/wpf/pull/5922/files?diff=unified&w=1.\r\n","Url":"https://github.com/dotnet/wpf/pull/5922","RelatedDescription":"Open PR \"Fix build failing when using multiple SDK\" (#5922)"},{"Id":"1096810113","IsPullRequest":false,"CreatedAt":"2022-01-08T02:23:17","Actor":"ThomasGoulet73","Number":"5921","RawContent":null,"Title":"Build fails when using multiple SDK","State":"open","Body":" **Problem description:**\r\n Build error when using multiple SDKs in the SDK attribute when `IncludePackageReferencesDuringMarkupCompilation` is set to true.\r\n\r\nThis is an accidental regression introduced in the .Net 6 SDK when `IncludePackageReferencesDuringMarkupCompilation` was changed to true by default. The same bug is happening in the .Net 5 SDK when overriding `IncludePackageReferencesDuringMarkupCompilation` to true.\r\n\r\n **Actual behavior:**\r\nBuild fails:\r\n```\r\nMSB4236\tThe SDK 'Microsoft.NET.Sdk;Microsoft.NET.Sdk.Web' specified could not be found.\r\n```\r\n \r\n **Expected behavior:**\r\nSuccessful build.\r\n \r\n **Minimal repro:**\r\n- Create a new WPF project.\r\n- Add a new SDK at the end of the current SDK in the project so the first line of the file looks like this: `<Project Sdk=\"Microsoft.NET.Sdk;Microsoft.NET.Sdk.Web\">` (I used Microsoft.NET.Sdk.Web as an exemple).\r\n- Build the project and look for the error in the build output. (It also gives warnings which is just because `Microsoft.NET.Sdk.Web` tries to import `Microsoft.NET.Sdk` which is already imported).\r\n\r\nDoing the same thing but using a Console project in the first step does not produce an error.\r\n\r\nThis issue does not really affect me since I don't use mulitple SDKs but I came accross this eror when looking at the code while investigating #5711.\r\nI already have a fix and I'm going to send a PR shortly, I am opening this issue for tracking.","Url":"https://github.com/dotnet/wpf/issues/5921","RelatedDescription":"Open issue \"Build fails when using multiple SDK\" (#5921)"},{"Id":"1096720651","IsPullRequest":true,"CreatedAt":"2022-01-07T22:59:17","Actor":"dotnet-maestro[bot]","Number":"5920","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220107.6\r\n- **Date Produced**: January 7, 2022 10:23:39 PM UTC\r\n- **Commit**: 5ae807aba23d5fa3132e70330b2ec75f49033193\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22057.3 to 7.0.0-alpha.1.22057.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22057.3 to 7.0.0-alpha.1.22057.6][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ee7ad82...5ae807a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5920","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5920)"},{"Id":"1096609419","IsPullRequest":true,"CreatedAt":"2022-01-07T20:03:18","Actor":"dotnet-maestro[bot]","Number":"5919","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220107.3\r\n- **Date Produced**: January 7, 2022 7:04:47 PM UTC\r\n- **Commit**: ee7ad82057c0399b5be622c75ce85d5c96c58545\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22057.2 to 7.0.0-alpha.1.22057.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22057.2 to 7.0.0-alpha.1.22057.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/19544b0...ee7ad82\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5919","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5919)"},{"Id":"1096586124","IsPullRequest":true,"CreatedAt":"2022-01-07T19:27:40","Actor":"dotnet-maestro[bot]","Number":"5918","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220107.2\r\n- **Date Produced**: January 7, 2022 6:48:10 PM UTC\r\n- **Commit**: 19544b02de4680d70e464cb61faeb75d4be4018f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22057.1 to 7.0.0-alpha.1.22057.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22057.1 to 7.0.0-alpha.1.22057.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/e7afb25...19544b0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5918","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5918)"},{"Id":"1096363876","IsPullRequest":true,"CreatedAt":"2022-01-07T14:51:22","Actor":"dotnet-maestro[bot]","Number":"5917","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220107.1\r\n- **Date Produced**: January 7, 2022 2:16:58 PM UTC\r\n- **Commit**: e7afb25d56b7035d986584e58cf6a787c3edc4ff\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.22056.4 to 7.0.0-alpha.1.22057.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.22056.4 to 7.0.0-alpha.1.22057.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/0d44843...e7afb25\r\n[2]: https://github.com/dotnet/runtime/compare/abb7df5...ef49cd0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5917","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5917)"},{"Id":"1096311254","IsPullRequest":true,"CreatedAt":"2022-01-07T13:50:01","Actor":"dotnet-maestro[bot]","Number":"5916","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220106.6\r\n- **Date Produced**: January 6, 2022 9:12:49 PM UTC\r\n- **Commit**: 34bc5b1611e13bd0ee6a9f38ab8524d2ee489be5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/85188b0...34bc5b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5916","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5916)"},{"Id":"1094342178","IsPullRequest":true,"CreatedAt":"2022-01-07T07:16:16","Actor":"dotnet-maestro[bot]","Number":"5911","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220104.5\r\n- **Date Produced**: January 4, 2022 6:27:59 PM UTC\r\n- **Commit**: 85188b0c348f3f7f8206f441ec2ee2da6dbb06fe\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][2]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][2]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/a0f6d24...85188b0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5911","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5911)"},{"Id":"1095997675","IsPullRequest":true,"CreatedAt":"2022-01-07T05:26:08","Actor":"ayushverma-ms","Number":"5915","RawContent":null,"Title":"adding support for Nullable","State":"open","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nCreate a C# \"WPF Application\" project targeting .NET 5 or .NET 6\r\nAdd a \"Page Function (WPF)\" item to the project.\r\nBuild Solution\r\nExpected: No errors\r\nActual: CS0263 -- Partial declarations of 'PageFunction1' must not specify different base classes\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/5915","RelatedDescription":"Open PR \"adding support for Nullable\" (#5915)"},{"Id":"1095682322","IsPullRequest":false,"CreatedAt":"2022-01-06T20:47:04","Actor":"luojunyuan","Number":"5914","RawContent":null,"Title":"Wpf app display a white dot when touch moving on touch device like tablet","State":"open","Body":"Only app build with wpf has this issue, I've never seen such white dot in other gui programs on my computer(not test winform yet). Instead of win10 native touch moving animation. There is always a white point follows finger moving.\r\n![image](https://user-images.githubusercontent.com/28323948/148447945-cc8eeed9-22e9-4b3c-bec9-89aff87db99d.png)\r\n\r\nRelative thread: https://stackoverflow.com/questions/48074613/how-to-remove-white-touch-dot-on-windows-10\r\n\r\nIs there any other way to turn back the win10 touch moving animation? (a transparent line follow with finger fluently, I can't catch that with screenshot)\r\n\r\nI tried `EnablePointerSupport` but it will effect some Window default behavior when using touch make it even worse.\r\nOverride `Window.OnPreviewTouchMove` did the job but still not stable works. When you drag the title bar with finger, That white dot will definitely appear.\r\n","Url":"https://github.com/dotnet/wpf/issues/5914","RelatedDescription":"Open issue \"Wpf app display a white dot when touch moving on touch device like tablet\" (#5914)"},{"Id":"1094780477","IsPullRequest":false,"CreatedAt":"2022-01-05T22:03:31","Actor":"igandrews","Number":"5912","RawContent":null,"Title":"Negative TextIndent can lead to the LineVisual not being positioned correctly","State":"open","Body":"* .NET Core Version: 3.1 (likely any)\r\n* Windows version: 21H2 (19044.1348)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n  \r\n **Problem description:**\r\nI'm using negative TextIndent to try and create a hanging indent. e.g. TextIndent=\"-80\" Margin=\"400,0,0,0\"  If the container is not wide enough (e.g. at least 485 in this case regardless of the width of the remaining inlines in the paragraph) then the linevisual starts shifting left.\r\n\r\n **Actual behavior:** \r\n At width 425:\r\n![image](https://user-images.githubusercontent.com/17983788/148294370-d5972ce3-8565-4b1f-a758-759614cc413a.png)\r\nNotice how the paragraph below (which has the same margin but without the text indent and the inlineuicontainer that would occupy/fill that indented space) will wrap and get taller.\r\n\r\nAt width 455:\r\n![image](https://user-images.githubusercontent.com/17983788/148294409-014c8c3f-0c1c-4ac8-ae02-60e4565ee1f7.png)\r\n\r\nOnce you make the container width enough then you start to see the content correctly placed. For example at width 485:\r\n![image](https://user-images.githubusercontent.com/17983788/148294436-774e34b1-bd6e-4ad8-bff5-c8be8da019f1.png)\r\n\r\nAnd at width 525:\r\n![image](https://user-images.githubusercontent.com/17983788/148294488-618422fa-b576-457d-9ab7-32018b2a44a5.png)\r\n\r\n **Expected behavior:**\r\nThe paragraph should appear like that of the 2nd paragraph. The 1st inline of the 1st paragraph takes up the entirety of the text indent and so the remaining inline(s) should be just like the one without the textindent.\r\n\r\n **Minimal repro:**\r\n```xaml\r\n  <Grid Width=\"425\" Background=\"LightYellow\">  \r\n  <FlowDocumentScrollViewer x:Name=\"fs\" BorderBrush=\"Black\" BorderThickness=\"1\" Padding=\"0\" Margin=\"0\" HorizontalAlignment=\"Left\" VerticalScrollBarVisibility=\"Hidden\">\r\n    <FlowDocumentScrollViewer.Resources>\r\n      <Style TargetType=\"Paragraph\">\r\n        <Setter Property=\"FontSize\" Value=\"20\" />\r\n        <Setter Property=\"Background\" Value=\"LightGray\" />\r\n        <Setter Property=\"BorderBrush\" Value=\"Green\" />\r\n        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n        <Setter Property=\"Padding\" Value=\"0\" />\r\n      </Style>\r\n    </FlowDocumentScrollViewer.Resources>\r\n    <FlowDocument PagePadding=\"0\">\r\n      <Paragraph TextIndent=\"-80\" Margin=\"400,0,0,0\">\r\n        <InlineUIContainer>\r\n          <Border BorderBrush=\"Black\" BorderThickness=\"2\" Background=\"Red\" Width=\"80\" MinWidth=\"80\" MaxWidth=\"80\" HorizontalAlignment=\"Stretch\" VerticalAlignment=\"Stretch\">\r\n            <TextBlock TextAlignment=\"Right\">Pre</TextBlock>\r\n          </Border>\r\n        </InlineUIContainer><Run>Foo</Run>\r\n      </Paragraph>\r\n      <Paragraph TextIndent=\"0\" Margin=\"400,0,0,0\">\r\n        <Run>Foo</Run>\r\n      </Paragraph>\r\n    </FlowDocument>\r\n  </FlowDocumentScrollViewer>\r\n  </Grid>\r\n```\r\n","Url":"https://github.com/dotnet/wpf/issues/5912","RelatedDescription":"Open issue \"Negative TextIndent can lead to the LineVisual not being positioned correctly\" (#5912)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-12T05:30:34.0483122Z","RunDurationInMilliseconds":488}