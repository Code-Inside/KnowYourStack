{"Data":{"GitHub":{"Issues":[{"Id":"2796497582","IsPullRequest":false,"CreatedAt":"2025-01-18T00:03:07","Actor":"mjkkirschner","Number":"10312","RawContent":null,"Title":"debug / trace find ancestor of type","State":"open","Body":"Hello,\n\nplease redirect me if this is the not the correct location for this issue.\n\nI would somehow like to debug all FindAncestorOfType calls but I cannot seem to find objectref file when decompiling symbols in visual studio.\n\nIf that is not possible I would like to enable the tracing args for this method - is that possible?\n\nhttps://github.com/dotnet/wpf/blob/b08d70d354d9f0f34ecf4bcd5f214e57dd5dab1e/src/Microsoft.DotNet.Wpf/src/PresentationFramework/MS/Internal/Data/ObjectRef.cs#L393","Url":"https://github.com/dotnet/wpf/issues/10312","RelatedDescription":"Open issue \"debug / trace find ancestor of type\" (#10312)"},{"Id":"2796368330","IsPullRequest":true,"CreatedAt":"2025-01-17T21:54:23","Actor":"SergeCroise","Number":"10311","RawContent":null,"Title":"fix: api-compat.md spelling punctuation","State":"open","Body":"- referen**ce** assemblies\r\n- availab**le**\r\n- generate **an** MSBuild error\r\n- inten**tion**al\r\n\r\nFixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nsee:\r\nhttps://www.merriam-webster.com/dictionary/availabe\r\nhttps://www.merriam-webster.com/dictionary/intential\r\nhttps://www.merriam-webster.com/dictionary/e.g.#examples\r\nhttps://www.merriam-webster.com/dictionary/an#usage-discussion-1\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/10311","RelatedDescription":"Open PR \"fix: api-compat.md spelling punctuation\" (#10311)"},{"Id":"2796168690","IsPullRequest":true,"CreatedAt":"2025-01-17T19:34:32","Actor":"h3xds1nz","Number":"10310","RawContent":null,"Title":"Remove some allocations related to GudelineSet and DoubleCollection","State":"open","Body":"## Description\r\n\r\n- Accept stack-allocated arrays internally for `GudelineSet`.\r\n- Accept params for `DoubleCollection` with pre-allocated capacity in `FrugalStructList<T>`.\r\n- Use them in the framework code.\r\n\r\n#### Sample benchmark for `GuidelineSet` creation\r\n\r\n| Method   | Mean [ns] | Error [ns] | StdDev [ns] | Gen0   | Code Size [B] | Allocated [B] |\r\n|--------- |----------:|-----------:|------------:|-------:|--------------:|--------------:|\r\n| ORIGINAL |  298.1 ns |    4.57 ns |     4.28 ns | 0.0329 |         866 B |         552 B |\r\n| PR__EDIT |  257.5 ns |    3.55 ns |     3.15 ns | 0.0281 |       3,842 B |         472 B |\r\n\r\n\r\n```csharp\r\n[Benchmark]\r\npublic GuidelineSet Original() => new GuidelineSet([4.5, 6.5], [4.5, 6.5]);\r\n\r\n[Benchmark]\r\npublic GuidelineSet PR__EDIT() => new GuidelineSet(new double[] { 4.5, 6.5 }, new double[] { 4.5, 6.5 });\r\n```\r\n\r\n## Customer Impact\r\n\r\nImproved performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow, just swaps from heap arrays to stack arrays. Part of the speed up comes from the fact the new `DoubleCollection` doesn't check the thread in `params` ctor as it makes no sense (further backed with all the code comments) and it can therefore get inlined.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10310)","Url":"https://github.com/dotnet/wpf/pull/10310","RelatedDescription":"Open PR \"Remove some allocations related to GudelineSet and DoubleCollection\" (#10310)"},{"Id":"2796120025","IsPullRequest":true,"CreatedAt":"2025-01-17T19:14:05","Actor":"SergeCroise","Number":"10308","RawContent":null,"Title":"fix: acceptance_criteria.md remove useless article","State":"closed","Body":"- When **a** solution has been...\r\n\r\nFixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nSimplify the sentence by removing a useless word\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10308)","Url":"https://github.com/dotnet/wpf/pull/10308","RelatedDescription":"Closed or merged PR \"fix: acceptance_criteria.md remove useless article\" (#10308)"},{"Id":"2796121852","IsPullRequest":true,"CreatedAt":"2025-01-17T19:01:42","Actor":"dotnet-maestro[bot]","Number":"10309","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250116.7\n- **Date Produced**: January 17, 2025 6:18:50 AM UTC\n- **Commit**: 6b1d1381391721381611beff7cfa7f05ce73a590\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25066.5 to 10.0.0-alpha.1.25066.7][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25066.5 to 10.0.0-alpha.1.25066.7][1]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25066.5 to 10.0.0-alpha.1.25066.7][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Management**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Speech**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.25065.17 to 10.0.0-alpha.1.25066.14][2]\n\n[1]: https://github.com/dotnet/winforms/compare/f0026e791f...6b1d138139\n[2]: https://github.com/dotnet/runtime/compare/2da9a85776...42fe08e927\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10309)","Url":"https://github.com/dotnet/wpf/pull/10309","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10309)"},{"Id":"2796079118","IsPullRequest":true,"CreatedAt":"2025-01-17T18:39:10","Actor":"SergeCroise","Number":"10307","RawContent":null,"Title":"fix: contributing.md spelling","State":"closed","Body":"- techn**olo**gy\r\n- comman**d l**ine\r\n\r\nFixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nsee:\r\nhttps://learn.microsoft.com/en-us/style-guide/a-z-word-list-term-collections/c/command-line\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10307)","Url":"https://github.com/dotnet/wpf/pull/10307","RelatedDescription":"Closed or merged PR \"fix: contributing.md spelling\" (#10307)"},{"Id":"2795146299","IsPullRequest":false,"CreatedAt":"2025-01-17T16:59:27","Actor":"luchunminglu","Number":"10305","RawContent":null,"Title":"Microsoft.Win32.OpenFileDialog  cause  application crash  After update .NET9","State":"closed","Body":"\nAfter update .NET9,  dialog.ShowDialog() crash the application in same machine, not all machine even with same OS.\nThe same code work on .net8.\n\n```\n\nMicrosoft.Win32.OpenFileDialog dialog = new Microsoft.Win32.OpenFileDialog();\n\nbool? dialogResult = dialog.ShowDialog();\n```","Url":"https://github.com/dotnet/wpf/issues/10305","RelatedDescription":"Closed issue \"Microsoft.Win32.OpenFileDialog  cause  application crash  After update .NET9\" (#10305)"},{"Id":"2795987236","IsPullRequest":false,"CreatedAt":"2025-01-17T09:30:38","Actor":"VShawn","Number":"10306","RawContent":null,"Title":"The WPF program caused a KERNELBASE.dll exception on Windows11","State":"open","Body":"## Description\n\nI developed an RDP desktop program using WPF + WindowsFormsHost + MSTSCLib.dll(.NET6 and .NET8), and everything worked fine on the Win10. However, in Win11, whenever I click on the information button in the RDP connection bar, it causes the WPF program to crash. (Tests have shown that any pop-up of RDP will cause a crash.)\n\n![Image](https://github.com/user-attachments/assets/3a5d728c-bf1b-4ad0-a5bb-842fe6250748)\n\nInitially, I thought it was an issue with WindowsFormsHost, so I rewrote a complete Winform RDP window and opened it in the WPF project, but the problem persisted.\n\nThen, I moved this Winform RDP window to a Winform project, and now clicking on the information button in the RDP connection bar does not cause the software to crash.\n\nYou can see the difference between Winform and WPF in this video:\n\nhttps://github.com/user-attachments/assets/850c8402-2cb0-4444-8f73-7bdc0e609d27\n\n\n## related \n\nrelated ticket: https://github.com/1Remote/1Remote/issues/559\n\n\n\n\n### Reproduction Steps\n\n![Image](https://github.com/user-attachments/assets/13edcb51-8f62-47ce-a1f3-6912bfabcd97)\n\nOpen the solution I uploaded in Win11, change the account password to fit your server, run it, and click the information button in the connection bar. You will find that it only crashes in the WPF project. (The RDP sections of the two test projects have exactly the same code.)\n\n[Demo Upload.zip](https://github.com/user-attachments/files/18452348/Demo.Upload.zip)\n\n### Expected behavior\n\nNo crash with WPF.\n\n### Actual behavior\n\ncrash with WPF.\n\n\n## Log in the event viewer:\n```\n错误应用程序名称: WpfRDPHost6.exe，版本: 0.0.0.0，时间戳: 0x65cd0000\n错误模块名称: KERNELBASE.dll，版本: 10.0.22621.4249，时间戳: 0x0cf64c6a\n异常代码: 0xc000041d\n错误偏移量: 0x000000000005fe4c\n错误进程 ID: 0x0x7FAC\n错误应用程序启动时间: 0x0x1DB68BFFE406869\n错误应用程序路径: D:\\Project\\Upload\\WpfRDPHost6\\bin\\Debug\\net8.0-windows10.0.17763.0\\WpfRDPHost6.exe\n错误模块路径: C:\\Windows\\System32\\KERNELBASE.dll\n报告 ID: 0037c9ba-27af-481f-a4f0-af1324548f1d\n错误程序包全名: \n错误程序包相对应用程序 ID: \n```\n\n[Report.wer.zip](https://github.com/user-attachments/files/18451787/Report.wer.zip)\n\n","Url":"https://github.com/dotnet/wpf/issues/10306","RelatedDescription":"Open issue \"The WPF program caused a KERNELBASE.dll exception on Windows11\" (#10306)"},{"Id":"2790619131","IsPullRequest":true,"CreatedAt":"2025-01-17T05:21:51","Actor":"dotnet-maestro[bot]","Number":"10283","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25063.12 to 10.0.0-alpha.1.25065.17 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250116.5\n- **Date Produced**: January 17, 2025 2:07:40 AM UTC\n- **Commit**: f0026e791faecab516dc9bd3d16872cd75cdbdb8\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25064.7 to 10.0.0-alpha.1.25066.5][6]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25064.7 to 10.0.0-alpha.1.25066.5][6]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25064.7 to 10.0.0-alpha.1.25066.5][6]\n\n[6]: https://github.com/dotnet/winforms/compare/92f6da9cb0...f0026e791f\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10283)\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10283","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10283)"},{"Id":"2791710123","IsPullRequest":true,"CreatedAt":"2025-01-17T05:09:34","Actor":"dotnet-maestro[bot]","Number":"10292","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 2bde0aa3-7165-43c9-100b-08dcbc30275f\n- **Build**: 20250115.2\n- **Date Produced**: January 15, 2025 7:09:49 PM UTC\n- **Commit**: c4bbc67763bf0c5a868862df874079380e647d61\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/8cc6ecd76c...c4bbc67763\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 9.0.102\n  - Updates tools.dotnet to 9.0.102\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10292)","Url":"https://github.com/dotnet/wpf/pull/10292","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#10292)"},{"Id":"2794584568","IsPullRequest":true,"CreatedAt":"2025-01-17T05:04:50","Actor":"ThomasGoulet73","Number":"10304","RawContent":null,"Title":"Fix flaky tests","State":"open","Body":"Fixes dotnet/wpf#10250\r\n\r\n## Description\r\nThis fixes the flaky tests which was caused by the native dependencies sometime not being built before the test projects. This PR adds an explicit reference to the projects of the native dependencies to make sure that it's built in the right order and also adds some protection by including the files explictly instead of using file globbing to make the build fail with an error which contain the path of the file missing instead of the tests failing to start, which improves the build logs in case of error.\r\n\r\n## Customer Impact\r\nNone, tests only.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nDid a bunch of local builds and it fails on 1 out of 5 build before this PR and I did ~10 local builds with this PR and it didn't failed. I also validated the build order in the build log.\r\n\r\n## Risk\r\nLow to none, tests only.\r\n\r\n/cc @JeremyKuhne since you worked in that area too lately.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10304)","Url":"https://github.com/dotnet/wpf/pull/10304","RelatedDescription":"Open PR \"Fix flaky tests\" (#10304)"},{"Id":"2792466946","IsPullRequest":true,"CreatedAt":"2025-01-16T11:31:42","Actor":"h3xds1nz","Number":"10303","RawContent":null,"Title":"Use source-generated regex instead of runtime compilation (SYSLIB1045)","State":"open","Body":"Fixes #10302\r\n\r\n## Description\r\n\r\nUse `GeneratedRegex` attribute to allow for source-generation of regexes at compile time for improved performance.\r\n\r\nWe only use regexes in two places which could effectively be removed but for now we should at least take advantage of the highest-performing form of regular expressions on .NET.\r\n\r\nIn the PBT case, we have to use a pre-processor statement to comfort NetFX scenario, which will later need naming-styles suppression.\r\n\r\nNote: `RegexOptions.Compiled` is ignored in source-generated regexes, so I've removed it.\r\n\r\n## Customer Impact\r\n\r\nImproved performance, cleaner codebase.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nWhile the second occurence was fixed manually because analyzer won't flag it (guess nobody thought someone is declaring regex inline with a const), the change is straightforward.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10303)","Url":"https://github.com/dotnet/wpf/pull/10303","RelatedDescription":"Open PR \"Use source-generated regex instead of runtime compilation (SYSLIB1045)\" (#10303)"},{"Id":"2792466135","IsPullRequest":false,"CreatedAt":"2025-01-16T11:31:18","Actor":"h3xds1nz","Number":"10302","RawContent":null,"Title":"SYSLIB1045: Use [GeneratedRegex] for compile time source generation","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/syslib-diagnostics/syslib1040-1049","Url":"https://github.com/dotnet/wpf/issues/10302","RelatedDescription":"Open issue \"SYSLIB1045: Use [GeneratedRegex] for compile time source generation\" (#10302)"},{"Id":"2792192232","IsPullRequest":true,"CreatedAt":"2025-01-16T09:40:09","Actor":"h3xds1nz","Number":"10301","RawContent":null,"Title":"[StyleCleanUp] ThreadStatic fields should not use inline initialization (CA2019)","State":"open","Body":"Fixes #10300 \r\n\r\n## Description\r\n\r\nAvoid initializing `[ThreadStatic]` variables inline to prevent mistakes as it may lead you into thinking that such value will be initialized for all instances of the variable, not just the first thread.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow. I've checked that fields that require initialization are properly initialized elsewhere.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10301)","Url":"https://github.com/dotnet/wpf/pull/10301","RelatedDescription":"Open PR \"[StyleCleanUp] ThreadStatic fields should not use inline initialization (CA2019)\" (#10301)"},{"Id":"2792180788","IsPullRequest":false,"CreatedAt":"2025-01-16T09:35:24","Actor":"h3xds1nz","Number":"10300","RawContent":null,"Title":"CA2019: ThreadStatic fields should not use inline initialization","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2019","Url":"https://github.com/dotnet/wpf/issues/10300","RelatedDescription":"Open issue \"CA2019: ThreadStatic fields should not use inline initialization\" (#10300)"},{"Id":"2791934601","IsPullRequest":false,"CreatedAt":"2025-01-16T07:42:37","Actor":"himgoyalmicro","Number":"10299","RawContent":null,"Title":"CA1846: Prefer AsSpan over Substring","State":"open","Body":"Link to issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1846\n\n## Rule Description: \nSubstring allocates a new string object on the heap and performs a full copy of the extracted text. String manipulation is a performance bottleneck for many programs. Allocating many small, short-lived strings on a hot path can create enough collection pressure to impact performance. The O(n) copies created by Substring become relevant when the substrings get large. The [Span<T>](https://learn.microsoft.com/en-us/dotnet/api/system.span-1) and [ReadOnlySpan<T>](https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1) types were created to solve these performance problems.\n\nMany APIs that accept strings also have overloads that accept a ReadOnlySpan<System.Char> argument. When such overloads are available, you can improve performance by calling AsSpan instead of Substring.","Url":"https://github.com/dotnet/wpf/issues/10299","RelatedDescription":"Open issue \"CA1846: Prefer AsSpan over Substring\" (#10299)"},{"Id":"2791934483","IsPullRequest":false,"CreatedAt":"2025-01-16T07:42:33","Actor":"himgoyalmicro","Number":"10298","RawContent":null,"Title":"CA1845: Use span-based 'string.Concat'","State":"open","Body":"Link to issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1845\n\n## Rule Description: \n> Calling Substring produces a copy of the extracted substring. By using AsSpan instead of Substring and calling the overload of string.Concat that accepts spans, you can eliminate the unnecessary string allocation.","Url":"https://github.com/dotnet/wpf/issues/10298","RelatedDescription":"Open issue \"CA1845: Use span-based 'string.Concat'\" (#10298)"},{"Id":"2791934129","IsPullRequest":false,"CreatedAt":"2025-01-16T07:42:20","Actor":"himgoyalmicro","Number":"10297","RawContent":null,"Title":"CA1847: Use String.Contains(char) instead of String.Contains(string) with single characters","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1847\n\n## Rule Description:\n> When searching for a single character, String.Contains(char) offers better performance than String.Contains(string).","Url":"https://github.com/dotnet/wpf/issues/10297","RelatedDescription":"Open issue \"CA1847: Use String.Contains(char) instead of String.Contains(string) with single characters\" (#10297)"},{"Id":"2791929129","IsPullRequest":false,"CreatedAt":"2025-01-16T07:40:01","Actor":"himgoyalmicro","Number":"10296","RawContent":null,"Title":"CA2251: Use String.Equals over String.Compare","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2251\n\n## Rule Description\n> [String.Compare](https://learn.microsoft.com/en-us/dotnet/api/system.string.compare) is designed to produce a total-order comparison that can be used for sorting. If you only care whether the strings are equal, it is both clearer and likely faster to use an equivalent overload of [String.Equals](https://learn.microsoft.com/en-us/dotnet/api/system.string.equals).","Url":"https://github.com/dotnet/wpf/issues/10296","RelatedDescription":"Open issue \"CA2251: Use String.Equals over String.Compare\" (#10296)"},{"Id":"2791909688","IsPullRequest":false,"CreatedAt":"2025-01-16T07:28:59","Actor":"bent-rasmussen","Number":"10295","RawContent":null,"Title":"Fluent Theme: Expander is slow to collapse in .NET 9.0.1","State":"open","Body":"### Description\n\nMy company is preparing a preview version of our app using the new fluent theme but we were surprised to find this regression in 9.0.1 (the slowness was introduced after upgrading from SDK 9.0.101 to SDK 9.0.102) - nothing else changed:\n\n![Image](https://github.com/user-attachments/assets/75c7aa58-3301-4f56-915d-62cb3c7ab1c0)\n\n### Reproduction Steps\n\nI have not been able to create a minimal repro yet.\n\n### Expected behavior\n\nFast collapse.\n\n### Actual behavior\n\nSlow collapse.\n\n### Regression?\n\n* It was fast in SDK 9.0.101.\n* It is now slow in SDK 9.0.102.\n\n### Known Workarounds\n\nUse prior version of .NET.\n\n### Impact\n\nPoor UX.\n\n### Configuration\n\nMicrosoft Windows 11 Pro\nWindows 10.0.26100 Build 26100\nSurface Pro 8\n.NET 9.0.1 (SDK 9.0.102)\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10295","RelatedDescription":"Open issue \"Fluent Theme: Expander is slow to collapse in .NET 9.0.1\" (#10295)"},{"Id":"2791859339","IsPullRequest":false,"CreatedAt":"2025-01-16T06:59:33","Actor":"himgoyalmicro","Number":"10294","RawContent":null,"Title":"CA1507: Use nameof in place of string","State":"open","Body":"Link to the issue description: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1507\n\n## Rule Description \n\nRule CA1507 flags the use of a string literal as an argument to a method or constructor where a [nameof](https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/nameof) (NameOf in Visual Basic) expression would add maintainability. The rule fires if all of the following conditions are met:\n\n- The argument is a string literal or constant.\n- The argument corresponds to a string-typed parameter of the method or the constructor that's being invoked (that is, there is no conversion involved at the call site).\n- Either:\n  - The declared name of the parameter is paramName and the constant value of the string literal matches the name of a parameter of the method, lambda, or local function within which the method or constructor is being invoked.\n  - The declared name of the parameter is propertyName and the constant value of the string literal matches the name of a property of the type within which the method or constructor is being invoked.","Url":"https://github.com/dotnet/wpf/issues/10294","RelatedDescription":"Open issue \"CA1507: Use nameof in place of string\" (#10294)"},{"Id":"2791746478","IsPullRequest":false,"CreatedAt":"2025-01-16T05:35:13","Actor":"harshit7962","Number":"10293","RawContent":null,"Title":"IDE0040","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/10293","RelatedDescription":"Closed issue \"IDE0040\" (#10293)"},{"Id":"2791709221","IsPullRequest":true,"CreatedAt":"2025-01-16T05:01:24","Actor":"dotnet-maestro[bot]","Number":"10291","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20250116.1\n- **Date Produced**: January 16, 2025 10:33:57 AM UTC\n- **Commit**: 0c4a0fd523decdd2a1f39bee8499cd977697cd21\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25066.1][2]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25066.1][2]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25066.1][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25066.1][2]\n\n[2]: https://github.com/dotnet/arcade/compare/98b4ae348f...0c4a0fd523\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10291)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10291","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10291)"},{"Id":"2791088381","IsPullRequest":false,"CreatedAt":"2025-01-15T22:26:19","Actor":"richlander","Number":"10290","RawContent":null,"Title":"Please update the install script","State":"open","Body":"Scripts: https://github.com/dotnet/install-scripts/\n\nRelated: https://github.com/dotnet/core/issues/9671\n\nhttps://github.com/dotnet/wpf/blob/2fa8170912e376da061c5c4f3deeebaa795911d7/dotnet-test-install.ps1#L1040-L1055\n\n","Url":"https://github.com/dotnet/wpf/issues/10290","RelatedDescription":"Open issue \"Please update the install script\" (#10290)"},{"Id":"2790761161","IsPullRequest":true,"CreatedAt":"2025-01-15T20:12:11","Actor":"h3xds1nz","Number":"10289","RawContent":null,"Title":"Fix InvalidCastException in Can/ConvertTo methods from KeyConverter","State":"open","Body":"## Description\r\n\r\nSending this in now when #8215 was finally merged as I've discovered this during development of #9697 but wanted to wait until I can fix the TODOs in the unit tests as well.\r\n\r\nFixes `InvalidCastException` thrown from `CanConvertTo` when unboxing cast is performed on `value` that was not `null` but was of a different type than `Key` or the underlying storage (`int`), e.g. an object or a different value type.\r\nCan* methods should not (and converters do not intentionally) throw in them but this is simple a programmer's error, it is not documented behavior either, hence the fix for this.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.input.keyconverter.canconvertto?view=windowsdesktop-8.0\r\n\r\nFixes the same issue in `ConvertTo` by throwing the proper (NotSupported) exception.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.input.keyconverter.convertto?view=windowsdesktop-8.0\r\n\r\n## Customer Impact\r\n\r\nLess unexpected exceptions thrown.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, unit test.\r\n\r\n## Risk\r\n\r\nThere might be a concern that a code was passing `int` instead of `Key` which is the underlying storage type, so it survives the unboxing hard cast that was being performed but not the type `is` check. We may therefore for back-compat include check for both `Key` and `int` but other converters just check for their type, so in my honest opinion it would be best to unify the behaviour and mention in release notes.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10289)","Url":"https://github.com/dotnet/wpf/pull/10289","RelatedDescription":"Open PR \"Fix InvalidCastException in Can/ConvertTo methods from KeyConverter\" (#10289)"},{"Id":"2790649223","IsPullRequest":false,"CreatedAt":"2025-01-15T19:18:08","Actor":"h3xds1nz","Number":"10288","RawContent":null,"Title":"SA1400: Element should declare an access modifier","State":"open","Body":"More info: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1400.md\n\nGets fixed as part of #10284.","Url":"https://github.com/dotnet/wpf/issues/10288","RelatedDescription":"Open issue \"SA1400: Element should declare an access modifier\" (#10288)"},{"Id":"2790644868","IsPullRequest":false,"CreatedAt":"2025-01-15T19:15:25","Actor":"h3xds1nz","Number":"10287","RawContent":null,"Title":"IDE0330: Prefer 'System.Threading.Lock'","State":"open","Body":"More info: https://learn.microsoft.com/cs-cz/dotnet/fundamentals/code-analysis/style-rules/ide0330","Url":"https://github.com/dotnet/wpf/issues/10287","RelatedDescription":"Open issue \"IDE0330: Prefer 'System.Threading.Lock'\" (#10287)"},{"Id":"2790638958","IsPullRequest":false,"CreatedAt":"2025-01-15T19:11:51","Actor":"h3xds1nz","Number":"10286","RawContent":null,"Title":"CA1825: Avoid zero-length array allocations","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1825","Url":"https://github.com/dotnet/wpf/issues/10286","RelatedDescription":"Open issue \"CA1825: Avoid zero-length array allocations\" (#10286)"},{"Id":"2790636755","IsPullRequest":false,"CreatedAt":"2025-01-15T19:10:33","Actor":"h3xds1nz","Number":"10285","RawContent":null,"Title":"IDE0082: Convert typeof to nameof","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0082","Url":"https://github.com/dotnet/wpf/issues/10285","RelatedDescription":"Open issue \"IDE0082: Convert typeof to nameof\" (#10285)"},{"Id":"2790633179","IsPullRequest":false,"CreatedAt":"2025-01-15T19:08:20","Actor":"h3xds1nz","Number":"10284","RawContent":null,"Title":"IDE0040: Add accessibility modifiers","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0040","Url":"https://github.com/dotnet/wpf/issues/10284","RelatedDescription":"Open issue \"IDE0040: Add accessibility modifiers\" (#10284)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-18T03:30:26.7365096Z","RunDurationInMilliseconds":420}