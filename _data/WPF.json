{"Data":{"GitHub":{"Issues":[{"Id":"680688944","IsPullRequest":false,"CreatedAt":"2020-08-18T04:54:52","Actor":"RussKie","Number":"3346","RawContent":null,"Title":"`Debug.Assert` no longer shows a dialog prompt","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: **.NET Core 3.1 onwards**\r\n\r\n* Have you experienced this same bug with .NET Framework?: **No**\r\n\r\n**Problem description:**\r\n\r\n`System.Diagnostics.Trace.Assert` and `System.Diagnostics.Debug.Assert` no longer trigger a dialog prompts in desktop apps. Instead apps silently silently crash unless have a debugger attached.\r\n\r\nAs discussed in https://github.com/dotnet/runtime/issues/40512, the assert behavior was changed in dotnet/coreclr#20764, and no longer raises a dialog.\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.Debug/tests/DebugTestsUsingListeners.cs#L248-L303 illustrates how to implement a custom trace listener, which may act as a basis for a fix.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nNo crash, and assertion dialog must appear after assert.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create new WPF Core project. \r\n2. Put `System.Diagnostics.Debug.Assert(false, \"test\");` anywhere in the code, for example:\r\n    ```cs\r\n    protected override void OnActivated(EventArgs e)\r\n    {\r\n        System.Diagnostics.Debug.Assert(false, \"test\");\r\n    }\r\n    ```","Url":"https://github.com/dotnet/wpf/issues/3346","RelatedDescription":"Open issue \"`Debug.Assert` no longer shows a dialog prompt\" (#3346)"},{"Id":"680660543","IsPullRequest":true,"CreatedAt":"2020-08-18T03:55:26","Actor":"dotnet-maestro[bot]","Number":"3345","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200817.2\r\n- **Date Produced**: 8/18/2020 3:24 AM\r\n- **Commit**: 6d1700bfaa99dad3a903df693d1f7b00dca18acc\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 5.0.0-rc.1.20417.1 to 5.0.0-rc.1.20417.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3345","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3345)"},{"Id":"675171067","IsPullRequest":false,"CreatedAt":"2020-08-17T19:01:28","Actor":"vatsan-madhavan","Number":"3317","RawContent":null,"Title":"Warning C4244 - implicit double -> float conversion with possible data-loss in BaseMatrix.cpp","State":"closed","Body":"Here is the warning: \r\n\r\n> src\\Microsoft.DotNet.Wpf\\src\\WpfGfx\\core\\common\\BaseMatrix.cpp(1034,57): warning C4244: 'argument':\r\nconversion from 'double' to 'float', possible loss of data\r\n\r\nhttps://github.com/dotnet/wpf/blob/49cc5c6dcf0ead39a08b1917eeb1d472bcfbe739/src/Microsoft.DotNet.Wpf/src/WpfGfx/core/common/BaseMatrix.cpp#L1034\r\n\r\n`CFloatFpu::Ceiling` takes a `float` param, but `std::pow` returns a `double`, which leads to the warning: \r\n\r\nhttps://github.com/dotnet/wpf/blob/49cc5c6dcf0ead39a08b1917eeb1d472bcfbe739/src/Microsoft.DotNet.Wpf/src/WpfGfx/common/shared/real.h#L628-L630\r\n\r\n\r\n`std::pow` is defined to return `double` since C++11 ([reference](https://en.cppreference.com/w/cpp/numeric/math/pow))\r\n\r\n\r\n>```C++\r\n>Promoted    pow ( Arithmetic1 base, Arithmetic2 exp ); | (7) | (since C++11)\r\n>```\r\n>7) A set of overloads or a function template for all combinations of arguments of arithmetic type not covered by 1-3). If any argument has integral type, it is cast to `double`. If any argument is `long double`, then the return type Promoted is also `long double`, otherwise the return type is always `double`.\r\n\r\n-- \r\n\r\nThe result of `std::pow` should be safe to `static_cast` to `REAL` since `rScaleThreshold <= 1` (this is assert'ed early in the method). \r\n\r\n-- \r\n\r\nWhy isn't this warning seen in CI/dev builds using build.cmd today? I can see it easily when building wpfgfx.vcxproj with `msbuild` directly. ","Url":"https://github.com/dotnet/wpf/issues/3317","RelatedDescription":"Closed issue \"Warning C4244 - implicit double -> float conversion with possible data-loss in BaseMatrix.cpp\" (#3317)"},{"Id":"679384602","IsPullRequest":false,"CreatedAt":"2020-08-17T18:54:56","Actor":"ryalanms","Number":"3336","RawContent":null,"Title":"Suppress obsolete warnings treated as errors for Constrained Execution Region (CER) feature","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/3336","RelatedDescription":"Closed issue \"Suppress obsolete warnings treated as errors for Constrained Execution Region (CER) feature\" (#3336)"},{"Id":"680409301","IsPullRequest":false,"CreatedAt":"2020-08-17T17:39:55","Actor":"jonasnordlund","Number":"3344","RawContent":null,"Title":"Maximized window hides automatically hiding taskbar","State":"open","Body":"* .NET Core Version: 3.1\r\n* Windows version: 2004 (Build 19041.450)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n **Problem description:**\r\n \r\n **Actual behavior:** Taskbar in automatic hide mode does not appear when moving the mouse pointer to the taskbar area in a maximized WPF app window.\r\n \r\n **Expected behavior:** Taskbar should slide open regardless window normal/maximized state.\r\n \r\n **Minimal repro:**\r\n\r\n* Set the taskbar to auto hide mode.\r\n* Create a new Visual Studio 2019 project of type WPF App for .NET Framework 4.8 or .NET Core 3.1.\r\n* Run the app.\r\n* Maximize the blank app window and hover the taskbar area. The taskbar will now not be shown.\r\n\r\n**Findings:**\r\n\r\n* Expected behavior in a Windows Forms app on .NET Framework 4.8 or .NET Core 3.1.\r\n* Expected behavior in Windows Notepad. (to further exclude any Windows 10 bugs)\r\n* Expected behavior in a dual screen setup when maximizing the window and hovering the taskbar area on the secondary screen.\r\n* The same behavior is seen in Windows 10 Version 1909.\r\n* The behavior does not seem to depend on DPI settings. Tested resolution on two systems in 2560x1440.","Url":"https://github.com/dotnet/wpf/issues/3344","RelatedDescription":"Open issue \"Maximized window hides automatically hiding taskbar\" (#3344)"},{"Id":"680311930","IsPullRequest":false,"CreatedAt":"2020-08-17T15:13:08","Actor":"Perpete","Number":"3343","RawContent":null,"Title":"WM_DPICHANGED - WM_WINDOWPOSCHANGING  - location windows WPF","State":"open","Body":"Hello,\r\nIn a WPF project, I need to position different windows on multiple screens using dpi awarness in PerMonitorV2 mode.\r\nAfter several tests with Framework 4.8 or Core 3.1, I noticed a problem with the positioning values of the windows.\r\nSo, I wrote a little test program to retrieve some messages sent to my window using a WndProc function to check where the problem was.\r\nFor the test, I move my window between 2 monitors with different scales.\r\nIf I move around the monitor at 100% scale, in the image below, you can see that my window position values correctly match the position values given by the WM_WINDOWPOSCHANGING message.\r\n\r\n![Before](https://user-images.githubusercontent.com/66659162/90411858-a9716880-e0ac-11ea-98dc-c796115bbf68.png)\r\n\r\nWhen deciding to switch my window to the monitor at 150% scale, I receive the scale change message (WM_DPICHANGED).\r\nIn the image below, you can see the suggested position and size for the window.\r\nThe scale goes to 150%\r\nThe size values are multiplied by 1.5.\r\nHeight: 500x1.5 = 750\r\nWidth: 800x1.5 = 1200\r\nPosition values remain constant\r\n\r\nThe WM_WINDOWPOSCHANGING message confirms the acceptance of this suggested size and position.\r\nAfter this change of scale, I see that the values for the size of my window have been divided by 1.5 compared to the suggestion in order to keep these values constant.\r\nMe.height: 750 / 1.5 = 500\r\nMe.width: 1200 / 1.5 = 800\r\n\r\nOn the other hand, the position values of my window were also divided by 1.5.\r\nMe.top: 91 / 1.5 = 61\r\nMe.left: 1212 / 1.5 = 808\r\n\r\n![After](https://user-images.githubusercontent.com/66659162/90411838-a0809700-e0ac-11ea-8798-89f5245b79c2.png)\r\n\r\nIf I continue to move my window on the monitor whose scale is 150%, you can see that the WM_WINDOWPOSCHANGING message confirms the position in logical units while the position values of my window are still divided by the scale of the monitor.\r\n\r\n![Move](https://user-images.githubusercontent.com/66659162/90411921-bd1ccf00-e0ac-11ea-8459-9366fc39c6c7.png)\r\n\r\nMy window positioning values are logical units (96dpi). They should not be divided by the monitor scale.\r\nIs the problem related to Framework 4.8 or Core 3.1?\r\nYou can perform the test using the program contained in the zip file.\r\n\r\n[WpfMessageWindow.zip](https://github.com/dotnet/wpf/files/5085076/WpfMessageWindow.zip)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/3343","RelatedDescription":"Open issue \"WM_DPICHANGED - WM_WINDOWPOSCHANGING  - location windows WPF\" (#3343)"},{"Id":"680008519","IsPullRequest":true,"CreatedAt":"2020-08-17T13:47:23","Actor":"dotnet-maestro[bot]","Number":"3341","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200817.1\r\n- **Date Produced**: 8/17/2020 1:15 PM\r\n- **Commit**: b014c89fafff342c92c27968f8231b5032b12954\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 5.0.0-rc.1.20416.3 to 5.0.0-rc.1.20417.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.7 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3341","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3341)"},{"Id":"680214769","IsPullRequest":true,"CreatedAt":"2020-08-17T13:16:34","Actor":"dotnet-maestro[bot]","Number":"3342","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200817.2\r\n- **Date Produced**: 8/17/2020 12:46 PM\r\n- **Commit**: a4aea6826b8c3e93f190e5ccb76cbf86eaee4b2d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-rc.1.20414.3 to 5.0.0-rc.1.20417.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3342","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3342)"},{"Id":"679990825","IsPullRequest":true,"CreatedAt":"2020-08-17T07:17:56","Actor":"dotnet-maestro[bot]","Number":"3340","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200816.3\r\n- **Date Produced**: 8/17/2020 6:38 AM\r\n- **Commit**: 5eee98727845b5cbe0d59aa660737642017e7232\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 5.0.0-rc.1.20416.2 to 5.0.0-rc.1.20416.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3340","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3340)"},{"Id":"679971907","IsPullRequest":true,"CreatedAt":"2020-08-17T06:49:19","Actor":"dotnet-maestro[bot]","Number":"3339","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200816.2\r\n- **Date Produced**: 8/17/2020 6:14 AM\r\n- **Commit**: 402149355121a80d3007feb5474f9fecf4958e00\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 5.0.0-rc.1.20416.1 to 5.0.0-rc.1.20416.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3339","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3339)"},{"Id":"679929438","IsPullRequest":true,"CreatedAt":"2020-08-17T05:13:48","Actor":"dotnet-maestro[bot]","Number":"3338","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200816.1\r\n- **Date Produced**: 8/17/2020 4:42 AM\r\n- **Commit**: 944fda8c53d1f8d4d6f4e602bb6b20241f7bf50c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 5.0.0-rc.1.20415.1 to 5.0.0-rc.1.20416.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3338","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3338)"},{"Id":"678470685","IsPullRequest":true,"CreatedAt":"2020-08-15T21:46:41","Actor":"dotnet-maestro[bot]","Number":"3331","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20200811.8\r\n- **Date Produced**: 8/11/2020 7:07 PM\r\n- **Commit**: ecec08a0eebbd92bb9538e351d475582551d9092\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3331","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3331)"},{"Id":"679344663","IsPullRequest":true,"CreatedAt":"2020-08-15T21:46:40","Actor":"dotnet-maestro[bot]","Number":"3335","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200814.3\r\n- **Date Produced**: 8/14/2020 6:47 PM\r\n- **Commit**: ce881edd67d5f2a607c0b20848aad2f67cb94b31\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-preview.8.20412.2 to 5.0.0-rc.1.20414.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3335","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3335)"},{"Id":"678672742","IsPullRequest":true,"CreatedAt":"2020-08-15T21:46:38","Actor":"ryalanms","Number":"3333","RawContent":null,"Title":"Remove private Cpp tools in favor of using production tools","State":"closed","Body":"Unpin privatized C++ toolsets and ship using real-signed shipping tools\r\n> #2857 introduced use of privatized C++/CLI toolsets. This is a temporary fix and should be rolled back in favor of production tools.\r\n\r\nTracked by issue #2870. \r\n\r\n> //build and RC/RTM products should not ship using these tools - they should be changed to production tools obtained from ambient tools coming from build pipeline machines.\r\n\r\n> This would become possible as soon as Dev16.6p3 ships.\r\n\r\n> **This should be treated as a release blocker for broad releases like //build, RC etc **\r\n\r\n/cc @dotnet/wpf-developers\r\n\r\nRequires part 2 (see @vatsan-madhavan's comment): \r\n\r\n> You'll need to make 2 additional changes when fixing this one.\r\n\r\n> wpfcontrib@11c24e3\r\n> Disable LTCG for bilinearspan.lib. This causes error C1047 when compilers change. Though this is only a transient problem, it can be a bother in dev-builds.\r\n> Here is a preview of an upcoming build failure:\r\n\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\VC\\Tools\\MSVC\\14.28.29115\\include\\yvals_core.h(503,1): fatal error C1189: #error: STL1001: Unexpected compiler version, expected MSVC 19.27 or newer.\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3333","RelatedDescription":"Closed or merged PR \"Remove private Cpp tools in favor of using production tools\" (#3333)"},{"Id":"679444997","IsPullRequest":false,"CreatedAt":"2020-08-14T23:12:24","Actor":"ryalanms","Number":"3337","RawContent":null,"Title":"WPF must remove all calls to obsolete .NET 5 APIs before GA","State":"open","Body":"WPF must remove all calls to obsolete .NET 5 APIs before GA.\r\n\r\nThe obsolete API warnings were temporarily disabled here:\r\nhttps://github.com/dotnet/wpf/pull/3333/commits/dc7669ed16f96682fefa53e03ee8ef0360c3cd18\r\n\r\nThe full list of .NET 5 obsolete APIs is here: \r\nhttps://github.com/dotnet/designs/blob/master/accepted/2020/better-obsoletion/obsoletions-in-net5.md\r\n","Url":"https://github.com/dotnet/wpf/issues/3337","RelatedDescription":"Open issue \"WPF must remove all calls to obsolete .NET 5 APIs before GA\" (#3337)"},{"Id":"679268323","IsPullRequest":false,"CreatedAt":"2020-08-14T16:28:26","Actor":"toddpmain","Number":"3334","RawContent":null,"Title":"Implement planned/partially-coded WpfGfx features to bring more parity with GDI+ drawing","State":"open","Body":"Going through the WpfGfx source, there are number of drawing features that were planned or even partially implemented that it would be great to see finally make it into .NET 5/6 WPF. The two in particular I'm looking at are:\r\n\r\n**Compound lines** - strokes that are double/triple-pronged, like rakes. This is set up in GDI+ as a `pen.CompoundArray`. There are hooks in WpfGfx for this across a number of files (_strokefigure.cpp_, _cpen.cpp_) as `#ifdef COMPOUND_PEN_IMPLEMENTED`. In the description for the `CSimplePen` (the widening pen) in _strokefigure.h_, in the notes it says \"_The alternative is a (speced, but not implemented) complex pen, which would allow multiple \"prongs\" on the pen (like a rake)._\" Compound lines are one of the reasons I still use `System.Drawing` (and then I have to widen the stroke, convert `PathPoints` to `PathGeometry`, but given that everything else is WPF, It would be great to have this natively in WPF.\r\n\r\n- Could Compound lines be considered for implementation in .NET 5/6 WPF?\r\n- If not, could the \"specs\" - as referred to in `CSimplePen` - be provided so I could look at implementing it myself as some kind of `CComplexPen`?\r\n----------\r\n**Arrowheads** - aka `CustomLineCap`, aka `AdjustableArrowCap`, aka Markers, and finally in WpfGfx - aka \"Line Shapes\". In _lineshape.h,_ below the description of `CLineShape`, it states  \"_Since thefeture [sic] is not exposed and has no test coverage for them, line shapes are currently mothballed in milcore.dll. But they are exposed in milcoretest.dll._\" `CustomLineCap`s are another one of the reasons I continue to use `System.Drawing` - like above, add an arrowhead, widen the stroke, and then convert `PathPoints` to `PathGeometry`.\r\n\r\n- In looking at the code, it appears that `CLineShape` is more like `AdjustableArrowCap` (with it's predefined arrows) than it is like  `CustomLineCap`, which allows for a custom paths. What I'm looking for is both `CustomLineCap` and `AdjustableArrowCap`.\r\n- Could LineShapes be considered for implementation in .NET 5/6 WPF?\r\n\r\nThese are just two of the GDI+ features that would be great to have (finally) in WPF.\r\n","Url":"https://github.com/dotnet/wpf/issues/3334","RelatedDescription":"Open issue \"Implement planned/partially-coded WpfGfx features to bring more parity with GDI+ drawing\" (#3334)"},{"Id":"678635476","IsPullRequest":true,"CreatedAt":"2020-08-13T18:03:49","Actor":"stevenbrix","Number":"3332","RawContent":null,"Title":"adding XamlRuntime msbuild property/metadata","State":"open","Body":"This PR contains a scoped version of the changes described in #3245 \r\n\r\nFor now, we'll keep the globbing in WPF targets, and add the appropriate Item metadata and project property, so that vs tooling can distinguish WPF from WinUI in .NET core projects.\r\n\r\n/cc @dsplaisted @ryalanms @chabiss","Url":"https://github.com/dotnet/wpf/pull/3332","RelatedDescription":"Open PR \"adding XamlRuntime msbuild property/metadata\" (#3332)"},{"Id":"678042229","IsPullRequest":false,"CreatedAt":"2020-08-12T23:38:37","Actor":"maxbrister","Number":"3330","RawContent":null,"Title":" WPF applications with non ascii project names do not work","State":"open","Body":"* .NET Core Version: 5.0.100-preview.7.20366.6\r\n* Windows version: 2004 (OS Build 19041.450)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n \r\n **Problem description:**\r\n\r\n WPF applications with non ascii project names throw an exception when creating MainPage.xaml.\r\n\r\n **Actual behavior:**\r\n\r\nException has occurred: CLR/System.UriFormatException\r\nAn exception of type 'System.UriFormatException' occurred in System.Private.Uri.dll but was not handled in user code: 'Invalid URI: The Authority/Host could not be parsed.'\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(Uri baseUri, Uri relativeUri)\r\n   at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\r\n   at Prj_ヺヸヺヰィヰヷゆモ.MainWindow.InitializeComponent() in C:\\Users\\mabriste\\temp\\Prj_ヺヸヺヰィヰヷゆモ\\MainWindow.xaml:line 1\r\n   at Prj_ヺヸヺヰィヰヷゆモ.MainWindow..ctor() in C:\\Users\\mabriste\\temp\\Prj_ヺヸヺヰィヰヷゆモ\\MainWindow.xaml.cs:line 25\r\n \r\n **Expected behavior:**\r\n \r\n **Minimal repro:**\r\n\r\ndotnet new wpf --name \"Prj_ヺヸヺヰィヰヷゆモ\"\r\ncd \"Prj_ヺヸヺヰィヰヷゆモ\"\r\ndotnet run\r\n\r\nObserve app does not start. To see exception start in a debugger.","Url":"https://github.com/dotnet/wpf/issues/3330","RelatedDescription":"Open issue \" WPF applications with non ascii project names do not work\" (#3330)"},{"Id":"678041917","IsPullRequest":true,"CreatedAt":"2020-08-12T23:37:46","Actor":"agocke","Number":"3329","RawContent":null,"Title":"Remove VerifyWpfDllSet","State":"open","Body":"Fixes #3322","Url":"https://github.com/dotnet/wpf/pull/3329","RelatedDescription":"Open PR \"Remove VerifyWpfDllSet\" (#3329)"},{"Id":"678010427","IsPullRequest":true,"CreatedAt":"2020-08-12T23:17:56","Actor":"dotnet-maestro[bot]","Number":"3328","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: fd5f4619-cca3-4e12-8f56-08d72a4ce301\r\n- **Build**: 20200812.5\r\n- **Date Produced**: 8/12/2020 10:04 PM\r\n- **Commit**: cf28cab9e5142862de29534e688680a239ba781c\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 4.8.1-servicing.20411.4 to 4.8.1-servicing.20412.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3328","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#3328)"},{"Id":"677664836","IsPullRequest":true,"CreatedAt":"2020-08-12T12:54:44","Actor":"dotnet-maestro[bot]","Number":"3327","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200812.2\r\n- **Date Produced**: 8/12/2020 12:34 PM\r\n- **Commit**: ae770e8f2bf4dffba628c0175bacb036e27987db\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-preview.8.20411.4 to 5.0.0-preview.8.20412.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3327","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3327)"},{"Id":"677323417","IsPullRequest":true,"CreatedAt":"2020-08-12T02:22:00","Actor":"dotnet-maestro[bot]","Number":"3326","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: fd5f4619-cca3-4e12-8f56-08d72a4ce301\r\n- **Build**: 20200811.4\r\n- **Date Produced**: 8/12/2020 2:03 AM\r\n- **Commit**: 96f8bef5b7856c14407744fb9fe3fc81d61e8e67\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms**: from 4.8.1-servicing.20308.4 to 4.8.1-servicing.20411.4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3326","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#3326)"},{"Id":"676899348","IsPullRequest":true,"CreatedAt":"2020-08-11T14:11:32","Actor":"dotnet-maestro[bot]","Number":"3325","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200811.4\r\n- **Date Produced**: 8/11/2020 1:46 PM\r\n- **Commit**: 4e44ecfa999a2fe8998b69156e4d4241a3b6a471\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-preview.8.20411.3 to 5.0.0-preview.8.20411.4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3325","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3325)"},{"Id":"676865258","IsPullRequest":true,"CreatedAt":"2020-08-11T13:26:24","Actor":"dotnet-maestro[bot]","Number":"3324","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200811.3\r\n- **Date Produced**: 8/11/2020 12:57 PM\r\n- **Commit**: e02a53d60d68468c50479b3fbccf7b35cfc9f151\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-preview.8.20410.2 to 5.0.0-preview.8.20411.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3324","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3324)"},{"Id":"676821186","IsPullRequest":true,"CreatedAt":"2020-08-11T12:18:36","Actor":"dotnet-maestro[bot]","Number":"3323","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20200807.3\r\n- **Date Produced**: 8/7/2020 7:54 PM\r\n- **Commit**: ea8f37e8982dc22022b33c5e151081ad04d923a6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3323","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3323)"},{"Id":"676375956","IsPullRequest":false,"CreatedAt":"2020-08-10T19:51:55","Actor":"ryalanms","Number":"3322","RawContent":null,"Title":"Remove WpfDllVerifier checks from WPF","State":"open","Body":"WPF has runtime checks to verify the correct versions of WPF assemblies are being loaded. It does so by validating that the DLLs are loaded from the same path. These checks were very useful when porting WPF to .NET Core, but WPF assembly load locations are varied for .NET 5 scenarios. The WpfDllVerifier class and uses of it should be removed for .NET 5.\r\n\r\n    /// This class attempts to verify that core WPF binaries are all loaded from the same\r\n    /// location.  Due to the fact that WPF can load binaries in different orders, this class\r\n    /// needs to be called from all of the core managed binaries in static constructors of\r\n    /// commonly used classes.\r\n    /// \r\n    /// This can also be used to verify specific additional binaries as needed (say if they are\r\n    /// optionally loaded).\r\n\r\n    /// If the binaries fail to load from the same location an exception is thrown as we cannot \r\n    /// guarantee there won't be difficult to debug issues.\r\n\r\n#11350\r\ndotnet/runtime#38636\r\n ","Url":"https://github.com/dotnet/wpf/issues/3322","RelatedDescription":"Open issue \"Remove WpfDllVerifier checks from WPF\" (#3322)"},{"Id":"676112190","IsPullRequest":true,"CreatedAt":"2020-08-10T13:07:12","Actor":"dotnet-maestro[bot]","Number":"3321","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200810.2\r\n- **Date Produced**: 8/10/2020 12:42 PM\r\n- **Commit**: 7f5edb888a00367085fe1071ead837e4e289cb20\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-preview.8.20409.2 to 5.0.0-preview.8.20410.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3321","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3321)"},{"Id":"675695127","IsPullRequest":true,"CreatedAt":"2020-08-09T13:09:11","Actor":"dotnet-maestro[bot]","Number":"3320","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200809.2\r\n- **Date Produced**: 8/9/2020 12:46 PM\r\n- **Commit**: 7a30a7d9e7f04048c8cb968c6e2a6f25b4ac2073\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: from 5.0.0-preview.8.20407.2 to 5.0.0-preview.8.20409.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3320","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3320)"},{"Id":"675501131","IsPullRequest":false,"CreatedAt":"2020-08-08T14:25:36","Actor":"CreateAndInject","Number":"3319","RawContent":null,"Title":"The AssemblyId of a TypeInfoRecord doesn't exist","State":"closed","Body":"I found this baml:\r\n```TypeInfo [TypeId=0x0001, AssemblyId=0x1000, TypeFullName=\"x.y\"]```\r\n\r\nBut there's no `AssemblyInfoRecord` with `AssemblyId=0x1000`\r\nWhy does this program can still run?\r\nIs `0x1000` a special id? Does .Net allways try to find type in the current assembly if its `AssemblyId` doesn't exist?\r\nCan someone tell me the logic?","Url":"https://github.com/dotnet/wpf/issues/3319","RelatedDescription":"Closed issue \"The AssemblyId of a TypeInfoRecord doesn't exist\" (#3319)"},{"Id":"675390923","IsPullRequest":true,"CreatedAt":"2020-08-08T01:27:02","Actor":"GrabYourPitchforks","Number":"3318","RawContent":null,"Title":"Call SHA1.HashData static helper instead of instantiating SHA1CSP","State":"open","Body":"We're trying to minimize usage of the `*CryptoServiceProvider` and `*Managed` types through our code bases so that we can eventually write analyzers to recommend moving off of them. See https://github.com/dotnet/runtime/issues/40169 for some related discussion w.r.t. `RNGCryptoServiceProvider`.\r\n\r\nThis PR changes the call site to use the static one-shot helper method so that you don't need to instantiate a hasher object. The `HashData` static method uses the best available implementation for the current OS.","Url":"https://github.com/dotnet/wpf/pull/3318","RelatedDescription":"Open PR \"Call SHA1.HashData static helper instead of instantiating SHA1CSP\" (#3318)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-08-18T05:30:48.6385327Z","RunDurationInMilliseconds":581}