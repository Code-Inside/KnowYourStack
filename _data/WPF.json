{"Data":{"GitHub":{"Issues":[{"Id":"2983913015","IsPullRequest":true,"CreatedAt":"2025-04-09T21:04:44","Actor":"h3xds1nz","Number":"10750","RawContent":null,"Title":"Swap `Dictionary<K, V>` with `HashSet<XamlMember>`, avoid double lookup","State":"open","Body":"## Description\r\n\r\nReplaces `XamlPropertySet` which is just a wrapped `Dictionary<XamlMember, bool>` with `HashSet<XamlMember>` for improved performance and decreased allocations. The conditions under which this was written do no longer apply.\r\n\r\nAlso avoids double lookup on each addition.\r\n\r\n## Customer Impact\r\n\r\nImproved performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10750)","Url":"https://github.com/dotnet/wpf/pull/10750","RelatedDescription":"Open PR \"Swap `Dictionary<K, V>` with `HashSet<XamlMember>`, avoid double lookup\" (#10750)"},{"Id":"2983653060","IsPullRequest":true,"CreatedAt":"2025-04-09T19:01:18","Actor":"dotnet-maestro[bot]","Number":"10749","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250409.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682928)\n- **Date Produced**: April 9, 2025 8:34:33 AM UTC\n- **Commit**: [ff73bfec3074a8147d2ff061bc8ca79875c966ad](https://github.com/dotnet/winforms/commit/ff73bfec3074a8147d2ff061bc8ca79875c966ad)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25208.4 to 10.0.0-preview.4.25209.2][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25208.4 to 10.0.0-preview.4.25209.2][1]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25208.4 to 10.0.0-preview.4.25209.2][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Management**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Speech**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25208.11][2]\n\n[1]: https://github.com/dotnet/winforms/compare/378a836749...ff73bfec30\n[2]: https://github.com/dotnet/runtime/compare/9559b2a8c2...b8b44c6cd0\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10749)","Url":"https://github.com/dotnet/wpf/pull/10749","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10749)"},{"Id":"2983546980","IsPullRequest":false,"CreatedAt":"2025-04-09T18:17:27","Actor":"mprevot","Number":"10748","RawContent":null,"Title":"Suggestion: 10bits and HDR display","State":"open","Body":"To my knowledge, WPF is limited to 8 bits display and SDR.\nAn extension to 10 bits display and HDR would be great, modern, especially for high end imaging and video applications, and maybe games, on Windows 10/11.\nSince WPF relies on DirectX, it is technically possible, maybe not too complicated.\n","Url":"https://github.com/dotnet/wpf/issues/10748","RelatedDescription":"Open issue \"Suggestion: 10bits and HDR display\" (#10748)"},{"Id":"2982996880","IsPullRequest":true,"CreatedAt":"2025-04-09T14:22:45","Actor":"dotnet-maestro[bot]","Number":"10747","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [3e242e43-3358-4aa6-cbf7-08db9e4fbff5](https://maestro.dot.net/subscriptions?search=3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n- **Build**: [20250408.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682673)\n- **Date Produced**: April 9, 2025 2:29:53 AM UTC\n- **Commit**: [c7a36e53f91e41943746f97a8c183549364c5092](https://github.com/dotnet/arcade/commit/c7a36e53f91e41943746f97a8c183549364c5092)\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n\n[1]: https://github.com/dotnet/arcade/compare/802042c6e7...c7a36e53f9\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 8.0.115\n  - Updates tools.dotnet to 8.0.115\n\n[marker]: <> (End:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10747)","Url":"https://github.com/dotnet/wpf/pull/10747","RelatedDescription":"Open PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#10747)"},{"Id":"2982689613","IsPullRequest":false,"CreatedAt":"2025-04-09T12:35:27","Actor":"Laniusexcubitor","Number":"10746","RawContent":null,"Title":"[API Proposal]: Fallback when binding target type does not match","State":"open","Body":"### Background and motivation\n\nCurrently when we use a binding with an interface we get a binding error or warning when the source type does not implement the interface: `TargetException:'System.Reflection.TargetException: Object does not match target type.`  \nSometimes this is completely ok, but we get a nasty binding warning in XAML Binding failures when a FallBack value has been set otherwise a binding error is generated.\nI propose a new property on a binding like `FallbackOnUnmatchedTargetType` that will suppress the resulting binding warning.\n\n### API Proposal\n\n```CSharp\npublic class Binding : BindingBase\n{\n    // ...\n    [DefaultValue(false)]\n    public bool FallbackOnUnmatchedTargetType { get; set }\n}\n```\n\n\n### API Usage\n\n```xaml\n<TextBox Text=\"{Binding Path=(namespace:IInterface.SomeProperty), FallbackOnUnmatchedTargetType=True, FallBackValue={x:Null}}\" />\n```\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\nThis would not change the current behavior except of suppressing the current warning/error.  Using the property developers are saying that they know that there will be unmatched objects, and they don't need a warning about it.","Url":"https://github.com/dotnet/wpf/issues/10746","RelatedDescription":"Open issue \"[API Proposal]: Fallback when binding target type does not match\" (#10746)"},{"Id":"2980722719","IsPullRequest":true,"CreatedAt":"2025-04-09T12:19:11","Actor":"vseanreesermsft","Number":"10742","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10742)","Url":"https://github.com/dotnet/wpf/pull/10742","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#10742)"},{"Id":"2981910496","IsPullRequest":true,"CreatedAt":"2025-04-09T11:18:58","Actor":"dipeshmsft","Number":"10744","RawContent":null,"Title":"Fixes TreeViewItem chevron arrow orientation when FlowDirection is RightToLeft","State":"closed","Body":"Fixes #10209 \r\n\r\n## Description\r\nIn Fluent styles, we use icon fonts to render the arrow / chevron in TreeViewItem instead of Path ( as in Aero2 ). When FlowDirection is set RightToLeft, the arrow defined in Path was reversed, but in case of TextBlock, this does not happen with characters. So, in order to fix this I use a trigger which uses the left chevron for the icon. \r\n\r\n## Customer Impact\r\nDevelopers will correct behavior for TreeViewItem when using Fluent theme and RightToLeft FlowDirection.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal app testing.\r\n\r\n## Risk\r\nMinimal\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10744)","Url":"https://github.com/dotnet/wpf/pull/10744","RelatedDescription":"Closed or merged PR \"Fixes TreeViewItem chevron arrow orientation when FlowDirection is RightToLeft\" (#10744)"},{"Id":"2982377240","IsPullRequest":false,"CreatedAt":"2025-04-09T10:30:28","Actor":"dotnet-maestro-bot","Number":"10745","RawContent":null,"Title":"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/9.0](https://github.com/dotnet/wpf/commits/release/9.0/) in `dotnet/wpf` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-wpf?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/wpf/issues/10745","RelatedDescription":"Open issue \"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch\" (#10745)"},{"Id":"2978599015","IsPullRequest":true,"CreatedAt":"2025-04-09T10:30:28","Actor":"dotnet-maestro[bot]","Number":"10734","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [840bf684-917a-4879-f62c-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=840bf684-917a-4879-f62c-08d8e93a0c51)\n- **Build**: [20250408.5](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682461)\n- **Date Produced**: April 8, 2025 10:08:41 PM UTC\n- **Commit**: [d33398b1de7f4fa61602fdf339f2f64e7b159326](https://github.com/dotnet/arcade/commit/d33398b1de7f4fa61602fdf339f2f64e7b159326)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25206.1 to 10.0.0-beta.25208.5][2]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25206.1 to 10.0.0-beta.25208.5][2]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25206.1 to 10.0.0-beta.25208.5][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25206.1 to 10.0.0-beta.25208.5][2]\n\n[2]: https://github.com/dotnet/arcade/compare/37f732fbfa...d33398b1de\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10734)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10734","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10734)"},{"Id":"2977733678","IsPullRequest":true,"CreatedAt":"2025-04-09T10:29:44","Actor":"dotnet-maestro[bot]","Number":"10733","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25207.7 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250408.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682359)\n- **Date Produced**: April 8, 2025 7:49:12 PM UTC\n- **Commit**: [378a8367494a3475c379ea4d9795fa7113f29d8f](https://github.com/dotnet/winforms/commit/378a8367494a3475c379ea4d9795fa7113f29d8f)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25205.1 to 10.0.0-preview.4.25208.4][6]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25205.1 to 10.0.0-preview.4.25208.4][6]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25205.1 to 10.0.0-preview.4.25208.4][6]\n\n[6]: https://github.com/dotnet/winforms/compare/851d52d401...378a836749\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10733)\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10733","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10733)"},{"Id":"2981539403","IsPullRequest":true,"CreatedAt":"2025-04-09T10:28:06","Actor":"dotnet-maestro[bot]","Number":"10743","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [2bde0aa3-7165-43c9-100b-08dcbc30275f](https://maestro.dot.net/subscriptions?search=2bde0aa3-7165-43c9-100b-08dcbc30275f)\n- **Build**: [20250408.6](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682667)\n- **Date Produced**: April 9, 2025 2:17:37 AM UTC\n- **Commit**: [aa61e8c20a869bcc994f8b29eb07d927d2bec6f4](https://github.com/dotnet/arcade/commit/aa61e8c20a869bcc994f8b29eb07d927d2bec6f4)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n\n[1]: https://github.com/dotnet/arcade/compare/97cbc7361f...aa61e8c20a\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 9.0.105\n  - Updates tools.dotnet to 9.0.105\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10743)","Url":"https://github.com/dotnet/wpf/pull/10743","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#10743)"},{"Id":"2980697256","IsPullRequest":true,"CreatedAt":"2025-04-09T10:27:07","Actor":"vseanreesermsft","Number":"10741","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10741)","Url":"https://github.com/dotnet/wpf/pull/10741","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#10741)"},{"Id":"2977262006","IsPullRequest":true,"CreatedAt":"2025-04-09T06:20:00","Actor":"h3xds1nz","Number":"10723","RawContent":null,"Title":"Use `Debug.Fail(\"message\")` over `Debug.Assert(false, \"message\")`","State":"closed","Body":"## Description\r\n\r\nThis is a standard practice in rutime repo and also makes more sense in terms of readibility in general.\r\n\r\n`Fail` is what's called when condition in `Assert` evaluates to `false`. `false` indeed evaluates to `false`.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nThis was a simple search/replace, shouldn't introduce any risk.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10723)","Url":"https://github.com/dotnet/wpf/pull/10723","RelatedDescription":"Closed or merged PR \"Use `Debug.Fail(\"message\")` over `Debug.Assert(false, \"message\")`\" (#10723)"},{"Id":"2980625983","IsPullRequest":false,"CreatedAt":"2025-04-08T18:23:51","Actor":"JeremyKuhne","Number":"10740","RawContent":null,"Title":"Investigate removing hard dependency on System.Drawing.Common for Clipboard","State":"open","Body":"Now that CsWin32 is fully available, there is no need to load the entirety of `System.Drawing.Common` to handle Clipboard scenarios. https://github.com/dotnet/wpf/tree/main/src/Microsoft.DotNet.Wpf/src/Extensions/PresentationFramework-SystemDrawing should be able to be removed.\n\nTo do this safely, GDI+ initialization needs to be done via `GdiPlusInitialization.EnsureInitialized()` in `System.Private.Windows.Core`. GDI+ CsWin32 handle types are exposed in this assembly.\n\nGDI+ is mostly being used for creating HBITMAP and looking at image metadata. Another option here may be going directly against WIC APIs for some of the functionality, which GDI+ uses under the covers anyway.","Url":"https://github.com/dotnet/wpf/issues/10740","RelatedDescription":"Open issue \"Investigate removing hard dependency on System.Drawing.Common for Clipboard\" (#10740)"},{"Id":"2980603410","IsPullRequest":false,"CreatedAt":"2025-04-08T18:13:50","Actor":"JeremyKuhne","Number":"10739","RawContent":null,"Title":"Convert drag/drop code to use shared implementation","State":"open","Body":"The shared code is available, but WPF has not been converted to use it.\n\nhttps://github.com/dotnet/winforms/blob/main/src/System.Private.Windows.Core/src/System/Private/Windows/Ole/DragDropHelper.cs\n\nThis has not been investigated yet. Code paths would need compared between WinForms and WPF to ensure the shared code satisfies WPF needs. @JeremyKuhne and @Tanya-Solyanik can be consulted.","Url":"https://github.com/dotnet/wpf/issues/10739","RelatedDescription":"Open issue \"Convert drag/drop code to use shared implementation\" (#10739)"},{"Id":"2980596059","IsPullRequest":false,"CreatedAt":"2025-04-08T18:11:31","Actor":"JeremyKuhne","Number":"10738","RawContent":null,"Title":"Null annotate new APIs in ref assembly","State":"open","Body":"Clipboard and DataObject are null annotated in the implementation, but the ref assembly code has not been updated with the null annotations.","Url":"https://github.com/dotnet/wpf/issues/10738","RelatedDescription":"Open issue \"Null annotate new APIs in ref assembly\" (#10738)"},{"Id":"2980565309","IsPullRequest":false,"CreatedAt":"2025-04-08T18:01:36","Actor":"JeremyKuhne","Number":"10737","RawContent":null,"Title":"Obsolete old APIs (in ref and impl assemblies)","State":"open","Body":"#10544 exposes the new APIs but does not obsolete the GetData* APIs.\n\nSee WinForms obsoletions here https://github.com/dotnet/winforms/blob/89978450ea81fbaffb3e41ab3a2e131aba22e09f/src/System.Windows.Forms/System/Windows/Forms/OLE/Clipboard.cs#L135-L147 and here https://github.com/dotnet/winforms/blob/89978450ea81fbaffb3e41ab3a2e131aba22e09f/src/System.Windows.Forms/System/Windows/Forms/OLE/DataObject.cs#L108-L127.\n\n``` C#\n    /// <summary>\n    ///  Retrieves data from the <see cref=\"Clipboard\"/> in the specified format.\n    /// </summary>\n    /// <exception cref=\"ThreadStateException\">\n    ///  The current thread is not in single-threaded apartment (STA) mode.\n    /// </exception>\n    [Obsolete(\n        Obsoletions.ClipboardGetDataMessage,\n        error: false,\n        DiagnosticId = Obsoletions.ClipboardGetDataDiagnosticId,\n        UrlFormat = Obsoletions.SharedUrlFormat)]\n    public static object? GetData(string format) =>\n        string.IsNullOrWhiteSpace(format) ? null : GetData(format, autoConvert: false);\n```","Url":"https://github.com/dotnet/wpf/issues/10737","RelatedDescription":"Open issue \"Obsolete old APIs (in ref and impl assemblies)\" (#10737)"},{"Id":"2980562010","IsPullRequest":false,"CreatedAt":"2025-04-08T18:00:01","Actor":"JeremyKuhne","Number":"10736","RawContent":null,"Title":"Expose typed Clipboard APIs in WPF","State":"open","Body":"As the Windows clipboard is a shared resource and .NET uses binary format (NRBF), there is some amount of risk to having only untyped (`object`) deserialization. While usage of `BinaryFormatter` now requires a [compatibility package](https://learn.microsoft.com/dotnet/standard/serialization/binaryformatter-migration-guide/compatibility-package), when one needs to take this dependency for `Clipboard` or other reasons there are ways to mitigate exposure here.\n\n[New Clipboard and DataObject APIs](https://github.com/dotnet/winforms/issues/12362) describes the new set of APIs and behaviors that both Windows Forms and WPF are implementing in .NET 10.\n\nThe brief summary of changes:\n\n- `Get` APIs that return `object` are all obsoleted\n- A new `TryGet<T>` set of methods have been introduced to replace the obsoleted APIs\n- Introduces a `SetDataAsJson<T>` for simple JSON user type serialization\n- `BinaryFormatter` usage in Clipboard scenarios now requires an additional `AppContext` switch\n\nIt is recommended that users use .NET primitive types (`string`, `int`, etc.) or arrays or `List<>` of these primitives for `Clipboard` and drag/drop. Simple types can be set with `SetDataAsJson` to avoid `BinaryFormatter`.\n\nChecklist of required work:\n\n- [x] Consume and use shared OLE implementation from WinForms #10544\n- [x] Expose typed get and set as JSON APIs #10544\n- [ ] Obsolete old APIs\n- [ ] Null annotate new APIs in ref assembly\n- [ ] Create breaking change documentation\n- [ ] Update API documentation\n\nChecklist for other follow-up:\n\n- [ ] Implement additional unit tests\n- [ ] Convert drag/drop code to use shared implementation\n- [ ] Investigate removing hard dependency of System.Drawing.Common for Clipboard","Url":"https://github.com/dotnet/wpf/issues/10736","RelatedDescription":"Open issue \"Expose typed Clipboard APIs in WPF\" (#10736)"},{"Id":"2979181307","IsPullRequest":true,"CreatedAt":"2025-04-08T09:29:34","Actor":"dipeshmsft","Number":"10735","RawContent":null,"Title":"Fixed MenuItem Header alignment wrt to Icons","State":"open","Body":"Fixes #9980 and #10493 \r\n\r\n## Description\r\nIn the current MenuItem Fluent styles, the Icon column didn't share width among the different MenuItems. Due to this, the Header content presenter gets misaligned.\r\n\r\n## Customer Impact\r\nImproves usability and speeds up visual scanning of the UI\r\n\r\n## Regression\r\nTechnically no, but as compared to Aero2 styles this is a regression in Fluent styles.\r\n\r\n## Testing\r\nLocal app testing.\r\n\r\n## Risk\r\nMinimal\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10735)","Url":"https://github.com/dotnet/wpf/pull/10735","RelatedDescription":"Open PR \"Fixed MenuItem Header alignment wrt to Icons\" (#10735)"},{"Id":"2977631502","IsPullRequest":true,"CreatedAt":"2025-04-07T18:15:33","Actor":"harshit7962","Number":"10732","RawContent":null,"Title":"Fix DataObject SetData methods inaccordance to previous implementation","State":"open","Body":"## Description\r\nThese changes are in accordance to the original API contract of certain `SetData` methods in `DataObject` class. The original behaviour was altered a bit in form of exceptions not being thrown as part of the shared clipboard code for winforms and wpf as in the PR #10544. These changes brings back the expected behaviour that respects WPFs original implementation.\r\n <!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nAvoids breaking changes in subsequent preview release of .NET 10.\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nYes\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal Build Pass, unit testing and verified the same with sample applications.\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10732)","Url":"https://github.com/dotnet/wpf/pull/10732","RelatedDescription":"Open PR \"Fix DataObject SetData methods inaccordance to previous implementation\" (#10732)"},{"Id":"2977597105","IsPullRequest":true,"CreatedAt":"2025-04-07T18:00:15","Actor":"h3xds1nz","Number":"10731","RawContent":null,"Title":"[StyleCleanUp] Add readonly modifiers in WindowsBase","State":"open","Body":"Fixes #10730 \r\n\r\n## Description\r\n\r\nFixes occurences of fields that are only written during construction to be `readonly` in `WindowsBase`.\r\n\r\nIn case they were being initialized to non-default value but are **always** overwritten in the constructor, I have removed such assigment. This is a case which analyzers won't flag and imho there's no better time to do it than when resolving `IDE0044` and changing fields to `readonly`.\r\n\r\n## Customer Impact\r\n\r\nIncreased performance due to the fields being treated as JIT-time constant in case of `static readonly` and better code-gen in `readonly` cases. These changes unlock #10724 since full sweep can only be done after the fields are marked appropriately.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nFull test pass will be required, even in cases where no manual changes are done.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10731)","Url":"https://github.com/dotnet/wpf/pull/10731","RelatedDescription":"Open PR \"[StyleCleanUp] Add readonly modifiers in WindowsBase\" (#10731)"},{"Id":"2977588873","IsPullRequest":false,"CreatedAt":"2025-04-07T17:57:12","Actor":"h3xds1nz","Number":"10730","RawContent":null,"Title":"IDE0044: Add readonly modifier (fields) - WindowsBase","State":"open","Body":"Issue for fixing IDE0044 in `WindowsBase`.","Url":"https://github.com/dotnet/wpf/issues/10730","RelatedDescription":"Open issue \"IDE0044: Add readonly modifier (fields) - WindowsBase\" (#10730)"},{"Id":"2977168743","IsPullRequest":false,"CreatedAt":"2025-04-07T17:42:43","Actor":"ericstj","Number":"10721","RawContent":null,"Title":"WindowsDesktop redistributes many libraries already carried by MSBuild","State":"closed","Body":"### Description\n\nPresentationBuildTasks redistributes many runtime libraries:\nhttps://github.com/dotnet/wpf/blob/72af9a57bbfb4aac9bdc554d860ab320ac73c587/src/Microsoft.DotNet.Wpf/src/PresentationBuildTasks/PresentationBuildTasks.csproj#L53-L62\n\nAll of these have a version provided by MSBuild.\n\nWPF can reference the version provided by MSBuild and avoid shipping these.  The one tradeoff is that it won't be able to benefit from new API in these libraries right away - but that's most likely an acceptable tradeoff to avoid redistributing these libraries.\n\n### Reproduction Steps\n\nExamine `C:\\Program Files\\dotnet\\sdk\\10.0.100-preview.2.25164.34\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\net472`\n\n### Expected behavior\n\nNo binaries included that overlap with those provided by MSBuild.\n\n### Actual behavior\n\nMany binaries redistributed with newer versions than MSBuild.\n\n### Regression?\n\nNo\n\n### Known Workarounds\n\nNo\n\n### Impact\n\nAdded complexity in servicing / size on disk\n\n### Configuration\n\nAll\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10721","RelatedDescription":"Closed issue \"WindowsDesktop redistributes many libraries already carried by MSBuild\" (#10721)"},{"Id":"2977227789","IsPullRequest":true,"CreatedAt":"2025-04-07T17:42:41","Actor":"ViktorHofer","Number":"10722","RawContent":null,"Title":"Don't redistribute inbox msbuild dependencies","State":"closed","Body":"Fixes https://github.com/dotnet/wpf/issues/10721\r\n\r\nSystem.CodeDom is only used on .NETCoreApp and its live version is available in the SDK directory. Therefore, we shouldn't need to pin it to an older version.","Url":"https://github.com/dotnet/wpf/pull/10722","RelatedDescription":"Closed or merged PR \"Don't redistribute inbox msbuild dependencies\" (#10722)"},{"Id":"2977454977","IsPullRequest":true,"CreatedAt":"2025-04-07T16:53:07","Actor":"h3xds1nz","Number":"10729","RawContent":null,"Title":"[StyleCleanUp] Add readonly modifiers in PresentationBuildTasks","State":"open","Body":"Fixes #10726 \r\n\r\n## Description\r\n\r\nFixes occurences of fields that are only written during construction to be `readonly` in `PresentationBuildTasks`.\r\n\r\nIn case they were being initialized to non-default value  (e.g. initialized to `string.Empty`) but are **always** overwritten in the constructor, I have removed such assigment. This is a case which analyzers won't flag and imho there's no better time to do it than when resolving `IDE0044` and changing fields to `readonly`.\r\n\r\n## Customer Impact\r\n\r\nIncreased performance due to the fields being treated as JIT-time constant in case of `static readonly` and better code-gen in `readonly` cases. These changes unlock #10724 since full sweep can only be done after the fields are marked appropriately.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nFull test pass will be required, even in cases where no manual changes are done.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10729)","Url":"https://github.com/dotnet/wpf/pull/10729","RelatedDescription":"Open PR \"[StyleCleanUp] Add readonly modifiers in PresentationBuildTasks\" (#10729)"},{"Id":"2977380216","IsPullRequest":false,"CreatedAt":"2025-04-07T16:20:24","Actor":"h3xds1nz","Number":"10728","RawContent":null,"Title":"IDE0044: Add readonly modifier (fields) - PresentationFramework","State":"open","Body":"Issue for fixing IDE0044 in `PresentationFramework`.","Url":"https://github.com/dotnet/wpf/issues/10728","RelatedDescription":"Open issue \"IDE0044: Add readonly modifier (fields) - PresentationFramework\" (#10728)"},{"Id":"2977378339","IsPullRequest":false,"CreatedAt":"2025-04-07T16:19:39","Actor":"h3xds1nz","Number":"10727","RawContent":null,"Title":"IDE0044: Add readonly modifier (fields) - PresentationCore","State":"open","Body":"Issue for fixing IDE0044 in `PresentationCore`.","Url":"https://github.com/dotnet/wpf/issues/10727","RelatedDescription":"Open issue \"IDE0044: Add readonly modifier (fields) - PresentationCore\" (#10727)"},{"Id":"2977376319","IsPullRequest":false,"CreatedAt":"2025-04-07T16:18:45","Actor":"h3xds1nz","Number":"10726","RawContent":null,"Title":"IDE0044: Add readonly modifier (fields) - PresentationBuildTasks","State":"open","Body":"Issue for fixing IDE0044 in `PresentationBuildTasks`.","Url":"https://github.com/dotnet/wpf/issues/10726","RelatedDescription":"Open issue \"IDE0044: Add readonly modifier (fields) - PresentationBuildTasks\" (#10726)"},{"Id":"2977334938","IsPullRequest":true,"CreatedAt":"2025-04-07T16:02:22","Actor":"h3xds1nz","Number":"10725","RawContent":null,"Title":"[StyleCleanUp] Use literals where appropriate (CA1802)","State":"open","Body":"I've prepared this PR but then just realized that #10382 needs to be done first to prevent havoc, so gonna draft this.\r\n\r\nFixes #10724\r\n\r\n## Description\r\n\r\nSwaps use of `static readonly` fields for `const` where appropriate. This in some cases saves allocations.\r\n\r\n**Note that naming issues will be taken care of in a separate issue to reduce diffs.**\r\n\r\n## Customer Impact\r\n\r\nDecreased allocations, a bit of perf.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow, just an analyzer fix. The only issue would be reflection-based changes that will no longer be possible but there's no point of supporting these anyways, we'd never move anywhere.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10725)","Url":"https://github.com/dotnet/wpf/pull/10725","RelatedDescription":"Open PR \"[StyleCleanUp] Use literals where appropriate (CA1802)\" (#10725)"},{"Id":"2977297531","IsPullRequest":false,"CreatedAt":"2025-04-07T15:48:35","Actor":"h3xds1nz","Number":"10724","RawContent":null,"Title":"CA1802: Use literals where appropriate","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1802","Url":"https://github.com/dotnet/wpf/issues/10724","RelatedDescription":"Open issue \"CA1802: Use literals where appropriate\" (#10724)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-10T03:30:26.1777635Z","RunDurationInMilliseconds":490}