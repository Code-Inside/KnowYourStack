{"Data":{"GitHub":{"Issues":[{"Id":"1056651377","IsPullRequest":true,"CreatedAt":"2021-11-17T21:55:45","Actor":"dotnet-maestro[bot]","Number":"5705","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211117.3\r\n- **Date Produced**: November 17, 2021 9:18:32 PM UTC\r\n- **Commit**: 886f4463da599d930f42ec5c2d809e6b501cc70b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21567.2 to 7.0.0-alpha.1.21567.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21567.2 to 7.0.0-alpha.1.21567.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ea4d2e9...886f446\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5705","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5705)"},{"Id":"1056563576","IsPullRequest":true,"CreatedAt":"2021-11-17T20:24:46","Actor":"dotnet-maestro[bot]","Number":"5704","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211117.2\r\n- **Date Produced**: November 17, 2021 7:35:17 PM UTC\r\n- **Commit**: ea4d2e9b20eb1ba82a8fe1af6aa9de02ed7d7c39\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21566.2 to 7.0.0-alpha.1.21567.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21566.2 to 7.0.0-alpha.1.21567.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/5a5a7c7...ea4d2e9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5704","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5704)"},{"Id":"1056123763","IsPullRequest":true,"CreatedAt":"2021-11-17T13:50:14","Actor":"dotnet-maestro[bot]","Number":"5702","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20211116.10\r\n- **Date Produced**: November 17, 2021 5:32:15 AM UTC\r\n- **Commit**: 53cc1bc2e555aa7aea95884575d22e21d63708cf\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21559.3 to 7.0.0-beta.21566.10][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.21559.3 to 7.0.0-beta.21566.10][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.21559.3 to 7.0.0-beta.21566.10][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.21559.3 to 7.0.0-beta.21566.10][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21559.3 to 7.0.0-beta.21566.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/fecf65b...53cc1bc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5702","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5702)"},{"Id":"1056145297","IsPullRequest":false,"CreatedAt":"2021-11-17T13:41:07","Actor":"Felix-Dev","Number":"5703","RawContent":null,"Title":".NET 6 Tooltip behavior change from .NET 5 (bug?)","State":"open","Body":"* .NET Version: 6.0.100\r\n* Windows version: 21H1 (19043.1165)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Not checked\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nAfter upgrading a WPF app from .NET 5 (SDK 5.0.402) to .NET 6, new tooltips are no longer shown without delay when leaving a UI element by mouse for which a tooltip is currently open.\r\n\r\nSee the following XAML:\r\n````code\r\n<StackPanel Orientation=\"Horizontal\"\r\n        HorizontalAlignment=\"Center\"\r\n        VerticalAlignment=\"Center\">\r\n    <Button Content=\"Button 1\"\r\n        ToolTip=\"Button 1 tooltip\"\r\n        ToolTipService.Placement=\"MousePoint\"\r\n        ToolTipService.VerticalOffset=\"-50\"\r\n        ToolTipService.HorizontalOffset=\"-45\"\r\n        ToolTipService.InitialShowDelay=\"1000\"\r\n        ToolTipService.BetweenShowDelay=\"1000\"\r\n        ToolTipService.ShowDuration=\"4000\"/>\r\n    <Button Content=\"Button 2\"\r\n        ToolTip=\"Button 2 tooltip\"\r\n        ToolTipService.Placement=\"MousePoint\"\r\n        ToolTipService.VerticalOffset=\"-50\"\r\n        ToolTipService.HorizontalOffset=\"-45\"\r\n        ToolTipService.InitialShowDelay=\"1000\"\r\n        ToolTipService.BetweenShowDelay=\"1000\"\r\n        ToolTipService.ShowDuration=\"4000\"/>\r\n</StackPanel>\r\n````\r\n\r\nAnd the resulting tooltip behavior for both .NET 5 and .NET 6:\r\n| .NET 5 | .NET 6 |\r\n| ------------- | ------------- |\r\n| ![WPF tooltip behavior NET 5](https://user-images.githubusercontent.com/1398851/142207902-9d2730ab-c263-4a5f-8b5a-834c17dc043d.gif)  | ![WPF tooltip behavior NET 6](https://user-images.githubusercontent.com/1398851/142207956-7b6ddcff-65fe-4dd5-8ec7-9cc1fd74e406.gif) |\r\n\r\nAs you can see, the tooltip for \"Button 2\" is no longer shown immediately after entering it with the mouse as it does in the .NET 5 app. This is especially problematic in an app which uses a (WinUI-styled) NumberBox control with two adjacent spinner buttons both with their own tooltips (such as \"Increase/Decrease by 0.1\"):\r\n![image](https://user-images.githubusercontent.com/1398851/142208809-34321f28-0bba-4826-a2c0-15068c81e808.png)\r\n\r\nI suspect this behavior change was introduced by the tooltip work for .NET 6, i.e. in PR https://github.com/dotnet/wpf/pull/4623. Is this behavior change intended or is this a bug? Personally, this looks like a bug to me as it negatively affects the user experience in my view. The tooltip for \"Button 1\" should no longer be shown when the mouse enters \"Button 2\" which has its own tooltip - and which should show immediately based on the `ToolTipService.BetweenShowDelay` setting.\r\n\r\n@SamBent FYI as you worked on the tooltip changes for .NET 6.\r\n \r\n **Expected behavior:**\r\nSame as in .NET 5.\r\n \r\n **Minimal repro:**\r\n[WPF issue.zip](https://github.com/dotnet/wpf/files/7554940/WPF.issue.zip) (Just change the framework from .NET 5 to .NET 6 to see the .NET 6 behavior.)\r\n","Url":"https://github.com/dotnet/wpf/issues/5703","RelatedDescription":"Open issue \".NET 6 Tooltip behavior change from .NET 5 (bug?)\" (#5703)"},{"Id":"1055851409","IsPullRequest":false,"CreatedAt":"2021-11-17T08:35:02","Actor":"jogibear9988","Number":"5701","RawContent":null,"Title":"Changed XPS Fornt format in NET6","State":"open","Body":"Has the XPS Format changed in Net6 (or the way how fonts are stored in the xps).\r\n\r\nCaus I've a lib (PdfSharp.Xps), wich converts XPS to PDF. But if the XPS is created with Net6 the font's could not be read.\r\nAlso if I debug, in net6 most of the byte array of the font is zero, in net5 most is filled with data","Url":"https://github.com/dotnet/wpf/issues/5701","RelatedDescription":"Open issue \"Changed XPS Fornt format in NET6\" (#5701)"},{"Id":"1050513745","IsPullRequest":false,"CreatedAt":"2021-11-17T06:23:29","Actor":"loop8ack","Number":"5683","RawContent":null,"Title":"UserControls are not found with the .NET 6 SDK if the AssemblyName is changed with $(MSBuildProjectName).","State":"closed","Body":"* .NET Core Version: .net6.0-windows\r\n* .NET Core SDK Version: 6.0.100\r\n* Windows Version: 10.0.19043.1288\r\n* Visual Studio Version: 17.1.0 Preview 1.0\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Not tested\r\n* Is this bug related specifically to tooling in Visual Studio? In the XAML editor and during build\r\n \r\n **Problem description:**\r\n When I change the AssemblyName based on the MSBuildProjectName property, controls in the same project are no longer found.  This error occurs both in the XAML editor and when building. When I change the sdk-Version (in csproj and global.json) to 5.0.400, everything works fine.\r\nF12 (Go to definition) from XAML editor works as expected.\r\n\r\n **Actual behavior:** \r\nBuild will fail with error code \"MC3074\"\r\nDescription: The tag 'UserControl1' does not exist in XML namespace 'clr-namespace:WpfApp1'. Line 10 Position 10.\r\n \r\n **Minimal repro:**\r\n1. Create a new WPF project template \"WPF Application\"\r\n2. Select .NET 6.0 as target framework\r\n3. Create a new UserControl and use it in the MainWindow\r\n4. Run the project\r\n_=> This should build and start as expected_\r\n5. Add the following line to a PropertyGroup in the csproj-file:\r\n`<AssemblyName>test.$(MsBuildProjectName)</AssemblyName>`\r\n6. Run the project\r\n_=> Build will fail with error code \"MC3074\"_\r\n_=> XAML-Editor should show the same error inline_\r\n7. Change the target framework to \"net5.0-windows\".\r\n8. Create global.json next to the sln file with the following content: \r\n`{ \"sdk\": { \"version\": \"5.0.400\" } }`\r\n9. Run the project\r\n_=> This should build and start as expected_\r\n\r\n\r\nThis error only occurs when MSBuild properties are used. I tested it with $(MSBuildProjectName), $(AssemblyName) and $(RootNamespace).\r\nBut if I use $(Nullable) for example, it works as expected.\r\nIf I use a fixed value (e.g. \"test.project\"), it also works as expected.","Url":"https://github.com/dotnet/wpf/issues/5683","RelatedDescription":"Closed issue \"UserControls are not found with the .NET 6 SDK if the AssemblyName is changed with $(MSBuildProjectName).\" (#5683)"},{"Id":"1050984347","IsPullRequest":false,"CreatedAt":"2021-11-17T06:21:37","Actor":"dkandrov","Number":"5686","RawContent":null,"Title":"A11y ListBoxItems cause the error \"An element's IsOffScreen property must be false when its clickable point is on screen\"","State":"closed","Body":"* .NET Core Version: .NET SDK 5.0.403\r\n* Windows version: Windows 10 - 21H1 build 19043.1348\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n When you use ListBox in your forms and this ListBox contains many items which couldn't be displayed all in one time then you get an a11y error from the Accessibility Insights tool: \"An element's IsOffScreen property must be false when its clickable point is on screen\"\r\n![screenshot](https://user-images.githubusercontent.com/5506989/141305442-21751c56-6721-473d-9d93-4c424850c58f.png)\r\n\r\nIf you scroll elements down and up and start a11y test again:\r\n![screenshot2](https://user-images.githubusercontent.com/5506989/141306661-84112ad9-108b-4784-8554-0c2160dbefee.png)\r\n\r\nIn the Accessibility Insights tool repo, they have a similar issue which was closed because that is the problem of WPF: https://github.com/microsoft/axe-windows/issues/539#issuecomment-797633889\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nThe Accessibility Insights tool shows an error: \"An element's IsOffScreen property must be false when its clickable point is on screen\"\r\n **Expected behavior:**\r\nThe Accessibility Insights tool should not show errors about this.\r\n **Minimal repro:*\r\n[WpfAppListBox.zip](https://github.com/dotnet/wpf/files/7520666/WpfAppListBox.zip)\r\n*\r\n","Url":"https://github.com/dotnet/wpf/issues/5686","RelatedDescription":"Closed issue \"A11y ListBoxItems cause the error \"An element's IsOffScreen property must be false when its clickable point is on screen\"\" (#5686)"},{"Id":"1055706041","IsPullRequest":true,"CreatedAt":"2021-11-17T05:27:36","Actor":"dotnet-maestro[bot]","Number":"5699","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211116.2\r\n- **Date Produced**: November 17, 2021 4:46:44 AM UTC\r\n- **Commit**: 5a5a7c7874d9a707328d4e69a6fffca1998bc1e3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21564.1 to 7.0.0-alpha.1.21566.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21564.1 to 7.0.0-alpha.1.21566.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a8905ab...5a5a7c7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5699","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5699)"},{"Id":"1055247976","IsPullRequest":false,"CreatedAt":"2021-11-16T19:33:54","Actor":"DaveTryon","Number":"5698","RawContent":null,"Title":"UIA: Multiple (redundant) AutomationFocusChange events sent when opening a context menu","State":"open","Body":"* .NET Core Version: 6.0.100-preview.7.21328.6, targeting 3.1\r\n* Windows version: Windows 10 21H1\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nWhen opening a context menu in WPF, multiple UIA `AutomationFocusChanged` events are often fired. This causes some accessibility tools (like NVDA) to announce the menu multiple times.\r\n \r\n **Actual behavior:**\r\nMost of the times, 2 `AutomationFocusChanged` events are fired. Sometimes there is only 1 and sometimes there are 3.\r\n \r\n **Expected behavior:**\r\n1 `AutomationFocusChanged` event should be consistently fired when the menu opens\r\n \r\n **Minimal repro:**\r\n1. Clone the sample repo `git clone https://github.com/DaveTryon/wpf-context-menu-sample.git`\r\n2. Build the project in Visual Studio\r\n3. Run [NVDA](https://www.nvaccess.org/)\r\n4. Launch the sample app\r\n5. Open the context menus--one opens when the upper button is pressed, the other opens on right-click on the lower button\r\n6. Notice how many times NVDA announces \"Menu\"\r\n\r\nIf you use Accessibility Insights to capture the UIA events, you can confirm that multiple `AutomationFocusChanged` events are being sent multiple times. NVDA announces on each event. One could argue that NVDA ought to filter multiple events, but it makes more sense for WPF not to send the multiple events in the first place.","Url":"https://github.com/dotnet/wpf/issues/5698","RelatedDescription":"Open issue \"UIA: Multiple (redundant) AutomationFocusChange events sent when opening a context menu\" (#5698)"},{"Id":"1055136387","IsPullRequest":false,"CreatedAt":"2021-11-16T17:25:38","Actor":"AArnott","Number":"5697","RawContent":null,"Title":"RootNamespace should be set explicitly in WPF inner builds","State":"open","Body":"* .NET Core Version: 6.0.100\r\n* Windows version: Windows 11 (21H2, 22000.318)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n **Problem description:**\r\n\r\nA typical WPF project file does not explicitly set the `RootNamespace` MSBuild property but rather inherits it from the `$(MSBuildProjectName)`.\r\n\r\nWPF's inner build creates a temporary project file with a random suffix added to the project name. This means that the *default RootNamespace changes* to not match the actual `RootNamespace` from the outer build.\r\nTwo problems with that:\r\n\r\n1. The `RootNamespace` in the inner build does not match the value used by the outer build. This may not be a customer facing problem if the inner build does not ever include targets that care what that property is set to. `EmbeddedResource` items are embedded using logical names based on `RootNamespace`, so as one example if that step is done within an inner build, then the inner build has a corrupted result. \r\n2.  The `RootNamespace` changes to a new random value with each and every build. This breaks incremental build and forces WPF's inner build to actually compile the result with each and every build (with no source changes) when Nerdbank.GitVersioning is installed in the project, since this property serves as an input to a generated source file.\r\n\r\nSee #5458 for other work targeting improving incremental build performance.\r\n\r\n **Actual behavior:**\r\n\r\nThe `RootNamespace` property is not set in the generated tmpproj.csproj file.\r\n \r\n **Expected behavior:**\r\n\r\nIf `RootNamespace` is explicitly set in the project file, its definition should be copied into the tmpproj\r\nIf `RootNamespace` is *not* explicitly set in the project file, the generated tmpproj *should* set it explicitly to `$(_TargetAssemblyProjectName)`.\r\n \r\nFor example we were able to workaround the problem by adding this to our `Directory.Build.targets` file:\r\n\r\n```xml\r\n  <!-- Incremental build perf improvements -->\r\n  <PropertyGroup>\r\n    <!-- Fix RootNamespace in WPF inner builds so they are constant across builds. -->\r\n    <RootNamespace Condition=\" $(RootNamespace.EndsWith('_wpftmp')) \">$(_TargetAssemblyProjectName)</RootNamespace>\r\n  </PropertyGroup>\r\n```","Url":"https://github.com/dotnet/wpf/issues/5697","RelatedDescription":"Open issue \"RootNamespace should be set explicitly in WPF inner builds\" (#5697)"},{"Id":"1055078458","IsPullRequest":false,"CreatedAt":"2021-11-16T16:27:04","Actor":"yingDev","Number":"5696","RawContent":null,"Title":"Unneccesary boxing of DpiScale on hot path \"SetDpiScaleVisualFlags\"","State":"open","Body":"https://github.com/dotnet/wpf/blob/89d172db0b7a192de720c6cfba5e28a1e7d46123/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/Visual.cs#L4999-L5012\r\n\r\n\r\n```c#\r\nif (!args.OldDpiScale.Equals(args.NewDpiScale)) \r\n```","Url":"https://github.com/dotnet/wpf/issues/5696","RelatedDescription":"Open issue \"Unneccesary boxing of DpiScale on hot path \"SetDpiScaleVisualFlags\"\" (#5696)"},{"Id":"1053828601","IsPullRequest":false,"CreatedAt":"2021-11-15T15:59:09","Actor":"SaculRennorb","Number":"5695","RawContent":null,"Title":"enableing nullable checking project wide breaks generic usercontrols (CS0263)","State":"open","Body":"* .NET Core Version: 5.0.403 bf9d168ac2 SDK (core 3.1)\r\n* Windows version: Win10 | 20H2 Build 19042.1052\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: have not checked\r\n \r\n **Problem description:**\r\nAssume this minimal test project:\r\n```csharp\r\nnamespace WpfApp1.Tests {\r\n  public class GridBase : UserControl { }\r\n\r\n  public class CCCCCC<T> : GridBase where T : class { }\r\n\r\n  public class testclass { }\r\n\r\n  public partial class UserControl1 : CCCCCC<testclass> {\r\n    public UserControl1() {\r\n      InitializeComponent();\r\n    }\r\n  }\r\n}\r\n```\r\n```xml\r\n<local:CCCCCC x:Class=\"WpfApp1.Tests.UserControl1\"\r\n        x:TypeArguments=\"local:testclass\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \r\n        xmlns:local=\"clr-namespace:WpfApp1.Tests\"\r\n        mc:Ignorable=\"d\" \r\n        d:DesignHeight=\"450\" d:DesignWidth=\"800\">\r\n    <DataGrid Background=\"BlueViolet\">\r\n    </DataGrid>\r\n</local:CCCCCC>\r\n```\r\n\r\nThis UserControl compiles fine with the following project settings:\r\n ``` xml\r\n <Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <UseWPF>true</UseWPF>\r\n    <!--<Nullable>enable</Nullable>-->\r\n  </PropertyGroup>\r\n</Project>\r\n ```\r\nbut once you uncomment the project wide nullable setting, the whole project no longer compiles and the following error occurs;\r\n`CS0263\tPartial declarations of 'UserControl1' must not specify different base classes\tWpfApp1\t[...]\\WpfApp1\\UserControl1.xaml.cs\t18`\r\n\r\nThis however is a different error message from the one you actually get when using two different base classes for your xaml and c# side (usually you get `Base class of 'WpfApp1.Tests.UserControl1' differs from declared in other parts`).\r\n","Url":"https://github.com/dotnet/wpf/issues/5695","RelatedDescription":"Open issue \"enableing nullable checking project wide breaks generic usercontrols (CS0263)\" (#5695)"},{"Id":"1053279845","IsPullRequest":true,"CreatedAt":"2021-11-15T07:25:01","Actor":"dotnet-maestro[bot]","Number":"5694","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211114.1\r\n- **Date Produced**: November 15, 2021 6:43:26 AM UTC\r\n- **Commit**: a8905ab4ba4981db444644a2b028fbff92f41893\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21563.1 to 7.0.0-alpha.1.21564.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21563.1 to 7.0.0-alpha.1.21564.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f023688...a8905ab\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5694","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5694)"},{"Id":"1052974671","IsPullRequest":true,"CreatedAt":"2021-11-14T16:00:09","Actor":"deeprobin","Number":"5693","RawContent":null,"Title":"FindCommandBinding improvements","State":"open","Body":"Might fix Issue #4869\r\n\r\n## Description\r\n\r\nThe main focus was on the FindCommandBinding method in CommandManager.cs. Here I decided to use a ValueTuple instead of a Tuple as well as to do the check using a switch-is block, as this is most likely easier to optimize through the JIT.\r\n\r\nFurthermore, I made other code improvements in related methods, like reducing code-nesting and using new C# features.\r\n\r\nI don't think these make a big difference to the generated JIT asm, but still hope to have made the code a bit more readable.\r\n\r\n/cc @IAmTheCShark","Url":"https://github.com/dotnet/wpf/pull/5693","RelatedDescription":"Open PR \"FindCommandBinding improvements\" (#5693)"},{"Id":"1052692797","IsPullRequest":true,"CreatedAt":"2021-11-13T14:59:49","Actor":"dotnet-maestro[bot]","Number":"5692","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211113.1\r\n- **Date Produced**: November 13, 2021 2:15:55 PM UTC\r\n- **Commit**: f023688c2f08967c2e1139c85c0e2d38d245c367\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21561.9 to 7.0.0-alpha.1.21563.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21561.9 to 7.0.0-alpha.1.21563.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21562.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/7ce653c...f023688\r\n[2]: https://github.com/dotnet/runtime/compare/6f5de0b...35704e4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5692","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5692)"},{"Id":"1052519919","IsPullRequest":false,"CreatedAt":"2021-11-13T02:15:28","Actor":"Ikonovich","Number":"5691","RawContent":null,"Title":"ComboBox background parameter doesn't work.","State":"open","Body":"* .NET Core Version: 5.0\r\n* Windows version: 10.0.19042 Build 19042\r\n\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n Setting the background parameter for a combo box doesn't function properly. \r\n\r\nActual behavior: \r\nThe ComboBox maintains the default gray background when the background parameter is set. When the dropdown menu is activated, any non-selected items will take on their Background color, but whichever item is selected will revert to the grey background.\r\n \r\nExpected behavior: \r\nThe combo box should take on either the default background color of the ComboBox or the background color of the selected item.\r\nI would expect that the background color of the selected item would override the default background color.\r\n\r\nMinimal reproduction: \r\n                    <ComboBox Background=\"Yellow\">\r\n                        <ComboBoxItem Background =\"Red\" IsSelected=\"True\">ExampleOne</ComboBoxItem>\r\n                        <ComboBoxItem Background =\"Blue\">ExampleTwo</ComboBoxItem>\r\n                        <ComboBoxItem Background =\"Green\">ExampleThree</ComboBoxItem>\r\n                    </ComboBox>\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/5691","RelatedDescription":"Open issue \"ComboBox background parameter doesn't work.\" (#5691)"},{"Id":"1049733320","IsPullRequest":false,"CreatedAt":"2021-11-12T07:50:57","Actor":"kvalitetskontrollMarkaryd","Number":"5677","RawContent":null,"Title":"Can't debug WPF project after upgrade from .NET5 to .NET6","State":"closed","Body":"* .NET Core Version: 6.0.100\r\n* Windows version: Windows 11 Pro\r\n* IDE: Visual Studio 2022 and Rider\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Have not tried but it's working in .NET5.\r\n\r\n **Problem description:**\r\n Changed from .NET5 to .NET6 by changing TargetFramework in .csproj. I now get the error message in VS2022:\r\n\"Unable to attach to CoreCLR. Operation not supported. Unknown error: 0x80004005.\"\r\nPublish and \"Start without debugging\" works, both in VS and Rider.\r\n\r\nWhat I have tried:\r\n1. I have uppdated all nugets\r\n2. Re-installed Visual Studio 2022\r\n3. Re-installed .Net6\r\n4. Clean and rebuild.\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nVisual Studio error message:\r\n![Visual Studio error message](https://user-images.githubusercontent.com/40342638/141107226-3215f1bb-9b80-4459-a386-204b9a8784d5.png)\r\n\r\nRider error message:\r\nC:\\Users\\user\\AppData\\Local\\JetBrains\\Toolbox\\apps\\Rider\\ch-0\\212.5284.64\\lib\\ReSharperHost\\JetBrains.Debugger.Worker64c.exe --mode=client --frontend-port=53344 --plugins=C:\\Users\\user\\AppData\\Local\\JetBrains\\Toolbox\\apps\\Rider\\ch-0\\212.5284.64\\plugins\\rider-unity\\dotnetDebuggerWorker\r\nOne or more errors have occurred.\r\n\r\n **csproj**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net6.0-windows</TargetFramework>\r\n    <UseWPF>true</UseWPF>\r\n    <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n    <ApplicationIcon>Business_Target.ico</ApplicationIcon>\r\n    <UseWindowsForms>False</UseWindowsForms>\r\n    <ImplicitUsings>disable</ImplicitUsings>\r\n\t<SelfContained>true</SelfContained>\r\n\t<IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\ProjectOrganizer.Dto\\ProjectOrganizer.Dto.csproj\" />\r\n    <ProjectReference Include=\"..\\ProjectOrganizer.Shared\\ProjectOrganizer.Shared.csproj\">\r\n    </ProjectReference>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"AsyncAwaitBestPractices\" Version=\"6.0.2\" />\r\n    <PackageReference Include=\"Autofac\" Version=\"6.3.0\" />\r\n    <PackageReference Include=\"Autofac.Extensions.DependencyInjection\" Version=\"7.2.0\" />\r\n    <PackageReference Include=\"DevExpress.Images\" Version=\"21.2.3\" />\r\n    <PackageReference Include=\"DevExpress.Wpf\" Version=\"21.2.3\" />\r\n    <PackageReference Include=\"DevExpress.Wpf.Themes.Office2019Black\" Version=\"21.2.3\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Http\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Http.Polly\" Version=\"6.0.0\" />\r\n    <PackageReference Include=\"Mono.Cecil\" Version=\"0.11.4\" />\r\n    <PackageReference Include=\"Polly.Extensions.Http\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Prism.Core\" Version=\"8.1.97\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/dotnet/wpf/issues/5677","RelatedDescription":"Closed issue \"Can't debug WPF project after upgrade from .NET5 to .NET6\" (#5677)"},{"Id":"1051496827","IsPullRequest":true,"CreatedAt":"2021-11-12T01:54:52","Actor":"dotnet-maestro[bot]","Number":"5690","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211111.9\r\n- **Date Produced**: November 12, 2021 1:19:16 AM UTC\r\n- **Commit**: 7ce653ce1d831ba80dd02882745b6b3b28053f6c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21561.8 to 7.0.0-alpha.1.21561.9][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21561.8 to 7.0.0-alpha.1.21561.9][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8cdf7b4...7ce653c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5690","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5690)"},{"Id":"1051469128","IsPullRequest":true,"CreatedAt":"2021-11-12T00:58:51","Actor":"dotnet-maestro[bot]","Number":"5689","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211111.8\r\n- **Date Produced**: November 12, 2021 12:17:45 AM UTC\r\n- **Commit**: 8cdf7b4cf71f3688c537002c96497cac6a85a390\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21561.1 to 7.0.0-alpha.1.21561.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/280fc85...8cdf7b4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5689","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5689)"},{"Id":"1051351236","IsPullRequest":false,"CreatedAt":"2021-11-11T20:51:39","Actor":"ryanmolden","Number":"5688","RawContent":null,"Title":"WPF does not ignore ignorable DWM errors and instead crashes the process","State":"open","Body":"The gist of the problem is WPF does not ignore STATUS_MESSAGE_LOST in their call to DWM's flush function. This message is ignorable and in fact should be ignored as DWM will recycle itself if it crashes and become available again. WPF not ignoring this forces a SyncFlush failure in VS which forces a UI thread exception to be thrown which crashes the product potentially losing unsaved user data. \r\n\r\nThe DWM folks in an internal email (quoted below) suggested this error (and possibly all others) should be treated as transitory/ignored, as WPF is already doing for SOME other error codes in this same code path.\r\n\r\nThis crash is responsible for approximately 50% of the SyncFlush Watson bucket which is the #1 crash in Dev17.\r\n\r\nFrom an internal email thread with the DWM folks (emphasis on 'all errors should be in this bucket', mine):\r\n\r\n> Yes, STATUS_MESSAGE_LOST is the NTSTATUS that is returned by LPC, whereas the other value is the HRESULT version of the same thing. The only difference is the extra facility bit that’s OR’ed in.\r\n> \r\n> Here, you’ll notice that WPF doesn’t want to do anything different – it just bubbles the error out. Also notice that we’re filtering some known errors already, and doing nothing special when these are encountered. My point is, **all errors should be in this bucket**, and at that point there is no longer a reason to even check the return code of the method. It’s basically a best-effort method: if it works, you want to wait for it to complete, and if it doesn’t work then there’s nothing to wait for.\r\n> \r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/5688","RelatedDescription":"Open issue \"WPF does not ignore ignorable DWM errors and instead crashes the process\" (#5688)"},{"Id":"1051032424","IsPullRequest":true,"CreatedAt":"2021-11-11T14:58:56","Actor":"dotnet-maestro[bot]","Number":"5687","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211111.1\r\n- **Date Produced**: November 11, 2021 2:14:24 PM UTC\r\n- **Commit**: 280fc8548e3f77aa19e3d2c8cb1aaa8bcaab8aa0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21560.4 to 7.0.0-alpha.1.21561.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21560.4 to 7.0.0-alpha.1.21561.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21558.10 to 7.0.0-alpha.1.21561.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/92921bb...280fc85\r\n[2]: https://github.com/dotnet/runtime/compare/dfb8c90...6f5de0b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5687","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5687)"},{"Id":"1050630918","IsPullRequest":true,"CreatedAt":"2021-11-11T06:45:19","Actor":"gurpreet-wpf","Number":"5685","RawContent":null,"Title":"Update roadmap.md","State":"open","Body":"WPF Roadmap for FY22\r\n\r\nFixes Issue <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/5685","RelatedDescription":"Open PR \"Update roadmap.md\" (#5685)"},{"Id":"1050578157","IsPullRequest":true,"CreatedAt":"2021-11-11T05:05:27","Actor":"singhashish-wpf","Number":"5684","RawContent":null,"Title":"Replace primitives by cryptography","State":"open","Body":"Fixes Issue <!-- Issue Number -->\r\nBuild error for winforms.\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\nhttps://github.com/dotnet/wpf/pull/5622\r\n## Description\r\nFix build errors, unblock. winforms.\r\n\r\nhttps://github.com/dotnet/runtime/pull/61025\r\n\r\n## Customer Impact\r\nBuild errors.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nBuild\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/5684","RelatedDescription":"Open PR \"Replace primitives by cryptography\" (#5684)"},{"Id":"1050345694","IsPullRequest":true,"CreatedAt":"2021-11-10T21:51:33","Actor":"dotnet-maestro[bot]","Number":"5682","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20211110.2\r\n- **Date Produced**: November 10, 2021 5:15:38 PM UTC\r\n- **Commit**: ee9b7f19853685805c612103282c8d9486c7db86\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21558.5 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21558.5 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21558.5 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21558.5 to 6.0.0-beta.21560.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21558.5 to 6.0.0-beta.21560.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/8ebefe2...ee9b7f1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.100\r\n  - Updates tools.dotnet to 6.0.100\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5682","RelatedDescription":"Open PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#5682)"},{"Id":"1050005132","IsPullRequest":true,"CreatedAt":"2021-11-10T16:19:59","Actor":"dotnet-maestro[bot]","Number":"5680","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20211108.5\r\n- **Date Produced**: November 8, 2021 9:31:54 PM UTC\r\n- **Commit**: 8ebefe290f57089d60100465111e78f223ee91db\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21519.3 to 6.0.0-beta.21558.5][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21519.3 to 6.0.0-beta.21558.5][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21519.3 to 6.0.0-beta.21558.5][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21519.3 to 6.0.0-beta.21558.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21519.3 to 6.0.0-beta.21558.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/85f3aa1...8ebefe2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5680","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#5680)"},{"Id":"1049929868","IsPullRequest":false,"CreatedAt":"2021-11-10T14:56:38","Actor":"zivkan","Number":"5679","RawContent":null,"Title":"MSBuildProjectExtensionsPath not handled correctly in GenerateTemporaryTargetAssembly","State":"open","Body":"* .NET Core Version: 6.0.100\r\n* Windows version: n/a\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:** A customer reported this issue to NuGet: https://github.com/NuGet/Home/issues/4463#issuecomment-964986638\r\n\r\nI'm reporting it here, but @mkonijnenburg is the affected customer\r\n\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\n> C:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(267,5): error NETSDK1004: Assets file 'C:\\src\\test\\wpfArtifacts\\obj\\MyApp_3j03kfnj_wpftmp\\project.assets.json' not found. Run a NuGet package restore to generate this file. [C:\\src\\test\\wpfArtifacts\\src\\MyApp\\MyApp_3j03kfnj_wpftmp.csproj]\r\n\r\n **Expected behavior:**\r\n\r\nBuild successfully\r\n \r\n **Minimal repro:**\r\n\r\nCreate `Directory.Build.props`:\r\n\r\n```xml\r\n<Project>\r\n    <PropertyGroup>\r\n        <BaseOutputPath>$(MSBuildThisFileDirectory)bin\\$(MSBuildProjectName)\\</BaseOutputPath>\r\n        <MSBuildProjectExtensionsPath>$(MSBuildThisFileDirectory)obj\\$(MSBuildProjectName)\\</MSBuildProjectExtensionsPath>\r\n        <IntermediateOutputPath>$(MSBuildThisFileDirectory)obj\\$(MSBuildProjectName)\\$(Configuration)\\</IntermediateOutputPath>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nthen `dotnet new wpf -n MyApp ; dotnet new sln ; dotnet sln add MyApp ; dotnet build`\r\n\r\nIf I use `global.json` to pin the .NET SDK to 5.0.x, then this problem does not reproduce.","Url":"https://github.com/dotnet/wpf/issues/5679","RelatedDescription":"Open issue \"MSBuildProjectExtensionsPath not handled correctly in GenerateTemporaryTargetAssembly\" (#5679)"},{"Id":"1049824529","IsPullRequest":true,"CreatedAt":"2021-11-10T13:54:26","Actor":"dotnet-maestro[bot]","Number":"5678","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20211109.3\r\n- **Date Produced**: November 9, 2021 7:25:36 PM UTC\r\n- **Commit**: fecf65bedcee9036b8ba9d8d7feef5413f294914\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21555.2 to 7.0.0-beta.21559.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a7c57ab...fecf65b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5678","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5678)"},{"Id":"1048936796","IsPullRequest":false,"CreatedAt":"2021-11-09T18:29:58","Actor":"vsfeedback","Number":"5676","RawContent":null,"Title":"Code Loading and Styling FlowDocument Must Produce an Error In Order to Function","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Code-Loading-and-Styling-FlowDocument-Mu/1545618)._\n\n---\n[severity:Other]\r\n\nPrivate Sub Window_Loaded(sender As Object, e As RoutedEventArgs) Handles MyBase.Loaded\n\n' Loads the content to display...\n        rtbDisplay.Document = pFldContent\n        rtbDisplay.IsEnabled = True\n\n' Changes the name of the window...\n        txtTitle.Text = pStrHandle\n        ' Prepares to handle \n        Dim strInput As String = GetTheme(pIntWork)\n        Dim strTheme As String()\n        Dim strType As String = \"\"\n        Dim strOutput As String = \"\"\n        ' Attempts to avoid crashing...\n        Try\n            ' Loops through every paragraph in the display...\n            For Each itmBlock As Paragraph In rtbDisplay.Document.Blocks\n                ' Loops through every inline in the active paragraph...\n                For Each itmInline As Inline In itmBlock.Inlines\n                    ' Loops through every object in the active inline's children...\n                    For Each itmObject As Object In LogicalTreeHelper.GetChildren(itmBlock)\n                        ' Attempts to avoid crashing...\n                        Try\n                            ' Responds to User Interface Containers...\n                            If itmObject.GetType = GetType(InlineUIContainer) Then\n                                ' Treats the found children as inline user interface containers...\n                                Dim objTest As InlineUIContainer = itmObject\n                                ' Obtains theme settings...\n                                strTheme = Split(strInput, \",\")\n                                ' Gets the object type of the item in the container...\n                                strType = objTest.Child.GetType.ToString\n                                strType = Right(strType, Len(strType) - InStrRev(strType, \".\"))\n                                ' Responds based on item type...\n                                Select Case strType\n                                    Case \"TextBox\"\n                                        ' Treats the child item type as a text box...\n                                        Dim objText As TextBox = objTest.Child\n                                        ' Works with the text box...\n                                        With objText\n\n. FontFamily = New FontFamily(strTheme(7))\n                                            . FontSize = CDbl(strTheme(8))\n                                            . Foreground = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(9)))\n                                            . Padding = New Thickness(strTheme(10))\n                                            . Background = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(11)))\n                                            . BorderBrush = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(12)))\n                                            . BorderThickness = New Thickness(1)\n                                            . Margin = New Thickness(0)\n\nEnd With\n\nCase \"ComboBox\"\n\n'   THIS NEVER HAPPENS  \n\n' Treats the ui container item type as a combo box...\n                                        Dim objCombo As ComboBox = objTest.Child\n\n' Attempts to locate the template parent for editing (this works, but it only affects part of the design)...\n                                        ' * This section generates an error.  When the error is suppressed, the window does NOT color the combo box *\n                                        Dim tbTemp As TextBox = objCombo.Template.FindName(\"PART_EditableTextBox\", objCombo)\n                                        Dim svTemp As ScrollViewer = tbTemp.Template.FindName(\"PART_ContentHost\", tbTemp)\n\nWith svTemp\n                                            . Background = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(11)))\n                                        End With\n                                        ' * This section generates an error.  When the error is suppressed, the window does NOT color the combo box *\n\nTry\n                                            ' Adds a style resource to the combo box that sets the colors for the popup...\n                                            If objCombo.Resources.Count = 0 Then\n                                                ' Sets the background...\n                                                objCombo.Resources.Add(SystemColors.WindowBrushKey, New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(11))))\n                                                ' Sets the border...\n                                                objCombo.Resources.Add(SystemColors.WindowFrameBrushKey, New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(12))))\n                                                objCombo.Resources.Add(SystemColors.ControlTextBrushKey, New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(11))))\n                                            End If\n                                        Catch ex As Exception\n                                            MsgBox(ex. Message)\n                                        End Try\n\n' Works with the combo box...\n                                        With objCombo\n\n. FontFamily = New FontFamily(strTheme(7))\n                                            . FontSize = CDbl(strTheme(8))\n                                            . Foreground = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(9)))\n                                            . Padding = New Thickness(strTheme(10))\n                                            '. Background = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(11)))\n                                            '. BorderBrush = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(12)))\n                                            . BorderThickness = New Thickness(1)\n                                            . Margin = New Thickness(0)\n\nEnd With\n\nCase \"Button\"\n                                        ' Treats the child item type as a button...\n                                        Dim objButton As Button = objTest.Child\n                                        ' Only works with text buttons...\n                                        If objButton.Name <> \"btnColor\" And objButton.Name <> \"btnImage\" Then\n                                            ' Works with the button...\n                                            With objButton\n\n. FontFamily = New FontFamily(strTheme(13))\n                                                . FontSize = CDbl(strTheme(14))\n                                                . Foreground = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(15)))\n                                                . Padding = New Thickness(strTheme(16))\n                                                . Background = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(17)))\n                                                . BorderBrush = New SolidColorBrush(ColorConverter.ConvertFromString(strTheme(18)))\n                                                . Margin = New Thickness(strTheme(19))\n                                                . BorderThickness = New Thickness(1)\n\nEnd With\n                                        End If\n\nEnd Select\n                            End If\n\nCatch ex As Exception\n                            ' Stores messages...\n                            strOutput &= ex. Message & vbCrLf\n                        End Try\n\nNext\n\nNext\n\nNext\n\nCatch ex As Exception\n            ' Notifies the user...\n            MsgBox(ex. Message, vbExclamation, \"Window Style Error\")\n        End Try\n\nEnd Sub\n\n---\n### Original Comments\n\n#### Feedback Bot on 10/4/2021, 08:55 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/5676","RelatedDescription":"Open issue \"Code Loading and Styling FlowDocument Must Produce an Error In Order to Function\" (#5676)"},{"Id":"1048930137","IsPullRequest":false,"CreatedAt":"2021-11-09T18:25:22","Actor":"vsfeedback","Number":"5675","RawContent":null,"Title":"Why ToolTip appears Instantly and does not trigger initial delay in WPF?","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Why-ToolTip-appears-Instantly-and-does-n/1564898)._\n\n---\n[severity:It's more difficult to complete my work]\r\nI have two buttons in Main.Xaml. I declare ToolTip for each of them. They have a very small gap which is barely visible with open eyes but still they have gap which you you can see by their Margin.\n\n<Button\n        \n         x:Name=\"button1\" Width=\"71\" HorizontalAlignment=\"Left\" Margin=\"165,14,0,0\" Height=\"24\" \n      VerticalAlignment=\"Top\"  UseLayoutRounding=\"True\"  RenderOptions.ClearTypeHint=\"Enabled\"  RenderOptions.BitmapScalingMode=\"NearestNeighbor\"   SnapsToDevicePixels=\"True\"        \n                    >\n             <Button.Content  >\n                 <TextBlock FontSize=\"10\" FontFamily=\"Segoe UI\" UseLayoutRounding=\"True\" TextOptions.TextFormattingMode=\"Display\"  Margin=\"0,-2,0,0\" >\n                     Settings\n                 </TextBlock>\n                 </Button.Content>\n               <Button.ToolTip >\n <ToolTip   UseLayoutRounding=\"True\"  RenderOptions.ClearTypeHint=\"Enabled\"  RenderOptions.BitmapScalingMode=\"NearestNeighbor\"   SnapsToDevicePixels=\"True\" TextOptions.TextFormattingMode=\"Display\"\n                     >\n                     <StackPanel>\n                         <TextBlock  FontFamily=\"Segoe UI\"  FontSize=\"12\"  TextOptions.TextFormattingMode=\"Display\"    > \n                            Settings\n                         </TextBlock>\n                     </StackPanel>\n                   </ToolTip>\n             </Button.ToolTip>\n         </Button>\n    \n    \n            `enter code here`<Button\n       \n         x:Name=\"button2\" Width=\"71\" HorizontalAlignment=\"Left\" Margin=\"237,14,0,0\" Height=\"24\" \n      VerticalAlignment=\"Top\"  UseLayoutRounding=\"True\"  RenderOptions.ClearTypeHint=\"Enabled\"  RenderOptions.BitmapScalingMode=\"NearestNeighbor\"   SnapsToDevicePixels=\"True\"        \n                    >\n             <Button.Content                                               >\n                 <TextBlock FontSize=\"10\" FontFamily=\"Segoe UI\" UseLayoutRounding=\"True\" TextOptions.TextFormattingMode=\"Display\"  Margin=\"0,-2,0,0\" >\n                     Settings\n                 </TextBlock>\n                 </Button.Content>\n               <Button.ToolTip >\n <ToolTip    UseLayoutRounding=\"True\"  RenderOptions.ClearTypeHint=\"Enabled\"  RenderOptions.BitmapScalingMode=\"NearestNeighbor\"   SnapsToDevicePixels=\"True\" TextOptions.TextFormattingMode=\"Display\"\n                     >\n                     <StackPanel>\n                         <TextBlock  FontFamily=\"Segoe UI\"  FontSize=\"12\"  TextOptions.TextFormattingMode=\"Display\"    > \n                            Settings\n                         </TextBlock>\n                     </StackPanel>\n                   </ToolTip>\n             </Button.ToolTip>\n         </Button>\n\nI have created two control template one is for button which is consider as \"RoundCorner\" and declare as StaticResource of buttons in Main.XAMl. And another is for ToolTip.\n\nHere is the Code for RoundCorner Controltemplate(Button) --\n\n<Style x:Key=\"RoundCorner\" TargetType=\"{x:Type Button}\" x:Name=\"RoundCornerButton\"  >\n                 <Setter Property=\"HorizontalContentAlignment\" Value=\"Center\"/>\n                 <Setter Property=\"VerticalContentAlignment\" Value=\"Center\"/>\n                 <Setter Property=\"Padding\" Value=\"1\"/>\n                 <Setter Property=\"Foreground\" Value=\"#bababa\" />\n                <Setter Property=\"Template\">\n                     <Setter.Value>\n                         <ControlTemplate TargetType=\"{x:Type Button}\">\n                             <Grid x:Name=\"grid\" >\n                                 <Border x:Name=\"border\" CornerRadius=\"1\"  BorderThickness=\"0\"  >\n                                     <Border.Background>\n                                         <RadialGradientBrush GradientOrigin=\"0.496,1.052\">\n                                             <RadialGradientBrush.RelativeTransform>\n                                                 <TransformGroup>\n                                                     <ScaleTransform CenterX=\"0.5\" CenterY=\"0.5\" \n                                                         ScaleX=\"1.5\" ScaleY=\"1.5\"/>\n                                                     <TranslateTransform X=\"0.02\" Y=\"0.3\"/>\n                                                 </TransformGroup>\n                                             </RadialGradientBrush.RelativeTransform>\n                                             <GradientStop Offset=\"1\" Color=\"#282828\"/>\n                                             <GradientStop Offset=\"0.3\" Color=\"#282828\"/>\n                                         </RadialGradientBrush>\n                                     </Border.Background>\n                                     <ContentPresenter                                                           \n                                         HorizontalAlignment=\"Center\"\n                                         VerticalAlignment=\"Center\"\n                                           >\n                                     </ContentPresenter>\n                                 </Border>\n    \n                             </Grid>\n    \n                             <ControlTemplate.Triggers>\n    \n                                 <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                                     <Setter Property=\"Background\" TargetName=\"border\" Value=\"#202020\"/>\n                                     <Setter Property=\"Foreground\" Value=\"WhiteSmoke\" />\n                                       \n                                 </Trigger>\n    \n                               <Trigger Property=\"IsPressed\" Value=\"True\">\n                                     <Setter Property=\"Background\" TargetName=\"border\">\n                                         <Setter.Value>\n                                             <RadialGradientBrush GradientOrigin=\"0.496,1.052\">\n                                                 <RadialGradientBrush.RelativeTransform>\n                                                     <TransformGroup>\n                                                         <ScaleTransform CenterX=\"0.5\" CenterY=\"0.5\" ScaleX=\"1.5\" ScaleY=\"1.5\"/>\n                                                         <TranslateTransform X=\"0.02\" Y=\"0.3\"/>\n                                                     </TransformGroup>\n                                                 </RadialGradientBrush.RelativeTransform>\n                                                 <GradientStop Color=\"#161616\" Offset=\"1\"/>\n                                                 <GradientStop Color=\"#161616\" Offset=\"0.3\"/>\n                                             </RadialGradientBrush>\n                                         </Setter.Value>\n                                     </Setter>\n                                 </Trigger>\n    \n                           </ControlTemplate.Triggers>\n    \n                         </ControlTemplate>\n                     </Setter.Value>\n                 </Setter>\n    \n                  </Style>\n\nHere is the Control template code for Tooltip--\n\n<Style x:Key=\"ToolTipDefaults\" x:Name=\"NewTooltip\"\n        TargetType=\"{x:Type ToolTip}\">\n                 <Setter Property=\"OverridesDefaultStyle\"\n           Value=\"True\" />\n                 <Setter Property=\"HasDropShadow\" \n           Value=\"True\" />\n                 <Setter Property=\"ToolTipService.Placement\"\n           Value=\"MousePoint\" />\n                 <Setter Property=\"ToolTipService.VerticalOffset\"\n           Value=\"5\"   />\n                 <Setter Property=\"ToolTipService.HorizontalOffset\"\n           Value=\"-10\" />\n                 <Setter Property=\"Foreground\"\n           Value=\"#606060\"/>\n                 <Setter Property=\"ToolTipService.InitialShowDelay\"\n           Value=\"1000\" />\n                 <Setter Property=\"ToolTipService.BetweenShowDelay\"\n           Value=\"0\" />\n                 <Setter Property=\"ToolTipService.ShowDuration\"\n           Value=\"6000\" />\n    \n                 <Setter Property=\"Template\">\n                     <Setter.Value>\n                         <ControlTemplate TargetType=\"{x:Type ToolTip}\">\n    \n                             <Grid x:Name=\"grid\"  Margin=\"10\"  >\n    \n                                 <Border x:Name=\"Bordermini\"  HorizontalAlignment=\"Right\" \n                 BorderThickness=\"0.5\"  \n                                        \n                 Width=\"{TemplateBinding Width}\"\n                 Height=\"15\">\n                            \n                                     <Border.Background>\n                                         <LinearGradientBrush StartPoint=\"0,0\"\n                                  EndPoint=\"0,1\">\n                                             <LinearGradientBrush.GradientStops>\n                                                 <GradientStopCollection>\n                                                     <GradientStop Color=\"White\"\n                                 Offset=\"0.0\" />\n                                                     <GradientStop Color=\"White\"\n                                 Offset=\"1.0\" />\n                                                 </GradientStopCollection>\n                                             </LinearGradientBrush.GradientStops>\n                                         </LinearGradientBrush>\n    \n                                     </Border.Background>\n    \n                                     <Border.BorderBrush>\n                                         <SolidColorBrush Color=\"Gainsboro\" />\n                                     </Border.BorderBrush>\n    \n                                     <Border.Effect>\n    \n                                         <DropShadowEffect   Opacity=\"0.8\"  BlurRadius=\"5\"  Direction=\"-82\" ShadowDepth=\"3.8\" Color=\"#282828\"      >\n                                     </DropShadowEffect>\n    \n                                     </Border.Effect>\n    \n                           <ContentPresenter Margin=\"1.5,0\"\n                             HorizontalAlignment=\"Left\"\n                             VerticalAlignment=\"Top\" />\n                                 </Border>\n    \n                  <Border x:Name=\"Border\"  HorizontalAlignment=\"Right\"\n                 BorderThickness=\"0.5\"  \n                                        \n                 Width=\"{TemplateBinding Width}\"\n                 Height=\"19\">\n                                     <Border.Background>\n                                         <LinearGradientBrush StartPoint=\"0,0\"\n                                  EndPoint=\"0,1\">\n                                             <LinearGradientBrush.GradientStops>\n                                                 <GradientStopCollection>\n                                                     <GradientStop Color=\"#ffffff\"\n                                 Offset=\"0.0\" />\n                                                     <GradientStop Color=\"#ffffff\"\n                                 Offset=\"1.0\" />\n                                                 </GradientStopCollection>\n                                             </LinearGradientBrush.GradientStops>\n                                         </LinearGradientBrush>\n    \n                                     </Border.Background>\n    \n                                     <Border.BorderBrush>\n                                         <SolidColorBrush Color=\"Gray\" />\n                                     </Border.BorderBrush>\n    \n                                     <ContentPresenter Margin=\"4,0\"\n                             HorizontalAlignment=\"Left\"\n                             VerticalAlignment=\"Top\" />\n                                 </Border>\n    \n                             </Grid>\n    \n                             <ControlTemplate.Triggers>\n                                 <Trigger Property=\"HasDropShadow\" Value=\"True\" >\n    \n                                     <Setter TargetName=\"Border\"\n                     Property=\"CornerRadius\"\n                     Value=\"0\" />\n                                     <Setter TargetName=\"Border\"\n                     Property=\"SnapsToDevicePixels\"\n                     Value=\"true\" />\n                             </Trigger>\n    \n                             </ControlTemplate.Triggers>\n                         </ControlTemplate>\n                      </Setter.Value>\n                 </Setter>\n             </Style>\n\nSo, How I re trigger the initial delay as soon as I quickly move the mouse cursor from one button to another? Is there any need to use the \"Datatrigger\" or \"DataBinding\" to overcome this issue?\n\n---\n### Original Comments\n\n#### Feedback Bot on 10/28/2021, 00:16 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/5675","RelatedDescription":"Open issue \"Why ToolTip appears Instantly and does not trigger initial delay in WPF?\" (#5675)"},{"Id":"1048929574","IsPullRequest":false,"CreatedAt":"2021-11-09T18:24:40","Actor":"vsfeedback","Number":"5674","RawContent":null,"Title":"SoldidColorBrush created from BrushConverter(). ConvertFrom method does not work in a ValueConverter ","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/SoldidColorBrush-created-from-BrushConve/1468736)._\n\n---\n[regression] [worked-in:?]\r\n! [SolidColorBrush.png] (https://aka.ms/dc/image?name=Bea2e435819fe4d4fbdb2883700ebcb68637611762643440184_SolidColorBrush.png&tid=ea2e435819fe4d4fbdb2883700ebcb68637611762643440184)\n\nWhen I use ' SolidColorBrush brush = new SolidColorBrush(color: Colors.Gainsboro);' it changes the backgroundcolor.\nIf i use SolidColorBrush brush = (SolidColorBrush)(new BrushConverter(). ConvertFrom(\"#CCFF0000\"));  the backgroundcolor stays always red even if the value becomes true .\nHappend after update to 16.10.3 and is's quite a while ago since i ran this code. As I update as soon as there is an update, i can't remember the last working version !\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/7/2021, 00:15 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 10/9/2021, 02:04 AM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/5674","RelatedDescription":"Open issue \"SoldidColorBrush created from BrushConverter(). ConvertFrom method does not work in a ValueConverter \" (#5674)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-11-18T05:30:41.158893Z","RunDurationInMilliseconds":513}