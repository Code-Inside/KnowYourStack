{"Data":{"GitHub":{"Issues":[{"Id":"756234950","IsPullRequest":true,"CreatedAt":"2020-12-03T14:40:36","Actor":"dotnet-maestro[bot]","Number":"3882","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201203.2\r\n- **Date Produced**: 12/3/2020 2:10 PM\r\n- **Commit**: 621f0911e67a826877bae32b96415eddeaea36ee\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20574.3 to 6.0.0-alpha.1.20603.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC1fca475&targetVersion=GC621f091&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3882","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3882)"},{"Id":"756175533","IsPullRequest":true,"CreatedAt":"2020-12-03T13:37:50","Actor":"dotnet-maestro[bot]","Number":"3881","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201201.2\r\n- **Date Produced**: 12/1/2020 7:10 PM\r\n- **Commit**: 6d8efa00a7dd2d15e07df673a83cecb8a0a3031f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/35bddd4...6d8efa0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3881","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3881)"},{"Id":"755762963","IsPullRequest":false,"CreatedAt":"2020-12-03T02:24:31","Actor":"vsfeedback","Number":"3880","RawContent":null,"Title":"Interop.Microsoft.Office.*.dll missing on publish","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/InteropMicrosoft-missing-on-publish/1108259)._\n\n---\nI am using Visual Studio Enterprise 2019 16.6.3.\nIn a .NET Core 3.1 WPF solution there are libraries that use MS Office COM references. When I publish a WPF application via FolderProfile that references such a library, the Interop.Microsoft.Office.*.dll is missing in the publish directory. However, it is available in the build directory of the library.\nI have attached a small example. Just call\nmsbuild Exe\\Exe.csproj /t:restore /t:publish /p:Configuration=Release /p:Platform=x64 /p:PublishProfile=FolderProfile\n\n---\n### Original Comments\n\n#### Wolfgang Kordts on 7/9/2020, 11:33 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 7/10/2020, 10:39 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 10/30/2020, 02:25 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Mila Zhou[MSFT] on 11/3/2020, 05:02 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?<br>\nIf so, in order for us to investigate this further, could you please provide repro steps, a more detailed description of the faulty behavior and the actions you were taking when the issue appeared to help us better understand this scenario?<br>\nWe look forward to hearing from you!</p>\n\n#### Wolfgang Kordts on 11/4/2020, 02:49 PM: \n\n<p>I added a replicate example a long time ago. So it can be reproduced.<br>\nIn the meantime, in cooperation with another Microsoft employee, we have come to the conclusion that the Interop Dlls are not required in the delivery in order to run correctly.</p>\n\n#### Feedback Bot on 12/3/2020, 01:29 AM: \n\nThank you for reporting this issue to us. We have changed the title to better describe the problem so others can find and engage with it.\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3880","RelatedDescription":"Open issue \"Interop.Microsoft.Office.*.dll missing on publish\" (#3880)"},{"Id":"755690895","IsPullRequest":true,"CreatedAt":"2020-12-02T23:36:34","Actor":"dotnet-maestro[bot]","Number":"3879","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201202.1\r\n- **Date Produced**: 12/2/2020 11:27 PM\r\n- **Commit**: 141b5047068579bfae582a737598fbd6370a8127\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20580.5 to 6.0.0-alpha.1.20602.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20580.5 to 6.0.0-alpha.1.20602.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/9c2a2b3...141b504\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3879","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/winforms\" (#3879)"},{"Id":"755555916","IsPullRequest":true,"CreatedAt":"2020-12-02T19:36:58","Actor":"Nils-Berghs","Number":"3878","RawContent":null,"Title":"Implemented the RecognizesAccessKey property in the label and its def…","State":"open","Body":"Implemented the RecognizesAccessKey property in the label and its default styles #3877 ","Url":"https://github.com/dotnet/wpf/pull/3878","RelatedDescription":"Open PR \"Implemented the RecognizesAccessKey property in the label and its def…\" (#3878)"},{"Id":"755555297","IsPullRequest":false,"CreatedAt":"2020-12-02T19:35:57","Actor":"Nils-Berghs","Number":"3877","RawContent":null,"Title":"RecognizesAccessKey hard coded to true in Label style","State":"open","Body":"The \"RecognizesAccessKey\" of the content presenter of the default label style is hard coded to true (and has been for many years). As a result the first underscore of a label disappears (I have ran into this problem more than I have seen users actually use a mnemmonic).\r\n\r\nMultiple work arounds for that problem exist:\r\n- Using a TextBlock: This is the most acceptable solution but applying an implicit style to the TextBlock is not possible as it is used in other components/style libraries as well.\r\n- Override the default Label style: Works as well but, you have to remember to do it in every application, and if you are using an external style library this becomes very difficult.\r\n- Add an extra underscore to the text: this is bad beyond words.\r\n","Url":"https://github.com/dotnet/wpf/issues/3877","RelatedDescription":"Open issue \"RecognizesAccessKey hard coded to true in Label style\" (#3877)"},{"Id":"755535073","IsPullRequest":false,"CreatedAt":"2020-12-02T19:03:45","Actor":"MichaeIDietrich","Number":"3876","RawContent":null,"Title":"Building WPF projects is not deterministic with dotnet.exe","State":"open","Body":"* .NET Core version: 5.0.100\r\n* Windows version: 19042.630\r\n* MSBuild .NET Framework version: 16.8.2.56705\r\n \r\n **Problem description:**\r\n\r\n Building a **WPF** .NET Core project with `dotnet.exe` is not deterministic, but building it with `msbuild.exe` is deterministic as expected.\r\n This issue also breaks incremental builds.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n Each execution of `dotnet.exe build` produces assemblies that are binary different.\r\n \r\n **Expected behavior:**\r\n\r\n Building a .NET Core project should result in identical output as long as the input did not change.\r\n SDK style projects define `<Deterministic>true</Deterministic>` by default, which is meant \r\n to produce identical output each build.\r\n \r\n **Minimal repro:**\r\n\r\n1. `dotnet new wpf --name deterministic_bug`\r\n2. `cd deterministic_bug`\r\n3. `dotnet build -p:OutputPath=bin\\dotnet_1\\ -p:IntermediateOutputPath=obj\\dotnet_1\\`\r\n4. `dotnet build -p:OutputPath=bin\\dotnet_2\\ -p:IntermediateOutputPath=obj\\dotnet_2\\`\r\n5. `msbuild /restore -p:OutputPath=bin\\msbuild_1\\ -p:IntermediateOutputPath=obj\\msbuild_1\\`\r\n6. `msbuild /restore -p:OutputPath=bin\\msbuild_2\\ -p:IntermediateOutputPath=obj\\msbuild_2\\`\r\n\r\nCompare `bin\\dotnet_1\\deterministic_bug.dll` to `bin\\dotnet_2\\deterministic_bug.dll`\r\n>_both are different_\r\n\r\nCompare `bin\\msbuild_1\\deterministic_bug.dll` to `bin\\msbuild_2\\deterministic_bug.dll`\r\n>_both are identical_\r\n\r\n**Deeper look**\r\n\r\nIt seems to be a problem with the XAML markup compiler. \r\nIf you check `obj\\dotnet_1\\deterministic_bug_MarkupCompile.cache` and `obj\\dotnet_2\\deterministic_bug_MarkupCompile.cache`, you can see that they differ from line 12 to 15. Those lines represent hashes over `<Page>`-items, references, `<Content>`-files and `cs`-files. Check out `GenerateCacheForFileList` from [CompilerState.cs](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationBuildTasks/MS/Internal/Tasks/CompilerState.cs).\r\nThe hash generation seems to be straightforward, but for some reason the result is not stable and differs everytime in .NET Core.\r\n\r\nThe same does not reproduce for `msbuild.exe`. Comparing the content of `obj\\msbuild_1\\` and  `obj\\msbuild_2\\` result in identical files.","Url":"https://github.com/dotnet/wpf/issues/3876","RelatedDescription":"Open issue \"Building WPF projects is not deterministic with dotnet.exe\" (#3876)"},{"Id":"755506733","IsPullRequest":false,"CreatedAt":"2020-12-02T15:33:48","Actor":"SWarnberg","Number":"3875","RawContent":null,"Title":"Publishing single file WPF application breaks if app.config is used ","State":"open","Body":"If you publish a WPF application in .NET 5, and this application is using an App.config, the application crashes when the framework is trying to find this file, even though the file is part of the published output.\r\nThe following settings are configured in project:\r\n```\r\n<PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n  <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n  <SelfContained>true</SelfContained>\r\n  <PublishSingleFile>true</PublishSingleFile>\r\n  <PublishReadyToRun>true</PublishReadyToRun>\r\n  <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>\r\n  <DebugType>none</DebugType>\r\n  <DebugSymbols>false</DebugSymbols>\r\n</PropertyGroup>\r\n```\r\nAnd when publishing the project with `dotnet publish -c Release`, then the output looks good:\r\n![image](https://user-images.githubusercontent.com/26246346/100893197-61d7e680-34bb-11eb-9902-2fda4824b070.png)\r\nCorrect name of the config file is there.\r\n\r\nHowever, when the app is trying to access any setting in this file with ConfigurationManager, the app crashes:\r\n\r\n```\r\nApplication: WpfNet5App.exe\r\nCoreCLR Version: 5.0.20.51904\r\n.NET Version: 5.0.0\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.IO.FileNotFoundException: The system cannot find the file specified. (0x80070002)\r\n   at System.Reflection.RuntimeModule.GetFullyQualifiedName()\r\n   at System.Reflection.RuntimeModule.get_Name()\r\n   at System.Configuration.ClientConfigPaths..ctor(String exePath, Boolean includeUserConfig)\r\n   at System.Configuration.ClientConfigPaths.GetPaths(String exePath, Boolean includeUserConfig)\r\n   at System.Configuration.Internal.ConfigurationManagerInternal.System.Configuration.Internal.IConfigurationManagerInternal.get_ExeProductName()\r\n   at System.Configuration.ApplicationSettingsBase.get_Initializer()\r\n   at System.Configuration.ApplicationSettingsBase.CreateSetting(PropertyInfo propertyInfo)\r\n   at System.Configuration.ApplicationSettingsBase.EnsureInitialized()\r\n   at System.Configuration.ApplicationSettingsBase.get_Properties()\r\n   at System.Configuration.SettingsBase.GetPropertyValueByName(String propertyName)\r\n   at System.Configuration.SettingsBase.get_Item(String propertyName)\r\n   at System.Configuration.ApplicationSettingsBase.GetPropertyValue(String propertyName)\r\n   at System.Configuration.ApplicationSettingsBase.get_Item(String propertyName)\r\n   at WpfNet5App.Properties.Settings.get_HelloMessage()\r\n   at WpfNet5App.MainWindow.Button_Click(Object sender, RoutedEventArgs e)\r\n```\r\n\r\nAttaching the super-simple example.\r\n[WpfNet5App.zip](https://github.com/dotnet/core/files/5630310/WpfNet5App.zip)","Url":"https://github.com/dotnet/wpf/issues/3875","RelatedDescription":"Open issue \"Publishing single file WPF application breaks if app.config is used \" (#3875)"},{"Id":"754634287","IsPullRequest":false,"CreatedAt":"2020-12-01T18:43:00","Actor":"Perpete","Number":"3874","RawContent":null,"Title":"ContextMenu / MenuItem, Dpi in PerMonitorV2 mode, scaling error in WPF","State":"open","Body":"Hello,\r\nUsing dpi sensitivity in PerMonitorV2 mode, I noticed an issue with scaling the 1st MenuItem list of a ContextMenu when switching from a 100% scale monitor to a 2nd monitor at scale 150%.\r\n\r\nI have found:\r\n1. There is no scaling of the 1st MenuItem list.\r\n2. The MenuItems contained in a MenuItem from the 1st list are correctly scaled.\r\n\r\nFramework 4.8 and net .5 give the same error.\r\nIf I don't use dpi sensitivity in PerMonitorV2 mode, scaling works fine.\r\n\r\nI am attaching a zip file with a test program with which you can test and verify the problem.\r\n[WpfPopupNet5.zip](https://github.com/dotnet/wpf/files/5624695/WpfPopupNet5.zip)\r\n\r\n![PopupPerMonitorV2](https://user-images.githubusercontent.com/66659162/100782908-604fe500-340d-11eb-9b66-e1875b5af98b.gif)\r\n","Url":"https://github.com/dotnet/wpf/issues/3874","RelatedDescription":"Open issue \"ContextMenu / MenuItem, Dpi in PerMonitorV2 mode, scaling error in WPF\" (#3874)"},{"Id":"753893798","IsPullRequest":true,"CreatedAt":"2020-12-01T00:22:04","Actor":"dotnet-maestro[bot]","Number":"3873","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201130.5\r\n- **Date Produced**: 11/30/2020 11:42 PM\r\n- **Commit**: 9c2a2b3c747d394b31901cf31714f59ae932d87f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20580.4 to 6.0.0-alpha.1.20580.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20580.4 to 6.0.0-alpha.1.20580.5][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8401bb3...9c2a2b3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3873","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3873)"},{"Id":"753887852","IsPullRequest":true,"CreatedAt":"2020-12-01T00:02:06","Actor":"dotnet-maestro[bot]","Number":"3872","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201130.4\r\n- **Date Produced**: 11/30/2020 11:29 PM\r\n- **Commit**: 8401bb35e7585b2b67b02e31f396cce9ba603f72\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20580.3 to 6.0.0-alpha.1.20580.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20580.3 to 6.0.0-alpha.1.20580.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/65cf575...8401bb3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3872","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3872)"},{"Id":"753878871","IsPullRequest":true,"CreatedAt":"2020-11-30T23:51:17","Actor":"dotnet-maestro[bot]","Number":"3871","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201130.2\r\n- **Date Produced**: 11/30/2020 11:21 PM\r\n- **Commit**: 850a68ed7ad556f0e51c82ffeaaaba8f2490cf2c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20580.1 to 6.0.0-alpha.1.20580.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20580.1 to 6.0.0-alpha.1.20580.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/5bfad4e...850a68e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3871","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3871)"},{"Id":"753859421","IsPullRequest":true,"CreatedAt":"2020-11-30T23:02:56","Actor":"dotnet-maestro[bot]","Number":"3870","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201130.1\r\n- **Date Produced**: 11/30/2020 10:35 PM\r\n- **Commit**: 5bfad4e930aceceb96cced7a082c1feeda8aea22\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20579.2 to 6.0.0-alpha.1.20580.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20579.2 to 6.0.0-alpha.1.20580.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/1ddd8c4...5bfad4e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3870","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3870)"},{"Id":"753823234","IsPullRequest":true,"CreatedAt":"2020-11-30T21:47:24","Actor":"dotnet-maestro[bot]","Number":"3869","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.1 to 5.0.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201125.6\r\n- **Date Produced**: 11/26/2020 5:41 AM\r\n- **Commit**: 200d7409fd9078764eb840e431bc3649caf3ad56\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20575.3 to 5.0.1-servicing.20575.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20575.3 to 5.0.1-servicing.20575.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][2]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/660239b...200d740\r\n[2]: https://github.com/dotnet/runtime/compare/2767f44...b02e13a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3869","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3869)"},{"Id":"753191912","IsPullRequest":true,"CreatedAt":"2020-11-30T06:56:16","Actor":"dotnet-maestro[bot]","Number":"3868","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201129.2\r\n- **Date Produced**: 11/30/2020 6:06 AM\r\n- **Commit**: 1ddd8c457179a7b5be28b3cba8bb44f30cf15ee3\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20579.1 to 6.0.0-alpha.1.20579.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20579.1 to 6.0.0-alpha.1.20579.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/504a6c0...1ddd8c4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3868","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3868)"},{"Id":"753177764","IsPullRequest":true,"CreatedAt":"2020-11-30T06:30:29","Actor":"dotnet-maestro[bot]","Number":"3867","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201129.1\r\n- **Date Produced**: 11/30/2020 5:57 AM\r\n- **Commit**: 504a6c0283bc3c0edacafaf43d92e9ca77815bb1\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20576.1 to 6.0.0-alpha.1.20579.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20576.1 to 6.0.0-alpha.1.20579.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/afd350e...504a6c0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3867","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3867)"},{"Id":"752745005","IsPullRequest":false,"CreatedAt":"2020-11-28T18:56:03","Actor":"Perpete","Number":"3866","RawContent":null,"Title":"No WPF App (.NET) Project creation in Visual Basic with .NET 5.0","State":"open","Body":"Hello,\r\nAfter installing visual studio 16.8 and .NET 5.0, I wanted to create a WPF project with NET 5.0 in VB.\r\nI didn’t find the possibility of creating this project like in C #.\r\nIs this normal?\r\nDoes .NET 5.0 work with VB for a WPF project?\r\n\r\n![ProjectVB](https://user-images.githubusercontent.com/66659162/100523824-b9bcd780-31b3-11eb-892e-b005ee9d12a3.png)\r\n","Url":"https://github.com/dotnet/wpf/issues/3866","RelatedDescription":"Open issue \"No WPF App (.NET) Project creation in Visual Basic with .NET 5.0\" (#3866)"},{"Id":"752146150","IsPullRequest":false,"CreatedAt":"2020-11-27T10:25:42","Actor":"Rand-Random","Number":"3865","RawContent":null,"Title":"UseWpf should work with netframework as a TargetFramework","State":"open","Body":"After some headache trying to achieve a multitarget project with net47 and net5.0-windows.\r\nI would like to suggest that UseWpf should also work for net47.\r\n\r\nMy current project sadly has to look like this to make it \"work\".\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;net5.0-windows</TargetFrameworks>\r\n    <OutputType>WinExe</OutputType>\r\n    <RootNamespace>MyNamespace</RootNamespace>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net47' \">\r\n    <StartupObject>MyNamespace.App</StartupObject>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net5.0-windows' \">\r\n    <UseWPF>true</UseWPF>\r\n  </PropertyGroup>\r\n    <ItemGroup Condition=\" '$(TargetFramework)' == 'net47' \">\r\n    <!--\r\n    <EmbeddedResource Update=\"Properties\\Resources.resx\" Generator=\"ResXFileCodeGenerator\" LastGenOutput=\"Resources.Designer.cs\" />\r\n    <Compile Update=\"Properties\\Resources.Designer.cs\" DesignTime=\"True\" AutoGen=\"True\" DependentUpon=\"Resources.resx\" />\r\n\r\n    <None Update=\"Properties\\Settings.settings\" Generator=\"SettingsSingleFileGenerator\" LastGenOutput=\"Settings.Designer.cs\" />\r\n    <Compile Update=\"Properties\\Settings.Designer.cs\" DesignTime=\"True\" AutoGen=\"True\" DependentUpon=\"Settings.settings\">\r\n      <DesignTimeSharedInput>True</DesignTimeSharedInput>\r\n    </Compile>\r\n    -->\r\n\r\n    <Page Include=\"**\\*.xaml\" SubType=\"Designer\" Generator=\"MSBuild:Compile\" Exclude=\"App.xaml\" />\r\n    <Compile Update=\"**\\*.xaml.cs\" SubType=\"Code\" DependentUpon=\"%(Filename)\" />\r\n\r\n    <ApplicationDefinition Include=\"App.xaml\" SubType=\"Designer\" Generator=\"XamlIntelliSenseFileGenerator\" />\r\n    <Compile Update=\"App.xaml.cs\" SubType=\"Code\" DependentUpon=\"App.xaml\" />\r\n    \r\n    <Reference Include=\"System.Printing\" />\r\n    <Reference Include=\"System.Windows\" />\r\n    <Reference Include=\"System.Windows.Forms\" />\r\n    <Reference Include=\"PresentationCore\" />\r\n    <Reference Include=\"PresentationFramework\" />\r\n    <Reference Include=\"PresentationFramework.Aero\" />\r\n    <Reference Include=\"PresentationFramework.Aero2\" />\r\n    <Reference Include=\"PresentationFramework.Luna\" />\r\n    <Reference Include=\"PresentationUI\">\r\n      <HintPath>C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationUI\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationUI.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"ReachFramework\" />\r\n    <Reference Include=\"System.Xaml\" />\r\n    <Reference Include=\"WindowsBase\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nMy project file is a strange combination of this stackoverflow question\r\nhttps://stackoverflow.com/questions/43693591/how-to-migrate-wpf-projects-to-the-new-vs2017-format\r\n\r\nOther question, why is it necessary for me to provide the `HintPath` only for the assembly `PresentationUI`?\r\nAll the other assemblies can be found without an issue, but if I would drop the `HintPath` I would get a \r\n\r\n> 14>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2123,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"PresentationUI\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n\r\nI am not sure if that is the correct place to post this issue.\r\nIf possible and I am wrong here move the issue to the correct place.","Url":"https://github.com/dotnet/wpf/issues/3865","RelatedDescription":"Open issue \"UseWpf should work with netframework as a TargetFramework\" (#3865)"},{"Id":"751972955","IsPullRequest":true,"CreatedAt":"2020-11-27T05:52:02","Actor":"dotnet-maestro[bot]","Number":"3864","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201126.1\r\n- **Date Produced**: 11/27/2020 4:22 AM\r\n- **Commit**: afd350e606ce9c1332f7f72edf19a648b7062de0\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.9 to 6.0.0-alpha.1.20576.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.9 to 6.0.0-alpha.1.20576.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/acdad50...afd350e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3864","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3864)"},{"Id":"751476048","IsPullRequest":false,"CreatedAt":"2020-11-26T10:30:36","Actor":"duchacekjan","Number":"3863","RawContent":null,"Title":"Localization of WPF standard components","State":"open","Body":"* .NET Core Version: 3.1.9\r\n* Windows version: Windows 10 1909 (18363.1198)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nWpf standard components  in net Core does not respect CurrentCulture(or CurrentUICulture) while in net48 does.\r\n **Actual behavior:** \r\nCreated WPF appliaction add i.e. FlowDocumentReader with some Document with data. Set CultureInfo on thread or Language on framework element to desired culture. In my example \"cs-CZ\". Then when you try mouse over find button, there is tooltip in English not localized. Same behaviour on other components in FlowDocumentReader. Same goes for watermarks etc\r\n When you try the same in net48 everything works.\r\n **Expected behavior:**\r\n All resources will be localized. I.e. \"Find\" should be \"Najít\"\r\nSame behaviour as in net48\r\n **Minimal repro:**\r\nI created sample to demonstrate it. To see correct behaviour switch order of TargetFrameworks in csproj so net48 is first. Incorrect behaviour will show when order of TargetFrameworks is netcoreapp3.1 is on the first place.\r\nhttps://github.com/duchacekjan/NetCoreComponentsLocalization","Url":"https://github.com/dotnet/wpf/issues/3863","RelatedDescription":"Open issue \"Localization of WPF standard components\" (#3863)"},{"Id":"751417914","IsPullRequest":false,"CreatedAt":"2020-11-26T09:09:45","Actor":"mikernet","Number":"3862","RawContent":null,"Title":"Editing a copy of the default ScrollViewer template does not work","State":"open","Body":"* .NET Version: 5.0 release\r\n* Windows version: 2004 build 19041.630\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\n \r\nFor some reason, the default `ScrollViewer` template does not allow you to right-click and \"Edit a Copy\" on .NET Core / .NET 5. This works fine on .NET 4.8 WPF.","Url":"https://github.com/dotnet/wpf/issues/3862","RelatedDescription":"Open issue \"Editing a copy of the default ScrollViewer template does not work\" (#3862)"},{"Id":"751388031","IsPullRequest":true,"CreatedAt":"2020-11-26T08:51:16","Actor":"dotnet-maestro[bot]","Number":"3861","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.9\r\n- **Date Produced**: 11/26/2020 8:15 AM\r\n- **Commit**: acdad50907a701149bf6833a17f62d9198c2bade\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.8 to 6.0.0-alpha.1.20575.9][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.8 to 6.0.0-alpha.1.20575.9][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/9aa0089...acdad50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3861","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3861)"},{"Id":"751342039","IsPullRequest":true,"CreatedAt":"2020-11-26T08:00:14","Actor":"dotnet-maestro[bot]","Number":"3860","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.8\r\n- **Date Produced**: 11/26/2020 6:57 AM\r\n- **Commit**: 9aa008926ec0258ee2f1398dc7d62068f0e2bbe4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.7 to 6.0.0-alpha.1.20575.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.7 to 6.0.0-alpha.1.20575.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/896304d...9aa0089\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3860","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3860)"},{"Id":"751320861","IsPullRequest":true,"CreatedAt":"2020-11-26T06:39:48","Actor":"dotnet-maestro[bot]","Number":"3859","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.7\r\n- **Date Produced**: 11/26/2020 6:15 AM\r\n- **Commit**: 896304d1253f304d4ca5c4392cb5749309df107a\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.5 to 6.0.0-alpha.1.20575.7][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.5 to 6.0.0-alpha.1.20575.7][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8e86ffb...896304d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3859","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3859)"},{"Id":"751298628","IsPullRequest":true,"CreatedAt":"2020-11-26T05:58:53","Actor":"dotnet-maestro[bot]","Number":"3858","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.5\r\n- **Date Produced**: 11/26/2020 5:23 AM\r\n- **Commit**: 8e86ffb7966188a174f2b56ea48ee3c7df8944b3\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.4 to 6.0.0-alpha.1.20575.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.4 to 6.0.0-alpha.1.20575.5][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/0a74e6d...8e86ffb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3858","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3858)"},{"Id":"751184860","IsPullRequest":true,"CreatedAt":"2020-11-26T00:31:41","Actor":"dotnet-maestro[bot]","Number":"3857","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201125.3\r\n- **Date Produced**: 11/25/2020 11:52 PM\r\n- **Commit**: 660239b5f335cf41ddbb12ff040adbc5d355378f\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20574.1 to 5.0.1-servicing.20575.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20574.1 to 5.0.1-servicing.20575.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a5b0107...660239b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3857","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3857)"},{"Id":"751183305","IsPullRequest":true,"CreatedAt":"2020-11-26T00:26:29","Actor":"dotnet-maestro[bot]","Number":"3856","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.4\r\n- **Date Produced**: 11/25/2020 11:48 PM\r\n- **Commit**: 0a74e6dab21e208112348b55718563d9db7798fe\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.2 to 6.0.0-alpha.1.20575.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.2 to 6.0.0-alpha.1.20575.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/36f3feb...0a74e6d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3856","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3856)"},{"Id":"751058043","IsPullRequest":false,"CreatedAt":"2020-11-25T19:08:06","Actor":"ben-reilly","Number":"3855","RawContent":null,"Title":"Inconsistencies and unexpected results when binding to objects with explicit interface implementations","State":"open","Body":"* .NET Core Version: **3.1**\r\n* Windows version: **1909**\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: **Yes**\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No, although IntelliSense for the XAML code actually does the right thing in this case, treating the property as being the static type as opposed to the runtime type, which makes sense, as it can't know the runtime type yet. 🙂\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nWhen a class has an explicit interface implementation of a property, XAML bindings don't match the behaviour of C# code, failing to return the interface implementation when bound to properties of the interface type.\r\n \r\n **Actual behavior:**\r\n\r\nViewmodel properties of type `ISomeInterface`, are treated as their runtime type in XAML bindings, rather than as the interface type. As a result, explicit interface implementations of properties are not accessible unless the bound property is cast in a particular way.\r\n\r\n **Expected behavior:**\r\n\r\nA bound property in XAML should be treated as being of the property type, not its underlying runtime type. This would make it consistent with C# code.\r\n \r\n **Minimal repro:**\r\n\r\nThe meaningful parts look like this:\r\n```cs\r\npublic interface IData\r\n{\r\n    public string Name { get; }\r\n    public string OnlyOnInterface { get; }\r\n}\r\n\r\npublic class Data : IData\r\n{\r\n    string IData.Name { get; } = \"Interface Property\";\r\n    string IData.OnlyOnInterface { get; } = \"Interface-Only Property\";\r\n\r\n    public string Name { get; } = \"Class Property\";\r\n\r\n    // Including an additional property so that it's clear in the XAML editor which type it\r\n    // thinks the bound object is: it won't show this property if it think the object is of\r\n    // type IData.\r\n    public int OtherProperty { get; } = 123;\r\n}\r\n\r\npublic class ViewModel\r\n{\r\n    public IData DataAsInterface { get; } = new Data();\r\n    public Data DataAsClass { get; } = new Data();\r\n\r\n    public string CSharpInterfaceName { get; }\r\n    public string CSharpClassName { get; }\r\n    public string CSharpCastClassName { get; }\r\n\r\n    public ViewModel()\r\n    {\r\n        CSharpInterfaceName = DataAsInterface.Name;\r\n        CSharpClassName = DataAsClass.Name;\r\n        CSharpCastClassName = ((IData)DataAsClass).Name;\r\n    }\r\n}\r\n```\r\n\r\nDemo project here: https://github.com/ben-reilly/wpf-explicit-interface-binding-bug\r\n\r\n---\r\n\r\nBelow is an image from the demo project linked above. To the left is the content of the `{Binding ...}` which is used for the text block to the right; the right side shows which of the implementations of the `Name` property is being loaded: the one for the class or the explicit interface implementation.\r\n\r\nFor reference and comparison, nos. 7 through 9 show how C# code determines the value of the `Name` property under three different circumstances (see the ViewModel constructor in the demo project).\r\n\r\n![image](https://user-images.githubusercontent.com/1147378/100271326-8b6e9c00-2f16-11eb-9059-95d1a242eb17.png)\r\n\r\nNotice in particular that...\r\n\r\n- No. 0 doesn't load anything, giving a runtime error because `Data` doesn't have a property with the name `OnlyOnInterface`, despite the fact that the viewmodel property is of type `IData`, which has such a property.\r\n- Even though no. 1 is bound to a property of type `IData`, it returns the class implementation of the `Name` property, rather than the explicit interface implementation. In C# code, a variable of type `IData` would return the interface implementation of the property (see nos. 7 and 9).\r\n- Explicitly casting to the interface works for the class-typed property (no. 5) but not for the interface-typed property (no. 2)...\r\n- ...except when the binding path is prepended with `Path=` (no. 3), though that is not required for the class-typed property (nos. 5 and 6).\r\n\r\nIn my humble opinion, the results for nos. 0, 1, and 2 are incorrect.\r\n\r\nIt seems surprising to me that when binding to a viewmodel property of type `IData` it is treated as its runtime type, `Data`; that is not how types work in C# (no. 7), so I wouldn't expect it to work that way in XAML bindings either.\r\n\r\nAdditionally, it is surprising that no. 2 and no. 5 are different, especially given that nos. 5 and 6 match.","Url":"https://github.com/dotnet/wpf/issues/3855","RelatedDescription":"Open issue \"Inconsistencies and unexpected results when binding to objects with explicit interface implementations\" (#3855)"},{"Id":"750777054","IsPullRequest":true,"CreatedAt":"2020-11-25T13:29:44","Actor":"dotnet-maestro[bot]","Number":"3854","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.2\r\n- **Date Produced**: 11/25/2020 12:21 PM\r\n- **Commit**: 36f3feb00295caf213e6057171896926450290b7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.1 to 6.0.0-alpha.1.20575.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.1 to 6.0.0-alpha.1.20575.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/9b140c0...36f3feb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3854","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3854)"},{"Id":"750692935","IsPullRequest":true,"CreatedAt":"2020-11-25T10:53:51","Actor":"dotnet-maestro[bot]","Number":"3853","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.1\r\n- **Date Produced**: 11/25/2020 10:20 AM\r\n- **Commit**: 9b140c0952647840d8f1b6984a812c548b002738\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20573.3 to 6.0.0-alpha.1.20575.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20573.3 to 6.0.0-alpha.1.20575.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/12b8059...9b140c0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3853","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3853)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-04T05:30:46.53864Z","RunDurationInMilliseconds":566}