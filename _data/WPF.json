{"Data":{"GitHub":{"Issues":[{"Id":"1675869623","IsPullRequest":true,"CreatedAt":"2023-04-20T02:25:49","Actor":"dotnet-maestro[bot]","Number":"7740","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230418.5\r\n- **Date Produced**: April 19, 2023 11:04:19 PM UTC\r\n- **Commit**: b3a0efc78e82ab0deba0d25d6f196f996e13bab5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23213.11 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23213.11 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23213.11 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Management**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23218.5][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f3a6aa1d43...b3a0efc78e\r\n[2]: https://github.com/dotnet/runtime/compare/42c6bcf207...9672d82ffa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7740)","Url":"https://github.com/dotnet/wpf/pull/7740","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7740)"},{"Id":"1675489999","IsPullRequest":false,"CreatedAt":"2023-04-19T19:24:47","Actor":"nesakobi","Number":"7739","RawContent":null,"Title":"Right clicking on a system menu item (Move, Size, Minimize ....) does not work for a window with custom WindowChrome","State":"open","Body":"### Description\n\nHere is the repo - a simple illustration of the issue https://github.com/nesakobi/window_chrome_wpf\r\nThere are 2 windows - on of them is the default Window without any styling and property changes. When the right mouse button is clicked on title bar of the window, the system menu becomes active and it is possible to click on menu items both left and right mouse clicks. Both types of clicks work in the same way. The second is a window with property \"WindowStyle = None\" and WindowChrome configured. Right clicking at the top of the window activates the system menu. Left-clicking on a menu item performs an action, while right clicking on an item does nothing. When there is a DataGrid and DataGrid has context menu,  right-clicking on the system menu items activates the DataGrid context menu.\r\n\r\n\r\n![context_menu](https://user-images.githubusercontent.com/41533598/233176151-c4eb8c01-53e5-421a-87a4-f246ae872d2c.png)\r\n\n\n### Reproduction Steps\n\n1. Create a style for window\r\n2. Set custom chrome and set the property WindowStyle = None\r\n3. Try opening the system menu by clicking on the window icon\r\n4. Right-click any menu item - Move, Size, Minimize, etc...\n\n### Expected behavior\n\nSystem menu - the right clicking on menu item should work the same as for window with WindowStyle = SingleBorderWindow\n\n### Actual behavior\n\nSystem menu - menu item does not work on right click.\r\n\r\nAlso it activates PreviewMouseRightButtonUp and MouseRightButtonUp for controls inside the window content (annoying behavior)\r\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\nTried both with .Net framework 4.8.1 and .Net 7.0\r\nOS: Microsoft Windows [Version 10.0.19044.2846]\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/7739","RelatedDescription":"Open issue \"Right clicking on a system menu item (Move, Size, Minimize ....) does not work for a window with custom WindowChrome\" (#7739)"},{"Id":"1675037599","IsPullRequest":true,"CreatedAt":"2023-04-19T14:34:38","Actor":"miloush","Number":"7738","RawContent":null,"Title":"Drag & Drop virtual files","State":"open","Body":"Fixes #6352. Requires API proposal.\r\n\r\n## Description\r\n\r\nThis is a new feature that allows WPF application to be both a drag source and a drop target for virtual files, i.e. support for CFSTR_FILECONTENTS and CFSTR_FILEDESCRIPTOR.\r\n\r\nThis enables WPF applications to accept attachments dropped or pasted from Outlook or shell namespaces (phones, cameras etc.) as well as files pasted from e.g. remote desktop. This also enables WPF applications to allow users copying or dragging UI elements from a Window and dropping them as files, attachments, etc. without creating temporary files first.\r\n\r\nThere is two parts to enable these scenarios. One is the support of getting and setting multi-part data objects, i.e. using `FORMATETC.lindex`. For compatibility reasons, this cannot be added to the `IDataObject` interface, so a new `IDataObjectWithIndex` is introduced that derives from `IDataObject` and all WPF types that implemented `IDataObject` now implement both. This is already a change worth merging on its own, enabling developers to implement the above scenarios with a reasonable effort (replaces #6353).\r\n\r\nThe second part is the public methods that allow high level access to the feature. Currently on both `DataObject` and `Clipboard`, these are:\r\n\r\n* `bool ContainsFileGroup()`\r\n* `FileGroup GetFileGroup()`\r\n* `void SetFileGroup(FileGroup group)`\r\n\r\nTwo new types are introduced, `System.Windows.FileDescriptor`, roughly corresponding to [FILEDESCRIPTORW](https://learn.microsoft.com/en-us/windows/win32/api/shlobj_core/ns-shlobj_core-filedescriptorw) and `System.Windows.FileGroup`, which is technically a list of file descriptors paired with corresponding streams. The `FileGroup` holds either streams supplied by developer or a reference to `IDataObject` that provides the streams on demand.\r\n\r\nWhile file groups can be backed up by physical files, there is no convenience methods to add physical files to the group at the moment, but developers can do that manually.\r\n\r\nFor low-level access, two new data formats are defined and registered, `DataFormats.FileContents` which returns a `Stream` and `DataFormats.FileGroupDescriptor` which returns a collection of `FileDescriptor`s.\r\n\r\nFeedback on the design welcome.\r\n\r\n## Usage\r\n\r\nCopy virtual files into clipboard:\r\n\r\n```C#\r\nFileGroup group = new FileGroup();\r\ngroup.Add(\"E.txt\", Encoding.UTF8.GetBytes(\"EHEHEHE\"));\r\ngroup.Add(\"F.txt\", Encoding.UTF8.GetBytes(\"FFFFLUFF\"));\r\nClipboard.SetFileGroup(group);\r\n```\r\n\r\nDrag virtual files:\r\n\r\n```C#\r\nprivate void OnMouseMove(object sender, MouseEventArgs e)\r\n{\r\n    if (e.LeftButton == MouseButtonState.Pressed)\r\n    {\r\n        FileGroup group = new FileGroup();\r\n        group.Add(\"E.txt\", Encoding.UTF8.GetBytes(\"EHEHEHE\"));\r\n        group.Add(\"F.txt\", Encoding.UTF8.GetBytes(\"FFFFLUFF\"));\r\n\r\n        DataObject dataObject = new DataObject();\r\n        dataObject.SetFileGroup(group);\r\n        DragDrop.DoDragDrop(this, dataObject, DragDropEffects.All);\r\n    }\r\n}\r\n```\r\n\r\nSave dropped virtual files to the current directory:\r\n\r\n```C#\r\nprivate void OnDrop(object sender, DragEventArgs e)\r\n{\r\n    DataObject dataObject = (DataObject)e.Data;\r\n    if (dataObject.ContainsFileGroup())\r\n    {\r\n        FileGroup group = dataObject.GetFileGroup();\r\n\r\n        foreach (var file in group)\r\n        {\r\n            if (file.Key.IsDirectory)\r\n                Directory.CreateDirectory(file.Key.FileName);\r\n\r\n            else \r\n                using (FileStream stream = File.Create(file.Key.FileName))\r\n                    file.Value.CopyTo(stream);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Remaining tasks\r\n\r\n- [ ] API review\r\n- [ ] XML comments on new classes\r\n- [ ] SR for exceptions\r\n\r\n## Testing\r\n\r\nBuilt and tested using .NET 8.0.100-preview.3.23178.7 win-x86:\r\n- dragging virtual files using both FileGroup and SetData from WPF app to Outlook, Windows Explorer and itself\r\n- dragging virtual files and folders using FileGroup from WPF to Outlook, Windows Explorer and itself\r\n- copying virtual files using FileGroup and pasting them into Outlook and Windows Explorer\r\n- dropping attachments from Outlook into WPF app\r\n- pasting files from Remote Desktop into WPF app\r\n- taking FileGroup from clipboard and DoDragDrop\r\n- taking FileGroup from drop and setting it to clipboard\r\n\r\n## Risk\r\n\r\n\"DataObject save any to IStream\" commit has changes to existing behaviour, namely, \"InkSerializedFormat\" allocated byte array, read the stream into the byte array and then wrote the byte array into the destination stream. After the changes, the data are copied stream to stream using a buffer of 81920 bytes.\r\n\r\nOtherwise everything else should be a new feature.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7738)","Url":"https://github.com/dotnet/wpf/pull/7738","RelatedDescription":"Open PR \"Drag & Drop virtual files\" (#7738)"},{"Id":"1673452733","IsPullRequest":true,"CreatedAt":"2023-04-18T16:45:47","Actor":"dotnet-maestro[bot]","Number":"7737","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230417.1\r\n- **Date Produced**: April 17, 2023 4:50:34 PM UTC\r\n- **Commit**: cb54ca21431ee8d96f91abfbc42237bcb001f9d1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/fb14cae30e...cb54ca2143\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7737)","Url":"https://github.com/dotnet/wpf/pull/7737","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7737)"},{"Id":"1668437261","IsPullRequest":true,"CreatedAt":"2023-04-18T07:00:00","Actor":"dotnet-maestro[bot]","Number":"7725","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230413.11\r\n- **Date Produced**: April 14, 2023 2:29:06 AM UTC\r\n- **Commit**: f3a6aa1d4313472705cf3f00515a496c44552b10\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23212.10 to 8.0.0-preview.4.23213.11][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23212.10 to 8.0.0-preview.4.23213.11][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23212.10 to 8.0.0-preview.4.23213.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Management**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23206.2 to 8.0.0-preview.4.23213.5][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/0ab0d82c53...f3a6aa1d43\r\n[2]: https://github.com/dotnet/runtime/compare/2c8cb129ed...42c6bcf207\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7725)","Url":"https://github.com/dotnet/wpf/pull/7725","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7725)"},{"Id":"1670945119","IsPullRequest":true,"CreatedAt":"2023-04-18T06:36:38","Actor":"rchauhan18","Number":"7731","RawContent":null,"Title":"Disable warnings CS0672, SYSLIB00(11,50,51)","State":"closed","Body":"Disable warnings. \r\nCS0672 : https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0672\r\nSYSLIB0011 : https://learn.microsoft.com/en-us/dotnet/fundamentals/syslib-diagnostics/syslib0011\r\nSYSLIB0051 : obsolete: 'This API supports obsolete formatter-based serialization. It should not be called or extended by application code.'\r\nSYSLIB0050: obsolete: 'Formatter-based serialization is obsolete and should not be used.'","Url":"https://github.com/dotnet/wpf/pull/7731","RelatedDescription":"Closed or merged PR \"Disable warnings CS0672, SYSLIB00(11,50,51)\" (#7731)"},{"Id":"1671904338","IsPullRequest":false,"CreatedAt":"2023-04-17T20:16:19","Actor":"DrMaxP","Number":"7736","RawContent":null,"Title":"Using XAML for my own UI framework","State":"open","Body":"So, this might be somewhat off topic, but I'm trying to find places where people in the know might have a view on this. I've used WPF for many years (10+) but now do VR development in Unity. I'd like to adopt a XAML based markup language for my own UI system (for procedurally building 3D UIs in Unity) and am not sure how to approach this. Ideally I'd like to leverage support in the .NET framework or elsewhere to do the heavy lifting going from my markup/UI types using XAML ->my object graph but don't know where sensible to start. Clearly XAML as markup is used by more than WPF, so should be extensible - but how? Does anyone have any advice or can propose a good resource to look at.\r\n\r\nAlso, the level of support Unity exposes could also be an issue in implementing any suggestion.\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/wpf/issues/7736","RelatedDescription":"Open issue \"Using XAML for my own UI framework\" (#7736)"},{"Id":"1671695161","IsPullRequest":false,"CreatedAt":"2023-04-17T17:57:05","Actor":"miloush","Number":"7735","RawContent":null,"Title":"[API Proposal]: GlyphRun.TextFormattingMode","State":"open","Body":"### Background and motivation\r\n\r\n`GlyphRun.TextFormattingMode` is currently fixed to `TextFormattingMode.Ideal` when creating `GlyphRun` directly, while it already supports `TextFormattingModel.Display` via e.g. `TextBlock` (`TextOptions.TextFormattingMode`).\r\n\r\nThis makes it impossible to render individual glyphs into bitmap using `Display` formatting, which is required for GDI compatibility. Currently the property can be changed using reflection. This proposal is to add a public property to this field.\r\n\r\nOriginally proposed in #2638.\r\n\r\n### API Proposal\r\n\r\n```diff\r\npublic partial class GlyphRun : ISupportInitialize\r\n{\r\n    [ObsoleteAttribute(\"Use the PixelsPerDip override\", false)]\r\n    public GlyphRun();\r\n    public GlyphRun(float pixelsPerDip);\r\n    [CLSCompliantAttribute(false)]\r\n    [ObsoleteAttribute(\"Use the PixelsPerDip override\", false)]\r\n    public GlyphRun(GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, IList<ushort> glyphIndices, Point baselineOrigin, IList<double> advanceWidths, IList<Point> glyphOffsets, IList<char> characters, string deviceFontName, IList<ushort> clusterMap, IList<bool> caretStops, XmlLanguage language);\r\n    [CLSCompliantAttribute(false)]\r\n    public GlyphRun(GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, IList<ushort> glyphIndices, Point baselineOrigin, IList<double> advanceWidths, IList<Point> glyphOffsets, IList<char> characters, string deviceFontName, IList<ushort> clusterMap, IList<bool> caretStops, XmlLanguage language);\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(DoubleIListConverter))]\r\n    public IList<double> AdvanceWidths { get; set; }\r\n    public Point BaselineOrigin { get; set; }\r\n    public int BidiLevel { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(BoolIListConverter))]\r\n    public IList<bool> CaretStops { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(CharIListConverter))]\r\n    public IList<char> Characters { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(UShortIListConverter))]\r\n    public IList<ushort> ClusterMap { get; set; }\r\n    public string DeviceFontName { get; set; }\r\n    public double FontRenderingEmSize { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(UShortIListConverter))]\r\n    public IList<ushort> GlyphIndices { get; set; }\r\n    [CLSCompliantAttribute(false)]\r\n    [TypeConverterAttribute(typeof(PointIListConverter))]\r\n    public IList<Point> GlyphOffsets { get; set; }\r\n    public GlyphTypeface GlyphTypeface { get; set; }\r\n    public bool IsHitTestable { get; }\r\n    public bool IsSideways { get; set; }\r\n    public XmlLanguage Language { get; set; }\r\n    public float PixelsPerDip { get; set; }\r\n+   public TextFormattingMode TextFormattingMode { get; set; }\r\n    public Geometry BuildGeometry();\r\n    public Rect ComputeAlignmentBox();\r\n    public Rect ComputeInkBoundingBox();\r\n    public CharacterHit GetCaretCharacterHitFromDistance(double distance, out bool isInside);\r\n    public double GetDistanceFromCaretCharacterHit(CharacterHit characterHit);\r\n    public CharacterHit GetNextCaretCharacterHit(CharacterHit characterHit);\r\n    public CharacterHit GetPreviousCaretCharacterHit(CharacterHit characterHit);\r\n    void ISupportInitialize.BeginInit();\r\n    void ISupportInitialize.EndInit();\r\n}\r\n```\r\n\r\n\r\n### API Usage\r\n\r\n```c#\r\nvar run = new GlyphRun();\r\nrun.TextFormattingMode = TextFormattingMode.Display; // new\r\nrun.GlyphTypeface = _typeface;\r\nrun.FontRenderingEmSize = 12;\r\nrun.GlyphIndices = new ushort[] { 0 };\r\nrun.AdvanceWidths = new double[] { 0.0 };\r\n\r\nusing (DrawingContext context = visual.RenderOpen())\r\n{\r\n    context.DrawGlyphRun(Brushes.Black, run);\r\n}\r\n```\r\n\r\n\r\n### Alternative Designs\r\n\r\nAlternatively, the existing\r\n\r\n```C#\r\ninternal TryCreate(\r\n GlyphTypeface glyphTypeface, \r\n int bidiLevel,\r\n bool isSideways, \r\n double renderingEmSize, \r\n float pixelsPerDip, \r\n IList<ushort> glyphIndices,  \r\n Point baselineOrigin, \r\n IList<double> advanceWidths, \r\n IList<Point> glyphOffsets, \r\n IList<char> characters, \r\n string deviceFontName, \r\n IList<ushort> clusterMap, \r\n IList<bool> caretStops,\r\n XmlLanguage language, \r\n TextFormattingMode textLayout)\r\n```\r\n\r\ncoulde be made public.\r\n\r\nThere is also public `GlyphRun` constructors that take all the property values and pass them to `TryCreate`, but I don't see a need to add another constructor overload, since `GlyphRun` is `ISupportInitialize`\r\n\r\n### Risks\r\n\r\nLow, the `GlyphRun` already supports various `TextFormattingMode`s for other API.","Url":"https://github.com/dotnet/wpf/issues/7735","RelatedDescription":"Open issue \"[API Proposal]: GlyphRun.TextFormattingMode\" (#7735)"},{"Id":"1671639748","IsPullRequest":true,"CreatedAt":"2023-04-17T17:20:59","Actor":"miloush","Number":"7734","RawContent":null,"Title":"Avoid crashing if temporary file cannot be deleted","State":"open","Body":"Fixes #3138 \r\n\r\n## Description\r\n\r\nWhen a process does not have rights to delete a temporary file, it crashes, see #3138. The code already contains a catch for the case when the file is in use, so this PR adds another catch for when there are insufficient permissions for the deletion.\r\n\r\n## Customer Impact\r\n\r\nCustomers not taking this fix may experience crashes if they do not have permission to delete temporary files. An example of codepath that uses temporary files is `Cursor.LoadFromStream` or WinRT spell checker.\r\n\r\nThis affects Visual Studio as well.\r\n\r\n## Regression\r\n\r\nWinRT spell checker codepath has a regression from .NET Framework in that it used to check for file permissions and skip the delete if they were not granted. This PR restores the .NET Framework behavior in this case.\r\n\r\n## Testing\r\n\r\nBuilt using 8.0.0-preview.3.23174.8 and verified that a WPF application crashes when denied access to the temporary folder before the fix but not after the fix.\r\n\r\n## Risk\r\n\r\nLow. Temporary files will already stay behind in the case of crash, and failing to delete temporary files should not make an application to crash.\r\n","Url":"https://github.com/dotnet/wpf/pull/7734","RelatedDescription":"Open PR \"Avoid crashing if temporary file cannot be deleted\" (#7734)"},{"Id":"1671590811","IsPullRequest":false,"CreatedAt":"2023-04-17T16:49:42","Actor":"miloush","Number":"7733","RawContent":null,"Title":"[API Proposal]: File dialog controls","State":"open","Body":"### Background and motivation\r\n\r\nWPF applications are lacking the ability to customize file dialogs, which has become a common requirement.\r\n\r\nNotepad:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/10546952/232553853-507fa6e7-12a5-47a5-aeed-a4400f20368c.png\"/>\r\n\r\nVisual Studio:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/10546952/232554801-8dbf620b-e5a6-47bc-b48d-6dd8bc6ec28a.png\"/>\r\n\r\nOffice:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/10546952/232554608-9b089c09-ac8c-49ee-9403-153c5cfcd215.png\" />\r\n\r\nThis is a proposal for API to enable this functionality in WPF, notably `IFileDialogCustomize`.\r\n\r\nThere is a prototype PR using the proposed API, see #7256.\r\n\r\n### API Proposal\r\n\r\nFor class diagram see PR.\r\n\r\n**Changes to existing:**\r\n\r\n```diff\r\nnamespace Microsoft.Win32\r\n{\r\n    public abstract partial class CommonItemDialog : CommonDialog\r\n    {\r\n        protected CommonItemDialog() { }\r\n+       public FileDialogCancelButton CancelButton { get; }\r\n+       public FileDialogCustomControls CustomControls { get; }\r\n        public IList<FileDialogCustomPlace> CustomPlaces { get; set; }\r\n        public bool DereferenceLinks { get; set; }\r\n        public string InitialDirectory { get; set; }\r\n        public string FileName { get; set; }\r\n        public string[] FileNames { get; }\r\n+       public FileDialogOkButton OkButton { get; }\r\n        public bool RestoreDirectory { get; set; }\r\n        public string SafeFileName { get; }\r\n        public string[] SafeFileNames { get; }\r\n        public string Title { get; set; }\r\n        public bool ValidateNames { get; set; }\r\n        public event CancelEventHandler FileOk { add; remove; }\r\n        protected void OnFileOk(CancelEventArgs e) { }\r\n        public override void Reset() { }\r\n        protected override bool RunDialog(IntPtr hwndOwner);\r\n        public override string ToString();\r\n    }\r\n}\r\n```\r\n\r\n**All new, including the namespace:**\r\n\r\n```C#\r\nnamespace Microsoft.Win32.Controls\r\n{\r\n    public sealed partial class FileDialogCancelButton\r\n    {\r\n        public string CustomLabel { get; set; }\r\n    }\r\n    public sealed partial class FileDialogCheckButton : FileDialogText\r\n    {\r\n        public FileDialogCheckButton();\r\n        public FileDialogCheckButton(string label);\r\n        public FileDialogCheckButton(string label, bool isChecked);\r\n        public bool IsChecked { get; set; }\r\n        public event EventHandler Checked { add; remove; }\r\n        public event EventHandler Unchecked { add; remove; }\r\n        public override object Clone();\r\n    }\r\n    public sealed partial class FileDialogComboBox : FileDialogSelectorControl\r\n    {\r\n        public FileDialogComboBox();\r\n        public FileDialogComboBox(params string[] items);\r\n    }\r\n    public abstract partial class FileDialogControl : FileDialogControlBase, ICloneable\r\n    {\r\n        protected FileDialogControl();\r\n    }\r\n    public abstract partial class FileDialogControlBase : ICloneable\r\n    {\r\n        public FileDialogControlBase();\r\n        public int ID { get; }\r\n        public bool IsEnabled { get; set; }\r\n        public bool IsVisible { get; set; }\r\n        public object Tag { get; set; }\r\n        public abstract object Clone();\r\n        public void HideAndDisable();\r\n        public virtual void ShowAndEnable();\r\n    }\r\n    public partial class FileDialogControlCollection : Collection<FileDialogControl>\r\n    {\r\n        public FileDialogControlCollection();\r\n        public FileDialogControlCollection(params FileDialogControl[] controls);\r\n        public FileDialogCheckButton AddCheckButton(string label, bool isChecked = false);\r\n        public FileDialogComboBox AddComboBox(params string[] items);\r\n        public FileDialogEditBox AddEditBox(string text);\r\n        public FileDialogMenu AddMenu(string label, params string[] items);\r\n        public FileDialogPushButton AddPushButton(string label);\r\n        public FileDialogRadioButtonList AddRadioButtonList(params string[] items);\r\n        public FileDialogSeparator AddSeparator();\r\n        public FileDialogText AddText(string label);\r\n        protected override void ClearItems();\r\n        protected override void InsertItem(int index, FileDialogControl item);\r\n        protected override void RemoveItem(int index);\r\n        protected override void SetItem(int index, FileDialogControl item);\r\n    }\r\n    public sealed partial class FileDialogControlItem : FileDialogControlBase\r\n    {\r\n        public FileDialogControlItem();\r\n        public FileDialogControlItem(string text);\r\n        public string Text { get; set; }\r\n        public override object Clone();\r\n    }\r\n    public partial class FileDialogControlItemCollection : Collection<FileDialogControlItem>\r\n    {\r\n        internal FileDialogControlItemCollection();\r\n        public FileDialogControlItem Add(string itemText);\r\n        protected override void ClearItems();\r\n        protected override void InsertItem(int index, FileDialogControlItem item);\r\n        protected override void RemoveItem(int index);\r\n        protected override void SetItem(int index, FileDialogControlItem item);\r\n    }\r\n    public partial class FileDialogCustomControls : FileDialogControlCollection\r\n    {\r\n        internal FileDialogCustomControls();\r\n        public FileDialogControl Prominent { get; set; }\r\n        public FileDialogComboBox AddComboBoxWithLabel(string label, params string[] items);\r\n        public FileDialogEditBox AddEditBoxWithLabel(string label, string text);\r\n        public FileDialogRadioButtonList AddRadioButtonListWithLabel(string label, params string[] items);\r\n        public FileDialogVisualGroup AddVisualGroup(string label, params FileDialogControl[] controls);\r\n    }\r\n    public sealed partial class FileDialogEditBox : FileDialogControl\r\n    {\r\n        public FileDialogEditBox();\r\n        public FileDialogEditBox(string text);\r\n        public string Text { get; set; }\r\n        public override object Clone();\r\n    }\r\n    public partial class FileDialogItemEventArgs : EventArgs\r\n    {\r\n        public FileDialogItemEventArgs(FileDialogControlItem item);\r\n        public FileDialogControlItem Item { get; }\r\n    }\r\n    public abstract partial class FileDialogItemsControl : FileDialogControl\r\n    {\r\n        protected FileDialogItemsControl();\r\n        protected FileDialogItemsControl(string[] items);\r\n        public FileDialogControlItemCollection Items { get; }\r\n        public sealed override object Clone();\r\n    }\r\n    public sealed partial class FileDialogMenu : FileDialogItemsControl\r\n    {\r\n        public FileDialogMenu();\r\n        public FileDialogMenu(string label, params string[] items);\r\n        public string Label { get; set; }\r\n        public event EventHandler Activating { add; remove; }\r\n        public event EventHandler<FileDialogItemEventArgs> ItemSelected { add; remove; }\r\n    }\r\n    public sealed partial class FileDialogOkButton\r\n    {\r\n        public string CustomLabel { get; set; }\r\n        public FileDialogControlItemCollection Items { get; }\r\n        public bool RequiresInteraction { get; set; }\r\n        public int SelectedIndex { get; }\r\n        public FileDialogControlItem SelectedItem { get; }\r\n        public event EventHandler Activating { add; remove; }\r\n    }\r\n    public sealed partial class FileDialogPushButton : FileDialogText\r\n    {\r\n        public FileDialogPushButton();\r\n        public FileDialogPushButton(string label);\r\n        public event EventHandler Click { add; remove; }\r\n        public override object Clone();\r\n    }\r\n    public sealed partial class FileDialogRadioButtonList : FileDialogSelectorControl\r\n    {\r\n        public FileDialogRadioButtonList()\r\n        public FileDialogRadioButtonList(params string[] items)\r\n    }\r\n    public abstract partial class FileDialogSelectorControl : FileDialogItemsControl\r\n    {\r\n        protected FileDialogSelectorControl(params string[] items);\r\n        public int SelectedIndex { get; set; }\r\n        public FileDialogControlItem SelectedItem { get; set; }\r\n        public event EventHandler<FileDialogItemEventArgs> ItemSelected { add; remove; }\r\n    }\r\n    public sealed partial class FileDialogSeparator : FileDialogControl\r\n    {\r\n        public FileDialogSeparator();\r\n        public override object Clone();\r\n    }\r\n    public partial class FileDialogText : FileDialogControl\r\n    {\r\n        public FileDialogText();\r\n        public FileDialogText(string label);\r\n        public string Label { get; set; }\r\n        public override object Clone();\r\n    }\r\n    public sealed partial class FileDialogVisualGroup : FileDialogText\r\n    {\r\n        public FileDialogVisualGroup(string label);\r\n        public FileDialogVisualGroup(string label, params FileDialogControl[] controls);\r\n        public FileDialogControlCollection Controls { get; }\r\n        public void Add(FileDialogControl control);\r\n        public override object Clone();\r\n    }\r\n}\r\n```\r\n\r\n### API Usage\r\n\r\n```c#\r\nvar dialog = new SaveFileDialog();\r\ndialog.Filter = \"All files (*.*)|*.*\";\r\n\r\nvar radioGroup = new FileDialogVisualGroup(\"RadioButtonList\");\r\nradioGroup.Add(new FileDialogRadioButtonList(\"_radio 1\", \"r_adio 2\", \"ra_dio 3\"));\r\ndialog.CustomControls.Add(radioGroup);\r\n\r\nvar checkGroup = new FileDialogVisualGroup(\"CheckButtons\");\r\ncheckGroup.Add(new FileDialogCheckButton(\"_check 1\"));\r\ncheckGroup.Add(new FileDialogCheckButton(\"c_heck 2\", false));\r\ncheckGroup.Add(new FileDialogCheckButton(\"chec_k 3\", true));\r\ndialog.CustomControls.Add(checkGroup);\r\n\r\nvar menuGroup = new FileDialogVisualGroup(\"Menus and separator\");\r\nmenuGroup.Add(new FileDialogMenu(\"_menu 1\", \"item _1\", \"item _2\"));\r\nmenuGroup.Add(new FileDialogSeparator());\r\nmenuGroup.Add(new FileDialogMenu(\"m_enu 2\", \"item\"));\r\ndialog.CustomControls.Add(menuGroup);\r\n\r\nvar comboGroup = new FileDialogVisualGroup(\"ComboBoxes\");\r\ncomboGroup.Add(new FileDialogComboBox(\"item _1\", \"item &2\", \"item 3\"));\r\ncomboGroup.Add(new FileDialogComboBox(\"item _1\", \"item &2\", \"item 3\") { SelectedIndex = 1 });\r\ndialog.CustomControls.Add(comboGroup);\r\n\r\nvar textGroup = new FileDialogVisualGroup(\"Text and EditBo_x\");\r\ntextGroup.Add(new FileDialogText(\"Generic _label\"));\r\ntextGroup.Add(new FileDialogEditBox(\"a text box 😊\"));\r\ndialog.CustomControls.Add(textGroup);\r\n\r\nvar pushButton = new FileDialogPushButton(\"A button not in a _group\");\r\npushButton.Click += delegate { MessageBox.Show(\"Clicked!\"); };\r\ndialog.CustomControls.Add(pushButton);\r\n            \r\nvar prominentGroup = new FileDialogVisualGroup(\"Pro_minent control\", new FileDialogComboBox());\r\ndialog.CustomControls.Add(prominentGroup);\r\ndialog.CustomControls.Prominent = prominentGroup;\r\n\r\ndialog.OkButton.Items.Add(\"_Add\");\r\ndialog.OkButton.Items.Add(\"Add a_ll\");\r\ndialog.CancelButton.CustomLabel = \"_Done\";\r\n\r\ndialog.ShowDialog();\r\n```\r\n\r\n### Alternative Designs\r\n\r\n_No response_\r\n\r\n### Risks\r\n\r\nLow from the API surface perspective, this is all new functionality not changing the existing behavior.","Url":"https://github.com/dotnet/wpf/issues/7733","RelatedDescription":"Open issue \"[API Proposal]: File dialog controls\" (#7733)"},{"Id":"1671458634","IsPullRequest":false,"CreatedAt":"2023-04-17T15:31:00","Actor":"miloush","Number":"7732","RawContent":null,"Title":"[API Proposal]: BitmapEncoder.Save(string path) override","State":"open","Body":"### Background and motivation\r\n\r\n`BitmapEncoder.Save` only takes a `Stream`. This is a proposal to add an override that takes a file path, similar to how there is `XmlDocument.Save(Stream)` and `XmlDocument.Save(string)`.\r\n\r\n(The `BitmapDecoder` supports `Stream` and `Uri` sources.)\r\n\r\n### API Proposal\r\n\r\n```diff\r\nnamespace System.Windows.Media.Imaging\r\n{\r\n    public abstract partial class BitmapEncoder : DispatcherObject\r\n    {\r\n        protected BitmapEncoder() { }\r\n        public virtual BitmapCodecInfo CodecInfo { get; }\r\n        public virtual ReadOnlyCollection<System.Windows.Media.ColorContext> ColorContexts { get; set; }\r\n        public virtual IList<BitmapFrame> Frames { get; set; }\r\n        public virtual BitmapMetadata Metadata { get; set; }\r\n        public virtual BitmapPalette Palette { get; set; }\r\n        public virtual BitmapSource Preview { get; set; }\r\n        public virtual BitmapSource Thumbnail { get; set; }\r\n        public static BitmapEncoder Create(System.Guid containerFormat);\r\n        public virtual void Save(Stream stream);\r\n+       public void Save(string filename);\r\n    }\r\n}\r\n```\r\n\r\n### API Usage\r\n\r\n```csharp\r\nPngBitmapEncoder png = new();\r\npng.Frames.Add(image);\r\npng.Save(\"image.png\");\r\n```\r\n\r\ninstead of the currently required\r\n\r\n```csharp\r\nPngBitmapEncoder png = new();\r\npng.Frames.Add(image);\r\nusing (FileStream stream = File.Create(\"image.png\"))\r\n{\r\n    png.Save(stream);\r\n}\r\n```\r\n\r\n### Alternative Designs\r\n\r\n_No response_\r\n\r\n### Risks\r\n\r\nLow, no behavior changed, minimum size requirements.","Url":"https://github.com/dotnet/wpf/issues/7732","RelatedDescription":"Open issue \"[API Proposal]: BitmapEncoder.Save(string path) override\" (#7732)"},{"Id":"1670894481","IsPullRequest":true,"CreatedAt":"2023-04-17T10:42:57","Actor":"miloush","Number":"7730","RawContent":null,"Title":"Use TextAlignment for TextBox.GetCharacterIndexFromPoint","State":"open","Body":"Fixes #7651 \r\n\r\n## Description\r\n\r\nWhen text box (view) uses any text alignment different from left, `TextBox.GetCharacterIndexFromPoint` does not work: wherever the line bounds do not intersect with what would be a left-aligned line bounds, it returns -1.\r\n\r\nThe PR fixes the bug by taking into account text alignment when deciding whether a point is on a line or not.\r\n\r\n## Customer Impact\r\n\r\nCustomers not taking this fix cannot use `TextBox.GetCharacterIndexFromPoint` for text aligned to the right or centered.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt and tested with the repro in #7651, ensuring the characters do not get returned before the fix but correct characters get returned after the fix (using .NET 8.0.0-preview.3.23174.8).\r\n\r\n## Risk\r\n\r\nLow. Existing working behavior is not changed (the `GetContentOffset` returns 0). Slight performance hit for the extra calls and calculations, but only once - in the specific case of when `snapToText` is disabled and the relevant line is being tested.","Url":"https://github.com/dotnet/wpf/pull/7730","RelatedDescription":"Open PR \"Use TextAlignment for TextBox.GetCharacterIndexFromPoint\" (#7730)"},{"Id":"1670750959","IsPullRequest":true,"CreatedAt":"2023-04-17T09:13:52","Actor":"miloush","Number":"7729","RawContent":null,"Title":"Unblock AltGr+Oem2/5 typing inside ListBox","State":"open","Body":"Fixes #7641\r\n\r\n## Description\r\n\r\n`ListBox` and classes derived from it (notably `ListView`) are expected to _select all_ on <kbd>Ctrl</kbd>+<kbd>/</kbd> and _select item with focus_ on <kbd>Ctrl</kbd>+<kbd>\\\\</kbd>. However, the implementation only checks the status of the <kbd>Ctrl</kbd> modifier, not the others. As a result, this shortcut hijacks any other combination of keys, most importantly <kbd>Ctrl</kbd>+<kbd>Alt</kbd> which is used for typing on [around 60 keyboard layouts](http://kbdlayout.info/kbdus/shortcut/VK_OEM_2+VK_RMENU) that Windows ships.\r\n\r\nThis PR fixes the problem by limiting the shortcuts to what has been documented in the code comments as intent, i.e. they will work only when <kbd>Ctrl</kbd> is pressed and nothing else.\r\n\r\n## Customer Impact\r\n\r\nNot taking this fix prevents users from typing characters using these two keys on their keyboards into a `TextBox` or similar control inside `ListBox` or `ListView`.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt and verified using the repro in #7641 and Czech keyboard layout that typing is not possible without the fix and works with the fix (.NET 8.0.100-preview.3.23178.7)\r\n\r\n## Risk\r\n\r\nSelecting all and selecting the focused item is now limited to <kbd>Ctrl</kbd> only, while it used to work with any modifiers combination involving <kbd>Ctrl</kbd>. The former behavior is relatively easily achievable by deriving from the control and overriding `OnKeyDown`.","Url":"https://github.com/dotnet/wpf/pull/7729","RelatedDescription":"Open PR \"Unblock AltGr+Oem2/5 typing inside ListBox\" (#7729)"},{"Id":"1669979380","IsPullRequest":true,"CreatedAt":"2023-04-17T00:45:21","Actor":"sunmerx","Number":"7727","RawContent":null,"Title":"Mybuild0","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7727)","Url":"https://github.com/dotnet/wpf/pull/7727","RelatedDescription":"Closed or merged PR \"Mybuild0\" (#7727)"},{"Id":"1669982291","IsPullRequest":true,"CreatedAt":"2023-04-17T00:45:00","Actor":"sunmerx","Number":"7728","RawContent":null,"Title":"Sunmerx patch 1","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7728)","Url":"https://github.com/dotnet/wpf/pull/7728","RelatedDescription":"Closed or merged PR \"Sunmerx patch 1\" (#7728)"},{"Id":"1668462268","IsPullRequest":true,"CreatedAt":"2023-04-14T15:50:07","Actor":"dotnet-maestro[bot]","Number":"7726","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230413.1\r\n- **Date Produced**: April 13, 2023 3:41:04 PM UTC\r\n- **Commit**: fb14cae30eacbe844468ac297b3d4c61e0bb9dc0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/17d9eee32f...fb14cae30e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7726)","Url":"https://github.com/dotnet/wpf/pull/7726","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7726)"},{"Id":"1667501160","IsPullRequest":false,"CreatedAt":"2023-04-14T04:46:53","Actor":"CCsoh","Number":"7724","RawContent":null,"Title":"Transparent child window renders as black when screen window sharing","State":"open","Body":"### Description\n\nI try to add a transparent child window as a notification panel to the main window of a WPF application. However, I found that when using share window mode in communication software like Microsoft Teams to share the WPF application, if the child window background is set to transparent, other users will see a black screen. I have tested that other colors do not cause this issue. It is a known issue with WPF?\r\n\r\nwe try in .Net framework 4.8 and .Net Core 6 facing same problem\r\nLook like sharing software captures the window and treats the transparent area as black.\r\n\r\nAttempted scenarios (Share Window Mode)： \r\nShare child window with transparent background - black Screen\r\nShare child window with red/blue background - No problem\r\nShare Screen Mode - No problem\r\nShare Window Mode - black Screen\r\nOn/Off Hardware Acceleration (transparent background) - black Screen\n\n### Reproduction Steps\n\n1. Create new .Net core 6 C# WPF application\r\n2. Create child window for main window\r\n<img width=\"394\" alt=\"image\" src=\"https://user-images.githubusercontent.com/17893704/231943035-e6615126-7025-486a-b486-407dbb657e68.png\">\r\n\r\n3. Set Property for child window\r\n- AllowsTransparency=\"True\"\r\n- WindowStyle=\"None\"\r\n- Background=\"Transparent\"\r\n4. Run and Use Team to share window screen\r\n\r\n\n\n### Expected behavior\n\nScreen Share WPF Application properly\n\n### Actual behavior\n\nChild window with transparent background before Share Window Mode\r\n![image](https://user-images.githubusercontent.com/17893704/231943357-2a076802-b731-4b9b-b2c4-0ac1b568b86a.png)\r\n\r\nChild window with transparent background after Share Window Mode\r\n![image](https://user-images.githubusercontent.com/17893704/231943369-6857d5da-144e-465b-80fb-0576165ef88f.png)\r\n\r\nChild window with other color background before/after Share Window Mode\r\n![image](https://user-images.githubusercontent.com/17893704/231943380-5d66cc5b-d873-4b20-814b-4b712b3a36c0.png)\r\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.Net core 6\r\nWindow 11 22H2 22621.1555\r\nx64\n\n### Other information\n\nrelated Issue\r\nhttps://stackoverflow.com/questions/65514472/transparent-child-window-renders-as-black-when-screen-sharing-main-window-on-mic","Url":"https://github.com/dotnet/wpf/issues/7724","RelatedDescription":"Open issue \"Transparent child window renders as black when screen window sharing\" (#7724)"},{"Id":"1667395289","IsPullRequest":true,"CreatedAt":"2023-04-14T02:04:25","Actor":"github-actions[bot]","Number":"7723","RawContent":null,"Title":"[release/6.0] GlyphSerializer rounding fix","State":"open","Body":"Backport of #7545 to release/6.0\n/cc @dipeshmsft @miloush\n## Customer Impact\n## Testing\n## Risk\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7723)","Url":"https://github.com/dotnet/wpf/pull/7723","RelatedDescription":"Open PR \"[release/6.0] GlyphSerializer rounding fix\" (#7723)"},{"Id":"1666618838","IsPullRequest":true,"CreatedAt":"2023-04-13T15:34:23","Actor":"dotnet-maestro[bot]","Number":"7722","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230412.10\r\n- **Date Produced**: April 13, 2023 12:51:24 AM UTC\r\n- **Commit**: 0ab0d82c53c2fadc5ca28f4c78078e8ded3479cd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23210.1 to 8.0.0-preview.4.23212.10][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23210.1 to 8.0.0-preview.4.23212.10][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23210.1 to 8.0.0-preview.4.23212.10][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/21c401d08a...0ab0d82c53\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7722)","Url":"https://github.com/dotnet/wpf/pull/7722","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7722)"},{"Id":"1666018757","IsPullRequest":true,"CreatedAt":"2023-04-13T09:03:18","Actor":"github-actions[bot]","Number":"7721","RawContent":null,"Title":"[release/7.0] GlyphSerializer rounding fix","State":"open","Body":"Backport of #7545 to release/7.0\n/cc @singhashish-wpf @miloush\n## Customer Impact\n## Testing\n## Risk\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7721)","Url":"https://github.com/dotnet/wpf/pull/7721","RelatedDescription":"Open PR \"[release/7.0] GlyphSerializer rounding fix\" (#7721)"},{"Id":"1665773597","IsPullRequest":true,"CreatedAt":"2023-04-13T06:35:25","Actor":"singhashish-wpf","Number":"7720","RawContent":null,"Title":"Github action to backport PRs to branch","State":"closed","Body":"Github action to backport PRs to branch\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7720)","Url":"https://github.com/dotnet/wpf/pull/7720","RelatedDescription":"Closed or merged PR \"Github action to backport PRs to branch\" (#7720)"},{"Id":"1664953190","IsPullRequest":true,"CreatedAt":"2023-04-12T17:40:19","Actor":"dotnet-maestro[bot]","Number":"7719","RawContent":null,"Title":"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:934472a4-9da1-4b66-da04-08d961c27f17)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 934472a4-9da1-4b66-da04-08d961c27f17\r\n- **Build**: 20230412.3\r\n- **Date Produced**: April 12, 2023 5:02:39 PM UTC\r\n- **Commit**: d3e9ed0d85f9dadf48486e2dce80aae55671c9c6\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-rtm.23170.2 to 6.0.0-rtm.23212.3][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCa1a726df63&targetVersion=GCd3e9ed0d85&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:934472a4-9da1-4b66-da04-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7719)","Url":"https://github.com/dotnet/wpf/pull/7719","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#7719)"},{"Id":"1664874425","IsPullRequest":true,"CreatedAt":"2023-04-12T16:46:22","Actor":"dotnet-maestro[bot]","Number":"7718","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20230411.7\r\n- **Date Produced**: April 11, 2023 8:39:02 PM UTC\r\n- **Commit**: 7bca7a24dfc0eded1f3e364b4ff7bf1235b6eb26\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/92c39a4f0b...7bca7a24df\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.116\r\n  - Updates tools.dotnet to 6.0.116\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7718)","Url":"https://github.com/dotnet/wpf/pull/7718","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#7718)"},{"Id":"1664816954","IsPullRequest":true,"CreatedAt":"2023-04-12T16:17:36","Actor":"dotnet-maestro[bot]","Number":"7717","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20230411.8\r\n- **Date Produced**: April 11, 2023 10:04:27 PM UTC\r\n- **Commit**: 17d9eee32f20a6af0ebb620254a22f601d159578\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e5c569253a...17d9eee32f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 8.0.100-preview.3.23178.7\r\n  - Updates tools.dotnet to 8.0.100-preview.3.23178.7\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7717)","Url":"https://github.com/dotnet/wpf/pull/7717","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7717)"},{"Id":"1664797504","IsPullRequest":true,"CreatedAt":"2023-04-12T16:05:38","Actor":"dotnet-maestro[bot]","Number":"7716","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20230410.1\r\n- **Date Produced**: April 10, 2023 6:28:20 PM UTC\r\n- **Commit**: 21c401d08a57af296089bd1ff41e46d77082222b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-preview.4.23179.1 to 8.0.0-preview.4.23210.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-preview.4.23179.1 to 8.0.0-preview.4.23210.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.4.23179.1 to 8.0.0-preview.4.23210.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Management**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23178.18 to 8.0.0-preview.4.23206.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/cfc12f8e22...21c401d08a\r\n[2]: https://github.com/dotnet/runtime/compare/9111203d54...2c8cb129ed\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7716)","Url":"https://github.com/dotnet/wpf/pull/7716","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7716)"},{"Id":"1664406908","IsPullRequest":true,"CreatedAt":"2023-04-12T12:13:24","Actor":"dotnet-maestro[bot]","Number":"7715","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20230412.1\r\n- **Date Produced**: April 12, 2023 11:23:27 AM UTC\r\n- **Commit**: d510eaf9950860260d65a5144a66a8a779935a7a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 8.0.0-preview.4.23172.2 to 8.0.0-preview.5.23212.1][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC495db4193b&targetVersion=GCd510eaf995&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7715)","Url":"https://github.com/dotnet/wpf/pull/7715","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#7715)"},{"Id":"1663948108","IsPullRequest":true,"CreatedAt":"2023-04-12T10:49:09","Actor":"rchauhan18","Number":"7713","RawContent":null,"Title":"Update branding to 8-preview5","State":"closed","Body":"Update branding to 8-preview5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7713)","Url":"https://github.com/dotnet/wpf/pull/7713","RelatedDescription":"Closed or merged PR \"Update branding to 8-preview5\" (#7713)"},{"Id":"1663767995","IsPullRequest":true,"CreatedAt":"2023-04-12T04:56:10","Actor":"singhashish-wpf","Number":"7712","RawContent":null,"Title":"Dummy","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7712)","Url":"https://github.com/dotnet/wpf/pull/7712","RelatedDescription":"Closed or merged PR \"Dummy\" (#7712)"},{"Id":"1663426649","IsPullRequest":false,"CreatedAt":"2023-04-12T00:19:36","Actor":"brinko99","Number":"7711","RawContent":null,"Title":"Text rendering with alpha in Color renders incorrectly","State":"open","Body":"There appears to be a bug with the rendering of text where the associated color contains an opacity (alpha). See the linked discussion.\r\n\r\n@miloush noted that the issue is dependent on the font size and affects `<Glyph>` and `<GlyphRunDrawing>` as well.\r\n\r\n### Discussed in https://github.com/dotnet/wpf/discussions/7710\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **brinko99** April 11, 2023</sup>\r\nI’m trying to implement a text color in WPF that matches CSS RGBA of `#00,00,00,0.72` on a white background. I’d expect that to be a color of `#B8000000` (alpha of dec 184 ≈ .72), yet the result is much lighter than expected. Applying opacity to the control itself works as expected.\r\n\r\nI'm expecting the composite color to be `#474747` as produced by CSS and paint.net, but I'm getting `#8C8C8C`. Does WPF render alpha on a brush differently somehow?\r\n\r\nHere is an example:\r\n![image](https://user-images.githubusercontent.com/1231765/231280155-d32f2c70-b563-4bc7-b1aa-e10208978ae8.png)\r\n\r\n```\r\n<StackPanel Background=\"White\">\r\n    <TextBlock Text=\"Medium Contrast (#B8000000)\" Foreground=\"#B8000000\" Style=\"{x:Null}\" />\r\n    <TextBlock Text=\"Medium Contrast (Opacity .72)\" Foreground=\"#FF000000\" Opacity=\".72\"  Style=\"{x:Null}\"/>\r\n</StackPanel>\r\n```\r\n</div>","Url":"https://github.com/dotnet/wpf/issues/7711","RelatedDescription":"Open issue \"Text rendering with alpha in Color renders incorrectly\" (#7711)"},{"Id":"1663160998","IsPullRequest":true,"CreatedAt":"2023-04-11T20:59:04","Actor":"dotnet-maestro[bot]","Number":"7709","RawContent":null,"Title":"[release/7.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6f21c979-a735-4900-ddc9-08da7ef63a55)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 6f21c979-a735-4900-ddc9-08da7ef63a55\r\n- **Build**: 20230411.2\r\n- **Date Produced**: April 11, 2023 8:02:29 PM UTC\r\n- **Commit**: 98cc3ac7a8399b5629d0bab7a34b999b694764a3\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 7.0.0-rtm.23167.6 to 7.0.0-rtm.23211.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCb8b509498d&targetVersion=GC98cc3ac7a8&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6f21c979-a735-4900-ddc9-08da7ef63a55)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7709)","Url":"https://github.com/dotnet/wpf/pull/7709","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#7709)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-20T03:30:31.4511263Z","RunDurationInMilliseconds":501}