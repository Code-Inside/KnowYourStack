{"Data":{"GitHub":{"Issues":[{"Id":"2391700027","IsPullRequest":false,"CreatedAt":"2024-07-05T03:23:15","Actor":"Junjun-zhao","Number":"9354","RawContent":null,"Title":"[dotnet-sdk-9.0.100-preview.7.24352.8] WPF apps launch failed with System.Windows.Markup.XamlParseException","State":"open","Body":"### Description\n\nWhen run the 3rd party application with the latest .NET 9 build \"dotnet-sdk-9.0.100-preview.7.24352.8\", it failed to launch System.Windows.Markup.XamlParseException. \n\n### Reproduction Steps\n\n**App Repro steps** \r\n1. Open C:\\ReproApps\\MahApps.Metro\\MahApps.Metro.Demo.runtimeconfig.json files.(Please refer to app location and repro machine  from [Devdiv bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2114797) )\r\n2. Change the runtime.config file to let the app run against with dotnet-sdk-9.0.100-preview.7.24352.8. \r\n```\r\n\"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      }\r\n    ]\r\n```\r\n4. Launch MahApps.Metro.Demo.exe.\n\n### Expected behavior\n\nLaunch successfully.\n\n### Actual behavior\n\nLaunch failed.\r\n\r\nEvent Viewer Log:\r\n```\r\nSystem.Windows.Markup.XamlParseException: 'MahApps.Brushes.Accent' is not a valid value for property 'BorderBrush'.\r\n ---> System.InvalidOperationException: 'MahApps.Brushes.Accent' is not a valid value for property 'BorderBrush'.\r\n   at System.Windows.DependencyObject.GetEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, RequestFlags requests)\r\n   at System.Windows.DependencyObject.GetValueEntry(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, RequestFlags requests)\r\n   at System.Windows.DependencyObject.GetValue(DependencyProperty dp)\r\n   at System.Windows.StyleHelper.GetChildValueHelper(UncommonField`1 dataField, ItemStructList`1& valueLookupList, DependencyProperty dp, DependencyObject container, FrameworkObject child, Int32 childIndex, Boolean styleLookup, EffectiveValueEntry& entry, ValueLookupType& sourceType, FrameworkElementFactory templateRoot)\r\n   at System.Windows.StyleHelper.GetChildValue(UncommonField`1 dataField, DependencyObject container, Int32 childIndex, FrameworkObject child, DependencyProperty dp, FrugalStructList`1& childRecordFromChildIndex, EffectiveValueEntry& entry, ValueLookupType& sourceType, FrameworkElementFactory templateRoot)\r\n   at System.Windows.StyleHelper.GetValueFromTemplatedParent(DependencyObject container, Int32 childIndex, FrameworkObject child, DependencyProperty dp, FrugalStructList`1& childRecordFromChildIndex, FrameworkElementFactory templateRoot, EffectiveValueEntry& entry)\r\n   at System.Windows.StyleHelper.ApplyTemplatedParentValue(DependencyObject container, FrameworkObject child, Int32 childIndex, FrugalStructList`1& childRecordFromChildIndex, DependencyProperty dp, FrameworkElementFactory templateRoot)\r\n   at System.Windows.StyleHelper.InvalidatePropertiesOnTemplateNode(DependencyObject container, FrameworkObject child, Int32 childIndex, FrugalStructList`1& childRecordFromChildIndex, Boolean isDetach, FrameworkElementFactory templateRoot)\r\n   at System.Windows.FrameworkTemplate.InvalidatePropertiesOnTemplate(DependencyObject container, Object currentObject)\r\n   at System.Windows.FrameworkTemplate.<>c__DisplayClass45_0.<LoadOptimizedTemplateContent>b__2(Object sender, XamlObjectEventArgs args)\r\n   at System.Xaml.XamlObjectWriter.Logic_CreateAndAssignToParentStart(ObjectWriterContext ctx)\r\n   at System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember property)\r\n   at System.Windows.FrameworkTemplate.LoadTemplateXaml(XamlReader templateReader, XamlObjectWriter currentWriter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, Uri baseUri)\r\n   at System.Windows.FrameworkTemplate.LoadTemplateXaml(XamlReader templateReader, XamlObjectWriter currentWriter)\r\n   at System.Windows.FrameworkTemplate.LoadOptimizedTemplateContent(DependencyObject container, IComponentConnector componentConnector, IStyleConnector styleConnector, List`1 affectedChildren, UncommonField`1 templatedNonFeChildrenField)\r\n   at System.Windows.FrameworkTemplate.LoadContent(DependencyObject container, List`1 affectedChildren)\r\n   at System.Windows.StyleHelper.ApplyTemplateContent(UncommonField`1 dataField, DependencyObject container, FrameworkElementFactory templateRoot, Int32 lastChildIndex, HybridDictionary childIndexFromChildID, FrameworkTemplate frameworkTemplate)\r\n   at System.Windows.FrameworkTemplate.ApplyTemplateContent(UncommonField`1 templateDataField, FrameworkElement container)\r\n   at System.Windows.FrameworkElement.ApplyTemplate()\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Primitives.TabPanel.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ScrollContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.ScrollViewer.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Control.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Decorator.MeasureOverride(Size constraint)\r\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Control.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Decorator.MeasureOverride(Size constraint)\r\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Window.MeasureOverrideHelper(Size constraint)\r\n   at System.Windows.Window.MeasureOverride(Size availableSize)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at MetroDemo.App.Main()\r\n```\n\n### Regression?\n\nYes\r\n**Verify Scenarios:**\r\n1). Windows 10 21H2 AMD64 + dotnet-sdk-9.0.100-preview.6.24328.19: Pass\r\n2). Windows 10 21H2 AMD64 + dotnet-sdk-9.0.100-preview.7.24352.8: Fail\r\n3). Windows 10 21H2 AMD64 + dotnet-sdk-9.0.100-preview.7.24353.17: Fail\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n**Application Name:** MahAppsMetro,RSBase,BitbendazLinker,TodoSync,JL,WUView,MyMoneyNet,YoutubePlaylistDownloaderCore,VidCoderCore,GenshinLyreMidiPlayer,RadeonSoftwareSlimmer\r\n,ImageSort,HuoHuan,Delfinovin,PicView,OpenNetMeter,HandyControl,,FlowLauncher,ME3TweaksModManager,ScreenToGifNetcore,OnlyM,OnlyT,WolvenKit,ADBExplorer\r\n**OS：** Windows 10 21H2\r\n**CPU:** X64\r\n**.NET Build Number:** dotnet-sdk-9.0.100-preview.7.24352.8\r\n**App, Source and repro machine Info checking at** https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2114797\r\n**Github Link**: \r\nhttps://github.com/MahApps/MahApps.Metro\r\nhttps://github.com/MoneyTools/MyMoney.Net\n\n### Other information\n\n**Debug Repro steps:**\r\n1.Open \"C:\\ReproAppSource\\MahApps.Metro\\src\\MahApps.Metro.sln\" with Visual Studio.\r\n2. Build the solution.\r\n3. Update \\bin\\Debug\\net6.0-windows\\MahApps.Metro.Demo.runtimeconfig.json to run against with dotnet-sdk-9.0.100-preview.7.24352.8:\r\n```\r\n\"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      }\r\n    ]\r\n```\r\n4. Select net6.0-windows option before run it in Visual Studio because this app is multiple platforms targeted.\r\n![image](https://github.com/dotnet/wpf/assets/83067197/b29ae170-68ff-41e6-9a57-15fb13b3ed24)\r\n\r\n5. Press F5 to start the app.\r\n\r\n**Expected Result:**\r\nApp launch successful in Visual Studio.\r\n\r\n**Actual Result:**\r\nApp launch failed with exception thrown in Visual Studio.\r\n![image](https://github.com/dotnet/wpf/assets/83067197/aa4d0d54-1195-4f45-91e5-74dde8600de2)\r\n\r\n**Findings:**\r\nSome apps, like repro app mentioned in the repro steps, if we replace the DynamicResource to StaticResource in xaml file, the issue will go.\r\nAnd we found this issue and https://github.com/dotnet/wpf/issues/9353 are all related to load resource in WPF app.\r\n\r\n\r\n@dotnet-actwx-bot @dotnet/compat","Url":"https://github.com/dotnet/wpf/issues/9354","RelatedDescription":"Open issue \"[dotnet-sdk-9.0.100-preview.7.24352.8] WPF apps launch failed with System.Windows.Markup.XamlParseException\" (#9354)"},{"Id":"2391686578","IsPullRequest":false,"CreatedAt":"2024-07-05T03:11:14","Actor":"Junjun-zhao","Number":"9353","RawContent":null,"Title":"[dotnet-sdk-9.0.100-preview.7.24352.8] WPF apps launch failed with exception 'Value cannot be null. (Parameter 'key')'","State":"open","Body":"### Description\r\n\r\nWhen run the 3rd party application with the latest .NET 9 build \"dotnet-sdk-9.0.100-preview.7.24352.8\", it failed to launch with exception: 'Value cannot be null. (Parameter 'key')'.\r\n\r\n### Reproduction Steps\r\n\r\n**App Repro steps:**\r\n\r\n1. Open C:\\ReproApps\\wpfui\\Wpf.Ui.Gallery.runtimeconfig.json file (**Please refer to the App location and repro machine info from** [devdiv bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2114834)).\r\n2. Change the \"Wpf.Ui.Gallery.runtimeconfig.json\" file to let the app run against with dotnet-sdk-dotnet-sdk-9.0.100-preview.7.24352.8. \r\n```\r\n\"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      }\r\n    ],\r\n```\r\n4. Launch Wpf.Ui.Gallery.exe.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nLaunch successfully.\r\n\r\n### Actual behavior\r\n\r\n\r\nLaunch failed.\r\nOpen Event Viewer, we can see below detailed stack trace message:\r\n```\r\nApplication: Wpf.Ui.Gallery.exe\r\nCoreCLR Version: 9.0.24.35201\r\n.NET Version: 9.0.0-preview.7.24352.1\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.Windows.Markup.XamlParseException: Set property 'Wpf.Ui.Markup.ThemesDictionary.Theme' threw an exception.\r\n ---> System.ArgumentNullException: Value cannot be null. (Parameter 'key')\r\n   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n   at System.Windows.DeferredResourceReferenceList.Get(Object resourceKey)\r\n   at System.Windows.ResourceDictionary.ClearWithoutLock()\r\n   at System.Windows.ResourceDictionary.Clear()\r\n   at System.Windows.ResourceDictionary.set_Source(Uri value)\r\n   at Wpf.Ui.Markup.ThemesDictionary.SetSourceBasedOnSelectedTheme(Nullable`1 selectedApplicationTheme)\r\n   at Wpf.Ui.Markup.ThemesDictionary.set_Theme(ApplicationTheme value)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n   at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\r\n   at Wpf.Ui.Gallery.App.InitializeComponent() in C:\\Users\\v-gwei\\Downloads\\wpfui-main\\wpfui-main\\src\\Wpf.Ui.Gallery\\App.xaml:line 1\r\n   at Wpf.Ui.Gallery.App.Main()\r\n```\r\n\r\n### Regression?\r\n\r\nYes\r\n**Verify Scenarios:**\r\n1). Windows 10 21H2 AMD64 + dotnet-sdk-9.0.100-preview.6.24328.19: Pass\r\n2). Windows 10 21H2 AMD64 + dotnet-sdk-9.0.100-preview.7.24352.8: Fail\r\n3). Windows 10 21H2 AMD64 + dotnet-sdk-9.0.100-preview.7.24353.17: Fail\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n**Application Name:** wpfui, Open-SD-WebUI-Launcher, Text-Grab\r\n**OS：** Windows 10 21H2\r\n**CPU:** X64\r\n**.NET Build Number:** dotnet-sdk-9.0.100-preview.7.24352.8\r\n**App or App installer checking at**: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2114834\r\n**Github Link:** \r\nhttps://github.com/lepoco/wpfui\r\nhttps://github.com/Ray-Source-X/Open-SD-WebUI-Launcher\r\nhttps://github.com/TheJoeFin/Text-Grab\r\n\r\n**Dotnet Info:**\r\n```\r\n.NET SDK:\r\n Version:           9.0.100-preview.7.24352.8\r\n Commit:            707091200d\r\n Workload version:  9.0.100-manifests.82c210e1\r\n MSBuild version:   17.12.0-preview-24352-02+47393a047\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100-preview.7.24352.8\\\r\n\r\nHost:\r\n  Version:      9.0.0-preview.7.24352.1\r\n  Architecture: x64\r\n  Commit:       static\r\n\r\n.NET SDKs installed:\r\n  9.0.100-preview.7.24352.8 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 9.0.0-preview.7.24329.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 9.0.0-preview.7.24352.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-preview.7.24352.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n```\r\n\r\n### Other information\r\n\r\n**Debug Repro steps:**\r\n1.Open \"C:\\ReproAppSource\\wpfui\\Wpf.Ui.sln\" with Visual Studio.\r\n2. Build the solution.\r\n3. Update bin\\Debug\\net8.0-windows10.0.22621.0\\Wpf.Ui.Gallery.runtimeconfig.json to run against with dotnet-sdk-9.0.100-preview.7.24352.8:\r\n```\r\n\"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"9.0.0-preview.7.24352.1\"\r\n      }\r\n    ]\r\n```\r\n5. Press F5 to start the app.\r\n\r\n**Expected Result:**\r\nApp launch successful in Visual Studio.\r\n\r\n**Actual Result:**\r\nApp launch failed with exception thrown in Visual Studio.\r\n![image](https://github.com/dotnet/wpf/assets/83067197/13e6b394-23eb-4f42-a9dc-1b1a79277be6)\r\n\r\n**Findings:**\r\n1.The issue occurs when loading resource xaml file. In below repro app, we tried remove all content in Light.xaml file and only keep below 1 StaticResource, the problem still occurs.\r\n```\r\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n    <Color x:Key=\"AcrylicBackgroundFillColorDefault\">#F9F9F9</Color>\r\n    <SolidColorBrush x:Key=\"ToolTipBackground\" Color=\"{StaticResource AcrylicBackgroundFillColorDefault}\" />\r\n</ResourceDictionary>\r\n```\r\n2. We found this issue and https://github.com/dotnet/wpf/issues/9354 are all related to load Resource in WPF applications. But they have different stack trace and exception message.\r\n\r\n@dotnet-actwx-bot @dotnet/compat","Url":"https://github.com/dotnet/wpf/issues/9353","RelatedDescription":"Open issue \"[dotnet-sdk-9.0.100-preview.7.24352.8] WPF apps launch failed with exception 'Value cannot be null. (Parameter 'key')'\" (#9353)"},{"Id":"2391345274","IsPullRequest":true,"CreatedAt":"2024-07-04T18:53:38","Actor":"h3xds1nz","Number":"9352","RawContent":null,"Title":"Fix InvalidOperationException in AvTrace and improve general thread-safety","State":"open","Body":"Fixes #9347\r\n\r\n## Description\r\n\r\nAs I believe `AvTrace` should be close to thread-safe class and it seems the original intention was for it to be from the comments, especially since even running during debug will have another thread initializing a source, based on the report in issue #9347, I've decided to create a little improvement.\r\n\r\n- We introduce a static constructor that loads the setting from registry with true/false output (false by default) in a thread-safe manner (so that internal methods that call might call into `IsWpfTracingEnabledInRegistry` get what they came for)\r\n- Each new instance initializes based on the latest fetched/saved result in `s_enabledInRegistry`\r\n- Upon calling `Refresh`, we reload the setting from registry and update the value in `s_enabledInRegistry` accordingly\r\n- We then use this fetched variable down the callstack to ensure the current operation has the latest value\r\n- `IsWpfTracingEnabledInRegistry` now merely retrieves the latest value for static `s_enabledInRegistry`\r\n- `s_enabledInRegistry` doesn't necessarily need to be volatile but I felt like the memory fence here is worth it for consistency.\r\n- This should improve overall performance (very minor) and stability of the `AvTrace` instances/refreshes in general.\r\n- Also fixes a possible but unlikely race-condition in `Initialize` function between `ShouldCreateTraceSources` where a different value could have been obtained from `IsWpfTracingEnabledInRegistry` afterwards if changed by a different thread meanwhile; if the setting in registry was changed.\r\n\r\nIt is not perfect, but it prevents the exception problem and improves the behaviour overall.\r\n\r\n## Customer Impact\r\n\r\nOcassionally, `InvalidOperationException` might be thrown when setting up WPF trace sources, note that the class might be used by multiple threads by default without forcing it; e.g. when debugging.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuild, local testing, verifying setting retrieval and stability.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9352)","Url":"https://github.com/dotnet/wpf/pull/9352","RelatedDescription":"Open PR \"Fix InvalidOperationException in AvTrace and improve general thread-safety\" (#9352)"},{"Id":"2391275115","IsPullRequest":true,"CreatedAt":"2024-07-04T18:50:58","Actor":"himgoyalmicro","Number":"9351","RawContent":null,"Title":"Merged all the high contrast themes files into one theme file ","State":"closed","Body":"## Description\r\n\r\n1. Bring parity with the WinUI Styles.\r\n2. Reducing redundancy by combining all different High Contrasts files into one.\r\n3. Allowing customization of High Contrast Themes\r\n\r\n## Regression\r\n\r\nNA\r\n\r\n## Testing\r\n\r\nBuild passed and tested on sample application\r\n\r\n## Risk\r\n\r\nLow Risk\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9351)","Url":"https://github.com/dotnet/wpf/pull/9351","RelatedDescription":"Closed or merged PR \"Merged all the high contrast themes files into one theme file \" (#9351)"},{"Id":"2385355926","IsPullRequest":true,"CreatedAt":"2024-07-04T17:44:45","Actor":"himgoyalmicro","Number":"9336","RawContent":null,"Title":"Merged all the high contrast themes files into one theme file","State":"closed","Body":"## Description\r\n\r\n1. Bring parity with the WinUI Styles. \r\n2. Reducing redundancy by combining all different High Contrasts files into one. \r\n3. Allowing customization of High Contrast Themes \r\n\r\n## Regression\r\n\r\nNA\r\n\r\n## Testing\r\n\r\nBuild passed and tested on sample application\r\n\r\n## Risk\r\n\r\nLow Risk \r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9336)","Url":"https://github.com/dotnet/wpf/pull/9336","RelatedDescription":"Closed or merged PR \"Merged all the high contrast themes files into one theme file\" (#9336)"},{"Id":"2391040712","IsPullRequest":false,"CreatedAt":"2024-07-04T14:49:56","Actor":"miloush","Number":"9350","RawContent":null,"Title":"[API Proposal]: public Viewbox.ComputeScaleFactor","State":"open","Body":"### Background and motivation\n\nAny code using the `Stretch` (and `StretchDirection`) property has to figure out how to scale the content respecting these properties, and how to undo the scaling when mapping coordinates back to the content. From built-in controls, this includes `Image`, `MediaElement`, `Viewbox` and `DocumentPageView` which all call a helper method to calculate the scaling.\r\n\r\nIt would be beneficial to other developers to be able to reuse the code for consistent results including corner cases (such as infinities and near-zero values).\n\n### API Proposal\n\n```diff\r\nnamespace System.Windows.Controls;\r\n\r\npublic class Viewbox\r\n{\r\n-    internal static Size ComputeScaleFactor(Size availableSize, Size contentSize, Stretch stretch, StretchDirection stretchDirection);\r\n+    public static Size ComputeScaleFactor(Size availableSize, Size contentSize, Stretch stretch, StretchDirection stretchDirection); \r\n}\r\n```\r\n\n\n### API Usage\n\n```C#\r\nvoid Image_MouseLeftButtonDown(MouseButtonEventArgs e)\r\n{\r\n    Point point = e.GetPosition(this);\r\n    Size stretchScale = ComputeScaleFactor(RenderSize, new Size(Source.Width, Source.Height), Stretch, StretchDirection);\r\n    Point pixelPoint = new Point(point.X / stretchScale.Width, point.Y / stretchScale.Height); // click in image source coordinates\r\n    ...\r\n}     \r\n```\r\n\n\n### Alternative Designs\n\nThe final scaling transform could be made available as a `ScaleTransform` instead. This would provide more robust solution with invertability and built-in ability to transform points and bounds, but with higher computational and memory costs. This could either be a new constructor, such as \r\n```c#\r\npublic ScaleTransform(Size availableSize, Size contentSize, Stretch stretch, StretchDirection stretchDirection)\r\n```\r\nor a static method such as \r\n```C#\r\npublic static ScaleTransform FromStretch(Size availableSize, Size contentSize, Stretch stretch, StretchDirection stretchDirection)\r\n```\r\nThe `Viewbox` itself creates a `ScaleTransform` with the calculated values and uses it as a visual transform on the child.\r\n\r\nYet more alternatively, there could just be a `TranslatePoint` method somewhere (like `UIElement` or `Viewbox`), but that would have to calculate the scaling each time, which isn't great for usage in mouse move etc.\r\n\n\n### Risks\n\nNo existing API surface is changed or removed, so there shouldn't be breaking changes. The code to calculate the scaling already exists as an internal method.","Url":"https://github.com/dotnet/wpf/issues/9350","RelatedDescription":"Open issue \"[API Proposal]: public Viewbox.ComputeScaleFactor\" (#9350)"},{"Id":"2390104458","IsPullRequest":false,"CreatedAt":"2024-07-04T07:01:16","Actor":"vsfeedback","Number":"9349","RawContent":null,"Title":"WPF losts the binding after some operation","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/WPF-losts-the-binding-after-some-operati/10689653)._\n\n---\n[severity:It's more difficult to complete my work]\nGood morning,\n\nI have encountered a problem and I can't seem to resolve it. I have tried everything but cannot bypass the issue. I have attached a video to show what happens.\n\nTo reproduce the error:\n\nOpen the XML file (you will find it in the attachments).\nSelect either line 1 or line 2 as many times as you want, and everything works.\nChange the key, the first field in the top left corner.\nSelect the lines again, and you will notice that the selection no longer has any effect, and that an exception occurs after returning to a previously selected line.\nIf you click the \"test\" button in the toolbar, the error does not occur. This error is generated by the listview.\n\nThank you.\nAttached there is also the solution and the \n[LocalizzatoreRisorse.zip](https://aka.ms/dc/file?name=B9e3a717bf106435dafd76243f0a4dcee638548344547224501_LocalizzatoreRisorse.zip&tid=9e3a717bf106435dafd76243f0a4dcee638548344547224501)\n[Stringhe it-IT - Copia.xaml](https://aka.ms/dc/file?name=B5c66b1d462024c1581fb38bd993f7550638548344702703776_Stringhe_it-IT_-_Copia.xaml&tid=5c66b1d462024c1581fb38bd993f7550638548344702703776)\n[15-50-19.mp4](https://aka.ms/dc/file?name=B452ea892701546569783c161d709924d638548339894029236_15-50-19.mp4&tid=452ea892701546569783c161d709924d638548339894029236)\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/25/2024, 07:48 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/9349","RelatedDescription":"Open issue \"WPF losts the binding after some operation\" (#9349)"},{"Id":"2389770114","IsPullRequest":true,"CreatedAt":"2024-07-04T02:56:12","Actor":"dotnet-maestro[bot]","Number":"9348","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20240703.1\r\n- **Date Produced**: July 3, 2024 1:10:36 PM UTC\r\n- **Commit**: 9319f17101b6afd661e943248f8ea03886d1b8a6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-preview.7.24352.4 to 9.0.0-preview.7.24353.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-preview.7.24352.4 to 9.0.0-preview.7.24353.1][1]\r\n  - **System.Drawing.Common**: [from 9.0.0-preview.7.24352.4 to 9.0.0-preview.7.24353.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.CodeDom**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Management**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Speech**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.7.24352.1 to 9.0.0-preview.7.24352.15][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/96a6602da0...9319f17101\r\n[2]: https://github.com/dotnet/runtime/compare/c07a81f909...1d16fd14fa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9348)","Url":"https://github.com/dotnet/wpf/pull/9348","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#9348)"},{"Id":"2389274908","IsPullRequest":false,"CreatedAt":"2024-07-03T19:11:59","Actor":"ssrmm","Number":"9347","RawContent":null,"Title":"Sporadic crash in  `AvTrace.IsWpfTracingEnabledInRegistry()` when calling `PresentationTraceSources.Refresh()` from non-UI thread","State":"open","Body":"### Description\r\n\r\nCalling `PresentationTraceSources.Refresh()` from a thread other than the UI thread may sporadically lead to `System.InvalidOperationException: Nullable object must have a value.` in `AvTrace.IsWpfTracingEnabledInRegistry()` (see two possible stack traces below).\r\n\r\nThe documentation of `PresentationTraceSources.Refresh()` does not mention anything about having to be called on a specific thread. And looking at [the source code implicated by the stack traces](https://github.com/dotnet/wpf/blob/f2a578639ada4f5d9b06d701e657667b4ec9c634/src/Microsoft.DotNet.Wpf/src/WindowsBase/MS/Internal/AvTrace.cs#L217-L241), it seems like the class is intended to be thread-safe, in particular because of the comment in `IsWpfTracingEnabledInRegistry()`:\r\n\r\n```csharp\r\nif( _enabledInRegistry == null )\r\n{\r\n\t[...]\r\n\r\n\t// Update the static.  Doing this last protects us from threading problems; worse case, multiple\r\n\t// threads will set the same value into it.\r\n\t_enabledInRegistry = enabled;\r\n}\r\n\r\nreturn (bool) _enabledInRegistry;\r\n```\r\n\r\nHowever turns out this comment isn't quiet correct: Doing it twice isn't the worst case. A thread other than the UI thread may call `PresentationTraceSources.Refresh()`, which in turn calls `AvTrace.Refresh()`. If this happens between the assignment (`_enabledInRegistry = enabled`) and the return statement then the `Nullable<bool> _enabledInRegistry` will not have a value and the cast to `bool` throws an exception.\r\n\r\n```csharp\r\npublic void Refresh()\r\n{\r\n\t// Cause the registry to be re-read in case it's changed.\r\n\t_enabledInRegistry = null;\r\n\r\n\t// Re-initialize everything\r\n\tInitialize();\r\n}\r\n```\r\n<details>\r\n  <summary>Stack traces</summary>\r\n\r\n```\r\nUnhandled exception. System.Windows.Markup.XamlParseException: 'Initialization of 'System.Windows.Controls.TextBlock' threw an exception.' Line number '9' and line position '76'.\r\n ---> System.Xaml.XamlObjectWriterException: Set property 'System.Windows.ResourceDictionary.DeferrableContent' threw an exception.\r\n ---> System.TypeInitializationException: The type initializer for 'MS.Internal.TraceResourceDictionary' threw an exception.\r\n ---> System.InvalidOperationException: Nullable object must have a value.\r\n   at System.Nullable`1.get_Value()\r\n   at MS.Internal.AvTrace.IsWpfTracingEnabledInRegistry()\r\n   at MS.Internal.AvTrace.ShouldCreateTraceSources()\r\n   at MS.Internal.AvTrace.Initialize()\r\n   at MS.Internal.TraceResourceDictionary..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.TraceResourceDictionary.get_IsEnabled()\r\n   at System.Windows.ResourceDictionary.SetKeys(IList`1 keyCollection, IServiceProvider serviceProvider)\r\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)\r\n   at MS.Internal.Xaml.Runtime.PartialTrustTolerantRuntime.SetValue(Object obj, XamlMember property, Object value)\r\n   at System.Xaml.XamlObjectWriter.Logic_ApplyPropertyValue(ObjectWriterContext ctx, XamlMember prop, Object value, Boolean onParent)\r\n   at System.Xaml.XamlObjectWriter.Logic_DoAssignmentToParentProperty(ObjectWriterContext ctx)\r\n   at System.Xaml.XamlObjectWriter.WriteEndMember()\r\n   at System.Xaml.XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter, Boolean closeWriter)\r\n   at System.Windows.SystemResources.ResourceDictionaries.LoadDictionary(Assembly assembly, String assemblyName, String resourceName, Boolean isTraceEnabled, Uri& dictionarySourceUri)\r\n   at System.Windows.SystemResources.ResourceDictionaries.LoadThemedDictionary(Boolean isTraceEnabled)\r\n   at System.Windows.SystemResources.FindDictionaryResource(Object key, Type typeKey, ResourceKey resourceKey, Boolean isTraceEnabled, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference, Boolean& canCache)\r\n   at System.Windows.SystemResources.FindResourceInternal(Object key, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference)\r\n   at System.Windows.StyleHelper.GetThemeStyle(FrameworkElement fe, FrameworkContentElement fce)\r\n   at System.Windows.FrameworkElement.UpdateThemeStyleProperty()\r\n   at System.Windows.FrameworkElement.OnInitialized(EventArgs e)\r\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.InitializationGuard(XamlType xamlType, Object obj, Boolean begin)\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n   at System.Windows.Application.LoadBamlStreamWithSyncInfo(Stream stream, ParserContext pc)\r\n   at System.Windows.Application.DoStartup()\r\n   at System.Windows.Application.<.ctor>b__1_0(Object unused)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at WpfApp1.Program.Main()\r\n```\r\n\r\n```\r\nUnhandled exception. System.TypeInitializationException: The type initializer for 'MS.Internal.TraceRoutedEvent' threw an exception.\r\n ---> System.InvalidOperationException: Nullable object must have a value.\r\n   at System.Nullable`1.get_Value()\r\n   at MS.Internal.AvTrace.IsWpfTracingEnabledInRegistry()\r\n   at MS.Internal.AvTrace.ShouldCreateTraceSources()\r\n   at MS.Internal.AvTrace.Initialize()\r\n   at MS.Internal.TraceRoutedEvent..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.TraceRoutedEvent.get_IsEnabled()\r\n   at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\n   at System.Windows.FrameworkElement.OnRenderSizeChanged(SizeChangedInfo sizeInfo)\r\n   at System.Windows.ContextLayoutManager.fireSizeChangedEvents()\r\n   at System.Windows.ContextLayoutManager.UpdateLayout()\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at WpfApp1.Program.Main()\r\n```\r\n</details>\r\n\r\n### Reproduction Steps\r\n\r\nWe are experiencing this as a very rare occurrence on some machines. I have created a [minimal reproduction case that forces the issue to happen more frequently](https://github.com/ssrmm/AvTraceCrashRepro). The important parts are in `Program.cs`.\r\n\r\nSimply starting this application a few times produces the crash pretty easily on my machine.\r\n\r\n### Expected behavior\r\n\r\nPreferred:\r\nCrash is avoided by making `AvTrace` properly thread-safe.\r\n\r\nAlternatively:\r\nRequirement of calling `PresentationTraceSources.Refresh()` on the UI thread is documented and ideally enforced by always throwing an exception when called on the wrong thread.\r\n\r\n### Actual behavior\r\n\r\nA crash occurs very rarely and only on specific systems, making this problem hard to find during testing.\r\n\r\n### Regression?\r\n\r\nLooking at the Git history, a regression seems unlikely. The code in question seems to have been unchanged for a long time.\r\n\r\n### Known Workarounds\r\n\r\nPerform calls to `PresentationTraceSources.Refresh()` on the UI thread only.\r\n\r\n### Impact\r\n\r\nRare application startup crash that may only happen on customer machines and is difficult to find during development/testing.\r\n\r\n### Configuration\r\n\r\n.NET 6/.NET 8 x64\r\nWindows 10/Windows 11\r\n\r\n### Other information\r\n\r\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9347","RelatedDescription":"Open issue \"Sporadic crash in  `AvTrace.IsWpfTracingEnabledInRegistry()` when calling `PresentationTraceSources.Refresh()` from non-UI thread\" (#9347)"},{"Id":"2386820480","IsPullRequest":true,"CreatedAt":"2024-07-03T18:38:54","Actor":"vseanreesermsft","Number":"9342","RawContent":null,"Title":"Update branding to 8.0.8","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9342)","Url":"https://github.com/dotnet/wpf/pull/9342","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.8\" (#9342)"},{"Id":"2388682578","IsPullRequest":true,"CreatedAt":"2024-07-03T14:29:24","Actor":"dotnet-maestro[bot]","Number":"9345","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20240703.2\r\n- **Date Produced**: July 3, 2024 1:30:42 PM UTC\r\n- **Commit**: 7181f079758f9cd77e1581f8b4f072b4df5d0af8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 9.0.0-preview.7.24352.2 to 9.0.0-preview.7.24353.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCa2b1fcc71530a51eedb41e80e6ca7584efb5a9f7&targetVersion=GC7181f079758f9cd77e1581f8b4f072b4df5d0af8&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9345)","Url":"https://github.com/dotnet/wpf/pull/9345","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#9345)"},{"Id":"2388688499","IsPullRequest":false,"CreatedAt":"2024-07-03T13:45:45","Actor":"sudharsan-narayanan","Number":"9346","RawContent":null,"Title":"Customize style is applied to windows form hosted within a WPF control","State":"open","Body":"### Description\n\nIf we customize window style and applied for the Winforms host within a WPF control. Customize style is applied to partial Winforms control. We suspect it is a bug. \r\n\r\n**Note**: The style is applied to partially control not for all control.\r\n\r\nCan you please check and fix this issue ASAP?\n\n### Reproduction Steps\n\n1. Run the Sample.\r\n2. Note: Customize window style is applied to partial Winforms control.\r\n\r\n[WPFWinformsHost.zip](https://github.com/user-attachments/files/16085810/WPFWinformsHost.zip)\r\n\n\n### Expected behavior\n\nCustomize style should not applied to winforms control.\n\n### Actual behavior\n\nCustomize style is applied to partial Winforms control.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\nAffects when we use the windows form hosted within a WPF control.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9346","RelatedDescription":"Open issue \"Customize style is applied to windows form hosted within a WPF control\" (#9346)"},{"Id":"2388481902","IsPullRequest":true,"CreatedAt":"2024-07-03T13:02:31","Actor":"dotnet-maestro[bot]","Number":"9344","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20240702.2\r\n- **Date Produced**: July 2, 2024 10:38:54 PM UTC\r\n- **Commit**: 4a7d983f833d6b86365ea1b2b4d6ee72fbdbf944\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24351.5 to 9.0.0-beta.24352.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.24351.5 to 9.0.0-beta.24352.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.24351.5 to 9.0.0-beta.24352.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24351.5 to 9.0.0-beta.24352.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/48f3eafb2f...4a7d983f83\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9344)","Url":"https://github.com/dotnet/wpf/pull/9344","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9344)"},{"Id":"2387474715","IsPullRequest":true,"CreatedAt":"2024-07-03T03:16:39","Actor":"dotnet-maestro[bot]","Number":"9343","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20240702.4\r\n- **Date Produced**: July 3, 2024 1:03:49 AM UTC\r\n- **Commit**: 96a6602da09992d443d83e50bf3bf2918406bd2f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-preview.7.24329.1 to 9.0.0-preview.7.24352.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-preview.7.24329.1 to 9.0.0-preview.7.24352.4][1]\r\n  - **System.Drawing.Common**: [from 9.0.0-preview.7.24329.1 to 9.0.0-preview.7.24352.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.CodeDom**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Management**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Speech**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.7.24328.10 to 9.0.0-preview.7.24352.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/2a6733dc97...96a6602da0\r\n[2]: https://github.com/dotnet/runtime/compare/a900bbf6fc...c07a81f909\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9343)","Url":"https://github.com/dotnet/wpf/pull/9343","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#9343)"},{"Id":"2386820123","IsPullRequest":true,"CreatedAt":"2024-07-02T19:17:59","Actor":"vseanreesermsft","Number":"9341","RawContent":null,"Title":"Update branding to 6.0.33","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9341)","Url":"https://github.com/dotnet/wpf/pull/9341","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.33\" (#9341)"},{"Id":"2386373514","IsPullRequest":true,"CreatedAt":"2024-07-02T14:45:21","Actor":"dotnet-maestro[bot]","Number":"9339","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20240702.2\r\n- **Date Produced**: July 2, 2024 1:55:10 PM UTC\r\n- **Commit**: a2b1fcc71530a51eedb41e80e6ca7584efb5a9f7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 9.0.0-preview.7.24328.2 to 9.0.0-preview.7.24352.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC105770f230a6a6f347ddb85116a36fbff74014ac&targetVersion=GCa2b1fcc71530a51eedb41e80e6ca7584efb5a9f7&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9339)","Url":"https://github.com/dotnet/wpf/pull/9339","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#9339)"},{"Id":"2386446745","IsPullRequest":true,"CreatedAt":"2024-07-02T14:38:24","Actor":"anjali-wpf","Number":"9340","RawContent":null,"Title":"Fixed keyboard focus for DatePicker control","State":"open","Body":"## Description\r\n\r\nKeyboard focus is not navigating to date picker control.\r\n\r\n## Customer Impact\r\n\r\nMotor impaired users will not be able to navigate to the date picker control.\r\n\r\n## Regression\r\n\r\nNone\r\n\r\n## Testing\r\n\r\nLocal build pass, tested in sample app.\r\n\r\n## Risk\r\n\r\nNA\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9340)","Url":"https://github.com/dotnet/wpf/pull/9340","RelatedDescription":"Open PR \"Fixed keyboard focus for DatePicker control\" (#9340)"},{"Id":"2386100555","IsPullRequest":true,"CreatedAt":"2024-07-02T13:21:11","Actor":"dotnet-maestro[bot]","Number":"9338","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20240701.5\r\n- **Date Produced**: July 2, 2024 4:52:29 AM UTC\r\n- **Commit**: 48f3eafb2fa9dddb1ca655b9ea96ebf4b5a2ba0a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24327.1 to 9.0.0-beta.24351.5][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.24327.1 to 9.0.0-beta.24351.5][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.24327.1 to 9.0.0-beta.24351.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24327.1 to 9.0.0-beta.24351.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ede13bd355...48f3eafb2f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9338)","Url":"https://github.com/dotnet/wpf/pull/9338","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9338)"},{"Id":"2385661169","IsPullRequest":true,"CreatedAt":"2024-07-02T11:28:47","Actor":"dipeshmsft","Number":"9337","RawContent":null,"Title":"Updated .NET Runtime used for running WPF automated tests ( DRTs )","State":"closed","Body":"## Description\r\nUpdated the .NET Runtime being downloaded for running WPF's automated tests.\r\n\r\n## Regression\r\nNA\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nBuild pipeline success will verify the changes.\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nNA\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9337)","Url":"https://github.com/dotnet/wpf/pull/9337","RelatedDescription":"Closed or merged PR \"Updated .NET Runtime used for running WPF automated tests ( DRTs )\" (#9337)"},{"Id":"2385053415","IsPullRequest":false,"CreatedAt":"2024-07-02T02:20:41","Actor":"NWoodsman","Number":"9335","RawContent":null,"Title":"Missing docs blob in ReferenceAssembly.targets","State":"open","Body":"### Description\n\nI successfully build release/6.0 from the developer console. However when opening the solution, I get some errors. \r\n\r\n`Intellisense Xml sources not found: IntellisenseXmlDir=\\bin\\dotnet-api-docs_net6.0\\0.0.0.4\\_intellisense\\net-6.0\\`\r\n\r\nA comment inside `ReferenceAssembly.targets` states:\r\n\r\n```\r\n  <!-- \r\n    This blob lives in Azure storage at https://netcorenativeassets.blob.core.windows.net/resource-packages/external/windows/dotnet-api-docs_net6.0/\r\n    Instructions for updating these artifacts are at https://github.com/dotnet/wpf/blob/master/docs/intellisense.md\r\n```\r\n\r\nBoth links appear dead. I would like to follow the instructions and obtain the blob as required. \n\n### Reproduction Steps\n\nVisit https://github.com/dotnet/wpf/blob/release/6.0/eng/WpfArcadeSdk/tools/ReferenceAssembly.targets\r\n\r\nSee line 52 and 53. Links do not work. \n\n### Expected behavior\n\nExpected successful resolution of the Azure storage links.\n\n### Actual behavior\n\nThe specified blob does not exist.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\nAffects builds\n\n### Configuration\n\nwpf release/6.0 build. \n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9335","RelatedDescription":"Open issue \"Missing docs blob in ReferenceAssembly.targets\" (#9335)"},{"Id":"2384775612","IsPullRequest":true,"CreatedAt":"2024-07-01T21:35:19","Actor":"h3xds1nz","Number":"9334","RawContent":null,"Title":"Replace Array.GetLength on single-dimensional arrays with Length property","State":"open","Body":"## Description\r\n\r\nReplaces `Array.GetLength(0)` on single-dimensional arrays with the `Length` property for performance benefit, clarity and general code quality. I didn't replace a few in `Color` and `ColorTransform` as that's part of my other PR and I don't want to create conflicts.\r\n\r\n## Customer Impact\r\n\r\nImproved performance.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuild, the changes are minimal hence no further testing.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9334)","Url":"https://github.com/dotnet/wpf/pull/9334","RelatedDescription":"Open PR \"Replace Array.GetLength on single-dimensional arrays with Length property\" (#9334)"},{"Id":"2384730731","IsPullRequest":true,"CreatedAt":"2024-07-01T21:00:29","Actor":"h3xds1nz","Number":"9333","RawContent":null,"Title":"[CachedBitmap.cs] Simplify constructor by removing duplicate type checks","State":"open","Body":"## Description\r\n\r\nRemoves redundant type checks second-time around when constructing `CachedBitmap` (this constructor is used by `BitmapSource.Create()`. There's minimal performance benefit, the main goal here is code simplification, that has been made possible with the introduction of `GetArrayDataReference` few releases ago.\r\n\r\nMethod has been tested with all array types for correct functionality when constructing in-memory Bitmap.\r\n\r\n## Customer Impact\r\n\r\nSmaller code-size of PresentationCore.\r\n\r\n## Regression\r\n\r\nNone.\r\n\r\n## Testing\r\n\r\nBuild, constructing Bitmap from memory source.\r\n\r\n## Risk\r\n\r\nLow.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9333)","Url":"https://github.com/dotnet/wpf/pull/9333","RelatedDescription":"Open PR \"[CachedBitmap.cs] Simplify constructor by removing duplicate type checks\" (#9333)"},{"Id":"2384550615","IsPullRequest":true,"CreatedAt":"2024-07-01T19:05:56","Actor":"dipeshmsft","Number":"9332","RawContent":null,"Title":"[Draft] Enabling Fluent as default theme using an opt-in and app.config","State":"open","Body":"### Description\r\n\r\n**NOTE** : This shows how the changes will look like for enabling fluent as default. This doesn't mean these are final and neither that we will disable the implicit loading method available currently.\r\n\r\nThis PR includes the changes that will be required to make \"Enabling Fluent as default theme\" possible. There are parts of it that will be done differently while making the final changes, but this here is to show what are the minimal changes that will be required to make the above possible.\r\n\r\nThe PR consists of various commits and changes in PR can be divided into different parts :\r\n\r\n- Introduced AppContxtSwitch to enable fluent as default theme : [69f8ca0](https://github.com/dipeshmsft/wpf/commit/69f8ca064358a0327c256014b59cb15768510ec4), [0a13a85](https://github.com/dipeshmsft/wpf/commit/0a13a853c48020eaebc0363337bf5048b58f922c)\r\n- Merged the ThemeGenerator script for Fluent : [8e815bb](https://github.com/dipeshmsft/wpf/commit/8e815bb773a389e99788b73c7464bfce1178a73a)\r\n- Merged the remaining additional styles ( this refers to the PR ) : [a8f1d65](https://github.com/dipeshmsft/wpf/commit/a8f1d652462fbba3ea0d2a86e058b5fe82dde237)\r\n- Enabled text search in SystemResources, this allows for using Fluent theme colors and brushes even when they are loaded as default : [4c45cbd](https://github.com/dipeshmsft/wpf/commit/4c45cbdae5ae9c392d8fc65309c3f67d4c14c4cd)\r\n- Enabled use of app.config to choose only on Light / Dark variation of the theme : [faabc48](https://github.com/dipeshmsft/wpf/commit/faabc480e04af915607f280d508719a5887faecf)\r\n- Added use of AccentColor from SystemColors : [e0a00a7](https://github.com/dipeshmsft/wpf/commit/e0a00a7cc7f4d2258afdc0d983cbbe8d6858c7be)\r\n- Made DynamicResource as StaticResource wherever possible in Fluent : [ef52cad](https://github.com/dipeshmsft/wpf/commit/ef52cada702386425c2c1c83f0a83ddc98d407f1). This deviates from the level of customization needed for Fluent, but I made these changes for now to reduce the changes needed to enable fluent as default.\r\n- Various fixes for Fluent styles.\r\n\r\n### Customer Impact\r\n\r\nThis will allow developers to load Fluent themes as default styles and it will allow them to test the capabilities and the gaps in the new theme, which we would then want to fix in the next .NET release.\r\n\r\n### Regression \r\n\r\nNo\r\n\r\n### Testing \r\n\r\nStill pending. Also, there are a few things that are missing from this PR - like using Fluent theme when HighContrast mode is on, DataGrid style is not loading. I will fix this in coming weeks.\r\n\r\n### Risk\r\n\r\nSince, we made some changes in the way SystemResources behave, there may be some issues that can come up. Need to wrap the SystemResource changes inside the Fluent app context flag as well.\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9332)","Url":"https://github.com/dotnet/wpf/pull/9332","RelatedDescription":"Open PR \"[Draft] Enabling Fluent as default theme using an opt-in and app.config\" (#9332)"},{"Id":"2383969691","IsPullRequest":false,"CreatedAt":"2024-07-01T14:12:37","Actor":"sandre58","Number":"9331","RawContent":null,"Title":"Memory leaks on open window","State":"open","Body":"### Description\n\nWPF windows seem to cause memory leaks.\r\nEach time a window is opened, the RAM increases but does not decrease when the window is closed.\r\nIf a window contains lots of controls, the memory can quickly increase to several GigaBytes. \r\nIt seems that after closing the window, the application remembers Bindings and weakreferences to controls.\n\n### Reproduction Steps\n\nCreate an WPF application with a button which open a dialog (modal or not modal) window.\r\nThis window contains 1000 textboxes (created dynamically in constructor).\r\nOpen and close this windows several times.\n\n### Expected behavior\n\nRAM decrease when we close window (same RAM before closing)\r\nGarbage collector is called when we close window.\n\n### Actual behavior\n\nRAM increases every time I open the window and it hardly goes down when I close the window\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9331","RelatedDescription":"Open issue \"Memory leaks on open window\" (#9331)"},{"Id":"2382394415","IsPullRequest":true,"CreatedAt":"2024-06-30T19:33:51","Actor":"h3xds1nz","Number":"9330","RawContent":null,"Title":"Remove Marshalling code during Color Translation, reduce allocations","State":"open","Body":"## Description\r\n\r\nImproves slightly performance and subsequent allocations when subtracting/multiplying or just generally working with `Color` using a custom profile / `ColorContext` by removing `Marshal` code/allocs and simply using `stackalloc` for the buffer, replacing some dead code (It is obvious `Translate` method has been rewritten previously) and removing the `try`/`finally` block used for unmanaged memory deallocation.\r\n\r\nRedundant array inits to `0` have been removed in `ICM2Color` and also some heap-allocated arrays have been replaced with stack-allocated spans in the call chain.\r\n\r\nLast two commits are not included in benchmarks but are pretty straightforward improvements.\r\n\r\n### Color Subtraction with custom profile\r\n\r\n| Method     | Mean     | Error     | StdDev    | Gen0   | Allocated |\r\n|----------- |---------:|----------:|----------:|-------:|----------:|\r\n| Marshalled | 2.919 ms | 0.0460 ms | 0.0408 ms | 3.9063 |  79.03 KB |\r\n| StackAlloc | 2.887 ms | 0.0555 ms | 0.0519 ms | 3.9063 |  78.82 KB |\r\n\r\n<details><summary>Benchmark code</summary>\r\n\r\n```c#\r\npublic Uri sRGB = new(\"C:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color\\\\sRGB Color Space Profile.icm\", UriKind.Absolute);\r\n\r\n[Benchmark]\r\npublic Color Benchmark()\r\n{\r\n    Color x = Color.FromAValues(1.0f, [0.0f, 1.0f, 1.0f], sRGB);\r\n    Color y = Color.FromAValues(0.5f, [0.0f, 0.5f, 1.0f], sRGB);\r\n\r\n    return x - y;\r\n}\r\n```\r\n\r\n</details>\r\n\r\n### Multiplication by factor with custom profile\r\n \r\n| Method     | Mean     | Error     | StdDev    | Allocated |\r\n|----------- |---------:|----------:|----------:|----------:|\r\n| Marshalled | 1.918 ms | 0.0116 ms | 0.0097 ms |  47.67 KB |\r\n| StackAlloc | 1.915 ms | 0.0153 ms | 0.0144 ms |  47.53 KB |\r\n\r\n<details><summary>Benchmark code</summary>\r\n\r\n```c#\r\npublic Uri sRGB = new(\"C:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color\\\\sRGB Color Space Profile.icm\", UriKind.Absolute);\r\n\r\n[Benchmark]\r\npublic Color Benchmark()\r\n{\r\n    Color x = Color.FromAValues(1.0f, [0.0f, 1.0f, 1.0f], sRGB);\r\n\r\n    return x * 0.1f;\r\n}\r\n```\r\n\r\n</details>\r\n\r\n### Raw Translate method call chain\r\n\r\n| Method     | Mean      | Error    | StdDev   | Gen0   | Allocated |\r\n|----------- |----------:|---------:|---------:|-------:|----------:|\r\n| Marshalled | 118.36 ns | 1.284 ns | 1.201 ns | 0.0086 |     144 B |\r\n| StackAlloc |  22.80 ns | 0.430 ns | 0.402 ns | 0.0043 |      72 B |\r\n\r\n## Customer Impact\r\n\r\nImproved performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNone.\r\n\r\n## Testing\r\n\r\nBuild, benchmark, using the code and comparing outputs (addition, subtraction, multiplication).\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9330)","Url":"https://github.com/dotnet/wpf/pull/9330","RelatedDescription":"Open PR \"Remove Marshalling code during Color Translation, reduce allocations\" (#9330)"},{"Id":"2382047068","IsPullRequest":true,"CreatedAt":"2024-06-30T05:48:48","Actor":"dotnet-maestro[bot]","Number":"9329","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20240629.1\r\n- **Date Produced**: June 29, 2024 1:10:46 PM UTC\r\n- **Commit**: 2a6733dc972bbe0e4bb0489385fb7ce42163bf66\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-preview.7.24328.1 to 9.0.0-preview.7.24329.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-preview.7.24328.1 to 9.0.0-preview.7.24329.1][1]\r\n  - **System.Drawing.Common**: [from 9.0.0-preview.7.24328.1 to 9.0.0-preview.7.24329.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.CodeDom**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Management**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Speech**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.7.24327.11 to 9.0.0-preview.7.24328.10][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/87a46f6799...2a6733dc97\r\n[2]: https://github.com/dotnet/runtime/compare/d88e6680e1...a900bbf6fc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9329)","Url":"https://github.com/dotnet/wpf/pull/9329","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#9329)"},{"Id":"2381894263","IsPullRequest":false,"CreatedAt":"2024-06-29T18:03:44","Actor":"ammfx","Number":"9328","RawContent":null,"Title":"ItemsControl automation: all child DataItem's are empty, except first DataItem","State":"open","Body":"### Description\r\n\r\nIn net8 `ItemsControl` support automation (`ItemsControlWrapperAutomationPeer` / `ItemsControlItemAutomationPeer` were added) - so in \"Visual UI Automation Verify\" `ItemsControl` is displayed as `ControlType.List` with each item as `ControlType.DataItem`. But in some cases all DataItems except first are empty.\r\n```\r\nList (3)\r\n  DataItem (3)\r\n    Text\r\n    ComboBox\r\n    ComboBox\r\n  DataItem (0) // empty\r\n  DataItem (0) // empty\r\n```\r\n\r\n### Reproduction Steps\r\n\r\nReproduces 100% in production app, I didn't succeed in creating minimal repro app.\r\nSome observations:\r\n- issue occur if `ItemTemplate` have 2 or more `ComboBox`/`ListBox` controls AND both their `SelectedItem` are set initially to valid value. Leaving one `ComboBox`, or removing `SelectedItem=\"...\"`, or setting it to null makes everything work. Any number of other controls in `ItemTemplate` did not cause issue.\r\n- this `ItemsControl` is located inside second `TabItem` - moving it to first `TabItem` or setting `TabControl`'s `TabIndex=\"1\"` makes everything work.\r\n\r\nLooks like caching/virtualization/optimization issue.\r\n\r\n### Expected behavior\r\n\r\nAll DataItems have child elements\r\n\r\n\r\n### Actual behavior\r\n\r\nAll DataItems except first are empty\r\n\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\na] Reset `item.ChildrenValid` to false if `item.Children is null`:\r\n(copied original `ItemsControlWrapperAutomationPeer` / `ItemsControlItemAutomationPeer` because they are internal)\r\n```cs\r\npublic class ItemsControl2 : ItemsControl\r\n{\r\n    protected override AutomationPeer OnCreateAutomationPeer() =>\r\n        new ItemsControlWrapperAutomationPeer2(this);\r\n\r\n    class ItemsControlWrapperAutomationPeer2 : ItemsControlAutomationPeer\r\n    {\r\n        public ItemsControlWrapperAutomationPeer2(ItemsControl owner) : base(owner) { }\r\n        protected override ItemAutomationPeer CreateItemAutomationPeer(object item) =>\r\n            new ItemsControlItemAutomationPeer2(item, this);\r\n        protected override AutomationControlType GetAutomationControlTypeCore() => AutomationControlType.List;\r\n        protected override string GetClassNameCore() => \"ItemsControl\";\r\n\r\n        protected override List<AutomationPeer> GetChildrenCore()\r\n        {\r\n            var items = base.GetChildrenCore();\r\n            foreach (ItemsControlItemAutomationPeer2 item in items ?? [])\r\n                if (item.Children is null && item.ChildrenValid)\r\n                    item.ChildrenValid = false;\r\n            return items;\r\n        }\r\n    }\r\n    class ItemsControlItemAutomationPeer2 : ItemAutomationPeer\r\n    {\r\n        public ItemsControlItemAutomationPeer2(object item, ItemsControlWrapperAutomationPeer2 p) : base(item, p) { }\r\n        protected override AutomationControlType GetAutomationControlTypeCore() => AutomationControlType.DataItem;\r\n        protected override string GetClassNameCore() => \"ItemsControlItem\";\r\n\r\n        public object Children => _children.GetValue(this);\r\n        static readonly FieldInfo _children = typeof(AutomationPeer)\r\n            .GetField(\"_children\", BindingFlags.Instance | BindingFlags.NonPublic);\r\n\r\n        public bool ChildrenValid\r\n        {\r\n            get => (bool)_childrenValid.GetValue(this);\r\n            set => _childrenValid.SetValue(this, value);\r\n        }\r\n        static readonly FieldInfo _childrenValid = typeof(AutomationPeer)\r\n            .GetField(\"_childrenValid\", BindingFlags.Instance | BindingFlags.NonPublic);\r\n    }\r\n}\r\n```\r\n\r\n---\r\nor b) In previous net version all ItemsControl's child automation elements were merged as plain list into ItemsControl's parent automation element - this behavior can be restored on application startup using:\r\n```cs\r\nvar accessibilitySwitches = Type.GetType(\"System.Windows.AccessibilitySwitches, WindowsBase, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\");\r\nvar field = accessibilitySwitches.GetField(\"_ItemsControlDoesNotSupportAutomation\", BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.DeclaredOnly);\r\nfield.SetValue(null, 1);\r\n```\r\nSo another workaround to have all items child automation elements, and have them grouped - is to set this switch and wrap `ItemItemplate` into some control that have automation element, for example custom Grid:\r\n```cs\r\npublic class Grid2 : Grid\r\n{\r\n    protected override AutomationPeer OnCreateAutomationPeer() => new Grid2Peer(this);\r\n\r\n    class Grid2Peer(Grid2 owner) : FrameworkElementAutomationPeer(owner) { }\r\n}\r\n```\r\n```xml\r\n<ItemsControl.ItemTemplate>\r\n  <DataTemplate>\r\n    <ctrls:Grid2 AutomationProperties.AutomationId=\"item\">\r\n      <!-- children -->\r\n    </ctrls:Grid2>\r\n  </DataTemplate>\r\n</ItemsControl.ItemTemplate>\r\n```\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nWindows x64 10.0.19045.4529, net 8.0.5\r\n\r\n### Other information\r\n\r\nAdding logging to `ItemsControlWrapperAutomationPeer` / `ItemsControlItemAutomationPeer` shows before workaround (ch is `base.GetChildrenCore()`):\r\n```\r\nItemPeer=1 ctor()\r\nItemPeer=2 ctor()\r\nItemPeer=3 ctor()\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=null  (*)\r\n  ItemPeer=3 GetChildrenCore(): ch=null\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n```\r\n\r\nAfter workaround a):\r\n```\r\nItemPeer=1 ctor()\r\nItemPeer=2 ctor()\r\nItemPeer=3 ctor()\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=null  (*)\r\n  ItemPeer=3 GetChildrenCore(): ch=null\r\n  ItemPeer=2 GetChildrenCore(): ch=null\r\n  ItemPeer=3 GetChildrenCore(): ch=null\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=3 GetChildrenCore(): ch=null\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=3 GetChildrenCore(): ch=null\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\n  ItemPeer=3 GetChildrenCore(): ch=1\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\nItemsControl ch=3\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\n  ItemPeer=3 GetChildrenCore(): ch=1\r\n  ItemPeer=1 GetChildrenCore(): ch=1\r\n  ItemPeer=2 GetChildrenCore(): ch=1\r\n  ItemPeer=3 GetChildrenCore(): ch=1\r\n```\r\nin places (*) while stopping in breakpoint I can clearly see that only first ItemsControl's item is rendered in UI, so technically ch=null is correct, but looks like `_childrenValid=true` is cached and `GetChildrenCore()` in items 2,3 are never invoked again, even after children appear","Url":"https://github.com/dotnet/wpf/issues/9328","RelatedDescription":"Open issue \"ItemsControl automation: all child DataItem's are empty, except first DataItem\" (#9328)"},{"Id":"2381740897","IsPullRequest":false,"CreatedAt":"2024-06-29T13:11:11","Actor":"peaceshi","Number":"9327","RawContent":null,"Title":"build error: 275='IAddChildInternal' at TFM net35 with dotnet8","State":"open","Body":"### Description\r\n\r\nWPF unknown error\r\n\r\n### Reproduction Steps\r\n\r\nhttps://github.com/kongying-tavern/wpf-template/tree/main\r\n\r\n### Expected behavior\r\n\r\nThis template works with dotnet6 and dotnet7 except dotnet8\r\n\r\n### Actual behavior\r\n\r\nbuild success with dotnet8 \r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\n_No response_","Url":"https://github.com/dotnet/wpf/issues/9327","RelatedDescription":"Open issue \"build error: 275='IAddChildInternal' at TFM net35 with dotnet8\" (#9327)"},{"Id":"2381606296","IsPullRequest":false,"CreatedAt":"2024-06-29T09:25:39","Actor":"control0forver","Number":"9326","RawContent":null,"Title":"Controlling UIElement refresh rate","State":"open","Body":"I noticed via the System.Windows.Media.CompositionTarget.Rendering event that the app's frames per second are very irregular, when I use the mouse to interact with a visual control, the frames per second instantly goes from around 60 to over 400, and it occurred to me that this is most likely due to my customizing the style of the control.\r\nSo I wondered if I could limit the frames per second of a UIElement through code; I found this code, but it seems to only limit the framerate of the final rendering of the entire app, and it still doesn't limit the frames per second of a UIElement\r\n``` csharp\r\nprivate void Application_Startup(object sender, StartupEventArgs e)\r\n{\r\n    Timeline.DesiredFrameRateProperty.OverrideMetadata(\r\n       typeof(Timeline), new FrameworkPropertyMetadata(\r\n       new FrameworkPropertyMetadata { DefaultValue = 60 }\r\n       );\r\n}\r\n```\r\nHere's the frame rate monitor I mentioned above along with the custom control styling code:\r\n``` csharp\r\nulong __frameCounter = 0;\r\nreadonly Stopwatch __stopwatch = new();\r\nprivate void CompositionTarget_Rendering(object? sender, EventArgs e)\r\n{\r\n    if (__frameCounter++ == 0)\r\n    {\r\n        // Starting timing.\r\n        __stopwatch.Start();\r\n    }\r\n\r\n    // Determine frame rate in fps (frames per second).\r\n    if (__frameCounter >= 60)\r\n    {\r\n        long frameRate = (long)(__frameCounter / __stopwatch.Elapsed.TotalSeconds);\r\n        DebugLabel_FPS.Content = $\"FPS: {frameRate}\";\r\n        __frameCounter = 0;\r\n        __stopwatch.Restart();\r\n    }\r\n}\r\n```\r\n``` xaml\r\n<Style x:Key=\"ButtonStyle\" TargetType=\"Button\">\r\n    <Setter Property=\"Background\" Value=\"{DynamicResource Palette_500}\"/>\r\n    <Setter Property=\"Foreground\" Value=\"{DynamicResource Palette_50}\"/>\r\n    <Setter Property=\"BorderBrush\" Value=\"{x:Null}\"/>\r\n    <Setter Property=\"BorderThickness\" Value=\"0\"/>\r\n    <Setter Property=\"FontSize\" Value=\"15.6\"/>\r\n    <Setter Property=\"Template\">\r\n        <Setter.Value>\r\n            <ControlTemplate TargetType=\"{x:Type Button}\">\r\n                <Border Effect=\"{StaticResource EffectShadow3}\" Background=\"{TemplateBinding Background}\" CornerRadius=\"{DynamicResource CornerRadiusCornerRadius}\" BorderBrush=\"{TemplateBinding BorderBrush}\" BorderThickness=\"{TemplateBinding BorderThickness}\">\r\n                    <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\r\n                </Border>\r\n            </ControlTemplate>\r\n        </Setter.Value>\r\n    </Setter>\r\n</Style>\r\n\r\n<Style TargetType=\"Button\" BasedOn=\"{StaticResource ButtonStyle}\">\r\n    <Setter Property=\"Template\">\r\n    <Setter.Value>\r\n            <ControlTemplate TargetType=\"{x:Type Button}\">\r\n                <Border Effect=\"{StaticResource EffectShadow3}\" Background=\"{TemplateBinding Background}\" CornerRadius=\"{DynamicResource CornerRadiusCornerRadius}\" BorderBrush=\"{TemplateBinding BorderBrush}\" BorderThickness=\"{TemplateBinding BorderThickness}\">\r\n                    <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\r\n                </Border>\r\n            </ControlTemplate>\r\n        </Setter.Value>\r\n    </Setter>\r\n</Style>\r\n```\r\n``` csharp\r\n        public static class UIAnimation\r\n        {\r\n            public static void Refresh()\r\n            {\r\n                MouseDownColorAnimation = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_500\"], Duration = TimeSpan.FromMilliseconds(100) };\r\n                MouseUpColorAnimation = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_300\"], Duration = TimeSpan.FromMilliseconds(300) };\r\n                MouseEnterColorAnimation = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_300\"], Duration = TimeSpan.FromMilliseconds(120) };\r\n                MouseLeaveColorAnimation = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_500\"], Duration = TimeSpan.FromMilliseconds(170) };\r\n            }\r\n\r\n\r\n            public static ColorAnimation MouseDownColorAnimation { get; private set; } = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_500\"], Duration = TimeSpan.FromMilliseconds(100) };\r\n            public static ColorAnimation MouseUpColorAnimation { get; private set; } = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_300\"], Duration = TimeSpan.FromMilliseconds(300) };\r\n            public static ColorAnimation MouseEnterColorAnimation { get; private set; } = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_200\"], Duration = TimeSpan.FromMilliseconds(120) };\r\n            public static ColorAnimation MouseLeaveColorAnimation { get; private set; } = new() { To = (Color)((ResourceDictionary)App.Current.Resources[\"CurrentColorPalette\"])[\"Palette_300\"], Duration = TimeSpan.FromMilliseconds(170) };\r\n\r\n            public static DoubleAnimation SmallerScaleAnimation { get; private set; } = new() { To = 0.97, Duration = TimeSpan.FromSeconds(0.15), EasingFunction = new QuadraticEase { EasingMode = EasingMode.EaseInOut } };\r\n            public static DoubleAnimation SmallSmallerScaleAnimation { get; private set; } = new() { To = 0.92, Duration = TimeSpan.FromSeconds(0.15), EasingFunction = new QuadraticEase { EasingMode = EasingMode.EaseInOut } };\r\n            public static DoubleAnimation NormalScaleAnimation { get; private set; } = new() { To = 1, Duration = TimeSpan.FromSeconds(0.25), EasingFunction = new QuadraticEase { EasingMode = EasingMode.EaseInOut } };\r\n            public static DoubleAnimation BiggerScaleAnimation { get; private set; } = new() { To = 1.03, Duration = TimeSpan.FromSeconds(0.15), EasingFunction = new QuadraticEase { EasingMode = EasingMode.EaseInOut } };\r\n\r\n\r\n            public static void Button_MouseUp(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                ((Control)sender).Background.BeginAnimation(SolidColorBrush.ColorProperty, MouseUpColorAnimation);\r\n\r\n                TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n\r\n                st.BeginAnimation(ScaleTransform.ScaleXProperty, NormalScaleAnimation);\r\n                st.BeginAnimation(ScaleTransform.ScaleYProperty, NormalScaleAnimation);\r\n\r\n                var ue = (UIElement)sender;\r\n                var uers = ue.RenderSize;\r\n                if (e != null)\r\n                {\r\n                    var rpos = e.GetPosition(ue);\r\n                    var rpx = rpos.X; var rpy = rpos.Y;\r\n                    if (!(\r\n                        (rpx > uers.Width || rpy > uers.Height) ||\r\n                        (rpx < 0 || rpy < 0)\r\n                        ))\r\n                    { Button_MouseEnter(sender, e); }\r\n                }\r\n            }\r\n            public static void Button_MouseDown(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                ((Control)sender).Background.BeginAnimation(SolidColorBrush.ColorProperty, MouseDownColorAnimation);\r\n\r\n                TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n\r\n                if (e != null)\r\n                {\r\n                    var p = e.MouseDevice.GetPosition((Control)sender);\r\n\r\n                    st.CenterX = p.X;\r\n                    st.CenterY = p.Y;\r\n                }\r\n\r\n                st.BeginAnimation(ScaleTransform.ScaleXProperty, SmallSmallerScaleAnimation);\r\n                st.BeginAnimation(ScaleTransform.ScaleYProperty, SmallSmallerScaleAnimation);\r\n            }\r\n            public static void Button_MouseLeave(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                ((Control)sender).Background.BeginAnimation(SolidColorBrush.ColorProperty, MouseLeaveColorAnimation);\r\n            }\r\n            public static void Button_MouseEnter(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                ((Control)sender).Background.BeginAnimation(SolidColorBrush.ColorProperty, MouseEnterColorAnimation);\r\n            }\r\n            public static void Button_MouseMove(object sender, MouseEventArgs? e)\r\n            {\r\n                if (e != null)\r\n                {\r\n                    var p = e.MouseDevice.GetPosition((Control)sender);\r\n\r\n                    TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                    ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n                    // Inverted\r\n                    st.CenterX = p.X;\r\n                    st.CenterY = p.Y;\r\n                }\r\n            }\r\n            public static void InitButton(Control button)\r\n            {\r\n                try\r\n                {\r\n                    button.Resources[\"UIA_Locked\"] = false;\r\n                    button.RenderTransform = new TransformGroup { Children = new TransformCollection(new Transform[] { new ScaleTransform(1, 1, 1, 1) }) };\r\n                    var color = (SolidColorBrush)button.Background == null ? Colors.Transparent : ((SolidColorBrush)button.Background).Color;\r\n                    button.Background = new SolidColorBrush(color);\r\n\r\n                    button.MouseEnter -= Button_MouseEnter;\r\n                    button.MouseLeave -= Button_MouseLeave;\r\n                    button.PreviewMouseDown -= Button_MouseDown;\r\n                    button.PreviewMouseUp -= Button_MouseUp;\r\n                    button.PreviewMouseMove -= Button_MouseMove;\r\n\r\n                    button.MouseEnter += Button_MouseEnter;\r\n                    button.MouseLeave += Button_MouseLeave;\r\n                    button.PreviewMouseDown += Button_MouseDown;\r\n                    button.PreviewMouseUp += Button_MouseUp;\r\n                    button.PreviewMouseMove += Button_MouseMove;\r\n\r\n                    Button_MouseLeave(button, null);\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    InitCard(button);\r\n                }\r\n            }\r\n            public static void InitButtons(IEnumerable<Button> buttons)\r\n            {\r\n                foreach (var button in buttons)\r\n                {\r\n                    InitButton(button);\r\n                }\r\n            }\r\n\r\n\r\n            public static void Card_MouseUp(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n\r\n                st.BeginAnimation(ScaleTransform.ScaleXProperty, NormalScaleAnimation);\r\n                st.BeginAnimation(ScaleTransform.ScaleYProperty, NormalScaleAnimation);\r\n            }\r\n            public static void Card_MouseDown(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n\r\n                if (e != null)\r\n                {\r\n                    var p = e.MouseDevice.GetPosition((Control)sender);\r\n\r\n                    st.CenterX = p.X;\r\n                    st.CenterY = p.Y;\r\n                }\r\n\r\n                st.BeginAnimation(ScaleTransform.ScaleXProperty, SmallerScaleAnimation);\r\n                st.BeginAnimation(ScaleTransform.ScaleYProperty, SmallerScaleAnimation);\r\n            }\r\n            public static void Card_MouseLeave(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n\r\n                st.BeginAnimation(ScaleTransform.ScaleXProperty, NormalScaleAnimation);\r\n                st.BeginAnimation(ScaleTransform.ScaleYProperty, NormalScaleAnimation);\r\n\r\n                //var anim = MouseLeaveColorAnimation;\r\n                //anim.To = (Color)((Control)sender).Resources[\"_UIA_Color\"];\r\n                //((Control)sender).Background.BeginAnimation(SolidColorBrush.ColorProperty, anim);\r\n            }\r\n            public static void Card_MouseEnter(object sender, MouseEventArgs? e)\r\n            {\r\n                if ((bool)((Control)sender).Resources[\"UIA_Locked\"])\r\n                    return;\r\n\r\n                TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n\r\n                if (e != null)\r\n                {\r\n                    var p = e.MouseDevice.GetPosition((Control)sender);\r\n\r\n                    st.CenterX = p.X;\r\n                    st.CenterY = p.Y;\r\n                }\r\n\r\n                st.BeginAnimation(ScaleTransform.ScaleXProperty, BiggerScaleAnimation);\r\n                st.BeginAnimation(ScaleTransform.ScaleYProperty, BiggerScaleAnimation);\r\n                //((Control)sender).Background.BeginAnimation(SolidColorBrush.ColorProperty, MouseEnterColorAnimation);\r\n            }\r\n            public static void Card_MouseMove(object sender, MouseEventArgs? e)\r\n            {\r\n                if (e != null)\r\n                {\r\n                    var p = e.MouseDevice.GetPosition((Control)sender);\r\n\r\n                    TransformGroup TG = (TransformGroup)((Control)sender).RenderTransform;\r\n                    ScaleTransform st = (ScaleTransform)TG.Children[0];\r\n                    st.CenterX = p.X;\r\n                    st.CenterY = p.Y;\r\n                }\r\n            }\r\n            public static void InitCard(Control card)\r\n            {\r\n                try\r\n                {\r\n                    //InitButton(card);\r\n                    card.Resources[\"UIA_Locked\"] = false;\r\n                    card.RenderTransform = new TransformGroup { Children = new TransformCollection(new Transform[] { new ScaleTransform(1, 1, .5, .5) }) };\r\n                    //var color = (SolidColorBrush)card.Background == null ? Colors.Transparent : ((SolidColorBrush)card.Background).Color;\r\n                    //card.Background = new SolidColorBrush(color);\r\n\r\n                    //card.Resources[\"_UIA_Color\"] = color;\r\n                    card.MouseEnter -= Card_MouseEnter;\r\n                    card.MouseLeave -= Card_MouseLeave;\r\n                    card.PreviewMouseDown -= Card_MouseDown;\r\n                    card.PreviewMouseUp -= Card_MouseUp;\r\n                    card.PreviewMouseMove -= Card_MouseMove;\r\n\r\n                    card.MouseEnter += Card_MouseEnter;\r\n                    card.MouseLeave += Card_MouseLeave;\r\n                    card.PreviewMouseDown += Card_MouseDown;\r\n                    card.PreviewMouseUp += Card_MouseUp;\r\n                    card.PreviewMouseMove += Card_MouseMove;\r\n\r\n                    Card_MouseLeave(card, null);\r\n                }\r\n                catch (Exception)\r\n                { }\r\n            }\r\n            public static void InitCards(IEnumerable<Control> cards)\r\n            {\r\n                foreach (var card in cards)\r\n                {\r\n                    InitCard(card);\r\n                }\r\n            }\r\n        }\r\n```","Url":"https://github.com/dotnet/wpf/issues/9326","RelatedDescription":"Open issue \"Controlling UIElement refresh rate\" (#9326)"},{"Id":"2381405539","IsPullRequest":true,"CreatedAt":"2024-06-29T05:59:19","Actor":"dotnet-maestro[bot]","Number":"9325","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20240628.1\r\n- **Date Produced**: June 28, 2024 1:28:13 PM UTC\r\n- **Commit**: 87a46f67992ea3091c6073705172dff7c006c422\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 9.0.0-preview.7.24327.5 to 9.0.0-preview.7.24328.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 9.0.0-preview.7.24327.5 to 9.0.0-preview.7.24328.1][1]\r\n  - **System.Drawing.Common**: [from 9.0.0-preview.7.24327.5 to 9.0.0-preview.7.24328.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.CodeDom**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Management**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Speech**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.7.24326.3 to 9.0.0-preview.7.24327.11][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b3b877ee61...87a46f6799\r\n[2]: https://github.com/dotnet/runtime/compare/58e1a7e6e4...d88e6680e1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9325)","Url":"https://github.com/dotnet/wpf/pull/9325","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#9325)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-07-05T03:30:24.6171433Z","RunDurationInMilliseconds":426}