{"Data":{"GitHub":{"Issues":[{"Id":"2720392264","IsPullRequest":true,"CreatedAt":"2024-12-05T13:16:05","Actor":"dotnet-maestro[bot]","Number":"10145","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241204.4\r\n- **Date Produced**: December 5, 2024 8:28:25 AM UTC\r\n- **Commit**: 45d845e04c05fbe5da9838c454bbc3af1df6be81\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e8de341512...45d845e04c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10145)","Url":"https://github.com/dotnet/wpf/pull/10145","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10145)"},{"Id":"2719966867","IsPullRequest":true,"CreatedAt":"2024-12-05T10:14:37","Actor":"himgoyalmicro","Number":"10144","RawContent":null,"Title":"[StyleCleanUp] Addressing CA warnings Part 1","State":"open","Body":"## Description\r\n\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes address the following Errors/Warnings in the src folder of WPF:\r\n\r\n- **CA2249:** Consider using 'string.Contains' instead of 'string.IndexOf'\r\n- **CA2251**: Use String.Equals over String.Compare\r\n- **CA1847**: Use string.Contains(char) instead of string.Contains(string) with single characters\r\n- **CA1845**: Use span-based 'string.Concat'\r\n- **CA1846**: Prefer AsSpan over Substring\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings and hence easing out the overall understanding.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression\r\n\r\nNone\r\n\r\n## Testing\r\n\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\n\r\nLow\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10144)","Url":"https://github.com/dotnet/wpf/pull/10144","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing CA warnings Part 1\" (#10144)"},{"Id":"2719195103","IsPullRequest":true,"CreatedAt":"2024-12-05T03:00:32","Actor":"dotnet-maestro[bot]","Number":"10143","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241205.2\r\n- **Date Produced**: December 5, 2024 6:20:07 PM UTC\r\n- **Commit**: 6ecb29a0b34c73048062257c1cab74b219759260\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24603.5 to 10.0.0-alpha.1.24605.2][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24603.5 to 10.0.0-alpha.1.24605.2][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24603.5 to 10.0.0-alpha.1.24605.2][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/f432c76433...6ecb29a0b3\r\n[4]: https://github.com/dotnet/runtime/compare/12afdedd80...e99557baff\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10143)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10143","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10143)"},{"Id":"2718551251","IsPullRequest":false,"CreatedAt":"2024-12-04T18:51:44","Actor":"vsfeedback","Number":"10142","RawContent":null,"Title":"Issue: Unexpected Keyboard Behavior with WPF RichTextBox and Visual Studio","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Issue:-Unexpected-Keyboard-Behavior-with/10793784)._\n\n---\n[severity:It bothers me. A fix would be nice]\nWhen working with a WPF application containing a RichTextBox control, we are experiencing a strange behavior involving keyboard input. If the user types text into the RichTextBox and then presses the backspace or delete key, the expected behavior is for the text in the RichTextBox to be deleted.\n \nHowever, when a file is open and highlighted in Visual Studio behind the application window, pressing backspace or delete deletes text from the file in Visual Studio, rather than from the RichTextBox in the WPF application. This issue only occurs when the file in Visual Studio is focused, and the WPF window is in the foreground.\n \nSteps to Reproduce:\nOpen a WPF application containing a RichTextBox.\nType text into the RichTextBox.\nOpen a file in Visual Studio and highlight some text in the file.\nClick on the WPF window with the RichTextBox to focus it, and type text.\nPress backspace or delete.\nObserve that the text is deleted from the file in Visual Studio, not the RichTextBox in the WPF window.\nExpected Behavior:\nThe backspace and delete keys should only affect the RichTextBox content in the WPF window, regardless of whether a file is open and highlighted in Visual Studio behind the window.\n \nEnvironment:\nVisual Studio Version: VS2019/VS2022\n.NET Framework : 4.8\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/19/2024, 01:26 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Ann Yang [MSFT] on 11/19/2024, 07:13 PM: \n\n<p>Thank you for your feedback!<br>\nIs this still stable to reproduce on the latest version 17.12.1 downloading from  <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads/\">https://visualstudio.microsoft.com/downloads/</a>?<br>\nIf yes, could you attach a video of the issue you describe using [ScreenToGif] (  <a target='_blank' href=\"https://www.screentogif.com/\">https://www.screentogif.com/</a>) or a similar tool?  A video can help us see the actions more directly.</p>\n<p>We are looking forward to hearing from you soon.<br>\nThanks</p>\n\n#### Rashmi H S on 11/19/2024, 09:02 PM: \n\n(private comment, text removed)\n#### Ann Yang [MSFT] on 11/19/2024, 11:05 PM: \n\n<p>Thanks for your reply, I used a blank WPF Framework project and target framework on 4.8, but this issue didn’t reproduce on myside, please see my screen recording.<br>\n<img src=\"https://aka.ms/dc/image?name=B261a20aa9bf246b9b2894bae4a604e79638676825813671036_RichTextBoxIssue.gif&amp;tid=261a20aa9bf246b9b2894bae4a604e79638676825813671036\" alt=\"RichTextBoxIssue.gif\"><br>\nplease note, I worked in Microsoft Visual Studio Professional 2019 Version 16.11.42, Could you upgrade your VS and try again? is there a sample project for us to investigate this issue?</p>\n\n#### Rashmi H S on 11/20/2024, 10:11 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 11/21/2024, 11:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Rashmi H S on 11/25/2024, 09:00 PM: \n\n(private comment, text removed)\n#### Rashmi H S on 12/2/2024, 00:35 AM: \n\n(private comment, text removed)","Url":"https://github.com/dotnet/wpf/issues/10142","RelatedDescription":"Open issue \"Issue: Unexpected Keyboard Behavior with WPF RichTextBox and Visual Studio\" (#10142)"},{"Id":"2718469418","IsPullRequest":true,"CreatedAt":"2024-12-04T18:11:23","Actor":"dotnet-maestro[bot]","Number":"10141","RawContent":null,"Title":"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:934472a4-9da1-4b66-da04-08d961c27f17)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 934472a4-9da1-4b66-da04-08d961c27f17\r\n- **Build**: 20241204.3\r\n- **Date Produced**: December 4, 2024 8:33:31 PM UTC\r\n- **Commit**: 1a304f92ee9a0fbbf21b4c7fd5c581c11a03e77e\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-rtm.24466.1 to 6.0.0-rtm.24604.3][2]\r\n\r\n[2]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCbb66af4286a3180f30152f1d8de98ae889f38ade&targetVersion=GC1a304f92ee9a0fbbf21b4c7fd5c581c11a03e77e&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:934472a4-9da1-4b66-da04-08d961c27f17)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10141)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10141","RelatedDescription":"Open PR \"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#10141)"},{"Id":"2701047299","IsPullRequest":true,"CreatedAt":"2024-12-04T12:00:31","Actor":"himgoyalmicro","Number":"10128","RawContent":null,"Title":"[StyleCleanUp] Addressing CA warnings Part 1","State":"closed","Body":"## Description\r\n\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR https://github.com/dotnet/wpf/pull/10080 and references to the issue https://github.com/dotnet/wpf/issues/10017.\r\n\r\nThe current changes address the following Errors/Warnings in the src folder of WPF:\r\n\r\n- **CA2249**: Consider using 'string.Contains' instead of 'string.IndexOf'\r\n- **CA2251**: Use String.Equals over String.Compare\r\n- **CA1847**: Use string.Contains(char) instead of string.Contains(string) with single characters\r\n- **CA1845**: Use span-based 'string.Concat'\r\n- **CA1846**: Prefer AsSpan over Substring\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings and hence easing out the overall understanding.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression\r\n\r\nNone\r\n\r\n## Testing\r\n\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\n\r\nLow\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10128)","Url":"https://github.com/dotnet/wpf/pull/10128","RelatedDescription":"Closed or merged PR \"[StyleCleanUp] Addressing CA warnings Part 1\" (#10128)"},{"Id":"2716925110","IsPullRequest":false,"CreatedAt":"2024-12-04T08:31:25","Actor":"christian-clausen","Number":"10140","RawContent":null,"Title":"Contrast issues in Fluent color scheme","State":"open","Body":"### Description\n\nIt seems there is something fundamentally wrong with the color scheme. One example is `CardBackgroundFillColorDefault` versus `CardBackgroundFillColorSecondary`.\n\nIn both dark and light mode, when changing from `Default` to `Secondary`, the (background) color gets darker.\n\nConsequently, when changing from `Default` to `Secondary`, the contrast between text and background *increases* in dark mode and *decreases* in light mode.\n\nThe consequence of this is that if we want a certain UI design to have higher contrast in both dark and light modes, we cannot use these built-in definitions, but need to define our own, theme-dependent color scheme.\n\n### Reproduction Steps\n\n\n1. Create a WPF app with Fluent enabled, and add this to the main window:\n```xaml\n<Border\n    Background=\"{DynamicResource CardBackgroundFillColorDefaultBrush}\"\n    BorderBrush=\"Blue\"\n    BorderThickness=\"1\"\n    Height=\"60\"\n    Width=\"100\">\n    <StackPanel HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\">\n        <TextBlock Foreground=\"{DynamicResource TextFillColorSecondaryBrush}\" Text=\"Hello World\" />\n    </StackPanel>\n</Border>\n```\n2. Set Windows colors to *Dark*\n3. Set border background to `CardBackgroundFillColorDefaultBrush` and run\n4. Set border background to `CardBackgroundFillColorSecondaryBrush` and run\n5. Set Windows colors to *Light*\n6. Set border background to `CardBackgroundFillColorDefaultBrush` and run\n7. Set border background to `CardBackgroundFillColorSecondaryBrush` and run\n\n\n### Expected behavior\n\nIf `Secondary` is *darker* than `Default` in *dark mode*, then `Secondary` should *lighter* than `Default` in *light mode*.\n\n### Actual behavior\n\n`Secondary` is *darker* than `Default` in both *dark mode* and *light mode*.\n\nHere follows screenshots of code and results. All examples use the same text brush, `TextFillColorSecondaryBrush` and varies border background from `Default` to `Secondary` in dark mode and then light mode.\n\nDark mode and border background `CardBackgroundFillColorDefaultBrush`:\n![Image](https://github.com/user-attachments/assets/f53b86a9-09d2-4275-bc46-a7683a1a5e8b)\n\nDark mode and border background `CardBackgroundFillColorSecondaryBrush`:\n![Image](https://github.com/user-attachments/assets/380aaaa9-72c9-4d0e-8c1e-6eb58a08c4eb)\n\nLight mode and border background `CardBackgroundFillColorDefaultBrush`:\n![Image](https://github.com/user-attachments/assets/7e63c209-0da8-4604-b293-9ff3f70a3368)\n\nLight mode and border background `CardBackgroundFillColorSecondaryBrush`:\n![Image](https://github.com/user-attachments/assets/ac1912cd-1616-47e5-a565-4c02c969599b)\n\n\n\n### Regression?\n\nNot really because this is the first version of the Windows 11 Theme, but I did compare to WinUI where the color definitions are different.\n\nIn WinUI there seems to be a single definition covering both light and dark modes with alpha taking care of consistency:\n![Image](https://github.com/user-attachments/assets/7d50e19e-e5a5-4ab5-8f5d-b9008eeb70b0)\n\nIn WPF Fluent, light mode equals WinUI:\n![Image](https://github.com/user-attachments/assets/194290e0-e75e-4022-bffa-7338ee963cad)\n\nBut the dark mode is different:\n![Image](https://github.com/user-attachments/assets/6f1c30ec-bea2-47bf-957e-ea95e847584e)\n\n\n\n \n\n### Known Workarounds\n\nDefine our own theme-dependent color scheme.\n\n### Impact\n\nThis impacts everyone developing WPF apps with Windows 11 theming leading to lower developer productivity. When contrast issues are not discovered during development and quality assurance, this leads to WPF app solution accessibility issues for end users.\n\n### Configuration\n\n```\nC:\\tmp>dotnet --info\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.4a280210\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.19045\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100\\\n```\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10140","RelatedDescription":"Open issue \"Contrast issues in Fluent color scheme\" (#10140)"},{"Id":"2716924689","IsPullRequest":false,"CreatedAt":"2024-12-04T08:31:11","Actor":"JerryJian","Number":"10139","RawContent":null,"Title":"High-resolution images display abnormally in Software rendering mode","State":"open","Body":"### Description\n\nI have a png image with a height of more than 40,000 pixels, which is displayed in a WPF interface. When scrolling to the back part, the display is abnormal. \n\nWhen I set the render mode to software, the image will be blue on the screen when scrolling down.\n`RenderOptions.ProcessRenderMode = RenderMode.SoftwareOnly;`\n\nWhen I set the render mode to default, the program crashed with exception thrown:\n```\nSystem.Runtime.InteropServices.COMException\n  HResult=0x88980406\n  Message=UCEERR_RENDERTHREADFAILURE (异常来自 HRESULT:0x88980406)\n  Source=PresentationCore\n  StackTrace:\n   在 System.Windows.Media.Composition.DUCE.Channel.SyncFlush() 在 System.Windows.Media.Composition\\DUCE.cs 中: 第 241 行\n   在 System.Windows.Interop.HwndTarget.UpdateWindowSettings(Boolean enableRenderTarget, Nullable`1 channelSet) 在 System.Windows.Interop\\HwndTarget.cs 中: 第 1386 行\n   在 System.Windows.Interop.HwndTarget.UpdateWindowPos(IntPtr lParam) 在 System.Windows.Interop\\HwndTarget.cs 中: 第 1278 行\n   在 System.Windows.Interop.HwndTarget.HandleMessage(WindowMessage msg, IntPtr wparam, IntPtr lparam) 在 System.Windows.Interop\\HwndTarget.cs 中: 第 800 行\n   在 System.Windows.Interop.HwndSource.HwndTargetFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled) 在 System.Windows.Interop\\HwndSource.cs 中: 第 1018 行\n   在 MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   在 MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n   在 System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n   在 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\n   在 System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\n   在 MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\n```\n\n### Reproduction Steps\n\nThe source code is here: [JerryJian/LargeImageTest](https://github.com/JerryJian/LargeImageTest)\n\n1. Change App.xaml.cs: RenderOptions.ProcessRenderMode = RenderMode.Software;\n2. Compile the program, launch it\n3. Scroll down, the screen become blue\n\n1. Change App.xaml.cs: RenderOptions.ProcessRenderMode = RenderMode.Default;\n2. Compile the program, launch it\n3. Exception thrown on my computer\n\nMy system information:\n\nOperating System: Windows Pro 11 24H2, \nVersion: 26100.2454, \nExperience pack: 1000.26100.36.0\n\nGraphics Card: NVIDIA GeForce GTX 1650\nDriver version: 32.0.15.6094\nDirectX version: 12 (FL 12.1)\n\n\n\n### Expected behavior\n\nThe large image display well when render mode is software.\n\n### Actual behavior\n\nThe large image displays abnormally.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10139","RelatedDescription":"Open issue \"High-resolution images display abnormally in Software rendering mode\" (#10139)"},{"Id":"2701113319","IsPullRequest":true,"CreatedAt":"2024-12-04T07:23:59","Actor":"siagupta0202","Number":"10129","RawContent":null,"Title":"Fixing Disabled UI state in radiobutton","State":"closed","Body":"Fixes https://github.com/microsoft/WPF-Samples/issues/673\r\n\r\n\r\n## Description\r\n\r\nFixes the background color when the radio buttons are disabled\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\nYes\r\n## Testing\r\n\r\nLocal build pass. Tested with Sample applications.\r\n## Risk\r\n\r\nLow\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10129)","Url":"https://github.com/dotnet/wpf/pull/10129","RelatedDescription":"Closed or merged PR \"Fixing Disabled UI state in radiobutton\" (#10129)"},{"Id":"2713864124","IsPullRequest":true,"CreatedAt":"2024-12-04T07:16:17","Actor":"dotnet-maestro[bot]","Number":"10137","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241203.5\r\n- **Date Produced**: December 3, 2024 11:36:19 PM UTC\r\n- **Commit**: f432c76433d916d7c9762e50e6abf59d9ec41f2c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24578.1 to 10.0.0-alpha.1.24603.5][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24578.1 to 10.0.0-alpha.1.24603.5][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24578.1 to 10.0.0-alpha.1.24603.5][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/d02c89d400...f432c76433\r\n[4]: https://github.com/dotnet/runtime/compare/fe3d5b5f70...12afdedd80\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10137)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10137","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10137)"},{"Id":"2704260615","IsPullRequest":true,"CreatedAt":"2024-12-03T12:56:03","Actor":"dipeshmsft","Number":"10132","RawContent":null,"Title":"Matching the list of color resource keys in Light, Dark and HC files for Fluent","State":"closed","Body":"## Description\r\nAs of now there is a mismatch between the number of keys in Fluent color ResourceDictionary files ( Light.xaml, Dark.xaml and HC.xaml ). If someone uses one of those resources as a StaticResource in their applications, the applications will crash on theme change.\r\n\r\n## Customer Impact\r\nPrevents developers from running into possible crash scenarios.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal testing, Automated Unit tests\r\n\r\n## Risk\r\nMinimal. Resources have been added rather than removed so if anyone is already using the resource, they won't see any crash.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10132)","Url":"https://github.com/dotnet/wpf/pull/10132","RelatedDescription":"Closed or merged PR \"Matching the list of color resource keys in Light, Dark and HC files for Fluent\" (#10132)"},{"Id":"2694611044","IsPullRequest":true,"CreatedAt":"2024-12-03T12:55:43","Actor":"siagupta0202","Number":"10120","RawContent":null,"Title":"Fixing window theme changes when system's theme is changed","State":"closed","Body":"\r\n## Description\r\nSetting the Application ThemeMode to Light/Dark and changing the system's theme would not reflect on the window when the window is set to System ThemeMode. \r\n\r\n\r\n## Regression\r\n\r\nYes\r\n## Testing\r\nLocal build pass. Tested with Sample applications\r\n\r\n## Risk\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10120)","Url":"https://github.com/dotnet/wpf/pull/10120","RelatedDescription":"Closed or merged PR \"Fixing window theme changes when system's theme is changed\" (#10120)"},{"Id":"2714363042","IsPullRequest":false,"CreatedAt":"2024-12-03T08:46:34","Actor":"PxC-MKias","Number":"10138","RawContent":null,"Title":"Why do Wpf TextBoxes only mark some Events as Handled","State":"open","Body":"### Description\n\nI work on some Interaction Detection and use the fact that Controls mark RoutedEvents as Handled when they handle them.\nUnfortunately, TextBoxes only mark `TextCompositionEventArgs` in the `OnTextInput` method and `ExecutedRoutedEventArgs` in the `OnSpace` as Handled (see [TextEditorTyping.cs#L386](https://github.com/dotnet/wpf/blob/227c5cfddb3b6098d56706c1c22161d1b6dbe88c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Documents/TextEditorTyping.cs#L386)). All other Events (Delete, Key Events, ...) that are also  implemented in `TextEditorTyping` are not marked as handled. Is there a Reason for that? It is a problem for my usecase.\n\n### Reproduction Steps\n\nRegister a ClassHandler for handled Events and debug what Controls handle the events.\n\n```\nKeyEventHandler keyEventHandler = /* please ask for the implementation if its necessary */\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.PreviewKeyDownEvent, keyEventHandler, true);\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.KeyDownEvent, keyEventHandler, true);\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.PreviewKeyUpEvent, keyEventHandler, true);\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.KeyUpEvent, keyEventHandler, true);\n```\n\n### Expected behavior\n\nTextBoxes handle all Events that change its text.\n\n### Actual behavior\n\nTextBoxes only mark `TextCompositionEventArgs` in the `OnTestInput` method and `ExecutedRoutedEventArgs` in the `OnSpace` as Handled.\nAll common KeyEvents do not mark events as Handled, as well as all other event handling methods OnBackspace, OnDelete, OnToggleInsert, ...\n\n [TextEditorTyping.cs#L386](https://github.com/dotnet/wpf/blob/227c5cfddb3b6098d56706c1c22161d1b6dbe88c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Documents/TextEditorTyping.cs#L386)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\nNot configuration specific as far as I know, but the target framework is net80-windows\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10138","RelatedDescription":"Open issue \"Why do Wpf TextBoxes only mark some Events as Handled\" (#10138)"},{"Id":"2706232694","IsPullRequest":true,"CreatedAt":"2024-12-03T07:19:50","Actor":"dipeshmsft","Number":"10136","RawContent":null,"Title":"[release/9.0] Fixes window backdrop and background in Windows 10 and window theme interactions with system changes","State":"closed","Body":"Fixes # <!-- Issue Number --> #10096 \r\n\r\n## Description\r\nIn Windows 10, when using Fluent theme the background of the window appears black. This PR fixes the issue by including a DataTrigger that checks the OS version and in case of Windows 10, it sets the background accordingly as Windows 10 doesn't support the backdrop operations through DWM.\r\n\r\nSecondly, when Application is Light / Dark ( not System ) the Window's with ThemeMode set to system didn't react to system theme changes. This was because, when application is in light or dark, the state of fluent theme state for application didn't change and we returned it from the function without checking the window's thememode. We enabled that behavior in this PR.\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nDevelopers can use Fluent theme in Windows 10 without using the backdrop switch. Enables the correct behavior for Window System theme mode when Application's theme mode is set to Light and Dark. \r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nYes. This worked in .NET 9 Preview 4\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nSample app testing + Unit tests\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nMinimal. Fixes the behavior of Fluent theme in Windows 10 and when application theme is set to Light / Dark\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10136)","Url":"https://github.com/dotnet/wpf/pull/10136","RelatedDescription":"Closed or merged PR \"[release/9.0] Fixes window backdrop and background in Windows 10 and window theme interactions with system changes\" (#10136)"},{"Id":"2705944116","IsPullRequest":true,"CreatedAt":"2024-12-03T07:19:12","Actor":"github-actions[bot]","Number":"10135","RawContent":null,"Title":"[release/9.0] Modified Expander animation mechanism in Fluent to avoid Argument Null Exception","State":"closed","Body":"Backport of #10130 to release/9.0\r\n/cc @dipeshmsft\r\n\r\nFixes https://github.com/microsoft/WPF-Samples/issues/672\r\n\r\n## Description\r\nWhile changing the ResourceDictionaries, during the invalidation, Tag property was being set to null ( default value ) which was causing an error with the animation. Replaced it with a dummy border and instead of using Tag, now I use Width property of the border which is a double and it's default value is not null. This avoids the ArgumentNullException when the expander is expanded and the Theme is changed.\r\n\r\n## Customer Impact\r\nNot taking this fix would cause a ArgumentNullException when the Expander is expanded, and the Theme is changed\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nSample App Testing + Manual UI Testing through test team\r\n\r\n## Risk\r\nLow\r\n\r\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\r\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\r\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10135)","Url":"https://github.com/dotnet/wpf/pull/10135","RelatedDescription":"Closed or merged PR \"[release/9.0] Modified Expander animation mechanism in Fluent to avoid Argument Null Exception\" (#10135)"},{"Id":"2704598284","IsPullRequest":true,"CreatedAt":"2024-12-03T07:19:03","Actor":"dipeshmsft","Number":"10133","RawContent":null,"Title":"[.NET 9 ] Fluent Style Fixes : HC.xaml loading, disabled radiobutton UI etc.","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\nhttps://github.com/microsoft/WPF-Samples/issues/673\r\n#10054 , #10043 \r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n#10094 , #10129 , #10116 , #10132\r\n\r\n## Description\r\nIn this PR, I have backported the fixes from other Fluent style fixing PRs which need to go in .NET 9. It includes the following :\r\n- Fixing HighContrast theme in Fluent\r\n- Matching the list of color resource keys in Light, Dark and HC files for Fluent\r\n- Fixes UI for RadioButton in disabled state\r\n- Adds resource keys for TabControl and TabItem\r\n\r\n## Customer Impact\r\nDevelopers will be able to use HighContrast mode, use color resource keys without issues and will receive correct UI for RadioButton. For developers who want to customize TabControl and TabItem deafult styles will be able to now do it without redefining the complete style.\r\n\r\n## Regression\r\nYes, first three of the above are regressions.\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal testing with sample apps + Unit testing\r\n\r\n## Risk\r\nMinimal. None of the originally available resource keys are removed. A few resources have been added.\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10133)","Url":"https://github.com/dotnet/wpf/pull/10133","RelatedDescription":"Closed or merged PR \"[.NET 9 ] Fluent Style Fixes : HC.xaml loading, disabled radiobutton UI etc.\" (#10133)"},{"Id":"2696390377","IsPullRequest":true,"CreatedAt":"2024-12-02T12:38:01","Actor":"ViktorHofer","Number":"10122","RawContent":null,"Title":"Correctly reference ref project for Windows.Primitives.csproj","State":"closed","Body":"Fixes https://github.com/dotnet/source-build/issues/4761\r\n\r\nWhen building windowsdesktop inside the VMR for win-x86, the System.Windows.Primitives reference assembly is missing. This PR corrects the issue by adding a ProjectReference to the System.Windows.Primitives-ref.csproj file. All other projects have that so it was probably just missed.\r\n\r\nFixes the following error:\r\n> D:\\a\\_work\\1\\s\\artifacts\\source-built-sdks\\Microsoft.DotNet.SharedFramework.Sdk\\targets\\sharedfx.targets(418,5): error : Classification matches no files: System.Windows.Primitives.dll [D:\\a\\_work\\1\\s\\src\\windowsdesktop\\src\\windowsdesktop\\src\\sfx\\Microsoft.WindowsDesktop.App.Ref.sfxproj]","Url":"https://github.com/dotnet/wpf/pull/10122","RelatedDescription":"Closed or merged PR \"Correctly reference ref project for Windows.Primitives.csproj\" (#10122)"},{"Id":"2705078484","IsPullRequest":true,"CreatedAt":"2024-12-02T05:03:26","Actor":"dotnet-maestro[bot]","Number":"10134","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241128.2\r\n- **Date Produced**: November 28, 2024 6:27:21 PM UTC\r\n- **Commit**: e8de3415124309210e4cbd0105e4a9da8dc01696\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d0f89c635d...e8de341512\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10134)","Url":"https://github.com/dotnet/wpf/pull/10134","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10134)"},{"Id":"2693960548","IsPullRequest":true,"CreatedAt":"2024-11-29T10:00:30","Actor":"github-actions[bot]","Number":"10117","RawContent":null,"Title":"[release/9.0] Fluent: Adding Resource Key to TabItem and TabControl styles","State":"closed","Body":"Backport of #10116 to release/9.0\n/cc @harshit7962\n## Customer Impact\n## Testing\n## Risk\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10117)","Url":"https://github.com/dotnet/wpf/pull/10117","RelatedDescription":"Closed or merged PR \"[release/9.0] Fluent: Adding Resource Key to TabItem and TabControl styles\" (#10117)"},{"Id":"2703697247","IsPullRequest":true,"CreatedAt":"2024-11-29T05:12:08","Actor":"dotnet-maestro[bot]","Number":"10131","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241128.1\r\n- **Date Produced**: November 28, 2024 2:31:11 PM UTC\r\n- **Commit**: d02c89d400d27ac493ed78d1e307c3d4aaaab5d5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24576.6 to 10.0.0-alpha.1.24578.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24576.6 to 10.0.0-alpha.1.24578.1][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24576.6 to 10.0.0-alpha.1.24578.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/15ad0c1c6c...d02c89d400\r\n[2]: https://github.com/dotnet/runtime/compare/354ec46a63...fe3d5b5f70\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10131)","Url":"https://github.com/dotnet/wpf/pull/10131","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10131)"},{"Id":"2698495358","IsPullRequest":true,"CreatedAt":"2024-11-29T05:11:42","Actor":"dotnet-maestro[bot]","Number":"10124","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241127.1\r\n- **Date Produced**: November 28, 2024 7:58:53 AM UTC\r\n- **Commit**: d0f89c635d780e183a97ad86af4f3c8d7e95977f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24577.1][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24577.1][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24577.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24577.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/2a3bf4e3a4...d0f89c635d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10124)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10124","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10124)"},{"Id":"2693958694","IsPullRequest":true,"CreatedAt":"2024-11-29T04:07:59","Actor":"harshit7962","Number":"10116","RawContent":null,"Title":"Fluent: Adding Resource Key to TabItem and TabControl styles","State":"closed","Body":"Provides a workaround for: https://github.com/dotnet/wpf/issues/10054\r\n\r\n## Description\r\nThe changes here add a `DefaultTabControlStyle` and `DefaultTabItemStyle` in Fluent styles.\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nProvides a way to use `BasedOn` when overriding tab control styles in Fluent theme. This is also a part of our initiative to have consistent theme style, and resource key value.\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nNone\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal Build Pass\r\nSample Application Testing\r\nTesting the Gallery Application\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow, simply adding a resource key to the existing style.\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10116)","Url":"https://github.com/dotnet/wpf/pull/10116","RelatedDescription":"Closed or merged PR \"Fluent: Adding Resource Key to TabItem and TabControl styles\" (#10116)"},{"Id":"2701783196","IsPullRequest":true,"CreatedAt":"2024-11-28T11:05:25","Actor":"dipeshmsft","Number":"10130","RawContent":null,"Title":"Modified Expander animation mechanism in Fluent to avoid Argument Null Exception","State":"open","Body":"\r\nFixes https://github.com/microsoft/WPF-Samples/issues/672\r\n\r\n## Description\r\nWhile changing the ResourceDictionaries, during the invalidation, Tag property was being set to null ( default value ) which was causing an error with the animation. Replaced it with a dummy border and instead of using Tag, now I use Width property of the border which is a double and it's default value is not null. This avoids the ArgumentNullException when the expander is expanded and the Theme is changed.\r\n\r\n## Customer Impact\r\nNot taking this fix would cause a ArgumentNullException when the Expander is expanded, and the Theme is changed\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nSample App Testing\r\n\r\n## Risk\r\nLow\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10130)","Url":"https://github.com/dotnet/wpf/pull/10130","RelatedDescription":"Open PR \"Modified Expander animation mechanism in Fluent to avoid Argument Null Exception\" (#10130)"},{"Id":"2700110040","IsPullRequest":false,"CreatedAt":"2024-11-27T22:48:12","Actor":"xj-ms","Number":"10127","RawContent":null,"Title":"ItemAutomationPeer doesn't properly update Children when the container is initially invisible","State":"open","Body":"### Description\n\nFor an `ItemsControl`, `ItemAutomationPeer` is supposed to help link the items' actual automation peers to the automation tree.\nHowever, in certain situation, `ItemAutomationPeer` doesn't correctly update its `Children`, resulting in automation peers missing from the tree\n\n### Reproduction Steps\n\nCan be reproduced with the following XAML\n```XML\n<StackPanel>\n    <CheckBox x:Name=\"CheckBox\" Content=\"Show button\" />\n    <ItemsControl Focusable=\"False\">\n        <ItemsControl.ItemTemplate>\n            <DataTemplate DataType=\"{x:Type sys:String}\">\n                <Button Content=\"{Binding}\" />\n            </DataTemplate>\n        </ItemsControl.ItemTemplate>\n\n        <ItemsControl.ItemContainerStyle>\n            <Style TargetType=\"{x:Type ContentPresenter}\">\n                <Setter Property=\"Visibility\" Value=\"Collapsed\" />\n                <Style.Triggers>\n                    <DataTrigger Binding=\"{Binding IsChecked, ElementName=CheckBox}\" Value=\"True\">\n                        <Setter Property=\"Visibility\" Value=\"Visible\" />\n                    </DataTrigger>\n                </Style.Triggers>\n            </Style>\n        </ItemsControl.ItemContainerStyle>\n\n        <sys:String>Click Me</sys:String>\n    </ItemsControl>\n</StackPanel>\n```\n\nThis is just a simplified example. In reality, we have many different types of data items, each with its own data template.\n\n### Expected behavior\n\nAfter checking the check box and the button becomes visible, a button automation peer should be available in the automation tree for UI automation tools e.g. Windows Narrator should be able to read the button out when focused on it\n\n### Actual behavior\n\nNo button automation peers in the automation tree. Windows Narrator isn't able to discover the button\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\nThe issue happens when the following conditions are met:\n1. The item containers (`ContentPresenter`) are initially invisible, and later become visible\n2. The data items are not `UIElement`\n3. The data items' equality remains the same before and after the visibility is changed\n\nThe automation tree is updated after the layout update. When the visibility is changed, the automation tree is invalidated and the automation tree update goes from the top to the bottom. The problem is that `ItemAutomationPeer.Children` is null while `_ancestorsInvalid` is false and `_childrenValid` is true, which prevents it from updating its children when the automation tree is updated.\n\n1. When an `ItemAutomationPeer` first attempts to update its children, [`GetWrapperPeer`](https://github.com/dotnet/wpf/blob/6e7df620b641b1ad71f95d6645e3d699c21b7e4c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Automation/Peers/ItemAutomationPeer.cs#L201) creates a `FrameworkElementAutomationPeer` for the `ContentPresenter`. However, the wrapper peer won't be able to find any child because the `ContentPresenter` is invisible and doesn't have any visual child. `_ancestorsInvalid` is false and `_childrenValid` is set to true after the automation tree update.\n\n2. When the `ContentPresenter` become visible, the automation peers call `InvalidateAncestorsRecursive` during the layout update, but `_ancestorsInvalid` remains false for the `ItemAutomationPeer` because no other automation peers can reach it through the ancestry link. Things will be different if the data item is an `UIElement`, in which case the `UIElement`'s automation peer will be [obtained as a wrapper peer and the ancestry link is established via `EventSource`](https://github.com/dotnet/wpf/blob/6e7df620b641b1ad71f95d6645e3d699c21b7e4c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Automation/Peers/ItemsControlAutomationPeer.cs#L193-L196).\n\n3. In the subsequent automation tree update, the same `ItemAutomationPeer` is [obtained from the cache](https://github.com/dotnet/wpf/blob/6e7df620b641b1ad71f95d6645e3d699c21b7e4c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Automation/Peers/ItemsControlAutomationPeer.cs#L182), which won't be possible if the data item's equality has changed. Since `_ancestorsInvalid` is false and `_childrenValid` is still true for the `ItemAutomationPeer`, [no more children update will happen](https://github.com/dotnet/wpf/blob/6e7df620b641b1ad71f95d6645e3d699c21b7e4c/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Automation/Peers/AutomationPeer.cs#L1496). It remains having no children","Url":"https://github.com/dotnet/wpf/issues/10127","RelatedDescription":"Open issue \"ItemAutomationPeer doesn't properly update Children when the container is initially invisible\" (#10127)"},{"Id":"2698585341","IsPullRequest":true,"CreatedAt":"2024-11-27T13:36:52","Actor":"harshit7962","Number":"10126","RawContent":null,"Title":"[StyleCleanUp] Addressing SA warnings Part 4","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n- **SA1001:** The spacing around a comma is incorrect.\r\n- **SA1005:** A single-line comment within a C# code file does not begin with a single space.\r\n- **SA1014:** An opening generic bracket within a C# element is not spaced correctly.\r\n- **SA1027:** The code contains a tab or space character which is inconsistent.\r\n- **SA1028:** A line of code ends with a space, tab, or other whitespace characters before the end of line character(s).\r\n- **SA1121:** The code uses one of the basic C# types, but does not use the built-in alias for the type.\r\n- **SA1129:** A value type was constructed using the syntax new T().\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings, and hence easing out the overall understanding. Majority of the changes here are whitespace/new line changes.\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10126)","Url":"https://github.com/dotnet/wpf/pull/10126","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing SA warnings Part 4\" (#10126)"},{"Id":"2698546545","IsPullRequest":true,"CreatedAt":"2024-11-27T13:25:50","Actor":"harshit7962","Number":"10125","RawContent":null,"Title":"[StyleCleanUp] Addressing SA warnings Part 3","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n- **SA1400:** Member should declare an access modifier\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\n\r\n## Risk\r\nMedium, could cause issues with reflection.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10125)","Url":"https://github.com/dotnet/wpf/pull/10125","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing SA warnings Part 3\" (#10125)"},{"Id":"2697627230","IsPullRequest":true,"CreatedAt":"2024-11-27T08:32:35","Actor":"harshit7962","Number":"10123","RawContent":null,"Title":"[StyleCleanUp] Addressing SA warnings Part 2","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n- **SA1206:** The keywords within the declaration of an element should follow a standard ordering scheme\r\n- **SA1513:** Closing brace should be followed by blank line\r\n- **SA1518:** Code should not contain blank lines at the end of the file\r\n- **SA1508:** A closing brace should not be preceded by a blank line\r\n- **SA1507:** Code should not contain multiple blank lines in a row\r\n- **SA1505:** An opening brace should not be followed by a blank line\r\n- **SA1500:** Braces for multi-line statements should not share line\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings, and hence easing out the overall understanding. For the error SA1513, there are two sets of changes, and going through the later one first will possibly give a clearer idea.\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\nLow.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10123)","Url":"https://github.com/dotnet/wpf/pull/10123","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing SA warnings Part 2\" (#10123)"},{"Id":"2694764267","IsPullRequest":true,"CreatedAt":"2024-11-26T13:53:15","Actor":"himgoyalmicro","Number":"10121","RawContent":null,"Title":"[StyleCleanUp] Addressing CS warnings Part 1","State":"open","Body":"## Description\r\n\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR https://github.com/dotnet/wpf/pull/10080 and references to the issue https://github.com/dotnet/wpf/issues/10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n\r\n- **CSIsNull001:** Use 'is' pattern check\r\n- **CSIsNull002:** Use 'is not' pattern check\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings, and hence easing out the overall understanding.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression\r\n\r\nNone\r\n\r\n## Testing\r\n\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\n\r\nLow\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10121)","Url":"https://github.com/dotnet/wpf/pull/10121","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing CS warnings Part 1\" (#10121)"},{"Id":"2694585724","IsPullRequest":true,"CreatedAt":"2024-11-26T13:01:49","Actor":"harshit7962","Number":"10119","RawContent":null,"Title":"[StyleCleanUp] Addressing SA warnings Part 1","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n- **SA1408:** Conditional expressions should declare precedence\r\n- **SA1404:** Code analysis suppression should have justification\r\n- **SA1131:** Constant values should appear on the right-hand side of comparisons\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings, and hence easing out the overall understanding.\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\nLow.\r\n","Url":"https://github.com/dotnet/wpf/pull/10119","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing SA warnings Part 1\" (#10119)"},{"Id":"2694195038","IsPullRequest":true,"CreatedAt":"2024-11-26T12:56:12","Actor":"himgoyalmicro","Number":"10118","RawContent":null,"Title":"Fixing CSIsNull001 and CSIsNull002 .editorconfig issues","State":"closed","Body":"Following up on the issue #10017 based on this PR #10080. \r\n\r\nThis PR addresses and resolves all occurrences of the CSIsNull001 and CSIsNull002 issues as identified by the .editorconfig rules. The changes include refactoring code to ensure compliance with:\r\n- CSIsNull001: Use 'is' pattern check.\r\n- CSIsNull002: Use 'is not' pattern check.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10118)","Url":"https://github.com/dotnet/wpf/pull/10118","RelatedDescription":"Closed or merged PR \"Fixing CSIsNull001 and CSIsNull002 .editorconfig issues\" (#10118)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-06T03:30:29.7004933Z","RunDurationInMilliseconds":423}