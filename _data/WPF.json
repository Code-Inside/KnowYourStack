{"Data":{"GitHub":{"Issues":[{"Id":"2819646414","IsPullRequest":true,"CreatedAt":"2025-01-30T02:29:45","Actor":"SergeCroise","Number":"10362","RawContent":null,"Title":"fix: stelling and grammar in developer-guide.md","State":"closed","Body":"- occu**rr**ing\r\n- a**pp**ropriate value\r\n- binaries are buil**t**\r\n\r\nFixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\nsee:\r\nhttps://www.merriam-webster.com/dictionary/apropriate\r\nand:\r\nhttps://www.merriam-webster.com/dictionary/occuring\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/10362","RelatedDescription":"Closed or merged PR \"fix: stelling and grammar in developer-guide.md\" (#10362)"},{"Id":"2819308240","IsPullRequest":false,"CreatedAt":"2025-01-29T21:01:19","Actor":"edwardneal","Number":"10361","RawContent":null,"Title":"[API Proposal]: Lightweight in-place XpsDocument modification APIs","State":"open","Body":"### Background and motivation\n\nRelates to #4000, providing the API proposal for the ability to read and rewrite the structure of an XPS document.\n\nThere are three objectives with this proposal:\n1. Allow access to an `IXpsFixedDocumentSequenceWriter` for an `XpsDocument`'s existing `FixedDocumentSequence`. At present, the only way to access an `IXpsFixedDocumentSequenceWriter` is to create one - and only one can be created per `XpsDocument`, so it's not possible to amend existing `XpsDocument`s.\n2. Allow navigation from a `FixedDocumentSequence`, `FixedDocument` and `FixedPage`'s reader APIs to their writer APIs. This should be simple enough: the underlying implementation implements both interfaces, so I expect these three properties could potentially just return `this`.\n3. Improve the writer APIs, ensuring that every property which can be read from `IXps*Reader` can be modified from `IXps*Writer`.\n\nThe wider goal is to allow an XPS document's XML structure to be inspected in a way which doesn't involve instantiating full WPF controls (with the thread affinity this implies) or using STA threads in the way that the existing `XpsDocumentWriter` API requires. With that said, this enables some functionality too - being able to navigate from a page's `IXpsFixedPageReader` to its `IXpsFixedPageWriter` means that we can get to the raw `XmlWriter` APIs, so any future XPS support can build on these types.\n\nAlthough #4000 relates to modifying and printing XPS documents, this proposal only addresses the modification aspect - I think that's where the largest speed/memory usage improvement lies.\n\n### API Proposal\n\n```diff\nnamespace System.Windows.Xps.Packaging;\n\npublic interface IXpsFixedDocumentSequenceReader\n{\n+   IXpsFixedDocumentSequenceWriter FixedDocumentSequenceWriter { get { throw new NotImplementedException(); } }\n}\n\npublic interface IXpsFixedDocumentReader\n{\n+   IXpsFixedDocumentWriter FixedDocumentWriter { get { throw new NotImplementedException(); } }\n}\n\npublic interface IXpsFixedPageReader\n{\n+   IXpsFixedPageWriter FixedPageWriter { get { throw new NotImplementedException(); } }\n}\n\npublic interface IXpsFixedDocumentSequenceWriter\n{\n+   void RemoveFixedDocument(IXpsFixedDocumentWriter document) => throw new NotImplementedException();\n+   void RemoveThumbnail(XpsThumbnail thumbnail) => throw new NotImplementedException();\n}\n\npublic interface IXpsFixedDocumentWriter\n{\n+   void RemovePage(IXpsFixedPageWriter page) => throw new NotImplementedException();\n+   void RemoveThumbnail(XpsThumbnail thumbnail) => throw new NotImplementedException();\n}\n\npublic interface IXpsFixedPageWriter\n{\n+   void RemoveColorContext(XpsColorContext colorContext) => throw new NotImplementedException();\n+   void RemoveFont(XpsFont font) => throw new NotImplementedException();\n+   void RemoveImage(XpsImage image) => throw new NotImplementedException();\n+   void RemoveResource(XpsResource resource) => throw new NotImplementedException();\n+   void RemoveResourceDictionary(XpsResourceDictionary resourceDictionary) => throw new NotImplementedException();\n}\n```\n\nAll of these members have default interface members which throw a NotImplementedException; this is to avoid introducing source breaking changes.\n\n### API Usage\n\n```csharp\nconst string XpsPath = \"...\";\nconst string LastPageUrl = \"...\";\nusing var existingDocument = new XpsDocument(XpsPath, FileAccess.ReadWrite, CompressionOption.Normal);\n\nvar fdsReader = existingDocument.FixedDocumentSequenceReader;\nvar fdReader = fdsReader.FixedDocuments[0];\n\nReplaceLastPage(fdReader);\nAttachDocumentThumbnail(existingDocument);\n\nvoid ReplaceLastPage(IXpsFixedDocumentReader fixedDocument)\n{\n    var fdWriter = fixedDocument.FixedDocumentWriter;\n    var lastPage = fixedDocument.GetFixedPage(new Uri(LastPageUrl, UriKind.Relative));\n    var lastPageWriter = lastPage.FixedPageWriter;\n\n    fdWriter.RemovePage(lastPageWriter);\n    lastPageWriter = fdWriter.AddFixedPage();\n\n    AttachPageThumbnail(lastPageWriter);\n}\n\nvoid AttachPageThumbnail(IXpsFixedPageWriter newPage)\n{\n    var pgThumbnail = newPage.AddThumbnail(XpsImageType.PngImageType);\n\n    using var newThumbnail = GenerateThumbnail(newPage);\n    SetThumbnail(pgThumbnail, newThumbnail);\n}\n\nvoid AttachDocumentThumbnail(XpsDocument document)\n{\n    var fdsReader = document.FixedDocumentSequenceReader;\n    var fdsWriter = fdsReader.FixedDocumentSequenceWriter;\n    var fdsThumbnail = fdsReader.Thumbnail ?? fdsWriter.AddThumbnail(XpsImageType.PngImageType);\n\n    using var newThumbnail = GenerateThumbnail(document);\n    SetThumbnail(fdsThumbnail, newThumbnail);\n}\n\nvoid SetThumbnail(XpsThumbnail thumbnail, Stream thumbnailStream)\n{\n    using var xpsThumbnailStream = thumbnail.OpenStream();\n\n    xpsThumbnailStream.SetLength(0);\n    thumbnailStream.CopyTo(xpsThumbnailStream);\n}\n\nStream GenerateThumbnail(XpsDocument document) => null;\nStream GenerateThumbnail(IXpsFixedPageWriter newPage) => null;\n```\n\n\n### Alternative Designs\n\nXPS support could be moved into its own library, separate to WPF and similar to OpenXML. This could make XPS support cross-platform, but it'd need a much larger effort and it'd need someone to maintain that library.\n\nFor the moment, the key obstacle is the inability to read and update XPS documents without instantiating WPF controls and by using multiple threads. I expect that once it becomes possible to open an XPS document, iterate through its pages and access each page's `XmlReader` and `XmlWriter`, this functionality can be used as building blocks if somebody wants to build a strongly-typed API later.\n\n### Risks\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10361","RelatedDescription":"Open issue \"[API Proposal]: Lightweight in-place XpsDocument modification APIs\" (#10361)"},{"Id":"2819135860","IsPullRequest":false,"CreatedAt":"2025-01-29T19:53:22","Actor":"robert-abeo","Number":"10360","RawContent":null,"Title":"Fluent2: Label Missing a `DefaultLabelStyle`","State":"open","Body":"### Description\n\nLabel is missing a `DefaultLabelStyle` like all other controls have. This is very useful to have when you want to create a new style based on it specifically. Would be nice to add this in for completeness.\n\nhttps://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Styles/Label.xaml\n\n### Reproduction Steps\n\nSee source code.\n\n### Expected behavior\n\nHave a Default style key for label\n\n### Actual behavior\n\nNo Default style key for label\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10360","RelatedDescription":"Open issue \"Fluent2: Label Missing a `DefaultLabelStyle`\" (#10360)"},{"Id":"2818761453","IsPullRequest":false,"CreatedAt":"2025-01-29T17:00:36","Actor":"robert-abeo","Number":"10359","RawContent":null,"Title":"Fluent2: Controls Are NOT Designed for Custom Height","State":"open","Body":"### Description\n\nFluent2 controls suffer from a few issues with height:\n\n 1) They are TOO tall by default. This is especially obvious with the ComboBox which is far too tall by default. I suspect the item margins/padding do not follow WinUI 3.\n 2) Related with point 1, not controls are NOT designed for the default 32px height. I'm pretty sure this is the default in WinUI3 and needs to apply here as well?\n 2) The controls do NOT support support custom heights. I already noted this separately with the DatePicker calendar button. However, setting a forced height of 32px flatly doesn't work for ComboBox and has issues with DatePicker. All controls need to be audited.\n\n### Reproduction Steps\n\nControls with issues so far:\n\n - ComboBox\n - DatePicker\n\n... please review for more. I will add them if/when I find them as well.\n\n### Expected behavior\n\nSee WinUI3 gallery\n\n### Actual behavior\n\nSee above\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10359","RelatedDescription":"Open issue \"Fluent2: Controls Are NOT Designed for Custom Height\" (#10359)"},{"Id":"2818753340","IsPullRequest":false,"CreatedAt":"2025-01-29T16:56:57","Actor":"robert-abeo","Number":"10358","RawContent":null,"Title":"Fluent2: TextBox Issues","State":"open","Body":"### Description\n\nI've found two issues with the Fluent2 TextBox that make it almost unusable. Note I'm running a custom build of the theme in .NET Framework 4.8 for legacy reasons so that may influence some of these results (that's why I'm ignoring that the ClearText button doesn't work at all).\n\n 1) The TextBoxClearButton does NOT stay right-aligned as it should (or left-aligned if RTL language). Also, please review WinUI as I'm not sure the clear button should EVER be below multi-line text. I suspect it always stays Top-aligned following the first line. Bottom line, the positioning of this button is completely wrong.\n 2) In order to select all text in a TextBox by clicking/dragging the user has to selected EXACTLY where the text starts/ends rather than anywhere in the TextBox. I suspect the TestPresenter is stretching to the proper size here.\n\n### Reproduction Steps\n\nSee below, it works in any Fluent2 TextBox:\n\n1) Bad Clear Text Button position/alignment\n![Image](https://github.com/user-attachments/assets/20236da3-e665-42c4-bb77-8724e2aadb5d)\n\n2) Poor selection\n![Image](https://github.com/user-attachments/assets/a17fe738-8cd1-41be-a3a3-215db6004d76)\n\n\n\n\n\n### Expected behavior\n\nSee WinUI3 gallery\n\n### Actual behavior\n\nSee above\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10358","RelatedDescription":"Open issue \"Fluent2: TextBox Issues\" (#10358)"},{"Id":"2818715209","IsPullRequest":false,"CreatedAt":"2025-01-29T16:39:34","Actor":"robert-abeo","Number":"10357","RawContent":null,"Title":"Fluent2: ListView.View set to GridView Is Unsupported","State":"open","Body":"### Description\n\nThe Fluent2 ListView styles do NOT support GridView at all. This is pretty common in WPF for lightweight tables.\n\n\n### Reproduction Steps\n\n```xaml\n<ListView\n    ItemsSource=\"{Binding ListResults}\"\n    SelectionMode=\"Single\">\n    <ListView.View>\n        <GridView>\n            <GridViewColumn\n                DisplayMemberBinding=\"{Binding Name}\"\n                Header=\"Name\" />\n            <GridViewColumn\n                DisplayMemberBinding=\"{Binding Description}\"\n                Header=\"Desc\" />\n        </GridView>\n    </ListView.View>\n</ListView>\n```\n\n### Expected behavior\n\nWe should see a table with Name and Desc headers in the above example.\n\n### Actual behavior\n\nNothing is shown -- or -- the default .ToString() is shown.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10357","RelatedDescription":"Open issue \"Fluent2: ListView.View set to GridView Is Unsupported\" (#10357)"},{"Id":"2817613463","IsPullRequest":false,"CreatedAt":"2025-01-29T09:03:58","Actor":"johanneskopf","Number":"10356","RawContent":null,"Title":"Fluent2 TabView change selected tab background color to accent color","State":"open","Body":"### Description\n\nI have a .NET 9 WPF application that I want to style using the new fluent (Windows 11) theme. I need to style the background of the selected tab of the TabView to use the theme accent color.\n\n### Reproduction Steps of the Problem\nFind the sample repro that showcases the issue explained below here: https://github.com/johanneskopf/sample-selected-TabItem-background-override. Executing the sample shows this window (TabView on top, with a button inside the tab):\n\n![Image](https://github.com/user-attachments/assets/94836feb-26a7-463e-8aa9-09cae6aaf6ce)\n\nNow when changing the theme color from\n![Image](https://github.com/user-attachments/assets/8819724c-a7e8-441b-88ef-d8a588d1fea4)\nto \n![Image](https://github.com/user-attachments/assets/9915ee3a-9622-4c0e-9932-978242033f01)\n\nI get this result:\n![Image](https://github.com/user-attachments/assets/cf22084b-459b-4743-8e07-6c2fd159e87c)\n\nI need the TabView to reflect the changes of the Windows theme accent color here. Thus, when the theme color is changed to blue, the selected tab item background should be green as well. Currently this only works for the button with the default style, not for the TabView's selected tab background in my sample.\n\n### Code explanation\n\nI statically achieved what I want by doing the following, it is not reflected until the application is restarted though:\n\nApp.xaml:\n```csharp\n<Application x:Class=\"TestApp.App\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             StartupUri=\"View/MainWindow.xaml\">\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary Source=\"pack://application:,,,/PresentationFramework.Fluent;component/Themes/Fluent.xaml\" />\n                <ResourceDictionary Source=\"OverrideStyles.xaml\"/>\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary>\n    </Application.Resources>\n</Application>\n```\n\nOverrideStyles.xaml:\n```csharp\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n                    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <SolidColorBrush x:Key=\"TabViewItemHeaderBackgroundSelected\" Color=\"{Binding Source={StaticResource AccentButtonBackground}, Path=Color}\" />\n    <SolidColorBrush x:Key=\"TabViewItemForegroundSelected\" Color=\"{Binding Source={StaticResource AccentButtonForeground}, Path=Color}\" />\n    <SolidColorBrush x:Key=\"TabViewSelectedItemBorderBrush\" Color=\"{Binding Source={StaticResource AccentControlElevationBorderBrush}, Path=Color}\"/>\n</ResourceDictionary>\n```\n\nWhat I want to achieve is easily possible for buttons by the way. A button defined like this dynamically updates to the chosen theme color on-the-fly:\n```csharp\n<Button HorizontalAlignment=\"Stretch\" Style=\"{DynamicResource AccentButtonStyle}\" Content=\"Test\"/>\n```\n\nAs a reference, here is the dark default style of the fluent theme:\nhttps://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Themes/Fluent.Dark.xaml\n\nThere, one can find those lines, which might be relevant:\n```csharp\n<Style x:Key=\"DefaultTabItemStyle\" TargetType=\"{x:Type TabItem}\">\n    <Setter Property=\"Background\" Value=\"{DynamicResource TabViewItemHeaderBackground}\" />\n...\n</Style>\n\n<SolidColorBrush x:Key=\"AccentButtonBackground\" Color=\"{StaticResource SystemAccentColorLight2}\" />\n```","Url":"https://github.com/dotnet/wpf/issues/10356","RelatedDescription":"Open issue \"Fluent2 TabView change selected tab background color to accent color\" (#10356)"},{"Id":"2817599722","IsPullRequest":false,"CreatedAt":"2025-01-29T08:57:01","Actor":"h3xds1nz","Number":"10355","RawContent":null,"Title":"CA1822: Mark members as static","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1822\n\nThis shall be done following https://github.com/dotnet/wpf/issues/10354 which doesn't change IL but will create conflicts at the moment in numerous cases.","Url":"https://github.com/dotnet/wpf/issues/10355","RelatedDescription":"Open issue \"CA1822: Mark members as static\" (#10355)"},{"Id":"2817596145","IsPullRequest":false,"CreatedAt":"2025-01-29T08:55:08","Actor":"h3xds1nz","Number":"10354","RawContent":null,"Title":"IDE0036: Order modifiers","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036\n\nThis will be done after #10284 / #10288 to prevent merge conflicts","Url":"https://github.com/dotnet/wpf/issues/10354","RelatedDescription":"Open issue \"IDE0036: Order modifiers\" (#10354)"},{"Id":"2817244496","IsPullRequest":true,"CreatedAt":"2025-01-29T05:24:20","Actor":"dotnet-maestro[bot]","Number":"10353","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 2bde0aa3-7165-43c9-100b-08dcbc30275f\n- **Build**: 20250127.4\n- **Date Produced**: January 27, 2025 10:35:09 PM UTC\n- **Commit**: bac7e1caea791275b7c3ccb4cb75fd6a04a26618\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/c4bbc67763...bac7e1caea\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10353)","Url":"https://github.com/dotnet/wpf/pull/10353","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#10353)"},{"Id":"2817243694","IsPullRequest":true,"CreatedAt":"2025-01-29T05:23:46","Actor":"dotnet-maestro[bot]","Number":"10352","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: 20250128.4\n- **Date Produced**: January 29, 2025 1:36:30 AM UTC\n- **Commit**: 12025e32d586054433a3275ab31841c225b22368\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25077.3 to 10.0.0-beta.25078.4][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25077.3 to 10.0.0-beta.25078.4][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25077.3 to 10.0.0-beta.25078.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25077.3 to 10.0.0-beta.25078.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/79e2c58673...12025e32d5\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10352)","Url":"https://github.com/dotnet/wpf/pull/10352","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10352)"},{"Id":"2816497124","IsPullRequest":true,"CreatedAt":"2025-01-29T05:15:27","Actor":"dotnet-maestro[bot]","Number":"10350","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250128.2\n- **Date Produced**: January 28, 2025 4:45:13 PM UTC\n- **Commit**: 311ea4c41c279c659f2f22fd787e8d55953708e5\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.2.25076.2 to 10.0.0-preview.2.25078.2][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.2.25076.2 to 10.0.0-preview.2.25078.2][1]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.2.25076.2 to 10.0.0-preview.2.25078.2][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Management**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Speech**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25077.19][2]\n\n[1]: https://github.com/dotnet/winforms/compare/c4f23c34f4...311ea4c41c\n[2]: https://github.com/dotnet/runtime/compare/f196875c5d...1da2ea4983\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10350)","Url":"https://github.com/dotnet/wpf/pull/10350","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10350)"},{"Id":"2816277100","IsPullRequest":true,"CreatedAt":"2025-01-28T23:52:09","Actor":"dotnet-maestro[bot]","Number":"10349","RawContent":null,"Title":"[release/10.0-preview1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:079bba45-8c31-4cb7-8ab7-ea9727f94872)\n## From https://github.com/dotnet/winforms\n- **Subscription**: 079bba45-8c31-4cb7-8ab7-ea9727f94872\n- **Build**: 20250128.3\n- **Date Produced**: January 28, 2025 10:44:53 PM UTC\n- **Commit**: b86c3795fcde2ebc68ff7769ee7db3c5ac79f12f\n- **Branch**: refs/heads/release/10.0-preview1\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25077.1 to 10.0.0-preview.1.25078.3][2]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25077.1 to 10.0.0-preview.1.25078.3][2]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25077.1 to 10.0.0-preview.1.25078.3][2]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Management**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Speech**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5][3]\n\n[2]: https://github.com/dotnet/winforms/compare/9dd599da19...b86c3795fc\n[3]: https://github.com/dotnet/runtime/compare/f196875c5d...1da2ea4983\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:079bba45-8c31-4cb7-8ab7-ea9727f94872)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10349)\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25073.13 to 10.0.0-preview.1.25078.5 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10349","RelatedDescription":"Closed or merged PR \"[release/10.0-preview1] Update dependencies from dotnet/winforms\" (#10349)"},{"Id":"2816722104","IsPullRequest":false,"CreatedAt":"2025-01-28T21:09:55","Actor":"johanneskopf","Number":"10351","RawContent":null,"Title":"Fluent2 datagrid cell style based on DefaultDataGridCellStyle","State":"open","Body":"### Description\n\nI want to adapt the .net 9 fluent theme's DefaultDataGridCellStyle so the grid cells do not look that cramped. Thus, I added a border and centered the cell's content:\n\n```csharp\n<Style TargetType=\"DataGridCell\" BasedOn=\"{StaticResource DefaultDataGridCellStyle}\">\n    <Setter Property=\"Template\">\n        <Setter.Value>\n            <ControlTemplate TargetType=\"DataGridCell\">\n                <Border Padding=\"8\" Background=\"{TemplateBinding Background}\">\n                    <ContentPresenter VerticalAlignment=\"Center\" />\n                </Border>\n            </ControlTemplate>\n        </Setter.Value>\n    </Setter>\n</Style>\n\n```\nUsing that code, I override the default ControlTemplate completely and loose existing functionality. Instead I want to add those changes to the existing template. How can I achieve this? Or is there an overall better way? \n\nI need the dark and the light theme to work as they are supposed to.\n\nThanks in advance.\n","Url":"https://github.com/dotnet/wpf/issues/10351","RelatedDescription":"Open issue \"Fluent2 datagrid cell style based on DefaultDataGridCellStyle\" (#10351)"},{"Id":"2813948613","IsPullRequest":true,"CreatedAt":"2025-01-28T15:29:11","Actor":"dotnet-maestro[bot]","Number":"10344","RawContent":null,"Title":"[release/10.0-preview1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:079bba45-8c31-4cb7-8ab7-ea9727f94872)\n## From https://github.com/dotnet/winforms\n- **Subscription**: 079bba45-8c31-4cb7-8ab7-ea9727f94872\n- **Build**: 20250127.1\n- **Date Produced**: January 27, 2025 7:51:27 PM UTC\n- **Commit**: 9dd599da192a91cbbefe2e5600af82153972e40a\n- **Branch**: refs/heads/release/10.0-preview1\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25076.1 to 10.0.0-alpha.1.25077.1][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25076.1 to 10.0.0-alpha.1.25077.1][1]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25076.1 to 10.0.0-alpha.1.25077.1][1]\n\n[1]: https://github.com/dotnet/winforms/compare/9dd599da19...9dd599da19\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:079bba45-8c31-4cb7-8ab7-ea9727f94872)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10344)","Url":"https://github.com/dotnet/wpf/pull/10344","RelatedDescription":"Closed or merged PR \"[release/10.0-preview1] Update dependencies from dotnet/winforms\" (#10344)"},{"Id":"2815751217","IsPullRequest":false,"CreatedAt":"2025-01-28T13:54:52","Actor":"Kamalesh-Periyasamy","Number":"10348","RawContent":null,"Title":"Memory Leak in WPF ListBox with ListBoxItems in Navigation Windows","State":"open","Body":"### Description\n\nWhen using a ListBox control with ListBoxItem in a WPF Navigation Window, opening and closing the window multiple times leads to memory leaks. The ListBox and its related objects are not released from memory, as confirmed using the .NET Memory Profiler. \n\n### Reproduction Steps\n\n1. Create a WPF Navigation Window with a ListBox containing ListBoxItems.\n2. Open the navigation window multiple times and close it.\n3. Use a memory profiler to observe memory allocations.\n4. Notice that ListBox, ListBoxItem, and other related objects like Event from ItemContainerGenerator and ItemCollection remain in memory.\n\nRefer the attached sample to replicate the issue.\n[TextBoxExtSample.zip](https://github.com/user-attachments/files/18574460/TextBoxExtSample.zip)\n\n### Expected behavior\n\nWhen the Navigation Window is closed, the ListBox and its child elements should be released, and garbage collection should reclaim the memory.\n\n### Actual behavior\n\nThe ListBox, ListBoxItem, and related objects like Event from ItemContainerGenerator and ItemCollection remain in memory, causing an accumulation of memory usage over time, leading to a memory leak.\n\n### Regression?\n\nNot sure if this issue was present in previous versions of WPF.\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\nThe memory leak leads to increased memory usage in applications that frequently open and close Navigation Windows, eventually causing performance degradation.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n![Image](https://github.com/user-attachments/assets/2ceddd0c-0453-4414-bc80-99296f657c84)\nAttached the reference image","Url":"https://github.com/dotnet/wpf/issues/10348","RelatedDescription":"Open issue \"Memory Leak in WPF ListBox with ListBoxItems in Navigation Windows\" (#10348)"},{"Id":"2815339335","IsPullRequest":false,"CreatedAt":"2025-01-28T12:31:40","Actor":"christian-clausen","Number":"10347","RawContent":null,"Title":"Cannot disable ligatures","State":"closed","Body":"### Description\n\nIt is great that WPF now has support for [hyphen-based ligatures](https://learn.microsoft.com/en-us/dotnet/desktop/wpf/whats-new/net90?view=netdesktop-9.0#hyphen-based-ligature-support).\n\nIn a few places we want to disable ligatures and that seems to not be possible, or we need to do this in a different way. \n\nIn order to disable ligatures of a `TextBlock` we tried to disable all ligatures categories:\n```\n            Typography.ContextualLigatures=\"False\"\n            Typography.DiscretionaryLigatures=\"False\"\n            Typography.HistoricalLigatures=\"False\"\n            Typography.StandardLigatures=\"False\"\n```\n\nBut hyphen-based ligatures are still applied.\n\n\n### Reproduction Steps\n\nCreate a new WPF .NET 9 project and paste the following into `MainWindow.xaml`:\n\n```\n<Window\n    Height=\"250\"\n    Title=\"MainWindow\"\n    Width=\"500\"\n    mc:Ignorable=\"d\"\n    x:Class=\"ExpanderTextBlockStyle.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <Grid>\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition />\n            <ColumnDefinition />\n        </Grid.ColumnDefinitions>\n\n        <TextBlock\n            FontFamily=\"Cascadia Code\"\n            FontSize=\"100\"\n            Grid.Column=\"0\"\n            HorizontalAlignment=\"Center\"\n            Text=\"&lt;-\"\n            ToolTip=\"Try to disable ligatures\"\n            Typography.ContextualLigatures=\"False\"\n            Typography.DiscretionaryLigatures=\"False\"\n            Typography.HistoricalLigatures=\"False\"\n            Typography.StandardLigatures=\"False\"\n            VerticalAlignment=\"Center\" />\n\n        <TextBlock\n            FontFamily=\"Cascadia Code\"\n            FontSize=\"100\"\n            Grid.Column=\"1\"\n            HorizontalAlignment=\"Center\"\n            ToolTip=\"Hack/workaround\"\n            Typography.ContextualLigatures=\"False\"\n            Typography.DiscretionaryLigatures=\"False\"\n            Typography.HistoricalLigatures=\"False\"\n            Typography.StandardLigatures=\"False\"\n            VerticalAlignment=\"Center\">\n            <Run Text=\"&lt;\" /><Run /><Run Text=\"-\" />\n        </TextBlock>\n\n    </Grid>\n</Window>\n```\n\n### Expected behavior\n\nWhen running the app, the left-side should have ligatures *disabled* and display two separate symbols like on the right-hand side (which is a workaround.)\n\n### Actual behavior\n\nWhen running the app, the left-hand text has ligatures *applied*:\n\n![Image](https://github.com/user-attachments/assets/8db46a79-947f-4ac7-a0bb-8dc086b48254)\n\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nCreate three separate Runs with an intermediate empty Run as demonstrated by the code and visible in the right-hand side of the window.\n\n### Impact\n\nWork is required to work around the issue.\n\n### Configuration\n\n```\nC:\\Users\\christian.clausen>dotnet --info\n.NET SDK:\n Version:           9.0.102\n Commit:            cb83cd4923\n Workload version:  9.0.100-manifests.cd167b49\n MSBuild version:   17.12.18+ed8c6aec5\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.19045\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.102\\\n\n.NET workloads installed:\n [maui-windows]\n   Installation Source: VS 17.12.35521.163\n   Manifest Version:    9.0.0/9.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100\\microsoft.net.sdk.maui\\9.0.0\\WorkloadManifest.json\n   Install Type:              Msi\n\n [maccatalyst]\n   Installation Source: VS 17.12.35521.163\n   Manifest Version:    18.1.9163/9.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100\\microsoft.net.sdk.maccatalyst\\18.1.9163\\WorkloadManifest.json\n   Install Type:              Msi\n\n [ios]\n   Installation Source: VS 17.12.35521.163\n   Manifest Version:    18.1.9163/9.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100\\microsoft.net.sdk.ios\\18.1.9163\\WorkloadManifest.json\n   Install Type:              Msi\n\n [android]\n   Installation Source: VS 17.12.35521.163\n   Manifest Version:    35.0.7/9.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100\\microsoft.net.sdk.android\\35.0.7\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.1\n  Architecture: x64\n  Commit:       c8acea2262\n\n.NET SDKs installed:\n  6.0.319 [C:\\Program Files\\dotnet\\sdk]\n  8.0.405 [C:\\Program Files\\dotnet\\sdk]\n  9.0.100 [C:\\Program Files\\dotnet\\sdk]\n  9.0.102 [C:\\Program Files\\dotnet\\sdk]\n```\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10347","RelatedDescription":"Closed issue \"Cannot disable ligatures\" (#10347)"},{"Id":"2815147380","IsPullRequest":true,"CreatedAt":"2025-01-28T09:56:02","Actor":"singhashish-wpf","Number":"10346","RawContent":null,"Title":"Establish Code Coverage for WPF  testing","State":"open","Body":"Establish Code Coverage for WPF testing\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10346)","Url":"https://github.com/dotnet/wpf/pull/10346","RelatedDescription":"Open PR \"Establish Code Coverage for WPF  testing\" (#10346)"},{"Id":"2813823860","IsPullRequest":true,"CreatedAt":"2025-01-28T05:41:01","Actor":"dotnet-maestro[bot]","Number":"10342","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250126.2\n- **Date Produced**: January 27, 2025 6:25:32 AM UTC\n- **Commit**: c4f23c34f4e6c66b69542f92d45dcaa919a7ceb6\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25076.1 to 10.0.0-alpha.2.25076.2][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25076.1 to 10.0.0-alpha.2.25076.2][1]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25076.1 to 10.0.0-alpha.2.25076.2][1]\n\n[1]: https://github.com/dotnet/winforms/compare/9dd599da19...c4f23c34f4\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10342)","Url":"https://github.com/dotnet/wpf/pull/10342","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10342)"},{"Id":"2811850655","IsPullRequest":true,"CreatedAt":"2025-01-28T05:12:31","Actor":"ThomasGoulet73","Number":"10338","RawContent":null,"Title":"Fix unit tests native dependencies","State":"closed","Body":"This is a workaround for dotnet/runtime#111825\r\n\r\n## Description\r\nFixes errors in unit tests when trying to load wpfgfx_cor3.dll which depends on D3DCompiler_47_cor3.dll which can't be found at runtime which seems to be caused by a bug in the runtime when using `DllImportSearchPath.AssemblyDirectory | DllImportSearchPath.System32` as the search path. \r\n\r\nThis search path is the default search path used by all projects in this repo and it's configured here:\r\nhttps://github.com/dotnet/wpf/blob/81019fc2492bfc15620ef14053f4f3f22eeeac6c/eng/WpfArcadeSdk/tools/ExtendedAssemblyInfo.props#L16-L20\r\n\r\nWe can't just set `IncludeDllSafeSearchPathAttribute` to false in the test projects since the attribute is used to configure the search path used by default for each assembly. We would need to set it to false for all assemblies trying to load wpfgfx_cor3.dll.\r\n\r\n**This problem does not occur for apps using WPF, see the issue for more info**\r\n\r\n## Customer Impact\r\nNone, test only.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + CI + local test.\r\n\r\n## Risk\r\nNone, test only.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10338)","Url":"https://github.com/dotnet/wpf/pull/10338","RelatedDescription":"Closed or merged PR \"Fix unit tests native dependencies\" (#10338)"},{"Id":"2814540004","IsPullRequest":true,"CreatedAt":"2025-01-28T03:27:10","Actor":"github-actions[bot]","Number":"10345","RawContent":null,"Title":"[release/9.0] Updating KeyTime of Expander","State":"open","Body":"Backport of #10343 to release/9.0\n/cc @dipeshmsft @siagupta0202\n## Customer Impact\n## Testing\n## Risk\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10345)","Url":"https://github.com/dotnet/wpf/pull/10345","RelatedDescription":"Open PR \"[release/9.0] Updating KeyTime of Expander\" (#10345)"},{"Id":"2813945734","IsPullRequest":true,"CreatedAt":"2025-01-28T03:26:30","Actor":"siagupta0202","Number":"10343","RawContent":null,"Title":"Updating KeyTime of Expander","State":"closed","Body":"Fixes #10295 \r\n\r\n## Description\r\n\r\nUpdating KeyTime to 0.2 seconds for expander in down expanded direction\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\nYes\r\n## Testing\r\n\r\nLocal build pass\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10343)","Url":"https://github.com/dotnet/wpf/pull/10343","RelatedDescription":"Closed or merged PR \"Updating KeyTime of Expander\" (#10343)"},{"Id":"2812545278","IsPullRequest":true,"CreatedAt":"2025-01-27T19:04:45","Actor":"harshit7962","Number":"10340","RawContent":null,"Title":"Update branding to release/10.0-preview2","State":"closed","Body":"Update branding to release/10.0-preview2.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10340)","Url":"https://github.com/dotnet/wpf/pull/10340","RelatedDescription":"Closed or merged PR \"Update branding to release/10.0-preview2\" (#10340)"},{"Id":"2813547359","IsPullRequest":false,"CreatedAt":"2025-01-27T16:55:42","Actor":"robert-abeo","Number":"10341","RawContent":null,"Title":"Fluent v2: DatePicker Issues","State":"open","Body":"### Description\n\nThe Fluent v2 DatePicker theme has a few issues:\n\n 1. The icon glyph is not vertically centered (with reduced control height most likely)\n 2. Some days do not have a circular background/border\n 3. When the DatePicker is disabled, the icon glyph has a background (it shouldn't have)\n\n### Reproduction Steps\n\nSee image below\n\n### Expected behavior\n\n1. The icon glyph should be centered vertically in all cases like in Aero2\n2. All days displayed on the calendar should have a circle background/border. The width should be the same as the height. Other Fluent themes achieve this with a converter.\n3. No background behind the icon glyph when the control is disabled\n\n### Actual behavior\n\n1-2:\n![Image](https://github.com/user-attachments/assets/9c8b0ef5-d837-4a8f-a603-c0a354461d49)\n\n3:\n![Image](https://github.com/user-attachments/assets/f28f12bf-26ee-4116-8a51-6863d4943bcc)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nRe-templating\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10341","RelatedDescription":"Open issue \"Fluent v2: DatePicker Issues\" (#10341)"},{"Id":"2812095412","IsPullRequest":true,"CreatedAt":"2025-01-27T06:18:13","Actor":"harshit7962","Number":"10339","RawContent":null,"Title":"Update template changes","State":"closed","Body":"## Description\r\nBuild changes after update in teamples.\r\n\r\n## Regression\r\n_None_\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal Build Pass\r\n<!-- What kind of testing has been done with the fix. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10339)","Url":"https://github.com/dotnet/wpf/pull/10339","RelatedDescription":"Closed or merged PR \"Update template changes\" (#10339)"},{"Id":"2810196967","IsPullRequest":true,"CreatedAt":"2025-01-27T06:07:48","Actor":"dotnet-maestro[bot]","Number":"10334","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: 20250126.1\n- **Date Produced**: January 27, 2025 3:20:42 AM UTC\n- **Commit**: 9dd599da192a91cbbefe2e5600af82153972e40a\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.25073.6 to 10.0.0-alpha.1.25076.1][5]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.25073.6 to 10.0.0-alpha.1.25076.1][5]\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.25073.6 to 10.0.0-alpha.1.25076.1][5]\n\n[5]: https://github.com/dotnet/winforms/compare/5fc66aac25...9dd599da19\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10334)\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.25072.13 to 10.0.0-alpha.1.25073.13 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10334","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10334)"},{"Id":"2811800122","IsPullRequest":true,"CreatedAt":"2025-01-26T21:35:10","Actor":"ThomasGoulet73","Number":"10337","RawContent":null,"Title":"Disable code analysis for generated code","State":"open","Body":"## Description\r\nDisables code analysis for generated code. Code analysis for generated code does not make sense since generated code will never be perfectly formatted and it prevents doing auto formatting to generated code without modifying the code generator.\r\n\r\nWe'll probably want to format the generated code someday but it should probably be done only when dotnet/wpf#6135 is merged and we can modify the code generator instead of modifying the generated code manually.\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + CI.\r\n\r\n## Risk\r\nNone.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10337)","Url":"https://github.com/dotnet/wpf/pull/10337","RelatedDescription":"Open PR \"Disable code analysis for generated code\" (#10337)"},{"Id":"2810754546","IsPullRequest":false,"CreatedAt":"2025-01-25T04:29:00","Actor":"ThomasGoulet73","Number":"10335","RawContent":null,"Title":"Exception when loading native dlls from the application path when using AssemblyDirectory and System32 as the DllImportSearchPath","State":"closed","Body":"### Description\n\nThere seems to be an issue when loading a native dll in the application path that depends on a native dll also in the application path when using `DllImportSearchPath.AssemblyDirectory | DllImportSearchPath.System32` as the search path. When both of those scenario occurs, it'll throw an exception that the dll could not be loaded. This issue is not reproducible when using only `DllImportSearchPath.AssemblyDirectory` or if a native dll does not have a dependency on another native dll in the application path. This also doesn't seem to affect native dlls shipped in a runtime pack because the .Net host seems to include a custom search path for the runtime packs.\n\nThis is a bug I found while investigating a problem when running WPF unit tests, see https://github.com/dotnet/wpf/pull/10304#issuecomment-2613764193 for more info. I'm not sure if it's the expected behavior, a bug or if I simply misunderstood the bug in WPF.\n\n/cc @dipeshmsft\n\n### Reproduction Steps\n\n1. Clone https://github.com/[ThomasGoulet73/DllSearchPathRepro](https://github.com/ThomasGoulet73/DllSearchPathRepro)\n2. Build TestLibrary1.\n3. Build TestLibrary2.\n4. Run ConsoleApp. It should exit without issue.\n5. Open Program.cs in ConsoleApp.\n6. Comment the line in Main with Test1WithoutSystem32\n7. Uncomment the line in Main with Test1WithSystem32\n8. Run ConsoleApp. It should exit with an exception that TestLibrary1.dll could not be loaded.\n\n### Expected behavior\n\nMethods Test1WithoutSystem32 and Test1WithSystem32 should both succeed.\n\n### Actual behavior\n\nMethods Test1WithoutSystem32 succeeds and Test1WithSystem32 fails.\n\n### Regression?\n\nI tested using .Net 6 through .Net 9 and they all have the same behavior.\n\n### Known Workarounds\n\nChange the DllImportSearchPath.\n\n### Impact\n\nNot sure, I don't know how frequent this exact scenario occurs.\n\n### Configuration\n\n.Net 9.0\nWindows 11 x64\nDon't know if it is specific to my configuration.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10335","RelatedDescription":"Closed issue \"Exception when loading native dlls from the application path when using AssemblyDirectory and System32 as the DllImportSearchPath\" (#10335)"},{"Id":"2809483466","IsPullRequest":true,"CreatedAt":"2025-01-24T13:37:57","Actor":"harshit7962","Number":"10333","RawContent":null,"Title":"Normalize start Text pointer to support Text Cursor Indicator","State":"open","Body":"## Description\r\nUsing accessibility option of _text cursor indicator_ in `RichTextBox` sometimes lead to crashing applications due to Invariant assert [here](https://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/TextRangeAdaptor.cs/#L462). Adding `Normalize()` call in changed location moves the `end` to the `start` if this invariant assert fails and hence essentially corrects the cursor position.\r\n\r\n## Customer Impact\r\nAccessibility fix. Allowing the usage of text cursor indicator with RichTextBox.\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n_None_\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal Build Pass\r\nSample Application Testing\r\nTest Pass\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10333)","Url":"https://github.com/dotnet/wpf/pull/10333","RelatedDescription":"Open PR \"Normalize start Text pointer to support Text Cursor Indicator\" (#10333)"},{"Id":"2809152155","IsPullRequest":true,"CreatedAt":"2025-01-24T11:19:15","Actor":"harshit7962","Number":"10332","RawContent":null,"Title":"Update templates to 10.0","State":"closed","Body":"## Description\r\nUpdate WPF Project templates to version 10.0.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10332)","Url":"https://github.com/dotnet/wpf/pull/10332","RelatedDescription":"Closed or merged PR \"Update templates to 10.0\" (#10332)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-30T03:30:32.8088075Z","RunDurationInMilliseconds":520}