{"Data":{"GitHub":{"Issues":[{"Id":"752146150","IsPullRequest":false,"CreatedAt":"2020-11-27T10:25:42","Actor":"Rand-Random","Number":"3865","RawContent":null,"Title":"UseWpf should work with netframework as a TargetFramework","State":"open","Body":"After some headache trying to achieve a multitarget project with net47 and net5.0-windows.\r\nI would like to suggest that UseWpf should also work for net47.\r\n\r\nMy current project sadly has to look like this to make it \"work\".\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;net5.0-windows</TargetFrameworks>\r\n    <OutputType>WinExe</OutputType>\r\n    <RootNamespace>MyNamespace</RootNamespace>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net47' \">\r\n    <StartupObject>MyNamespace.App</StartupObject>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net5.0-windows' \">\r\n    <UseWPF>true</UseWPF>\r\n  </PropertyGroup>\r\n    <ItemGroup Condition=\" '$(TargetFramework)' == 'net47' \">\r\n    <!--\r\n    <EmbeddedResource Update=\"Properties\\Resources.resx\" Generator=\"ResXFileCodeGenerator\" LastGenOutput=\"Resources.Designer.cs\" />\r\n    <Compile Update=\"Properties\\Resources.Designer.cs\" DesignTime=\"True\" AutoGen=\"True\" DependentUpon=\"Resources.resx\" />\r\n\r\n    <None Update=\"Properties\\Settings.settings\" Generator=\"SettingsSingleFileGenerator\" LastGenOutput=\"Settings.Designer.cs\" />\r\n    <Compile Update=\"Properties\\Settings.Designer.cs\" DesignTime=\"True\" AutoGen=\"True\" DependentUpon=\"Settings.settings\">\r\n      <DesignTimeSharedInput>True</DesignTimeSharedInput>\r\n    </Compile>\r\n    -->\r\n\r\n    <Page Include=\"**\\*.xaml\" SubType=\"Designer\" Generator=\"MSBuild:Compile\" Exclude=\"App.xaml\" />\r\n    <Compile Update=\"**\\*.xaml.cs\" SubType=\"Code\" DependentUpon=\"%(Filename)\" />\r\n\r\n    <ApplicationDefinition Include=\"App.xaml\" SubType=\"Designer\" Generator=\"XamlIntelliSenseFileGenerator\" />\r\n    <Compile Update=\"App.xaml.cs\" SubType=\"Code\" DependentUpon=\"App.xaml\" />\r\n    \r\n    <Reference Include=\"System.Printing\" />\r\n    <Reference Include=\"System.Windows\" />\r\n    <Reference Include=\"System.Windows.Forms\" />\r\n    <Reference Include=\"PresentationCore\" />\r\n    <Reference Include=\"PresentationFramework\" />\r\n    <Reference Include=\"PresentationFramework.Aero\" />\r\n    <Reference Include=\"PresentationFramework.Aero2\" />\r\n    <Reference Include=\"PresentationFramework.Luna\" />\r\n    <Reference Include=\"PresentationUI\">\r\n      <HintPath>C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationUI\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationUI.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"ReachFramework\" />\r\n    <Reference Include=\"System.Xaml\" />\r\n    <Reference Include=\"WindowsBase\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nMy project file is a strange combination of this stackoverflow question\r\nhttps://stackoverflow.com/questions/43693591/how-to-migrate-wpf-projects-to-the-new-vs2017-format\r\n\r\nOther question, why is it necessary for me to provide the `HintPath` only for the assembly `PresentationUI`?\r\nAll the other assemblies can be found without an issue, but if I would drop the `HintPath` I would get a \r\n\r\n> 14>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2123,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"PresentationUI\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n\r\nI am not sure if that is the correct place to post this issue.\r\nIf possible and I am wrong here move the issue to the correct place.","Url":"https://github.com/dotnet/wpf/issues/3865","RelatedDescription":"Open issue \"UseWpf should work with netframework as a TargetFramework\" (#3865)"},{"Id":"751972955","IsPullRequest":true,"CreatedAt":"2020-11-27T05:52:02","Actor":"dotnet-maestro[bot]","Number":"3864","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201126.1\r\n- **Date Produced**: 11/27/2020 4:22 AM\r\n- **Commit**: afd350e606ce9c1332f7f72edf19a648b7062de0\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.9 to 6.0.0-alpha.1.20576.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.9 to 6.0.0-alpha.1.20576.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/acdad50...afd350e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3864","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3864)"},{"Id":"751476048","IsPullRequest":false,"CreatedAt":"2020-11-26T10:30:36","Actor":"duchacekjan","Number":"3863","RawContent":null,"Title":"Localization of WPF standard components","State":"open","Body":"* .NET Core Version: 3.1.9\r\n* Windows version: Windows 10 1909 (18363.1198)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nWpf standard components  in net Core does not respect CurrentCulture(or CurrentUICulture) while in net48 does.\r\n **Actual behavior:** \r\nCreated WPF appliaction add i.e. FlowDocumentReader with some Document with data. Set CultureInfo on thread or Language on framework element to desired culture. In my example \"cs-CZ\". Then when you try mouse over find button, there is tooltip in English not localized. Same behaviour on other components in FlowDocumentReader. Same goes for watermarks etc\r\n When you try the same in net48 everything works.\r\n **Expected behavior:**\r\n All resources will be localized. I.e. \"Find\" should be \"Naj√≠t\"\r\nSame behaviour as in net48\r\n **Minimal repro:**\r\nI created sample to demonstrate it. To see correct behaviour switch order of TargetFrameworks in csproj so net48 is first. Incorrect behaviour will show when order of TargetFrameworks is netcoreapp3.1 is on the first place.\r\nhttps://github.com/duchacekjan/NetCoreComponentsLocalization","Url":"https://github.com/dotnet/wpf/issues/3863","RelatedDescription":"Open issue \"Localization of WPF standard components\" (#3863)"},{"Id":"751417914","IsPullRequest":false,"CreatedAt":"2020-11-26T09:09:45","Actor":"mikernet","Number":"3862","RawContent":null,"Title":"Editing a copy of the default ScrollViewer template does not work","State":"open","Body":"* .NET Version: 5.0 release\r\n* Windows version: 2004 build 19041.630\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\n \r\nFor some reason, the default `ScrollViewer` template does not allow you to right-click and \"Edit a Copy\" on .NET Core / .NET 5. This works fine on .NET 4.8 WPF.","Url":"https://github.com/dotnet/wpf/issues/3862","RelatedDescription":"Open issue \"Editing a copy of the default ScrollViewer template does not work\" (#3862)"},{"Id":"751388031","IsPullRequest":true,"CreatedAt":"2020-11-26T08:51:16","Actor":"dotnet-maestro[bot]","Number":"3861","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.9\r\n- **Date Produced**: 11/26/2020 8:15 AM\r\n- **Commit**: acdad50907a701149bf6833a17f62d9198c2bade\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.8 to 6.0.0-alpha.1.20575.9][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.8 to 6.0.0-alpha.1.20575.9][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/9aa0089...acdad50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3861","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3861)"},{"Id":"751342039","IsPullRequest":true,"CreatedAt":"2020-11-26T08:00:14","Actor":"dotnet-maestro[bot]","Number":"3860","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.8\r\n- **Date Produced**: 11/26/2020 6:57 AM\r\n- **Commit**: 9aa008926ec0258ee2f1398dc7d62068f0e2bbe4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.7 to 6.0.0-alpha.1.20575.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.7 to 6.0.0-alpha.1.20575.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/896304d...9aa0089\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3860","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3860)"},{"Id":"751320861","IsPullRequest":true,"CreatedAt":"2020-11-26T06:39:48","Actor":"dotnet-maestro[bot]","Number":"3859","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.7\r\n- **Date Produced**: 11/26/2020 6:15 AM\r\n- **Commit**: 896304d1253f304d4ca5c4392cb5749309df107a\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.5 to 6.0.0-alpha.1.20575.7][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.5 to 6.0.0-alpha.1.20575.7][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8e86ffb...896304d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3859","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3859)"},{"Id":"751298628","IsPullRequest":true,"CreatedAt":"2020-11-26T05:58:53","Actor":"dotnet-maestro[bot]","Number":"3858","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.5\r\n- **Date Produced**: 11/26/2020 5:23 AM\r\n- **Commit**: 8e86ffb7966188a174f2b56ea48ee3c7df8944b3\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.4 to 6.0.0-alpha.1.20575.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.4 to 6.0.0-alpha.1.20575.5][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/0a74e6d...8e86ffb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3858","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3858)"},{"Id":"751184860","IsPullRequest":true,"CreatedAt":"2020-11-26T00:31:41","Actor":"dotnet-maestro[bot]","Number":"3857","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201125.3\r\n- **Date Produced**: 11/25/2020 11:52 PM\r\n- **Commit**: 660239b5f335cf41ddbb12ff040adbc5d355378f\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20574.1 to 5.0.1-servicing.20575.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20574.1 to 5.0.1-servicing.20575.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a5b0107...660239b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3857","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3857)"},{"Id":"751183305","IsPullRequest":true,"CreatedAt":"2020-11-26T00:26:29","Actor":"dotnet-maestro[bot]","Number":"3856","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.4\r\n- **Date Produced**: 11/25/2020 11:48 PM\r\n- **Commit**: 0a74e6dab21e208112348b55718563d9db7798fe\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.2 to 6.0.0-alpha.1.20575.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.2 to 6.0.0-alpha.1.20575.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/36f3feb...0a74e6d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3856","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3856)"},{"Id":"751058043","IsPullRequest":false,"CreatedAt":"2020-11-25T19:08:06","Actor":"ben-reilly","Number":"3855","RawContent":null,"Title":"Inconsistencies and unexpected results when binding to objects with explicit interface implementations","State":"open","Body":"* .NET Core Version: **3.1**\r\n* Windows version: **1909**\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: **Yes**\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No, although IntelliSense for the XAML code actually does the right thing in this case, treating the property as being the static type as opposed to the runtime type, which makes sense, as it can't know the runtime type yet. üôÇ\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nWhen a class has an explicit interface implementation of a property, XAML bindings don't match the behaviour of C# code, failing to return the interface implementation when bound to properties of the interface type.\r\n \r\n **Actual behavior:**\r\n\r\nViewmodel properties of type `ISomeInterface`, are treated as their runtime type in XAML bindings, rather than as the interface type. As a result, explicit interface implementations of properties are not accessible unless the bound property is cast in a particular way.\r\n\r\n **Expected behavior:**\r\n\r\nA bound property in XAML should be treated as being of the property type, not its underlying runtime type. This would make it consistent with C# code.\r\n \r\n **Minimal repro:**\r\n\r\nThe meaningful parts look like this:\r\n```cs\r\npublic interface IData\r\n{\r\n    public string Name { get; }\r\n    public string OnlyOnInterface { get; }\r\n}\r\n\r\npublic class Data : IData\r\n{\r\n    string IData.Name { get; } = \"Interface Property\";\r\n    string IData.OnlyOnInterface { get; } = \"Interface-Only Property\";\r\n\r\n    public string Name { get; } = \"Class Property\";\r\n\r\n    // Including an additional property so that it's clear in the XAML editor which type it\r\n    // thinks the bound object is: it won't show this property if it think the object is of\r\n    // type IData.\r\n    public int OtherProperty { get; } = 123;\r\n}\r\n\r\npublic class ViewModel\r\n{\r\n    public IData DataAsInterface { get; } = new Data();\r\n    public Data DataAsClass { get; } = new Data();\r\n\r\n    public string CSharpInterfaceName { get; }\r\n    public string CSharpClassName { get; }\r\n    public string CSharpCastClassName { get; }\r\n\r\n    public ViewModel()\r\n    {\r\n        CSharpInterfaceName = DataAsInterface.Name;\r\n        CSharpClassName = DataAsClass.Name;\r\n        CSharpCastClassName = ((IData)DataAsClass).Name;\r\n    }\r\n}\r\n```\r\n\r\nDemo project here: https://github.com/ben-reilly/wpf-explicit-interface-binding-bug\r\n\r\n---\r\n\r\nBelow is an image from the demo project linked above. To the left is the content of the `{Binding ...}` which is used for the text block to the right; the right side shows which of the implementations of the `Name` property is being loaded: the one for the class or the explicit interface implementation.\r\n\r\nFor reference and comparison, nos. 7 through 9 show how C# code determines the value of the `Name` property under three different circumstances (see the ViewModel constructor in the demo project).\r\n\r\n![image](https://user-images.githubusercontent.com/1147378/100271326-8b6e9c00-2f16-11eb-9059-95d1a242eb17.png)\r\n\r\nNotice in particular that...\r\n\r\n- No. 0 doesn't load anything, giving a runtime error because `Data` doesn't have a property with the name `OnlyOnInterface`, despite the fact that the viewmodel property is of type `IData`, which has such a property.\r\n- Even though no. 1 is bound to a property of type `IData`, it returns the class implementation of the `Name` property, rather than the explicit interface implementation. In C# code, a variable of type `IData` would return the interface implementation of the property (see nos. 7 and 9).\r\n- Explicitly casting to the interface works for the class-typed property (no. 5) but not for the interface-typed property (no. 2)...\r\n- ...except when the binding path is prepended with `Path=` (no. 3), though that is not required for the class-typed property (nos. 5 and 6).\r\n\r\nIn my humble opinion, the results for nos. 0, 1, and 2 are incorrect.\r\n\r\nIt seems surprising to me that when binding to a viewmodel property of type `IData` it is treated as its runtime type, `Data`; that is not how types work in C# (no. 7), so I wouldn't expect it to work that way in XAML bindings either.\r\n\r\nAdditionally, it is surprising that no. 2 and no. 5 are different, especially given that nos. 5 and 6 match.","Url":"https://github.com/dotnet/wpf/issues/3855","RelatedDescription":"Open issue \"Inconsistencies and unexpected results when binding to objects with explicit interface implementations\" (#3855)"},{"Id":"750777054","IsPullRequest":true,"CreatedAt":"2020-11-25T13:29:44","Actor":"dotnet-maestro[bot]","Number":"3854","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.2\r\n- **Date Produced**: 11/25/2020 12:21 PM\r\n- **Commit**: 36f3feb00295caf213e6057171896926450290b7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20575.1 to 6.0.0-alpha.1.20575.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20575.1 to 6.0.0-alpha.1.20575.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/9b140c0...36f3feb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3854","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3854)"},{"Id":"750692935","IsPullRequest":true,"CreatedAt":"2020-11-25T10:53:51","Actor":"dotnet-maestro[bot]","Number":"3853","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201125.1\r\n- **Date Produced**: 11/25/2020 10:20 AM\r\n- **Commit**: 9b140c0952647840d8f1b6984a812c548b002738\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20573.3 to 6.0.0-alpha.1.20575.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20573.3 to 6.0.0-alpha.1.20575.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/12b8059...9b140c0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3853","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3853)"},{"Id":"750457313","IsPullRequest":false,"CreatedAt":"2020-11-25T05:21:25","Actor":"thudugala","Number":"3852","RawContent":null,"Title":"WPF .net5.0 win-x86 app does not run in Windows 2012 R2 server","State":"open","Body":"* .NET Core Version: .Net5.0\r\n* Windows version: Windows 2012 R2 \r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\n **Problem description:**\r\n\r\nWPF .Net5.0 win-x86 app does not run on Windows 2012 R2 works in Windows 10.\r\nSame app .netcoreapp3.1, run on Windows 2012 R2\r\n \r\n **Actual behavior:**\r\n\r\nNothing happens\r\n \r\n **Expected behavior:**\r\n\r\nApp should run\r\n \r\n**crashdumps**\r\nhttps://github.com/thudugala/RocketM/blob/master/crashdumps/RocketM.exe.6872.7z.001\r\nhttps://github.com/thudugala/RocketM/blob/master/crashdumps/RocketM.exe.6872.7z.002\r\n","Url":"https://github.com/dotnet/wpf/issues/3852","RelatedDescription":"Open issue \"WPF .net5.0 win-x86 app does not run in Windows 2012 R2 server\" (#3852)"},{"Id":"750212494","IsPullRequest":true,"CreatedAt":"2020-11-25T00:55:22","Actor":"lindexi","Number":"3851","RawContent":null,"Title":"Use Array.Empty instead of creating list in ResourceDictionaryDiagnostics","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/3851","RelatedDescription":"Open PR \"Use Array.Empty instead of creating list in ResourceDictionaryDiagnostics\" (#3851)"},{"Id":"750142870","IsPullRequest":true,"CreatedAt":"2020-11-24T23:42:46","Actor":"dotnet-maestro[bot]","Number":"3850","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.1 to 5.0.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201124.1\r\n- **Date Produced**: 11/24/2020 11:16 PM\r\n- **Commit**: a5b01073ffb9c72b790e127aafcea88d1074d738\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20573.1 to 5.0.1-servicing.20574.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20573.1 to 5.0.1-servicing.20574.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][2]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/af41134...a5b0107\r\n[2]: https://github.com/dotnet/runtime/compare/e564220...2767f44\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3850","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3850)"},{"Id":"749725748","IsPullRequest":true,"CreatedAt":"2020-11-24T14:09:02","Actor":"dotnet-maestro[bot]","Number":"3849","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201124.3\r\n- **Date Produced**: 11/24/2020 1:43 PM\r\n- **Commit**: 1fca47570f4229cc2512ebca5d277d387a5b9a0e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20569.3 to 6.0.0-alpha.1.20574.3][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCd0ab181&targetVersion=GC1fca475&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3849","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3849)"},{"Id":"749687930","IsPullRequest":true,"CreatedAt":"2020-11-24T13:42:28","Actor":"dotnet-maestro[bot]","Number":"3848","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201123.2\r\n- **Date Produced**: 11/23/2020 7:34 PM\r\n- **Commit**: 35bddd4fbfab8da3518fb920250d7c9e0c3138ff\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a9a80fb...35bddd4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3848","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3848)"},{"Id":"749292546","IsPullRequest":true,"CreatedAt":"2020-11-24T02:53:34","Actor":"dotnet-maestro[bot]","Number":"3847","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201123.3\r\n- **Date Produced**: 11/24/2020 2:33 AM\r\n- **Commit**: 12b8059a49972a2ccef2481e26bf38e072749c22\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20573.2 to 6.0.0-alpha.1.20573.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20573.2 to 6.0.0-alpha.1.20573.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/87d2d50...12b8059\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3847","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3847)"},{"Id":"749193630","IsPullRequest":true,"CreatedAt":"2020-11-23T23:54:41","Actor":"dotnet-maestro[bot]","Number":"3845","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201123.2\r\n- **Date Produced**: 11/23/2020 10:59 PM\r\n- **Commit**: 87d2d502f101ba0f3bd9d02f6472644fdd20fb55\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20572.1 to 6.0.0-alpha.1.20573.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20572.1 to 6.0.0-alpha.1.20573.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/4a07baf...87d2d50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3845","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3845)"},{"Id":"749200345","IsPullRequest":true,"CreatedAt":"2020-11-23T23:24:11","Actor":"ryalanms","Number":"3846","RawContent":null,"Title":"[release/5.0] Support Source Generators in WPF projects","State":"open","Body":"### [release/5.0] Support Source Generators in WPF projects\r\n\r\nThis PR brings the changes from master to release/5.0: \r\n\r\n> https://github.com/dotnet/roslyn/blob/master/docs/features/source-generators.md\r\n\r\nOriginal PR: \r\n\r\n> https://github.com/dotnet/wpf/pull/3585\r\n\r\n> * Include generated NuGet props and targets from outer WPF parent project in generated temp project\r\n> * Add condition and cleanup generated NuGet props and targets after compilation of temp project\r\n> * Move BuildEngine global properties to project properties\r\n\r\nThe source generator samples now work in WPF applications:  \r\n\r\n> https://github.com/dotnet/roslyn-sdk/tree/master/samples/CSharp/SourceGenerators\r\n\r\nA single property turns off the new PackageReference support `(IncludePackageReferencesDuringMarkupCompilation = false)` and enables the old behavior.\r\n\r\nThere was an incomplete change previously committed and reverted.  The new change includes:\r\n\r\n> * Relative path fixes from previous commit: https://github.com/dotnet/wpf/pull/3120\r\n> * Addition of `ResolveProjectReferences` target when `IncludePackageReferencesDuringMarkupCompilation` is true\r\n> * Replacement of BuildEngine global properties with project properties that caused build failures in referenced projects and various other scenarios (e.g. `AssemblyName`)\r\n","Url":"https://github.com/dotnet/wpf/pull/3846","RelatedDescription":"Open PR \"[release/5.0] Support Source Generators in WPF projects\" (#3846)"},{"Id":"749068914","IsPullRequest":true,"CreatedAt":"2020-11-23T19:52:58","Actor":"dotnet-maestro[bot]","Number":"3844","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.1-servicing.20570.12 to 5.0.1-servicing.20572.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.1-servicing.20570.12 to 5.0.1-servicing.20572.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.1-servicing.20570.12 to 5.0.1-servicing.20572.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.1 to 5.0.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201123.1\r\n- **Date Produced**: 11/23/2020 7:24 PM\r\n- **Commit**: af41134ff98cf2793a2fcf40f21f95dc94f3ee79\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20570.4 to 5.0.1-servicing.20573.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20570.4 to 5.0.1-servicing.20573.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20570.12 to 5.0.1-servicing.20572.4][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20570.12 to 5.0.1-servicing.20572.4][2]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20570.12 to 5.0.1-servicing.20572.4][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/820c2a3...af41134\r\n[2]: https://github.com/dotnet/runtime/compare/9ecbcd7...e564220\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3844","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3844)"},{"Id":"748949082","IsPullRequest":true,"CreatedAt":"2020-11-23T17:25:49","Actor":"mmitche","Number":"3843","RawContent":null,"Title":"Enable post-build signing","State":"closed","Body":"Enables post build signing. This repo will discontinue signing in-build and instead the entire product will sign all at once in the staging pipelines.","Url":"https://github.com/dotnet/wpf/pull/3843","RelatedDescription":"Closed or merged PR \"Enable post-build signing\" (#3843)"},{"Id":"748579090","IsPullRequest":true,"CreatedAt":"2020-11-23T08:34:34","Actor":"dotnet-maestro[bot]","Number":"3842","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201122.1\r\n- **Date Produced**: 11/23/2020 8:02 AM\r\n- **Commit**: 4a07baf8c7856b5ac0d1571cd7117b9ea9c020c9\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20570.3 to 6.0.0-alpha.1.20572.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20570.3 to 6.0.0-alpha.1.20572.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/00b7753...4a07baf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3842","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3842)"},{"Id":"747929281","IsPullRequest":true,"CreatedAt":"2020-11-21T05:30:54","Actor":"dotnet-maestro[bot]","Number":"3841","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.1 to 5.0.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201120.4\r\n- **Date Produced**: 11/21/2020 5:06 AM\r\n- **Commit**: 820c2a319254121bc051748bda2c19b66581f6f5\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20570.2 to 5.0.1-servicing.20570.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20570.2 to 5.0.1-servicing.20570.4][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][2]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/bc41882...820c2a3\r\n[2]: https://github.com/dotnet/runtime/compare/a05d753...9ecbcd7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3841","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3841)"},{"Id":"747048378","IsPullRequest":true,"CreatedAt":"2020-11-21T01:52:03","Actor":"dotnet-maestro[bot]","Number":"3837","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201120.3\r\n- **Date Produced**: 11/21/2020 12:39 AM\r\n- **Commit**: 00b77530a64b0e0e1bfcc57e523f46c58e7c6843\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20568.1 to 6.0.0-alpha.1.20570.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20568.1 to 6.0.0-alpha.1.20570.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/3759c17...00b7753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3837","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3837)"},{"Id":"747580812","IsPullRequest":false,"CreatedAt":"2020-11-20T15:31:16","Actor":"miloush","Number":"3840","RawContent":null,"Title":"NullReferenceException when drawing in InkCanvas after editing mode change","State":"open","Body":"* .NET Core Version: `5.0.100-preview.5.20279.10`\r\n* Windows version: `20262.1.amd64fre.fe_release.201113-1436`\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: `Yes`\r\n \r\n **Problem description:** When `InkCanvas.EditingMode` is changed to `Select` after drawing a stroke and then back to `Ink`, a `NullReferenceException` is thrown on mouse down and the application crashes.\r\n \r\n **Actual behavior:** \r\n ```\r\nPresentationFramework.dll!MS.Internal.Ink.InkCollectionBehavior.StylusInputContinue(System.Windows.Input.StylusPointCollection stylusPoints, bool userInitiated) PresentationFramework.dll!MS.Internal.Ink.StylusEditingBehavior.MS.Internal.Ink.IStylusEditing.AddStylusPoints(System.Windows.Input.StylusPointCollection stylusPoints, bool userInitiated)\r\n PresentationFramework.dll!MS.Internal.Ink.EditingCoordinator.InitializeCapture(System.Windows.Input.InputDevice inputDevice, MS.Internal.Ink.IStylusEditing stylusEditingBehavior, bool userInitiated, bool resetDynamicRenderer)\r\n PresentationFramework.dll!MS.Internal.Ink.EditingCoordinator.OnInkCanvasDeviceDown(object sender, System.Windows.Input.InputEventArgs args)\r\n PresentationFramework.dll!System.Windows.Controls.InkCanvas._OnDeviceDown<System.__Canon>(object sender, System.__Canon e)\r\n PresentationCore.dll!System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate genericHandler, object genericTarget)\r\n PresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\r\n PresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source = {MS.Internal.Controls.InkCanvasSelectionAdorner}, System.Windows.RoutedEventArgs args = {System.Windows.Input.MouseButtonEventArgs}, bool reRaised = false)\r\n PresentationCore.dll!System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject sender = {MS.Internal.Controls.InkCanvasSelectionAdorner}, System.Windows.RoutedEventArgs args = {System.Windows.Input.MouseButtonEventArgs})\r\n PresentationCore.dll!System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs args = {System.Windows.Input.MouseButtonEventArgs})\r\n PresentationCore.dll!System.Windows.Input.InputManager.ProcessStagingArea()\r\n PresentationCore.dll!System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs input)\r\n PresentationCore.dll!System.Windows.Input.InputProviderSite.ReportInput(System.Windows.Input.InputReport inputReport)\r\n PresentationCore.dll!System.Windows.Interop.HwndMouseInputProvider.ReportInput(System.IntPtr hwnd, System.Windows.Input.InputMode mode, int timestamp, System.Windows.Input.RawMouseActions actions, int x, int y, int wheel)\r\n PresentationCore.dll!System.Windows.Interop.HwndMouseInputProvider.FilterMessage(System.IntPtr hwnd = 0x00000000001308c6, MS.Internal.Interop.WindowMessage msg = WM_LBUTTONDOWN, System.IntPtr wParam = 0x0000000000000001, System.IntPtr lParam = 0x000000000124013a, ref bool handled = false)\r\n PresentationCore.dll!System.Windows.Interop.HwndSource.InputFilterMessage(System.IntPtr hwnd = 0x00000000001308c6, int msg, System.IntPtr wParam = 0x0000000000000001, System.IntPtr lParam = 0x000000000124013a, ref bool handled = false)\r\n WindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd = 0x00000000001308c6, int msg, System.IntPtr wParam = 0x0000000000000001, System.IntPtr lParam = 0x000000000124013a, ref bool handled = false)\r\n```\r\n\r\n **Expected behavior:** No crash. Changing the `EditMode` to `Select` actually results in lasso selection mode rather than the selection adorner mode (with the stroke as current lasso path) which I find rather suspicious and potentially undesirable, unless there is a reason to support changing modes while inking, but then the existing geometry should either change from ink to lasso or it should keep the ink and start a new lasso path.\r\n \r\n **Minimal repro:**\r\n```xml\r\n<DockPanel>\r\n    <Button Content=\"Ink\" Click=\"OnInkClick\" />\r\n    <InkCanvas Name=\"_canvas\" StrokeCollected=\"OnStrokeCollected\" />\r\n</DockPanel>\r\n```\r\n\r\n```c#\r\nprivate void OnStrokeCollected(object sender, InkCanvasStrokeCollectedEventArgs e)\r\n{\r\n    _canvas.EditingMode = InkCanvasEditingMode.Select;\r\n}\r\n\r\nprivate void OnInkClick(object sender, RoutedEventArgs e)\r\n{\r\n    _canvas.EditingMode = InkCanvasEditingMode.Ink;\r\n}\r\n```\r\n\r\n1. Draw (I am using mouse) on the canvas, upon finishing the stroke the canvas should change to selection mode\r\n2. Click the button to change the canvas back to inking mode \r\n3. Draw again - crash on mouse down","Url":"https://github.com/dotnet/wpf/issues/3840","RelatedDescription":"Open issue \"NullReferenceException when drawing in InkCanvas after editing mode change\" (#3840)"},{"Id":"747424296","IsPullRequest":true,"CreatedAt":"2020-11-20T12:08:57","Actor":"dotnet-maestro[bot]","Number":"3839","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201120.2\r\n- **Date Produced**: 11/20/2020 10:44 AM\r\n- **Commit**: bc418823aee07f5347cb7b82063e5bdf3bd1f21e\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20570.1 to 5.0.1-servicing.20570.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20570.1 to 5.0.1-servicing.20570.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/4b398b9...bc41882\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3839","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3839)"},{"Id":"747390362","IsPullRequest":true,"CreatedAt":"2020-11-20T11:43:12","Actor":"dotnet-maestro[bot]","Number":"3838","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201120.1\r\n- **Date Produced**: 11/20/2020 10:44 AM\r\n- **Commit**: 4b398b9b51f3a7885313bb594a27078ab49f260b\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20568.6 to 5.0.1-servicing.20570.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20568.6 to 5.0.1-servicing.20570.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/477e5d8...4b398b9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3838","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3838)"},{"Id":"746895643","IsPullRequest":false,"CreatedAt":"2020-11-19T20:22:46","Actor":"airbreather","Number":"3836","RawContent":null,"Title":"System.Windows.Media.Matrix: Span-based Transform Overloads","State":"open","Body":"`System.Windows.Media.Matrix` supports transforming multiple `Point` or `Vector` instances in a single call by invoking one of the following overloads:\r\n- ```csharp\r\n  public void Transform (System.Windows.Point[] points);\r\n  ```\r\n- ```csharp\r\n  public void Transform (System.Windows.Vector[] vectors);\r\n  ```\r\n\r\nWe have a performance-sensitive use case where we have a `double[]` array instance with values laid out just perfectly for a `System.Span<System.Windows.Point>`, but there's no API for that.\r\n\r\nLooking at [the implementations](https://github.com/dotnet/wpf/blob/e5a22ef4d9d3b82d0c8d24ccccfd9d3ab3e9e12b/src/Microsoft.DotNet.Wpf/src/WindowsBase/System/Windows/Media/Matrix.cs#L356-L369) of [both methods](https://github.com/dotnet/wpf/blob/e5a22ef4d9d3b82d0c8d24ccccfd9d3ab3e9e12b/src/Microsoft.DotNet.Wpf/src/WindowsBase/System/Windows/Media/Matrix.cs#L385-L398), I don't see any technical blockers for creating overloads that accept spans.\r\n\r\nAs-is, I find myself choosing between one of the following two implementations, which I don't really like doing without opening an issue like this:\r\n\r\n## Option 1: use span, one-by-one\r\n```csharp\r\nforeach (ref Point pt in MemoryMarshal.Cast<double, Point>(someDoubleArray))\r\n{\r\n    pt = someMatrix.Transform(pt);\r\n}\r\n```\r\n\r\n## Option 2: use arrays, bulk\r\n```csharp\r\nSpan<Point> pts = MemoryMarshal.Cast<double, Point>(someDoubleArray);\r\nPoint[] ptsArray = pts.ToArray();\r\nsomeMatrix.Transform(ptsArray);\r\nptsArray.AsSpan().Copyto(pts);\r\n```\r\n\r\n*Full disclosure: our application is actually still on .NET Framework 4.8... we're eventually planning to port to .NET 5+, so I'm opening this request in advance in the hopes that it might get attention between now and then.*","Url":"https://github.com/dotnet/wpf/issues/3836","RelatedDescription":"Open issue \"System.Windows.Media.Matrix: Span-based Transform Overloads\" (#3836)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-28T05:30:47.1781276Z","RunDurationInMilliseconds":620}