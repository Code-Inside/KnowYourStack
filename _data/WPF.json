{"Data":{"GitHub":{"Issues":[{"Id":"3006209458","IsPullRequest":false,"CreatedAt":"2025-04-19T05:36:19","Actor":"Symbai","Number":"10787","RawContent":null,"Title":"Non existing event subscriptions should raise a build error","State":"open","Body":"If you subscribe to any event in XAML (like `KeyDown`) but the method doesn't exist in your C# code, you can still successfully build your project. But if you run it and the XAML is executed your application crashes.\n\nAnd because of the fact that it crashes the application (unlike a non existing binding) it should be analyzed and throw an error during the build.","Url":"https://github.com/dotnet/wpf/issues/10787","RelatedDescription":"Open issue \"Non existing event subscriptions should raise a build error\" (#10787)"},{"Id":"3004194598","IsPullRequest":true,"CreatedAt":"2025-04-18T06:59:55","Actor":"ViktorHofer","Number":"10786","RawContent":null,"Title":"Address Roslyn analyzer warnings","State":"open","Body":"IDE0031 and others\r\n\r\nThese are showing up when building with a P4 .NET 10 SDK. This allows us to remove the warnAsError=false flag in the VMR when building wpf\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10786)","Url":"https://github.com/dotnet/wpf/pull/10786","RelatedDescription":"Open PR \"Address Roslyn analyzer warnings\" (#10786)"},{"Id":"3002516073","IsPullRequest":false,"CreatedAt":"2025-04-17T13:32:32","Actor":"ViktorHofer","Number":"10785","RawContent":null,"Title":"How do I build this repo from within VS?","State":"open","Body":"I have an SDK version installed that is listed in the repo's global.json. I also have all other prerequisites installed.\n\nWhen I open Microsoft.DotNet.Wpf.sln, I get the following:\n\n![Image](https://github.com/user-attachments/assets/bc3905ba-df39-4be4-a40b-b514f5bdf8f2)\n\n> 1000 APICompat errors and when I build the solution, the native build fails with some obscure messages. Is this expected?","Url":"https://github.com/dotnet/wpf/issues/10785","RelatedDescription":"Open issue \"How do I build this repo from within VS?\" (#10785)"},{"Id":"3002024596","IsPullRequest":false,"CreatedAt":"2025-04-17T10:00:05","Actor":"alexdi220","Number":"10784","RawContent":null,"Title":"The ItemsControlItemAutomationPeer leads memory leaks","State":"open","Body":"### Description\n\nHello, I encountered a memory leak issue with our components. During my research, I found that the key issue is caused by  \n`System.Windows.Automation.Peers.ItemsControlItemAutomationPeer`.  \nIt holds a reference to the user control (`ViewA`) via the field `_itemsControlAutomationPeer`.\n\n![Image](https://github.com/user-attachments/assets/b3f48e25-f142-4e32-b421-0474476930fe)\n\n### How it works:\n- We use a `ContentControl` and two views — `ViewA` and `ViewB`.\n- On a button click, I change `ContentControl.Content` to a new instance of the view.\n- In this case, I expect that the previous instance of the view (`ViewA`) should be collected, because it has been unloaded from the visual tree.\n\nAnd this works **until** I start showing any popups.  \nAt that moment, setting the new `RootVisual` causes the [EnsureAutomation](https://github.com/user-attachments/assets/e1a71978-c4ee-408b-85e9-a87dc5fe7c01) call.  \nThis method forces the creation of the automation tree, and from that moment on, `ItemsControlItemAutomationPeer` holds a reference to `ViewA`.\n\n---\n\nNow, I’m looking for any help, solution, or workaround.  \nThis is just a test sample, but we have a real-world scenario where our customer is suffering from this issue.\n\n\n### Reproduction Steps\n\n- Run `MemoryLeakTestApp`\n- Click `ShowPopup` a couple of times\n- Take the first snapshot\n- Click `ChangeView`\n- Take the second snapshot\n- Compare them and find the `ViewA`\n\n[MemoryLeakTestApp.zip](https://github.com/user-attachments/files/19792203/MemoryLeakTestApp.zip)\n\n### Expected behavior\n\nThe `ViewA` should be collected by the GC\n\n### Actual behavior\n\nThe `ViewA` remains in memory\n\n### Regression?\n\nYES. \nUnder NET 6, it can't be reproduced, but there is another memory leak here (it is caused by `AutomationPeer. _children`.\nI also tried to reproduce it under Framework 4.8, but it works properly without leaks\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n**WPF NET 9. This issue can be reproduced under NET 8 and higher.**\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10784","RelatedDescription":"Open issue \"The ItemsControlItemAutomationPeer leads memory leaks\" (#10784)"},{"Id":"3001497046","IsPullRequest":true,"CreatedAt":"2025-04-17T05:54:31","Actor":"harshit7962","Number":"10783","RawContent":null,"Title":"Null Annotate PresentationCore ref","State":"open","Body":"Fixes #10738 \r\n\r\n## Description\r\nThe changes here includes updates to the ref file, null annotating new and modified APIs in `DataObject` and `Clipboard` classes.\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal build pass\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10783)","Url":"https://github.com/dotnet/wpf/pull/10783","RelatedDescription":"Open PR \"Null Annotate PresentationCore ref\" (#10783)"},{"Id":"3000495032","IsPullRequest":true,"CreatedAt":"2025-04-16T19:00:50","Actor":"dotnet-maestro[bot]","Number":"10782","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250418.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2690968)\n- **Date Produced**: April 19, 2025 6:09:03 AM UTC\n- **Commit**: [0596dd27f03f62d2743e2ee73ce54692693b2063](https://github.com/dotnet/winforms/commit/0596dd27f03f62d2743e2ee73ce54692693b2063)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25215.9 to 10.0.0-preview.4.25218.1][7]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25215.9 to 10.0.0-preview.4.25218.1][7]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25215.9 to 10.0.0-preview.4.25218.1][7]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Management**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Speech**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25211.19 to 10.0.0-preview.4.25218.6][8]\n\n[7]: https://github.com/dotnet/winforms/compare/6b3acda54b...0596dd27f0\n[8]: https://github.com/dotnet/runtime/compare/464e5fe6fb...2db28217c4\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10782)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10782","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10782)"},{"Id":"2989734999","IsPullRequest":false,"CreatedAt":"2025-04-16T16:26:10","Actor":"safreed-msft","Number":"10759","RawContent":null,"Title":"ThemeMode style not applying to TextBlock in a Page","State":"closed","Body":"### Description\n\nI'm trying out the new fluent ui theming in .NET 9 but hit an issue where the theme styles aren't inherited by pages. (update: Seems to only be for TextBlocks?)\n\n![Image](https://github.com/user-attachments/assets/b3e1e141-9ad5-49e1-95ae-3fd7882ffdd4)\n\n### Reproduction Steps\n\n1. Create new WPF project with .NET 9\n2. Set ThemeMode=\"Dark\" in App.xaml\n3. Create a Page with just a TextBlock\n4. In MainWindow.xaml, add a Frame and navigate to the created Page\n\n### Expected behavior\n\nPage's textblock is styled appropriately (light foreground color since background is dark)\n\n### Actual behavior\n\nText foreground is dark\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10759","RelatedDescription":"Closed issue \"ThemeMode style not applying to TextBlock in a Page\" (#10759)"},{"Id":"2999131877","IsPullRequest":true,"CreatedAt":"2025-04-16T10:03:46","Actor":"harshit7962","Number":"10781","RawContent":null,"Title":"Add DataObject tests","State":"open","Body":"## Description\r\nThe changes here aims at adding tests around `ContainsText`, `ContainsAudio`, and `ContainsImage` method of DataObject class. This is to validate that the contracts are not breached and avoid minor bugs after the merger of #10544. The changes also references to a task item mentioned in https://github.com/dotnet/wpf/issues/10736.\r\nHave moved the previous tests a bit to make sure they are in the desired region and hence the removals may look unnecessary, but these tests are still present in the same file.\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nBuild pass, the tests are all green\r\n\r\n## Risk\r\nLow\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10781)","Url":"https://github.com/dotnet/wpf/pull/10781","RelatedDescription":"Open PR \"Add DataObject tests\" (#10781)"},{"Id":"2998609820","IsPullRequest":false,"CreatedAt":"2025-04-16T09:23:36","Actor":"jismyname","Number":"10778","RawContent":null,"Title":"GroupName Changes on radiobutton affect another usercontrol instance","State":"closed","Body":"### Description\n\n a usercontrol has many radiobutton in the same groupName, while create a second instance of this usercontrol and set value to radiobutton binding before showing window, this chang will push to the first showed usercontrol instance. touch to me for more info.\n\n### Reproduction Steps\n\n1. define a usercontrol with many radiobutton in the same groupname and bind ischecked to viewmodel.\n2. create a instance of the usercontrol and set a new window and content to this usercontrol and show ,select any radiobutton.\n3. creat a new instance of this usercontrol and set the binding viewmodel radiobutton ,and create a new window instance and set content to this second usercontrol and showdialog and close.\n\n\n### Expected behavior\n\n1.open the firs window ,you should see your selected radiobutton just now,but it has been changed because of step 2.\n\n### Actual behavior\n\nopen the firs window, your selected radiobutton has been unselected.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10778","RelatedDescription":"Closed issue \"GroupName Changes on radiobutton affect another usercontrol instance\" (#10778)"},{"Id":"2999015528","IsPullRequest":false,"CreatedAt":"2025-04-16T09:19:48","Actor":"Laniusexcubitor","Number":"10780","RawContent":null,"Title":"DataGrid anchor selection does not use initial selection","State":"open","Body":"### Description\n\nWhen using a `DataGrid` with Extended `SelectionMode` which has an initial selection, an anchor selection does not work as expected.\n\n### Reproduction Steps\n\n[Repro project with DataGrid and ListBox](https://github.com/user-attachments/files/19773685/AnchorSelectionRepro.zip)\nE.g. in the example project.\n- Item 1 is initially selected\n- Shift-Click on Item 3\n\nAdditional Scenario:\n- Now Select Item 1 via the `ListBox`\n- Shift Click on Item 5 in the `DataGrid`\n\n### Expected behavior\n\n- Item 1, Item 2 and Item 3 are selected after Shift-Click.\n\nThis expected behavior is the behavior that can be observed in the `ListBox`.\nIn the `DataGrid` this behavior occurs only when the initial selection was done by user input.\n\nAdditional Scenario\n- All items should be selected\n\n### Actual behavior\n\nOnly Item 3 is selected after the Shift-Click\n\nAdditional Scenario:\nOnly Items 3 to 5 are selected\n\n### Regression?\n\nTested in NetFx 4.81: same issue\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n`_selectionAnchor` is only updated on user input and the selection code does not check `_selectionAnchor` against the current true selection.\n[DataGrid.cs](https://source.dot.net/#PresentationFramework/System/Windows/Controls/DataGrid.cs,ff3321e8c5945e53,references)","Url":"https://github.com/dotnet/wpf/issues/10780","RelatedDescription":"Open issue \"DataGrid anchor selection does not use initial selection\" (#10780)"},{"Id":"2998967544","IsPullRequest":false,"CreatedAt":"2025-04-16T09:01:12","Actor":"cbra-caa","Number":"10779","RawContent":null,"Title":"Column virtualization in DataGrid with GroupStyle hides column headers when empty","State":"open","Body":"### Description\n\nBased on the following discussion: https://github.com/dotnet/wpf/discussions/10774\n\nThe problem is that when a DataGrid with a group style, but without any initial rows is rendered, the column headers are does not show.\nAfter an initial set of rows has been added the headers display as expected, even if the rows are cleared again.\n\nThe problem reappears if the ItemsSource is changed causing grouping to be reapplied. This is f.ex. the case when running with a mvvm structure where the datagrid hosts different content based on a folder structure.\n\n### Reproduction Steps\n\nSetup:\n- All columns in my DataGrid have a set width\n- EnableColumnVirtualization is set to **true**\n- A groupstyle has been added to the datagrid.\n\n[DataGridColumnVirtualization.zip](https://github.com/user-attachments/files/19773875/DataGridColumnVirtualization.zip)\n\n1. Run the program 'as is', observe that no column headers are rendered\n2. Add an item through the context menu, column headers appear\n3. Remove the item again, column headers stay\n\n### Expected behavior\n\nI would expect the column headers to be initially rendered, as they do so when no GroupStyle is present\n\n### Actual behavior\n\nNo column headers are shown initially\n\n### Regression?\n\nNot that I know of\n\n### Known Workarounds\n\nDeferring the GroupStyle till after items has been added seems to fix the problem, see https://github.com/dotnet/wpf/discussions/10774#discussioncomment-12843129\n\n### Impact\n\nReduces the usability of the datagrid for complex data structures where multiple columns and groupings are needed to give an overview.\n\n### Configuration\n\n.NET Framework 4.8\nWindows 11 Pro, v26100.3775\n64-bit operating system, x64-based processor\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10779","RelatedDescription":"Open issue \"Column virtualization in DataGrid with GroupStyle hides column headers when empty\" (#10779)"},{"Id":"2997327115","IsPullRequest":true,"CreatedAt":"2025-04-16T05:26:15","Actor":"dotnet-maestro[bot]","Number":"10777","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250415.9](https://dev.azure.com/dnceng/internal/_build/results?buildId=2688428)\n- **Date Produced**: April 16, 2025 4:17:52 AM UTC\n- **Commit**: [6b3acda54bffa15a06ff059fabb390ea90842956](https://github.com/dotnet/winforms/commit/6b3acda54bffa15a06ff059fabb390ea90842956)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25214.4 to 10.0.0-preview.4.25215.9][2]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25214.4 to 10.0.0-preview.4.25215.9][2]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25214.4 to 10.0.0-preview.4.25215.9][2]\n\n[2]: https://github.com/dotnet/winforms/compare/b7f91f4224...6b3acda54b\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10777)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10777","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10777)"},{"Id":"2997288803","IsPullRequest":false,"CreatedAt":"2025-04-15T18:43:30","Actor":"JeremyKuhne","Number":"10776","RawContent":null,"Title":"Avoid serialization for in-process DataObject use","State":"open","Body":"Historically putting data on the Clipboard and retrieving it would go through the native OLE IDataObject interface, which would have the side effect of always making all interaction be `autoConvert == true`.\n\nThe new implementation does not need to go through the serialization that would happen here but does need to follow the behavior above. We initially handled this by forcing some scenarios through the proxy, but that causes serialization. In WinForms this was handled via a derived `DataObject` class, which we've just updated to just mimic the behavior from before.\n \nhttps://github.com/dotnet/winforms/pull/13287\n\n`DataObject` is sealed in WPF, so this behavior was done with:\n\n``` C#\n    private readonly bool _doNotUnwrap;\n```\n\nThis should be changed to `_forceAutoConvert` to follow the behavior change that WinForms does.\n\nThen we'll be able to enable customer OLE scenarios that are only in process and don't set `copy` to `true` without needing to take the `BinaryFormatter` compat package.","Url":"https://github.com/dotnet/wpf/issues/10776","RelatedDescription":"Open issue \"Avoid serialization for in-process DataObject use\" (#10776)"},{"Id":"2996526368","IsPullRequest":false,"CreatedAt":"2025-04-15T13:57:54","Actor":"siagupta0202","Number":"10775","RawContent":null,"Title":"[ Fluent ] Add missing style for GridView","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/issues/10775","RelatedDescription":"Open issue \"[ Fluent ] Add missing style for GridView\" (#10775)"},{"Id":"2995123565","IsPullRequest":true,"CreatedAt":"2025-04-15T13:35:19","Actor":"dotnet-maestro[bot]","Number":"10769","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250414.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2687245)\n- **Date Produced**: April 14, 2025 10:55:32 PM UTC\n- **Commit**: [b7f91f4224904dcaf5dd138acdb948857eb17832](https://github.com/dotnet/winforms/commit/b7f91f4224904dcaf5dd138acdb948857eb17832)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25211.1 to 10.0.0-preview.4.25214.4][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25211.1 to 10.0.0-preview.4.25214.4][1]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25211.1 to 10.0.0-preview.4.25214.4][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Management**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Speech**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25211.17 to 10.0.0-preview.4.25211.19][2]\n\n[1]: https://github.com/dotnet/winforms/compare/bd91bfb26c...b7f91f4224\n[2]: https://github.com/dotnet/runtime/compare/850b0bab65...464e5fe6fb\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10769)","Url":"https://github.com/dotnet/wpf/pull/10769","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10769)"},{"Id":"2995944262","IsPullRequest":false,"CreatedAt":"2025-04-15T10:44:14","Actor":"luchunminglu","Number":"10773","RawContent":null,"Title":"DataGridTextColumn  Binding=\"{Binding Name}\"  when Name like some thing end with Path, app show nothing","State":"closed","Body":"### Description\n\nTest OS: Win 10\nRuntime: .Net9\n\nFirst I has a Property named HealthCheckPath, it bind in DataGridTextColumn ,  when is runs, the column show white,\nAfter change the Property name to HealthCheckAddress, it show successfully.\n \n```\n<DataGridTextColumn Width=\"2*\" Header=\"健康检查地址\"  ElementStyle=\"{StaticResource DgCenterCellStyle}\" Binding=\"{Binding HealthCheckPath}\"></DataGridTextColumn>\n\n\n<DataGridTextColumn Width=\"2*\" Header=\"健康检查地址\"  ElementStyle=\"{StaticResource DgCenterCellStyle}\" Binding=\"{Binding HealthCheckAddress}\"></DataGridTextColumn>\n\n```\n### Reproduction Steps\n\nFirst I has a Property named HealthCheckPath, it bind in DataGridTextColumn ,  when is runs, the column show white,\nAfter change the Property name to HealthCheckAddress, it show successfully.\n```\n \n<DataGridTextColumn Width=\"2*\" Header=\"健康检查地址\"  ElementStyle=\"{StaticResource DgCenterCellStyle}\" Binding=\"{Binding HealthCheckPath}\"></DataGridTextColumn>\n\n\n<DataGridTextColumn Width=\"2*\" Header=\"健康检查地址\"  ElementStyle=\"{StaticResource DgCenterCellStyle}\" Binding=\"{Binding HealthCheckAddress}\"></DataGridTextColumn>\n```\n\n### Expected behavior\n\nshow as expect\n\n### Actual behavior\n\nshow nothing\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10773","RelatedDescription":"Closed issue \"DataGridTextColumn  Binding=\"{Binding Name}\"  when Name like some thing end with Path, app show nothing\" (#10773)"},{"Id":"2992129015","IsPullRequest":true,"CreatedAt":"2025-04-15T05:42:14","Actor":"dipeshmsft","Number":"10765","RawContent":null,"Title":"Added Fluent theme resource dictionary tests","State":"closed","Body":"## Description\r\nReference #8552 \r\nThis PR adds tests for Fluent theme resource dictionary -\r\n1. Loading Fluent theme resource dictionary : Fluent.Light.xaml, Fluent.Dark.xaml and Fluent.HC.xaml\r\n2. Match the key names in the above dictionaries. \r\n    1. Compares the count of the resources in each dictionary.\r\n    2. Compares the name of the resources in each dictionary.\r\n\r\n## Customer Impact\r\nThis PR will avoid basic failure use cases like loading the dictionary and resource reference exception when theme changes.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nThis PR adds test\r\n\r\n## Risk\r\nNone\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10765)","Url":"https://github.com/dotnet/wpf/pull/10765","RelatedDescription":"Closed or merged PR \"Added Fluent theme resource dictionary tests\" (#10765)"},{"Id":"2995154272","IsPullRequest":false,"CreatedAt":"2025-04-15T05:17:25","Actor":"dipeshmsft","Number":"10772","RawContent":null,"Title":"[ Fluent ] Fix TextBox style","State":"open","Body":"Here are the broad categories of tasks that need to be done per control for this:\n\n- [ ] Match resource usage in control styles with WinUI resources where possible\n- [ ] Add animations for controls where required to match WinUI.\n- [ ] Compare Fluent styles with Aero2 styles to match\n    - [ ] Properties like HorizontalAlignment, VerticalAlignment\n    - [ ] TemplateBinding comparison with Aero2 styles\n- [ ] Compare WPF Fluent styles with WinUI styles :\n    - [ ] Convert ControlTemplate Triggers to VisualStates ( to simplify animation's and bring parity with WinUI styles )\n    - [ ] Convert StaticResource's to DynamicResource for properties where customization is needed.\n    - [ ] Define resources for CornerRadius, Thickness, etc. for the controls where it is needed","Url":"https://github.com/dotnet/wpf/issues/10772","RelatedDescription":"Open issue \"[ Fluent ] Fix TextBox style\" (#10772)"},{"Id":"2995154133","IsPullRequest":false,"CreatedAt":"2025-04-15T05:17:20","Actor":"dipeshmsft","Number":"10771","RawContent":null,"Title":"[ Fluent ] Fix RichTextBox style","State":"open","Body":"Here are the broad categories of tasks that need to be done per control for this:\n\n- [ ] Match resource usage in control styles with WinUI resources where possible\n- [ ] Add animations for controls where required to match WinUI.\n- [ ] Compare Fluent styles with Aero2 styles to match\n    - [ ] Properties like HorizontalAlignment, VerticalAlignment\n    - [ ] TemplateBinding comparison with Aero2 styles\n- [ ] Compare WPF Fluent styles with WinUI styles :\n    - [ ] Convert ControlTemplate Triggers to VisualStates ( to simplify animation's and bring parity with WinUI styles )\n    - [ ] Convert StaticResource's to DynamicResource for properties where customization is needed.\n    - [ ] Define resources for CornerRadius, Thickness, etc. for the controls where it is needed","Url":"https://github.com/dotnet/wpf/issues/10771","RelatedDescription":"Open issue \"[ Fluent ] Fix RichTextBox style\" (#10771)"},{"Id":"2995153948","IsPullRequest":false,"CreatedAt":"2025-04-15T05:17:15","Actor":"dipeshmsft","Number":"10770","RawContent":null,"Title":"[ Fluent ] Fix PasswordBox style","State":"open","Body":"Here are the broad categories of tasks that need to be done per control for this:\n\n- [ ] Match resource usage in control styles with WinUI resources where possible\n- [ ] Add animations for controls where required to match WinUI.\n- [ ] Compare Fluent styles with Aero2 styles to match\n    - [ ] Properties like HorizontalAlignment, VerticalAlignment\n    - [ ] TemplateBinding comparison with Aero2 styles\n- [ ] Compare WPF Fluent styles with WinUI styles :\n    - [ ] Convert ControlTemplate Triggers to VisualStates ( to simplify animation's and bring parity with WinUI styles )\n    - [ ] Convert StaticResource's to DynamicResource for properties where customization is needed.\n    - [ ] Define resources for CornerRadius, Thickness, etc. for the controls where it is needed","Url":"https://github.com/dotnet/wpf/issues/10770","RelatedDescription":"Open issue \"[ Fluent ] Fix PasswordBox style\" (#10770)"},{"Id":"2995121292","IsPullRequest":true,"CreatedAt":"2025-04-15T05:00:21","Actor":"dipeshmsft","Number":"10768","RawContent":null,"Title":"Fixes the layout and resource usage for PasswordBox","State":"open","Body":"Fixes #10770 \r\n\r\n### Description\r\n\r\nFixes the layout and resource usage for PasswordBox style in Fluent. This PR covers the following issues with the style.\r\n\r\n- [x] Match resource usage in control styles with WinUI resources where possible\r\n- [x] Add animations for controls where required to match WinUI.\r\n- [x] Compare Fluent styles with Aero2 styles to match\r\n    - [x] Properties like HorizontalAlignment, VerticalAlignment\r\n    - [x] TemplateBinding comparison with Aero2 styles\r\n- [x] Compare WPF Fluent styles with WinUI styles :\r\n    - [x] Convert ControlTemplate Triggers to VisualStates ( to simplify animation's and bring parity with WinUI styles )\r\n    - [x] Convert StaticResource's to DynamicResource for properties where customization is needed.\r\n    - [x] Define resources for CornerRadius, Thickness, etc. for the controls where it is needed \r\n \r\n ### Customer Impact\r\n Coherent behavior of Fluent PasswordBox style.\r\n\r\n### Regression \r\nNo\r\n\r\n### Risk\r\nMinimal\r\n \r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10768)","Url":"https://github.com/dotnet/wpf/pull/10768","RelatedDescription":"Open PR \"Fixes the layout and resource usage for PasswordBox\" (#10768)"},{"Id":"2991568386","IsPullRequest":false,"CreatedAt":"2025-04-14T13:10:04","Actor":"courbevoie","Number":"10764","RawContent":null,"Title":"DataGrid intercepts CTRL+C KeyGesture even if DataGrid.ClipboardCopyMode is set to DataGridClipboardCopyMode.None","State":"closed","Body":"### Description\n\nI realize, that changing this would probably break _quite a few_ apps, but:\nIs it really the intended behaviour, that a `DataGrid` keeps intercepting the CTRL+C `KeyGesture`, even if its `DataGrid.ClipboardCopyMode` property is set to `DataGridClipboardCopyMode.None` and one of its ancestors in the logical tree has a `CommandBinding` for `ApplicationCommands.Copy` in its `CommandBindings` collection.\n\nOne may verify this behaviour by deriving a class from `DataGrid` and override `DataGrid.OnExecutedCopy` like this:\n```csharp\n    public class CDataGridEx : DataGrid\n    {\n        protected override void OnExecutedCopy(ExecutedRoutedEventArgs args)\n        {\n            Debug.WriteLine(\"Datagrid.OnExecutedCopy\");\n        } \n    }\n\n```\n\n\n### Reproduction Steps\n\nMainWindow.xaml:\n```xaml\n<Window x:Class=\"DataGridTest.MainWindow\" ... >\n    <UIElement.CommandBindings>\n        <CommandBinding Command=\"ApplicationCommands.Copy\" Executed=\"CommandBinding_Executed\"/>\n    </UIElement.CommandBindings>             \n\n    <DataGrid\n        ...\n        ClipboardCopyMode=\"None\"\n        ...\n    />\n</Window>\n```\n\nMainWindow.xaml.cs:\n```csharp\nnamespace DataGridTest\n{\n    public partial class MainWindow : Window\n    {\n        ...\n        private void CommandBinding_Executed(object sender, ExecutedRoutedEventArgs e)\n        {\n            // not called\n        }\n        ...\n    }\n}\n```\n\n### Expected behavior\n\n`Ctrl+C` should not be intercepted by a `DataGrid` if its `DataGrid.ClipboardCopyMode` property is set `DataGridClipboardCopyMode.None`.\n\n### Actual behavior\n\nA `DataGrid` control intercepts the CTRL+C `KeyGesture`, even if its `DataGrid.ClipboardCopyMode` property is set to `DataGridClipboardCopyMode.None` and one of its ancestors in the logical tree has a `CommandBinding` for `ApplicationCommands.Copy` in its `CommandBindings` collection.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET version: 9\nOS: Windows 11\nArchitecture: x64\n\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10764","RelatedDescription":"Closed issue \"DataGrid intercepts CTRL+C KeyGesture even if DataGrid.ClipboardCopyMode is set to DataGridClipboardCopyMode.None\" (#10764)"},{"Id":"2992821376","IsPullRequest":false,"CreatedAt":"2025-04-14T11:48:25","Actor":"kirill-zakharov-altium","Number":"10767","RawContent":null,"Title":"ComboBox resets selected item to the first one on Esc key press when the drop-down is closed","State":"open","Body":"### Description\n\nIf you focus a ComboBox and press the Esc key, it resets the selected item to the first one. It happens when the ComboBox's drop-down is closed. In the .NET Framework 4.8, it didn't happen.\n\nSee the video:\nhttps://github.com/user-attachments/assets/5db212dd-2d89-4fe1-b00d-07d23ace75f0\n\nHere are the repro projects:\n[ComboBoxTest.zip](https://github.com/user-attachments/files/19735871/ComboBoxTest.zip)\n\n### Reproduction Steps\n\n- Create a new WPF project in .NET6,8,9 (the bug is reproducible in all 3 versions)\n- Add the following code into the MainWindow.xaml into the root Window tag:\n```\n    <ComboBox\n        Width=\"100\"\n        HorizontalAlignment=\"Center\"\n        VerticalAlignment=\"Center\"\n        SelectedIndex=\"0\">\n        <ComboBox.Items>\n            <ComboBoxItem>1</ComboBoxItem>\n            <ComboBoxItem>2</ComboBoxItem>\n            <ComboBoxItem>3</ComboBoxItem>\n        </ComboBox.Items>\n    </ComboBox>\n```\n- Run the project, click on the combo-box, click on the 3rd item in the drop-down, and then **press the Esc key** (when the drop-down is closed).\n\n### Expected behavior\n\nThe selected item must not be changed on the Esc key press and must remain \"3\". That's how it worked in .NET Framework 4.8.\n\n### Actual behavior\n\nThe selected item is reset to \"1\" after the Esc key press. That's very counterintuitive.\n\n### Regression?\n\nIt's a regression to the .NET Framework 4.8 version.\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10767","RelatedDescription":"Open issue \"ComboBox resets selected item to the first one on Esc key press when the drop-down is closed\" (#10767)"},{"Id":"2992239728","IsPullRequest":true,"CreatedAt":"2025-04-14T10:47:47","Actor":"dipeshmsft","Number":"10766","RawContent":null,"Title":"Added missing TextControl brushes","State":"closed","Body":"## Description\r\nAdded missing TextControl brushes that are used in all the text based controls : TextBox, PasswordBox, DatePicker, etc.\r\n\r\n## Customer Impact\r\nCorrect resources for Fluent styles. Reduces the amount of changes in other style fixing PRs for text controls.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal app testing\r\n\r\n## Risk\r\nMinimal\r\n=\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10766)","Url":"https://github.com/dotnet/wpf/pull/10766","RelatedDescription":"Closed or merged PR \"Added missing TextControl brushes\" (#10766)"},{"Id":"2990712470","IsPullRequest":true,"CreatedAt":"2025-04-14T05:27:06","Actor":"ThomasGoulet73","Number":"10761","RawContent":null,"Title":"Replace FluentAssertions with AwesomeAssertions","State":"closed","Body":"Fixes dotnet/wpf#10755\r\n\r\n## Description\r\nReplace FluentAssertions with AwesomeAssertions. AwesomeAssertions is a fork of FluentAssertions before FluentAssertions \r\n changed its license (See fluentassertions/fluentassertions#2943).\r\n\r\nThis change is similar to what has been done in Runtime (dotnet/runtime#113425) and WinForms (dotnet/winforms#13108).\r\n\r\n## Customer Impact\r\nNone, tests only.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nRan tests locally.\r\n\r\n## Risk\r\nNone, tests only.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10761)","Url":"https://github.com/dotnet/wpf/pull/10761","RelatedDescription":"Closed or merged PR \"Replace FluentAssertions with AwesomeAssertions\" (#10761)"},{"Id":"2989517817","IsPullRequest":true,"CreatedAt":"2025-04-14T05:19:39","Actor":"dotnet-maestro[bot]","Number":"10758","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250411.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2685556)\n- **Date Produced**: April 12, 2025 6:04:57 AM UTC\n- **Commit**: [bd91bfb26ce90ac31e950c01dcb2b6e0776453a7](https://github.com/dotnet/winforms/commit/bd91bfb26ce90ac31e950c01dcb2b6e0776453a7)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25210.3 to 10.0.0-preview.4.25211.1][3]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25210.3 to 10.0.0-preview.4.25211.1][3]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25210.3 to 10.0.0-preview.4.25211.1][3]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Management**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Speech**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n\n[3]: https://github.com/dotnet/winforms/compare/1d6143481c...bd91bfb26c\n[4]: https://github.com/dotnet/runtime/compare/00b00500cc...850b0bab65\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10758)\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10758","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10758)"},{"Id":"2990938251","IsPullRequest":false,"CreatedAt":"2025-04-13T02:18:03","Actor":"baikaishiuc","Number":"10763","RawContent":null,"Title":"How to build Microsoft.Windowsdesktop.App package","State":"open","Body":"Hi, I arranged the directory structure like this:\n\n```\n${rootdir}\n|------> wpf\n|------> runtime\n|------> windowsdesktop\n```\n\nThen I entered the windowsdesktop subdirectory and ran:\n\n```\ncd windowsdesktop\n.\\build.cmd -pack -c Release\n```\n\nThis generated a package at:\n```\nartifacts\\packages\\Release\\Shipping\\windowsdesktop-runtime-8.0.11-win-x64.zip\n```\n\nHowever, after extracting this ZIP package, I found that the PresentationCore.dll MD5 hash is different from the one in wpf/artifacts.\n\n\nWhere is the library in the windowsdesktop package coming from?\nHow can I pack my custom PresentationCore.dll in  windowsdesktop-runtime-8.0.11-win-x64.zip","Url":"https://github.com/dotnet/wpf/issues/10763","RelatedDescription":"Open issue \"How to build Microsoft.Windowsdesktop.App package\" (#10763)"},{"Id":"2990732994","IsPullRequest":true,"CreatedAt":"2025-04-12T21:40:41","Actor":"ThomasGoulet73","Number":"10762","RawContent":null,"Title":" [StyleCleanUp] Fix MilCodeGen empty lines","State":"open","Body":"## Description\r\nFixes empty lines added by MilCodeGen.\r\n\r\nThis PR also syncs MilCodeGen with the empty line changes from dotnet/wpf#10021.\r\n\r\n## Customer Impact\r\nNone, whitespace changes only.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + ran MilCodeGen.\r\n\r\n## Risk\r\nNone, whitespace changes only.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10762)","Url":"https://github.com/dotnet/wpf/pull/10762","RelatedDescription":"Open PR \" [StyleCleanUp] Fix MilCodeGen empty lines\" (#10762)"},{"Id":"2990216972","IsPullRequest":true,"CreatedAt":"2025-04-12T05:02:12","Actor":"dotnet-maestro[bot]","Number":"10760","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [840bf684-917a-4879-f62c-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=840bf684-917a-4879-f62c-08d8e93a0c51)\n- **Build**: [20250417.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2689557)\n- **Date Produced**: April 17, 2025 10:24:23 AM UTC\n- **Commit**: [76dd1b4eb3b15881da350de93805ea6ab936364c](https://github.com/dotnet/arcade/commit/76dd1b4eb3b15881da350de93805ea6ab936364c)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25217.1][6]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25217.1][6]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25217.1][6]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25217.1][6]\n\n[6]: https://github.com/dotnet/arcade/compare/490307dc9b...76dd1b4eb3\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10760)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10760","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10760)"},{"Id":"2989016434","IsPullRequest":false,"CreatedAt":"2025-04-11T15:39:36","Actor":"dha125","Number":"10757","RawContent":null,"Title":"RibbonWindow not working correctly with ThemeMode=\"System\"","State":"open","Body":"### Description\n\nRibbonWindow fails to correctly render if  **ThemeMode=\"System\"** is in either App.xaml or MainWindow.xaml. RibbonWindow and Ribbon are well written but seem to have missed the modernization in dotnet 9.\n\n### Reproduction Steps\n\nAny valid RibbonWindow fails to render the quick access toolbar in the window title bar in a net9.0-windows or net10.0-windows project if any ThemeMode is set. I'm currently testing with 10.0.100-preview.2.25164.34.\n\n<RibbonWindow x:Class=\"WpfRibbonApp.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WpfRibbonApp\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\"\n        **ThemeMode=\"System\"**>\n    <DockPanel>\n        <Ribbon DockPanel.Dock=\"Top\">\n            <!-- any ribbon content here-->\n        </Ribbon>\n        <StackPanel>\n        </StackPanel>\n    </DockPanel>\n</RibbonWindow>\n\n### Expected behavior\n\nQuick access toolbar in the window title bar.\n![Image](https://github.com/user-attachments/assets/d424066d-7228-487f-a66a-e74c212cc42b)\n\n### Actual behavior\n\nSee image in expected behavior.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10757","RelatedDescription":"Open issue \"RibbonWindow not working correctly with ThemeMode=\"System\"\" (#10757)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-20T03:30:26.4525799Z","RunDurationInMilliseconds":495}