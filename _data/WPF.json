{"Data":{"GitHub":{"Issues":[{"Id":"1282356976","IsPullRequest":false,"CreatedAt":"2022-06-23T12:49:44","Actor":"SwathiDhatchanamoorthi","Number":"6716","RawContent":null,"Title":"DateTime.TryParseExact() method fails ","State":"open","Body":"I have tried to format object  value into DateTime using TryParseExact() method but this method will always returns false. I have used the below codes,\r\n\r\n private void Button_Click(object sender, RoutedEventArgs e)\r\n        {\r\n           object cellValue;\r\n            DateTime columnValue;\r\n            cellValue = new DateTime(1999, 1, 13, 3, 57, 32, 10); \r\n            if(DateTime.TryParseExact(cellValue.ToString(), \"hh:mm:ss.fff\", CultureInfo.InvariantCulture, DateTimeStyles.None, out columnValue))\r\n            {\r\n                MessageBox.Show(columnValue.ToString());\r\n            }\r\n            else\r\n            {\r\n                MessageBox.Show(\"Wrong value\");\r\n            }\r\n        }\r\n\r\nI need to convert the DateTime value with milliseconds. \r\nCan you kindly provide any solution for this ?","Url":"https://github.com/dotnet/wpf/issues/6716","RelatedDescription":"Open issue \"DateTime.TryParseExact() method fails \" (#6716)"},{"Id":"1281440777","IsPullRequest":true,"CreatedAt":"2022-06-23T01:09:35","Actor":"dotnet-maestro[bot]","Number":"6715","RawContent":null,"Title":"[release/7.0-preview6] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e014bf22-b515-48ab-abec-08da441eca4b)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: e014bf22-b515-48ab-abec-08da441eca4b\r\n- **Build**: 20220622.5\r\n- **Date Produced**: June 23, 2022 12:41:18 AM UTC\r\n- **Commit**: 35ef533a690d3fa80a36b2b7338657e3a3c5ab33\r\n- **Branch**: refs/heads/release/7.0-preview6\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22317.3 to 7.0.0-preview.6.22322.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22317.3 to 7.0.0-preview.6.22322.5][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b49db1e...35ef533\r\n[2]: https://github.com/dotnet/runtime/compare/53e52f2...fdc3b51\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e014bf22-b515-48ab-abec-08da441eca4b)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6715)","Url":"https://github.com/dotnet/wpf/pull/6715","RelatedDescription":"Open PR \"[release/7.0-preview6] Update dependencies from dotnet/winforms\" (#6715)"},{"Id":"1280959619","IsPullRequest":true,"CreatedAt":"2022-06-22T21:32:14","Actor":"ameltzerMSFT","Number":"6714","RawContent":null,"Title":"DataGridColumnBorder caching of Freezable brushes is not actually caching anything at all","State":"open","Body":"Fixes #6713 \r\n\r\n## Description\r\n\r\nCacheFreezable() logic is incorrect in that it checks if the indexed value is NOT null before caching versus if it IS null. This means that values will never actually be cached and any calls to GetCachedFreezable() will always return null causing the Brush to be regenerated rather than reused on every rendering pass.\r\n\r\n## Customer Impact\r\n\r\nUnnecessary computation on every rendering pass. Possible memory and brush leak.\r\n\r\n## Regression\r\n\r\nDoes not appear to be a regression.\r\n\r\n## Testing\r\n\r\nValidated fix locally in private implementation of DataGridColumnBorder\r\n\r\n## Risk\r\n\r\nThis should be minimal. DataGridColumnBorder code was clearly implemented assuming that brushes will be cached but they never actually are. There are various assertions in place already to ensure proper behavior here.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6714)","Url":"https://github.com/dotnet/wpf/pull/6714","RelatedDescription":"Open PR \"DataGridColumnBorder caching of Freezable brushes is not actually caching anything at all\" (#6714)"},{"Id":"1280928359","IsPullRequest":false,"CreatedAt":"2022-06-22T21:17:44","Actor":"ameltzerMSFT","Number":"6713","RawContent":null,"Title":"DataGridHeaderBorder.CacheFreezable method does not actually cache freezable brushes","State":"open","Body":"Code: https://github.com/dotnet/wpf/blob/89d172db0b7a192de720c6cfba5e28a1e7d46123/src/Microsoft.DotNet.Wpf/src/Themes/Shared/Microsoft/Windows/Themes/DataGridHeaderBorder.cs#L365\r\n\r\nThe logic is backwards in that it only caches if the indexed value is _not_ null, versus caching if the indexed value _is_ null. This will result in freezable values never being cached and any calls to GetCachedFreezable will always return a null value causing brushes to be created every time a rendering pass is performed for the specific theme.\r\n\r\nThe code should instead be:\r\n\r\n```csharp\r\n        private static void CacheFreezable(Freezable freezable, int index)\r\n        {\r\n            Debug.Assert(freezable.IsFrozen, \"Cached Freezables should be frozen.\");\r\n\r\n            lock (_cacheAccess)\r\n            {\r\n                if (_freezableCache[index] == null)\r\n                {\r\n                    _freezableCache[index] = freezable;\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6713","RelatedDescription":"Open issue \"DataGridHeaderBorder.CacheFreezable method does not actually cache freezable brushes\" (#6713)"},{"Id":"1280076375","IsPullRequest":true,"CreatedAt":"2022-06-22T12:36:09","Actor":"dotnet-maestro[bot]","Number":"6712","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220622.3\r\n- **Date Produced**: June 22, 2022 2:32:18 PM UTC\r\n- **Commit**: eaa4673f2a82355f7cd2f1c1243578be2e961d0f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22316.2 to 7.0.0-beta.22322.3][2]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22316.2 to 7.0.0-beta.22322.3][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22316.2 to 7.0.0-beta.22322.3][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22316.2 to 7.0.0-beta.22322.3][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22316.2 to 7.0.0-beta.22322.3][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/ccfe6da...eaa4673\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6712)\r\n","Url":"https://github.com/dotnet/wpf/pull/6712","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6712)"},{"Id":"1279928875","IsPullRequest":false,"CreatedAt":"2022-06-22T10:33:28","Actor":"tisis2","Number":"6710","RawContent":null,"Title":"Tooltip closes immediatly when shown on controls with control templates with negative margin","State":"open","Body":"* .NET Core Version: SDK: 6.0.300 Runtime 6.0.5\r\n* Windows version: 10.0.19044\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n **Problem description:**\r\n when you define a control template for a control with a negative margin to have a control that is exceeding its parent the tooltip is not shown correctly in the margin area.\r\n\r\nin the following example, the control itself is colored in Aqua and the negative margin in blue to visualize the areas. the dummy project is also attached for testing purpose\r\n \r\n behavior with 4.8:\r\n![behaviorWithNet48](https://user-images.githubusercontent.com/18416393/175008060-7edf1bcd-360e-44f9-896e-709164d7ac61.gif)\r\n\r\n behavior with net6.0:\r\n![behaviorWithNet6](https://user-images.githubusercontent.com/18416393/175008073-c094204e-5397-4dd0-b413-91262467126c.gif)\r\n\r\n DummyProject:\r\n[DisappearingTooltipWithNegativeMargin.zip](https://github.com/dotnet/wpf/files/8956776/DisappearingTooltipWithNegativeMargin.zip)\r\n ","Url":"https://github.com/dotnet/wpf/issues/6710","RelatedDescription":"Open issue \"Tooltip closes immediatly when shown on controls with control templates with negative margin\" (#6710)"},{"Id":"1279437905","IsPullRequest":true,"CreatedAt":"2022-06-22T03:23:25","Actor":"ThomasGoulet73","Number":"6709","RawContent":null,"Title":"Fix wpf-debug.targets","State":"open","Body":"## Description\r\nFixes 2 bug in wpf-debug.targets.\r\n\r\nFixes a bug introduced in #6334: `WPFArtifactsPath` should use `WpfArtifactsPackagesCommonPath` instead of `WpfPackagesCommonPath` which doesn't exist.\r\n\r\nFixes a bug in Release: `WPFArtifactsPath` should only contain suffix `.$(WpfConfig)` in Debug. In release, there are no suffix to `Microsoft.DotNet.Wpf.GitHub`\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nI built WPF for Debug x86, Debug x64, Release x86 and Release x64. Then I used wpf-debug.targets in a project and made sure that the correct binaries were copied to the output path for the correct combination of Configuration and TargetPlatform.\r\n\r\n## Risk\r\nNone.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6709)","Url":"https://github.com/dotnet/wpf/pull/6709","RelatedDescription":"Open PR \"Fix wpf-debug.targets\" (#6709)"},{"Id":"1279432419","IsPullRequest":true,"CreatedAt":"2022-06-22T03:16:01","Actor":"dotnet-maestro[bot]","Number":"6708","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220623.1\r\n- **Date Produced**: June 23, 2022 1:44:16 PM UTC\r\n- **Commit**: 2a49ce37b41877a48337f0e063511ecf7a7f8c6e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22317.3 to 7.0.0-preview.7.22323.1][10]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22317.3 to 7.0.0-preview.7.22323.1][10]\r\n  - **System.CodeDom**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8][11]\r\n\r\n[10]: https://github.com/dotnet/winforms/compare/b49db1e...2a49ce3\r\n[11]: https://github.com/dotnet/runtime/compare/53e52f2...fdc3b51\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6708)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.6.22315.2 to 7.0.0-preview.6.22321.8 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6708","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#6708)"},{"Id":"1278819531","IsPullRequest":true,"CreatedAt":"2022-06-21T17:57:50","Actor":"singhashish-wpf","Number":"6707","RawContent":null,"Title":"Revert hotfix for build failure due to pool updates","State":"open","Body":"Revert hotfix for build failure due to pool updates\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6707)","Url":"https://github.com/dotnet/wpf/pull/6707","RelatedDescription":"Open PR \"Revert hotfix for build failure due to pool updates\" (#6707)"},{"Id":"1277212856","IsPullRequest":true,"CreatedAt":"2022-06-21T17:50:44","Actor":"wtgodbe","Number":"6704","RawContent":null,"Title":"[release/6.0] Remove duplicate references","State":"closed","Body":"Backport of https://github.com/dotnet/wpf/pull/6648 & https://github.com/dotnet/wpf/pull/6698, should fix build errors in 6.0\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6704)","Url":"https://github.com/dotnet/wpf/pull/6704","RelatedDescription":"Closed or merged PR \"[release/6.0] Remove duplicate references\" (#6704)"},{"Id":"1278523974","IsPullRequest":true,"CreatedAt":"2022-06-21T14:19:03","Actor":"anjalisheel-wpf","Number":"6706","RawContent":null,"Title":"Fix for Bug 1493635: MenuItems with IsCheckable and StaysOpenOnClick set to true do not announce to Narrator when IsChecked is changed","State":"open","Body":"Fixes #5237\r\n\r\n## Description\r\nProvided a fix for the problem when windows Narrator was not announcing anything when IsChecked is changed (e.g. the item is clicked on or the user types \"Enter\" while focusing it).\r\n\r\n## Customer Impact\r\nFixes a regression.\r\n\r\n## Regression\r\nYes\r\n\r\n## Testing\r\nNA\r\n\r\n## Risk\r\nLow\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6706)","Url":"https://github.com/dotnet/wpf/pull/6706","RelatedDescription":"Open PR \"Fix for Bug 1493635: MenuItems with IsCheckable and StaysOpenOnClick set to true do not announce to Narrator when IsChecked is changed\" (#6706)"},{"Id":"1278247945","IsPullRequest":true,"CreatedAt":"2022-06-21T10:37:50","Actor":"dipeshmsft","Number":"6705","RawContent":null,"Title":"Update Branding to prerelease 7","State":"open","Body":"Update branding to PreRelease 7\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6705)","Url":"https://github.com/dotnet/wpf/pull/6705","RelatedDescription":"Open PR \"Update Branding to prerelease 7\" (#6705)"},{"Id":"1277121534","IsPullRequest":false,"CreatedAt":"2022-06-20T14:26:50","Actor":"KutanaDev","Number":"6703","RawContent":null,"Title":"Sometimes print jobs started by PrintQueueStream suffer an Exception in XpsRasterService.dll","State":"open","Body":"### Description\n\nThe .NET class `PrintQueueStream` lets you copy xps content directly to a destination printer queue.\r\n\r\nThis method succeeds on win10.\r\n\r\nBut exactly the same code running on win11 sometimes raises an Exception, always with the same stack trace:\r\n\r\n```\r\n(2ec4.11d4): Access violation - code c0000005 (first chance)\r\nFirst chance exceptions are reported before any exception handling.\r\nThis exception may be expected and handled.\r\nXpsRasterService!xpsrdr::GetGlyphRunBounds+0xd9:\r\n00007ffa`8638eb49 488b1b          mov     rbx,qword ptr [rbx] ds:00000000`00000000=????????????????\r\n```\r\n\r\nIt doesn't fail for every xps file, only some. In the linked solution, the file NatWest Welcome.xps succeeds, but the Kappris for Excel.win11.xps fails. \r\n\r\nBoth xps files get a 100% score from the MS isxps tool.\n\n### Reproduction Steps\n\nThis snippet is from the VS2019 solution whose link is below:\r\n\r\n```\r\nPrintQueue defaultPrintQueue = LocalPrintServer.GetDefaultPrintQueue();\r\nstring nextFile; // path to xps file\r\nusing (PrintQueueStream pqs = new PrintQueueStream(defaultPrintQueue, nextFile, true))\r\n{\r\n\tusing (FileStream fs = new FileStream(nextFile, FileMode.Open, FileAccess.Read))\r\n\t{\r\n\t\tfs.Position = 0;\r\n\t\tfs.CopyTo(pqs);\r\n\t}\r\n}\r\n```\r\n\r\nThere's a zipped VS2019 solution here, with sample XPS files.  [solution](https://drive.google.com/file/d/184U0bF2W3msrFhXUysSYxY9FPTcq_hze/view?usp=sharing)\n\n### Expected behavior\n\nAny XPS file that gets a 100% score from MS isxps should print correctly.\n\n### Actual behavior\n\nSome xps content fails to print.\n\n### Regression?\n\nThis worked in Windows 10, although `XpsRasterService.dll` isn't one of the dlls that gets loaded when you print with `PrintQueueStream` on win10.\n\n### Known Workarounds\n\nMS publish other methods for copying xps content to a target printer queue, which involve enumerating the xps content and calling an XpsDocumentWriter, and callbacks to add PrintTicket info per page. This technique is much slower than PrintQueueStream.\r\n\r\nWe favour PrintQueueStream because it heeds the PrintTickets within the xps. Not all available methods for printing xps pay any attention to the PrintTickets.\n\n### Configuration\n\nIf you use a printer driver whose GETTECHNOLOGY DeviceCaps query returns XPS then there is no error.\r\nBut if the query indicates that this is a Postscript driver or PCL, then the error does occur.\r\nThis means that older drivers (like the HP Universal PostScript Printer driver) fail.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/6703","RelatedDescription":"Open issue \"Sometimes print jobs started by PrintQueueStream suffer an Exception in XpsRasterService.dll\" (#6703)"},{"Id":"1276886312","IsPullRequest":false,"CreatedAt":"2022-06-20T12:55:10","Actor":"RezanYldz","Number":"6702","RawContent":null,"Title":"Datagrid Responds Slowly When Selecting Row","State":"open","Body":"Hi everyone,\r\nI am using datagrid to list my data. About 100-150 rows of data are coming. It takes 1 second or less when selecting the first rows. But as I scroll down, when I click on the lines below, it takes 3-5 seconds to select these lines. \r\n\r\nMy datagrid code is as follows:\r\n\r\n`\r\n<DataGrid Grid.Row=\"1\" x:Name=\"datagridValues\" ItemsSource=\"{Binding qAppValueDataGridList, IsAsync=True}\" Visibility=\"Collapsed\" \r\n                  AutoGenerateColumns=\"False\" CanUserAddRows=\"False\" RowEditEnding=\"datagridAppValues_RowEditEnding\"\r\n                  EnableColumnVirtualization=\"True\" EnableRowVirtualization=\"True\" CanUserResizeColumns=\"True\" \r\n                  VirtualizingPanel.VirtualizationMode=\"Recycling\" SelectionChanged=\"datagridValues_Selected\">\r\n            <DataGrid.Columns>\r\n                <DataGridTextColumn Binding=\"{Binding BaseValueId}\" Header=\"Id\" IsReadOnly=\"True\" MinWidth=\"40\" />\r\n                <DataGridTemplateColumn Header=\"{DynamicResource ValueName}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding ValueName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <TextBox Text=\"{Binding ValueName, Mode=TwoWay}\" FocusManager.FocusedElement=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Pool}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding PoolName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <ComboBox ItemsSource=\"{Binding Source={StaticResource Pools}}\" HorizontalAlignment=\"Center\" DisplayMemberPath=\"PoolName\" SelectedValuePath=\"Id\" SelectedValue=\"{Binding QPoolId, Mode=TwoWay}\" IsEnabled=\"True\" SelectionChanged=\"cbPool_SelectionChanged\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource WritePool}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding WritePoolName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <ComboBox ItemsSource=\"{Binding Source={StaticResource Pools}}\" HorizontalAlignment=\"Center\" DisplayMemberPath=\"PoolName\" SelectedValuePath=\"Id\" SelectedValue=\"{Binding WritePoolId, Mode=TwoWay}\" IsEnabled=\"True\" SelectionChanged=\"cbWritePool_SelectionChanged\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource LookUp}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding LookUpName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <ComboBox ItemsSource=\"{Binding Source={StaticResource LookUps}}\" HorizontalAlignment=\"Center\" DisplayMemberPath=\"LookUpName\" SelectedValuePath=\"Id\" SelectedValue=\"{Binding QLookupId, Mode=TwoWay}\" IsEnabled=\"True\" SelectionChanged=\"cbLookUp_SelectionChanged\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource DBFieldName}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding DBFieldName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <TextBox Text=\"{Binding DBFieldName, Mode=TwoWay}\" FocusManager.FocusedElement=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Perspective}\" MinWidth=\"150\" Visibility=\"{Binding Value, Source={StaticResource DataGridColumnVisibility}}\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding PerspectiveName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <ComboBox ItemsSource=\"{Binding Source={StaticResource Perspectives}}\" HorizontalAlignment=\"Center\" DisplayMemberPath=\"PerspectiveName\" SelectedValuePath=\"Id\" SelectedValue=\"{Binding QAppPerspectiveId, Mode=TwoWay}\" IsEnabled=\"True\" SelectionChanged=\"cbPerspective_SelectionChanged\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Measure}\" MinWidth=\"150\" Visibility=\"{Binding Value, Source={StaticResource DataGridColumnVisibility}}\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding MeasureName}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <ComboBox ItemsSource=\"{Binding Source={StaticResource Measures}}\" HorizontalAlignment=\"Center\" DisplayMemberPath=\"MeasureName\" SelectedValuePath=\"Id\" SelectedValue=\"{Binding QAppMeasureId, Mode=TwoWay}\" IsEnabled=\"True\" SelectionChanged=\"cbMeasure_SelectionChanged\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Type}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding TypeString}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <ComboBox ItemsSource=\"{Binding Source={StaticResource Types}}\" HorizontalAlignment=\"Center\" DisplayMemberPath=\"DisplayText\" SelectedValuePath=\"Value\" SelectedValue=\"{Binding Type, Mode=TwoWay}\" IsEnabled=\"True\" SelectionChanged=\"cbType_SelectionChanged\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Format}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding Format}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <TextBox Text=\"{Binding Format, Mode=TwoWay}\" FocusManager.FocusedElement=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Default}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding Default}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <TextBox Text=\"{Binding Default, Mode=TwoWay}\" FocusManager.FocusedElement=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource Formula}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock MouseDown=\"TextBlock_Formula_MouseDown\">\r\n                                <TextBlock.Style>\r\n                                    <Style TargetType=\"{x:Type TextBlock}\">\r\n                                        <Setter Property=\"Text\" Value=\"&lt;...&gt;\" />\r\n                                        <Style.Triggers>\r\n                                            <DataTrigger Binding=\"{Binding Formula}\" Value=\"{x:Null}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                            <DataTrigger Binding=\"{Binding Formula}\" Value=\"{x:Static System:String.Empty}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                        </Style.Triggers>\r\n                                    </Style>\r\n                                </TextBlock.Style>\r\n                            </TextBlock>\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource SubTotalFormula}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock MouseDown=\"TextBlock_SubTotalFormula_MouseDown\">\r\n                                <TextBlock.Style>\r\n                                    <Style TargetType=\"{x:Type TextBlock}\">\r\n                                        <Setter Property=\"Text\" Value=\"&lt;...&gt;\" />\r\n                                        <Style.Triggers>\r\n                                            <DataTrigger Binding=\"{Binding SubTotalFormula}\" Value=\"{x:Null}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                            <DataTrigger Binding=\"{Binding SubTotalFormula}\" Value=\"{x:Static System:String.Empty}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                        </Style.Triggers>\r\n                                    </Style>\r\n                                </TextBlock.Style>\r\n                            </TextBlock>\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource SpreadingMethod}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock MouseDown=\"TextBlock_SpreadingMethod_MouseDown\">\r\n                                <TextBlock.Style>\r\n                                    <Style TargetType=\"{x:Type TextBlock}\">\r\n                                        <Setter Property=\"Text\" Value=\"&lt;...&gt;\" />\r\n                                        <Style.Triggers>\r\n                                            <DataTrigger Binding=\"{Binding SpreadingMethod}\" Value=\"{x:Null}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                            <DataTrigger Binding=\"{Binding SpreadingMethod}\" Value=\"{x:Static System:String.Empty}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                        </Style.Triggers>\r\n                                    </Style>\r\n                                </TextBlock.Style>\r\n                            </TextBlock>\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource RelatedCalculations}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock MouseDown=\"TextBlock_RelatedCalculation_MouseDown\">\r\n                                <TextBlock.Style>\r\n                                    <Style TargetType=\"{x:Type TextBlock}\">\r\n                                        <Setter Property=\"Text\" Value=\"&lt;...&gt;\" />\r\n                                        <Style.Triggers>\r\n                                            <DataTrigger Binding=\"{Binding RelatedCalculation}\" Value=\"{x:Null}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                            <DataTrigger Binding=\"{Binding RelatedCalculation}\" Value=\"{x:Static System:String.Empty}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                        </Style.Triggers>\r\n                                    </Style>\r\n                                </TextBlock.Style>\r\n                            </TextBlock>\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource IsEditable}\" MinWidth=\"40\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <CheckBox x:Name=\"checkboxIsEditable\" HorizontalAlignment=\"Center\" IsChecked=\"{Binding IsEditable, Mode=TwoWay}\" Click=\"CheckBox_Checked_Change\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource EditableRule}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock MouseDown=\"TextBlock_EditableRule_MouseDown\">\r\n                                <TextBlock.Style>\r\n                                    <Style TargetType=\"{x:Type TextBlock}\">\r\n                                        <Setter Property=\"Text\" Value=\"&lt;...&gt;\" />\r\n                                        <Style.Triggers>\r\n                                            <DataTrigger Binding=\"{Binding EditableRule}\" Value=\"{x:Null}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                            <DataTrigger Binding=\"{Binding EditableRule}\" Value=\"{x:Static System:String.Empty}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                        </Style.Triggers>\r\n                                    </Style>\r\n                                </TextBlock.Style>\r\n                            </TextBlock>\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource IsSaveable}\" MinWidth=\"40\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <CheckBox x:Name=\"checkboxIsSaveable\" HorizontalAlignment=\"Center\" IsChecked=\"{Binding IsSaveable, Mode=TwoWay}\" Click=\"CheckBox_Checked_Change\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource SaveableRule}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding SaveableRule}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <TextBox Text=\"{Binding SaveableRule, Mode=TwoWay}\" FocusManager.FocusedElement=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource IsVisiable}\" MinWidth=\"40\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <CheckBox x:Name=\"checkboxIsVisiable\" HorizontalAlignment=\"Center\" IsChecked=\"{Binding IsVisiable, Mode=TwoWay}\" Click=\"CheckBox_Checked_Change\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource ConditionalFormat}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock MouseDown=\"TextBlock_ConditionalFormat_MouseDown\">\r\n                                <TextBlock.Style>\r\n                                    <Style TargetType=\"{x:Type TextBlock}\">\r\n                                        <Setter Property=\"Text\" Value=\"&lt;...&gt;\" />\r\n                                        <Style.Triggers>\r\n                                            <DataTrigger Binding=\"{Binding ConditionalFormat}\" Value=\"{x:Null}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                            <DataTrigger Binding=\"{Binding ConditionalFormat}\" Value=\"{x:Static System:String.Empty}\">\r\n                                                <Setter Property=\"Text\" Value=\"\" />\r\n                                            </DataTrigger>\r\n                                        </Style.Triggers>\r\n                                    </Style>\r\n                                </TextBlock.Style>\r\n                            </TextBlock>\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource SubTotalCondFormat}\" MinWidth=\"150\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <TextBlock Text=\"{Binding SubTotalCondFormat}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                    <DataGridTemplateColumn.CellEditingTemplate>\r\n                        <DataTemplate>\r\n                            <TextBox Text=\"{Binding SubTotalCondFormat, Mode=TwoWay}\" FocusManager.FocusedElement=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellEditingTemplate>\r\n                </DataGridTemplateColumn>\r\n                <DataGridTemplateColumn Header=\"{DynamicResource IsDisabled}\" MinWidth=\"40\">\r\n                    <DataGridTemplateColumn.CellTemplate>\r\n                        <DataTemplate>\r\n                            <CheckBox x:Name=\"checkboxIsDisabled\" HorizontalAlignment=\"Center\" IsChecked=\"{Binding IsDisabled, Mode=TwoWay}\" Click=\"CheckBox_Checked_Change\" />\r\n                        </DataTemplate>\r\n                    </DataGridTemplateColumn.CellTemplate>\r\n                </DataGridTemplateColumn>\r\n            </DataGrid.Columns>\r\n            <DataGrid.ContextMenu>\r\n                <ContextMenu>\r\n                    <MenuItem Header=\"{DynamicResource Delete}\" Click=\"MenuItemDelete_Click\">\r\n                        <MenuItem.Icon>\r\n                            <Label Content=\"&#xf2ed;\" FontFamily=\"{StaticResource FontAwesome}\" FontSize=\"12\"  VerticalAlignment=\"Center\"/>\r\n                        </MenuItem.Icon>\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n            </DataGrid.ContextMenu>\r\n        </DataGrid>\r\n`","Url":"https://github.com/dotnet/wpf/issues/6702","RelatedDescription":"Open issue \"Datagrid Responds Slowly When Selecting Row\" (#6702)"},{"Id":"1272214769","IsPullRequest":false,"CreatedAt":"2022-06-20T08:40:54","Actor":"trivalik","Number":"6689","RawContent":null,"Title":"shrinked Toolbar closes unwanted","State":"closed","Body":"* .NET Core Version: 6.0.6 Commit:  7cca709db2\r\n* Windows version: Windows 10 21H2 Build 19044.1706\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:**\r\n\r\nIf not enough space for toolbar is there the toolbar shrinks. In this is the case and the toolbar uses RadDropDownButton from telerik inside the toolbar it happens always that you are not able to access the dropdown of RadDropDownButton anymore. The root cause is unchanged in .NET Framework 4.8 see the line https://github.com/dotnet/wpf/blob/23efb2b9a3391a666f8b576601adcc177f0bfbe2/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/Primitives/Popup.cs#L1116\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n ```\r\n>\tPresentationFramework.dll!System.Windows.Controls.Primitives.Popup.HideWindow()\tUnbekannt\r\n \tPresentationFramework.dll!System.Windows.Controls.Primitives.Popup.OnIsOpenChanged(System.Windows.DependencyObject d, System.Windows.DependencyPropertyChangedEventArgs e)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs e)\tUnbekannt\r\n \tPresentationFramework.dll!System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs e)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.DependencyObject.NotifyPropertyChange(System.Windows.DependencyPropertyChangedEventArgs args)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.DependencyObject.UpdateEffectiveValue(System.Windows.EntryIndex entryIndex, System.Windows.DependencyProperty dp, System.Windows.PropertyMetadata metadata, System.Windows.EffectiveValueEntry oldEntry, ref System.Windows.EffectiveValueEntry newEntry, bool coerceWithDeferredReference, bool coerceWithCurrentValue, System.Windows.OperationType operationType)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.DependencyObject.SetValueCommon(System.Windows.DependencyProperty dp, object value, System.Windows.PropertyMetadata metadata, bool coerceWithDeferredReference, bool coerceWithCurrentValue, System.Windows.OperationType operationType, bool isInternal)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.DependencyObject.SetCurrentValueInternal(System.Windows.DependencyProperty dp, object value)\tUnbekannt\r\n \tPresentationFramework.dll!System.Windows.Controls.Primitives.Popup.OnPreviewMouseButton(System.Windows.Input.MouseButtonEventArgs e)\tUnbekannt\r\n \tPresentationFramework.dll!System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs e)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.UIElement.OnPreviewMouseLeftButtonUpThunk(object sender, System.Windows.Input.MouseButtonEventArgs e)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate genericHandler, object genericTarget)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.RoutedEventHandlerInfo.InvokeHandler(object target, System.Windows.RoutedEventArgs routedEventArgs)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.UIElement.ReRaiseEventAs(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args, System.Windows.RoutedEvent newEvent)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.UIElement.OnPreviewMouseUpThunk(object sender, System.Windows.Input.MouseButtonEventArgs e)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate genericHandler, object genericTarget)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate handler, object target)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.RoutedEventHandlerInfo.InvokeHandler(object target, System.Windows.RoutedEventArgs routedEventArgs)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.EventRoute.InvokeHandlersImpl(object source, System.Windows.RoutedEventArgs args, bool reRaised)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject sender, System.Windows.RoutedEventArgs args)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs args)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Input.InputManager.ProcessStagingArea()\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs input)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Input.InputProviderSite.ReportInput(System.Windows.Input.InputReport inputReport)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Interop.HwndMouseInputProvider.ReportInput(System.IntPtr hwnd, System.Windows.Input.InputMode mode, int timestamp, System.Windows.Input.RawMouseActions actions, int x, int y, int wheel)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Interop.HwndMouseInputProvider.FilterMessage(System.IntPtr hwnd, MS.Internal.Interop.WindowMessage msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnbekannt\r\n \tPresentationCore.dll!System.Windows.Interop.HwndSource.InputFilterMessage(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnbekannt\r\n \tWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnbekannt\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnbekannt\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\tUnbekannt\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnbekannt\r\n ```\r\n\r\n\r\n **Expected behavior:**\r\n\r\nPopup keeps open. \r\n\r\n **Minimal repro:**\r\n\r\n1. try to open the shrinked toolbar\r\n2. press the button\r\n3. --> all closes\r\n\r\n[testPopupWithToolbar3.zip](https://github.com/dotnet/wpf/files/8909562/testPopupWithToolbar3.zip)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6689","RelatedDescription":"Closed issue \"shrinked Toolbar closes unwanted\" (#6689)"},{"Id":"1275631132","IsPullRequest":false,"CreatedAt":"2022-06-18T01:47:36","Actor":"yll690","Number":"6701","RawContent":null,"Title":"Would it be better to check the Freezable.CanFreeze property in SystemResources.Freeze method?","State":"open","Body":"https://github.com/dotnet/wpf/blob/b43302b7c61c2565f39a12239d6d516c79026928/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/SystemResources.cs#L443-L450\r\n\r\nAs the code above, if the `freezable` can not be freeze, an exception will be thrown and break the application.\r\n\r\nI encountered this issue while using Wine. It says \"Initialization of 'System.Windows.Controls.Calendar' threw an exception. ---> System.InvalidOperationException: This Freezable cannot be frozen.\". I think it's unlikely WPF's fault, but would it be better to check the `CanFreeze` first?","Url":"https://github.com/dotnet/wpf/issues/6701","RelatedDescription":"Open issue \"Would it be better to check the Freezable.CanFreeze property in SystemResources.Freeze method?\" (#6701)"},{"Id":"1275548377","IsPullRequest":true,"CreatedAt":"2022-06-17T22:26:32","Actor":"bgrainger","Number":"6700","RawContent":null,"Title":"Reduce allocations when tracing routed events","State":"open","Body":"## Description\r\n\r\nI was tracing an application with dotMemory and noticed a huge amount of temporary `object[]` being allocated by `EventRoute.InvokeHandlersImpl`.\r\n\r\n![image](https://user-images.githubusercontent.com/188129/174408238-1004def8-9555-4107-b9ad-bf4fdf8d9fb2.png)\r\n\r\nThis particular application had attached a listener to `PresentationTraceSources.RoutedEventSource` to trace some diagnostic information. While it's expected that doing so will add some overhead, it shouldn't be this great.\r\n\r\n## Customer Impact\r\n\r\nMerging this PR will greatly reduce allocations for customers whose applications add a listener to `PresentationTraceSources.RoutedEventSource.Listeners`. \r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nTested with dotMemory after shipping this fix in https://github.com/Faithlife/wpf.\r\n\r\n## Risk\r\n\r\nMinimal.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6700)","Url":"https://github.com/dotnet/wpf/pull/6700","RelatedDescription":"Open PR \"Reduce allocations when tracing routed events\" (#6700)"},{"Id":"1274926013","IsPullRequest":true,"CreatedAt":"2022-06-17T14:43:54","Actor":"dipeshmsft","Number":"6698","RawContent":null,"Title":"Fixing the C++/CLI projects failing due to NU1504","State":"closed","Body":"Fixes # <!-- Issue Number --> #6647 \r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nFixed the DuplicatePackageReference build issue in C++/CLI projects.\r\nThis PR along with PR #6648 , fixes the build issues is VS 2022 preview.\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nNone\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nNo\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nCI + Local Testing\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow.\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6698)","Url":"https://github.com/dotnet/wpf/pull/6698","RelatedDescription":"Closed or merged PR \"Fixing the C++/CLI projects failing due to NU1504\" (#6698)"},{"Id":"1274981321","IsPullRequest":true,"CreatedAt":"2022-06-17T13:02:45","Actor":"dotnet-maestro[bot]","Number":"6699","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220616.2\r\n- **Date Produced**: June 16, 2022 3:06:16 PM UTC\r\n- **Commit**: ccfe6da198c5f05534863bbb1bff66e830e0c6ab\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22314.8 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22314.8 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22314.8 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22314.8 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22314.8 to 7.0.0-beta.22316.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/696eeed...ccfe6da\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6699)","Url":"https://github.com/dotnet/wpf/pull/6699","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6699)"},{"Id":"1274802154","IsPullRequest":true,"CreatedAt":"2022-06-17T09:55:07","Actor":"dotnet-maestro[bot]","Number":"6697","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220617.3\r\n- **Date Produced**: June 17, 2022 8:43:28 AM UTC\r\n- **Commit**: b49db1e2b72f718460cf0983241178e16c5c1c04\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22317.2 to 7.0.0-preview.6.22317.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22317.2 to 7.0.0-preview.6.22317.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ae99c75...b49db1e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6697)","Url":"https://github.com/dotnet/wpf/pull/6697","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6697)"},{"Id":"1274773458","IsPullRequest":true,"CreatedAt":"2022-06-17T09:28:41","Actor":"dotnet-maestro[bot]","Number":"6696","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220617.2\r\n- **Date Produced**: June 17, 2022 8:16:50 AM UTC\r\n- **Commit**: ae99c750977752b0d719f9ebd3f06b9a1e9e70db\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22317.1 to 7.0.0-preview.6.22317.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22317.1 to 7.0.0-preview.6.22317.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.6.22314.11 to 7.0.0-preview.6.22315.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/6ed2b01...ae99c75\r\n[2]: https://github.com/dotnet/runtime/compare/eeb0c15...53e52f2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6696)","Url":"https://github.com/dotnet/wpf/pull/6696","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6696)"},{"Id":"1274742798","IsPullRequest":true,"CreatedAt":"2022-06-17T09:00:55","Actor":"dotnet-maestro[bot]","Number":"6695","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220617.1\r\n- **Date Produced**: June 17, 2022 8:09:21 AM UTC\r\n- **Commit**: 6ed2b018fc372647905a04985b6c801f4f3c5274\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22316.1 to 7.0.0-preview.6.22317.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22316.1 to 7.0.0-preview.6.22317.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/2f1225c...6ed2b01\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6695)","Url":"https://github.com/dotnet/wpf/pull/6695","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6695)"},{"Id":"1274667406","IsPullRequest":true,"CreatedAt":"2022-06-17T07:45:49","Actor":"dotnet-maestro[bot]","Number":"6694","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220616.1\r\n- **Date Produced**: June 17, 2022 6:55:31 AM UTC\r\n- **Commit**: 2f1225cb8724192dbd4170c5e37641b3fbe6dd02\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22315.3 to 7.0.0-preview.6.22316.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22315.3 to 7.0.0-preview.6.22316.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/c72e202...2f1225c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6694)","Url":"https://github.com/dotnet/wpf/pull/6694","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6694)"},{"Id":"1274535742","IsPullRequest":true,"CreatedAt":"2022-06-17T03:57:38","Actor":"ThomasGoulet73","Number":"6693","RawContent":null,"Title":"Remove SafeReflectionInvoker","State":"open","Body":"## Description\r\nRemoves SafeReflectionInvoker which was useful in .Net Framework because those methods were annotated with `SecuritySafeCriticalAttribute` for partial trust but since .Net Core does not support partial trust, this level of indirection is useless and only hurts performance because of the indirection and the methods are annotated to never be inlined by the JIT.\r\n\r\nI removed `IsInSystemXaml` and `IsSystemXamlNonPublic` which are internal and unused but there are comments that it is by design that they still exist. Those comments dates back to the initial commit of System.Xaml in this repo so it probably comes from the .Net Framework version of WPF. I removed them in a separate commit so it's easy to revert if the WPF does not want to remove those methods.\r\n\r\n## Customer Impact\r\nShould improve performance a bit (Though I wasn't able to properly measure it).\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + CI + I tested a simple app.\r\n\r\n## Risk\r\nLow. It is the same code but without indirection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6693)","Url":"https://github.com/dotnet/wpf/pull/6693","RelatedDescription":"Open PR \"Remove SafeReflectionInvoker\" (#6693)"},{"Id":"1273321053","IsPullRequest":false,"CreatedAt":"2022-06-16T09:46:50","Actor":"Orace","Number":"6692","RawContent":null,"Title":"ImageBrush (with TileMode as Tile and ViewportUnits as Absolute) as DiffuseMaterial has a wrong behavior.","State":"open","Body":"* .NET Core Version: 6.0.203\r\n* Windows version: 10.0.19043\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio: No\r\n* Security issues or bugs: No\r\n \r\n **Problem description:**\r\n\r\nIn a `Viewport3D`, we consider the rendering of **the first column** of a texture to a `GeometryModel3D` that represent a square.  \r\nThat's it, each point of the square `({x,y}∈[0,1]²)` is mapped to `{0,y}` in the texture space.\r\n\r\n``` xml\r\n<Viewport3D>\r\n    <Viewport3D.Camera>\r\n        <OrthographicCamera FarPlaneDistance=\"3\"\r\n                            NearPlaneDistance=\"1\"\r\n                            Position=\"0 0 2\"\r\n                            LookDirection=\"0 0 -1\"\r\n                            Width=\"4\"/>\r\n    </Viewport3D.Camera>\r\n\r\n    <ModelVisual3D>\r\n        <ModelVisual3D.Content>\r\n            <AmbientLight />\r\n        </ModelVisual3D.Content>\r\n    </ModelVisual3D>\r\n\r\n    <ModelVisual3D>\r\n        <ModelVisual3D.Content>\r\n            <GeometryModel3D>\r\n                <GeometryModel3D.Material>\r\n                    <DiffuseMaterial>\r\n                        <DiffuseMaterial.Brush>\r\n                            <ImageBrush ImageSource=\"/Resources/texture.png\"\r\n                                        TileMode=\"None\"\r\n                                        ViewportUnits=\"Absolute\" />\r\n                        </DiffuseMaterial.Brush>\r\n                    </DiffuseMaterial>\r\n                </GeometryModel3D.Material>\r\n                <GeometryModel3D.Geometry>\r\n                    <!--\r\n                     (0,1)  B- -C  (0,1)\r\n                            |   |\r\n                     (0,0)  A- -D  (0,0)\r\n                    -->\r\n                    <MeshGeometry3D Positions=\"-1,-1,0 -1,+1,0 +1,+1,0 +1,-1,0\"\r\n                                    TriangleIndices=\"0 2 1 3 2 0\"\r\n                                    TextureCoordinates=\"0,0 0,1 0,1 0,0\" />\r\n                </GeometryModel3D.Geometry>\r\n            </GeometryModel3D>\r\n        </ModelVisual3D.Content>\r\n    </ModelVisual3D>\r\n</Viewport3D>\r\n```\r\n\r\nIf we set the `ImageBrush` `TileMode` to `\"Tile\"`, it appear that it is the middle column of the texture that is rendered, that's it, each point of the square `({x,y}∈[0,1]²)` is mapped to `{0.5,y}` in the texture space instead of `{0,y}`.\r\n\r\n **Actual behavior:**\r\n\r\nWhen the `ImageBrush` `TileMode` is set to `\"Tile\"`, it is the middle column of the texture that is rendered, that's it, each point of the square `({x,y}∈[0,1]²)` is mapped to `{0.5,y}`.\r\n \r\n **Expected behavior:**\r\n\r\nWhen the `ImageBrush` `TileMode` is set to `\"Tile\"`, it should be the first column of the texture that is rendered, that's it, each point of the square `({x,y}∈[0,1]²)` should be mapped to `{0,y}`.\r\n \r\n **Minimal repro:**\r\n\r\nCode to reproduce the bug available [here](https://github.com/Orace/WpfGeometryModel3DBug/releases/tag/v0.0.1).","Url":"https://github.com/dotnet/wpf/issues/6692","RelatedDescription":"Open issue \"ImageBrush (with TileMode as Tile and ViewportUnits as Absolute) as DiffuseMaterial has a wrong behavior.\" (#6692)"},{"Id":"1273046387","IsPullRequest":true,"CreatedAt":"2022-06-16T04:48:33","Actor":"ThomasGoulet73","Number":"6691","RawContent":null,"Title":"Fix Invalid_IInputElement resource","State":"open","Body":"## Description\r\nFixes a small bug in the Invalid_IInputElement resource. UIElement3D is not included in the message even if it is supported.\r\nFixes a small bug in some usage of the Invalid_IInputElement resource. Some usage were not passing an argument in the Get method so the format would return the message unformated.\r\n\r\nAlso added a couple of comment cleanup that did not include UIElement3D in the supported list.\r\n\r\n## Customer Impact\r\nGive proper exception message.\r\n\r\n## Regression\r\nNo. This is probably an old \"bug\" when UIElement3D was introduced.\r\n\r\n## Testing\r\nLocal build + CI.\r\n\r\n## Risk\r\nLow. Exception message could change but I don't think it is breaking\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6691)","Url":"https://github.com/dotnet/wpf/pull/6691","RelatedDescription":"Open PR \"Fix Invalid_IInputElement resource\" (#6691)"},{"Id":"1272835238","IsPullRequest":true,"CreatedAt":"2022-06-15T23:26:24","Actor":"dotnet-maestro[bot]","Number":"6690","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220615.3\r\n- **Date Produced**: June 15, 2022 10:35:55 PM UTC\r\n- **Commit**: c72e202daa0656fbecee52a4630b0c81550f742d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.6.22314.4 to 7.0.0-preview.6.22315.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.6.22314.4 to 7.0.0-preview.6.22315.3][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.6.22313.8 to 7.0.0-preview.6.22314.11][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8f52930...c72e202\r\n[2]: https://github.com/dotnet/runtime/compare/367193d...eeb0c15\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6690)","Url":"https://github.com/dotnet/wpf/pull/6690","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6690)"},{"Id":"1272171426","IsPullRequest":true,"CreatedAt":"2022-06-15T13:02:07","Actor":"dotnet-maestro[bot]","Number":"6688","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220614.8\r\n- **Date Produced**: June 14, 2022 10:30:34 PM UTC\r\n- **Commit**: 696eeede14b91aebe0069dc2e4a91cf594d2073e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22314.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22314.8][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22314.8][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22314.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22314.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/569a3f0...696eeed\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6688)","Url":"https://github.com/dotnet/wpf/pull/6688","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6688)"},{"Id":"1272154990","IsPullRequest":false,"CreatedAt":"2022-06-15T12:23:35","Actor":"AdmiralSnyder","Number":"6687","RawContent":null,"Title":"Move primitive types into their own nuget package","State":"open","Body":"Primitives, like System.Windows.Point should be moved into a standalone Nuget package. They shouldn't be tied to WPF. \r\nSystem.Drawing.Primities exists as a reference point. This would allow usage outside WPF.\r\n\r\nThat way, it's possible to reference them from libraries without having to put `UseWPF` into the .csproj files (keeping them small, as e.g. test projects testing the algorithms apart form their UI implementation should be)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6687","RelatedDescription":"Open issue \"Move primitive types into their own nuget package\" (#6687)"},{"Id":"1271537765","IsPullRequest":true,"CreatedAt":"2022-06-15T01:36:45","Actor":"dotnet-maestro[bot]","Number":"6686","RawContent":null,"Title":"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:934472a4-9da1-4b66-da04-08d961c27f17)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 934472a4-9da1-4b66-da04-08d961c27f17\r\n- **Build**: 20220614.4\r\n- **Date Produced**: June 15, 2022 12:45:12 AM UTC\r\n- **Commit**: 02282bc994b3e7cd210e76caca2daa1cbcf934c4\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-rtm.22262.2 to 6.0.0-rtm.22314.4][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC9dd507c&targetVersion=GC02282bc&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:934472a4-9da1-4b66-da04-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6686)","Url":"https://github.com/dotnet/wpf/pull/6686","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#6686)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-06-24T03:30:30.9234823Z","RunDurationInMilliseconds":508}