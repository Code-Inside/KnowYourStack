{"Data":{"GitHub":{"Issues":[{"Id":"740289741","IsPullRequest":true,"CreatedAt":"2020-11-10T23:05:17","Actor":"dotnet-maestro[bot]","Number":"3790","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201110.3\r\n- **Date Produced**: 11/10/2020 10:20 PM\r\n- **Commit**: 7b381e0e9ce4eb0021b5cafb6ec906cf347cfba7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20560.1 to 6.0.0-alpha.1.20560.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20560.1 to 6.0.0-alpha.1.20560.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/5af42bf...7b381e0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3790","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3790)"},{"Id":"740215003","IsPullRequest":true,"CreatedAt":"2020-11-10T20:45:05","Actor":"dotnet-maestro[bot]","Number":"3789","RawContent":null,"Title":"[release/5.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:879723a8-02ca-470e-70c0-08d83eef1915)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 879723a8-02ca-470e-70c0-08d83eef1915\r\n- **Build**: 20201110.4\r\n- **Date Produced**: 11/10/2020 8:08 PM\r\n- **Commit**: 762dab2fa92701b200c5949d43a3ff5f38d90956\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 5.0.0-rtm.20560.3 to 5.0.0-rtm.20560.4][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC702448c&targetVersion=GC762dab2&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:879723a8-02ca-470e-70c0-08d83eef1915)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3789","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3789)"},{"Id":"740184249","IsPullRequest":true,"CreatedAt":"2020-11-10T20:10:56","Actor":"dotnet-maestro[bot]","Number":"3787","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201110.2\r\n- **Date Produced**: 11/10/2020 7:16 PM\r\n- **Commit**: 61c7831dd4502da14e4a663c69b8776c1601a4d5\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20559.3 to 5.0.1-servicing.20560.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20559.3 to 5.0.1-servicing.20560.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/da561f2...61c7831\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3787","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3787)"},{"Id":"740180758","IsPullRequest":true,"CreatedAt":"2020-11-10T20:00:31","Actor":"dotnet-maestro[bot]","Number":"3786","RawContent":null,"Title":"[release/5.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:879723a8-02ca-470e-70c0-08d83eef1915)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 879723a8-02ca-470e-70c0-08d83eef1915\r\n- **Build**: 20201110.3\r\n- **Date Produced**: 11/10/2020 6:59 PM\r\n- **Commit**: 702448c94bf0a4917a580a069617141906fe57d4\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 5.0.0-rtm.20512.2 to 5.0.0-rtm.20560.3][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCed62575&targetVersion=GC702448c&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:879723a8-02ca-470e-70c0-08d83eef1915)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3786","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3786)"},{"Id":"740193344","IsPullRequest":true,"CreatedAt":"2020-11-10T19:45:02","Actor":"mmitche","Number":"3788","RawContent":null,"Title":"[release/5.0] Update branding to 5.0.1","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/3788","RelatedDescription":"Open PR \"[release/5.0] Update branding to 5.0.1\" (#3788)"},{"Id":"740139810","IsPullRequest":true,"CreatedAt":"2020-11-10T18:48:25","Actor":"dotnet-maestro[bot]","Number":"3785","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1b2e9dc5-44be-480a-8167-08d86afc0648\r\n- **Build**: 20201110.3\r\n- **Date Produced**: 11/10/2020 4:51 PM\r\n- **Commit**: 6f54e001de0c52e52578e5252cb279f5bc9a2eb6\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 5.0.0-beta.20510.1 to 5.0.0-beta.20560.3][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 5.0.0-beta.20510.1 to 5.0.0-beta.20560.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20510.1 to 5.0.0-beta.20560.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20510.1 to 5.0.0-beta.20560.3][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 5.0.0-beta.20510.1 to 5.0.0-beta.20560.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6813f5a...6f54e00\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 5.0.100\r\n  - Updates tools.dotnet to 5.0.100\r\n\r\n[marker]: <> (End:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3785","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#3785)"},{"Id":"739950243","IsPullRequest":false,"CreatedAt":"2020-11-10T14:19:40","Actor":"mdro","Number":"3784","RawContent":null,"Title":"MenuItem with ApplicationCommand doesn't get localized in self-contained deployment","State":"open","Body":"* .NET Core Version: 3.1.9/3.1.403\r\n* Windows version: 1909 10.0.18363\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: N/A\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nWhen you bind a command from `ApplicationCommands` such as `Save` to a `MenuItem`, it is supposed to display a localized label and key shortcut.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nOn a machine with de-DE locale and a window with `Window.Language = \"fr-FR\"`:\r\n\r\nIf the program is published as framework-dependent or run from the build directory, the menu item is \"Speichern Strg+S\" (i.e in German).\r\n\r\nIf the program is published as self-contained, the menu item is \"Save Ctrl+S\". Note that `CultureInfo.CurrentCulture` and `CultureInfo.CurrentUICulture` both return de-DE. Date and number formatting also follow de-DE culture.\r\n \r\n **Expected behavior:**\r\nIn both cases the `MenuItem`should be localized to de-DE or fr-FR (not sure about the semantics of `Window.Language`).\r\n\r\n **Minimal repro:**\r\nStart with \"WPF App (.Net Core)\" template.\r\n\r\nMainWindow.xaml:\r\n```XAML\r\n<Window x:Class=\"ReproPublish.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\"\r\n        Language=\"fr-FR\">\r\n    <Window.CommandBindings>\r\n        <CommandBinding Command=\"ApplicationCommands.Save\" Executed=\"CommandSave_Executed\"/>\r\n    </Window.CommandBindings>\r\n    <Grid>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"Auto\"/>\r\n            <RowDefinition/>\r\n        </Grid.RowDefinitions>\r\n        <Menu Grid.Row=\"0\">\r\n            <MenuItem Header=\"Test\">\r\n                <MenuItem Command=\"ApplicationCommands.Save\"/>\r\n            </MenuItem>\r\n        </Menu>\r\n    </Grid>\r\n</Window>\r\n```\r\n\r\nMainWindow.xaml.cs (default except command handler with optional test output):\r\n```C#\r\nusing System;\r\nusing System.Globalization;\r\nusing System.Windows;\r\nusing System.Windows.Input;\r\n\r\nnamespace ReproPublish\r\n{\r\n    public partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void CommandSave_Executed(object sender, ExecutedRoutedEventArgs e)\r\n        {\r\n            MessageBox.Show(this, $\"CC: {CultureInfo.CurrentCulture.Name}\\nCUIC: {CultureInfo.CurrentUICulture.Name}\\nTime: {DateTime.Today}\\nNumber: {1.5}\");\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/wpf/issues/3784","RelatedDescription":"Open issue \"MenuItem with ApplicationCommand doesn't get localized in self-contained deployment\" (#3784)"},{"Id":"739811368","IsPullRequest":true,"CreatedAt":"2020-11-10T11:35:27","Actor":"dotnet-maestro[bot]","Number":"3783","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201110.1\r\n- **Date Produced**: 11/10/2020 10:55 AM\r\n- **Commit**: 5af42bfbe9047fc744ff08db120129e87808481d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20559.4 to 6.0.0-alpha.1.20560.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20559.4 to 6.0.0-alpha.1.20560.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8dccbc0...5af42bf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3783","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3783)"},{"Id":"739526296","IsPullRequest":true,"CreatedAt":"2020-11-10T03:16:56","Actor":"dotnet-maestro[bot]","Number":"3782","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201109.4\r\n- **Date Produced**: 11/10/2020 2:49 AM\r\n- **Commit**: 8dccbc0f20d969915f29a996c844fd32ed3fe246\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20555.4 to 6.0.0-alpha.1.20559.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20555.4 to 6.0.0-alpha.1.20559.4][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20554.9 to 6.0.0-alpha.1.20557.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/d91d148...8dccbc0\r\n[2]: https://github.com/dotnet/runtime/compare/2cf2f57...6cfef20\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3782","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3782)"},{"Id":"739511475","IsPullRequest":true,"CreatedAt":"2020-11-10T02:47:08","Actor":"dotnet-maestro[bot]","Number":"3781","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201109.3\r\n- **Date Produced**: 11/10/2020 2:00 AM\r\n- **Commit**: da561f28fed1f58e5b70609b40fb8f036393af62\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20559.2 to 5.0.1-servicing.20559.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20559.2 to 5.0.1-servicing.20559.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/5ad6863...da561f2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3781","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3781)"},{"Id":"739502054","IsPullRequest":true,"CreatedAt":"2020-11-10T02:15:54","Actor":"dotnet-maestro[bot]","Number":"3780","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201109.2\r\n- **Date Produced**: 11/10/2020 1:41 AM\r\n- **Commit**: 5ad68630e3f6ff784c32817f1af01beaaf48747e\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20559.1 to 5.0.1-servicing.20559.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20559.1 to 5.0.1-servicing.20559.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/3dafbed...5ad6863\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3780","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3780)"},{"Id":"739495561","IsPullRequest":true,"CreatedAt":"2020-11-10T01:51:02","Actor":"dotnet-maestro[bot]","Number":"3779","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201109.1\r\n- **Date Produced**: 11/10/2020 1:24 AM\r\n- **Commit**: 3dafbed6395e0384da14c7eab25c356de583f6ac\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.0-rtm.20529.3 to 5.0.1-servicing.20559.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.0-rtm.20529.3 to 5.0.1-servicing.20559.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/7d4355b...3dafbed\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3779","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3779)"},{"Id":"739151594","IsPullRequest":false,"CreatedAt":"2020-11-09T15:59:39","Actor":"MarkIngramUK","Number":"3778","RawContent":null,"Title":"What's the best way of debugging ngen'd framework dlls from a user crash dump?","State":"open","Body":"When viewing user crash dumps, we're often presented with the following callstack:\r\n![image](https://user-images.githubusercontent.com/4758079/98564352-2c692000-22a4-11eb-809d-18f34610ef1c.png)\r\n\r\nVS fails to load module `PresentationFramework.ni.dll` so the callstack is unavailable.\r\n\r\nWhat is the recommended way of debugging these scenarios?","Url":"https://github.com/dotnet/wpf/issues/3778","RelatedDescription":"Open issue \"What's the best way of debugging ngen'd framework dlls from a user crash dump?\" (#3778)"},{"Id":"737725209","IsPullRequest":true,"CreatedAt":"2020-11-06T12:59:58","Actor":"dotnet-maestro[bot]","Number":"3776","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Internal**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201105.4\r\n- **Date Produced**: 11/6/2020 12:24 PM\r\n- **Commit**: d91d148a296403d094a3c6fa6594db3920c5d539\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20555.3 to 6.0.0-alpha.1.20555.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20555.3 to 6.0.0-alpha.1.20555.4][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20553.9 to 6.0.0-alpha.1.20554.9][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/456c873...d91d148\r\n[2]: https://github.com/dotnet/runtime/compare/4730697...2cf2f57\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3776","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3776)"},{"Id":"737729097","IsPullRequest":true,"CreatedAt":"2020-11-06T12:41:28","Actor":"AR-May","Number":"3777","RawContent":null,"Title":"Fix typo in the template name","State":"open","Body":"Issue #3725","Url":"https://github.com/dotnet/wpf/pull/3777","RelatedDescription":"Open PR \"Fix typo in the template name\" (#3777)"},{"Id":"737623570","IsPullRequest":false,"CreatedAt":"2020-11-06T09:51:13","Actor":"Jaiganeshkumaran","Number":"3775","RawContent":null,"Title":"Use accent color as the default color for controls","State":"open","Body":"**Related to https://github.com/microsoft/ProjectReunion/issues/232**\r\n\r\nToday WPF uses Blue as the default colour instead of the user's accent colour. This is the same for WinForms too but since it's GDI based it can be tweaked easily but WPF controls are rendered independently so it needs internal modification for WPF. Please start using the accent colour on Windows 10 for a consistent user experience.","Url":"https://github.com/dotnet/wpf/issues/3775","RelatedDescription":"Open issue \"Use accent color as the default color for controls\" (#3775)"},{"Id":"737500522","IsPullRequest":true,"CreatedAt":"2020-11-06T06:38:52","Actor":"dotnet-maestro[bot]","Number":"3774","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20201105.3\r\n- **Date Produced**: 11/6/2020 6:05 AM\r\n- **Commit**: 456c873291b18ab8fe8b26410765ec30d5439214\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-alpha.1.20555.1 to 6.0.0-alpha.1.20555.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-alpha.1.20555.1 to 6.0.0-alpha.1.20555.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/2195c2c...456c873\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3774","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#3774)"},{"Id":"737426458","IsPullRequest":false,"CreatedAt":"2020-11-06T03:25:12","Actor":"vsfeedback","Number":"3773","RawContent":null,"Title":"Typing Japanese in a WPF RichTextBox","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Typing-Japanese-in-a-WPF-RichTextBox/825112)._\n\n---\n<p>If you type a line in Japanese in a WPF RichTextBox control and then wrap it with Shift + enter and then rewrite it  Will the top line and the writing be followed, is there any way to deal with this phenomenon?</p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/19/2019, 02:01 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### PR [MSFT] on 12/10/2019, 09:19 PM: \n\n<p>Hi,<br>\nWe would be happy to help you out. We’ll need some more information to better investigate this issue.<br>\nCan you share with us if  the issue that you’re seeing only happens when you’re modifying the text in RichTextBox directly in the XAML Designer or is this something which is more of an issue with how WPF RichTextBox control renders ?</p>\n\n#### lee hanhyeong on 12/16/2019, 10:57 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 4/1/2020, 00:06 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n#### Feedback Bot on 4/24/2020, 00:24 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3773","RelatedDescription":"Open issue \"Typing Japanese in a WPF RichTextBox\" (#3773)"},{"Id":"737426355","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:58","Actor":"vsfeedback","Number":"3772","RawContent":null,"Title":"WPF drop is not working","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF-drop-is-not-working/971433)._\n\n---\n<p>I am using Windows 10 latest version, project is in WPF .NET Framework 4.8, latest visual studio.<br></p><p>To make it super simple I've created a brand new WPF project. Event handlers are not called. This is the code:</p><pre>&lt;Window x:Class=&quot;WpfApp1.MainWindow&quot;\n        xmlns=&quot;https://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;https://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:d=&quot;https://schemas.microsoft.com/expression/blend/2008&quot;\n        xmlns:mc=&quot;https://schemas.openxmlformats.org/markup-compatibility/2006&quot;\n        xmlns:local=&quot;clr-namespace:WpfApp1&quot;\n        mc:Ignorable=&quot;d&quot;\n        Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot; AllowDrop=&quot;True&quot;&gt;\n    &lt;Grid Focusable=&quot;True&quot; AllowDrop=&quot;True&quot; Drop=&quot;Grid_Drop&quot; DragOver=&quot;Grid_DragOver&quot; DragEnter=&quot;Grid_DragEnter&quot; PreviewDrop=&quot;Grid_PreviewDrop&quot; PreviewDragEnter=&quot;Grid_PreviewDragEnter&quot; PreviewDragOver=&quot;Grid_PreviewDragOver&quot; Background=&quot;Transparent&quot;&gt;\n        \n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</pre>\n<pre>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Navigation;\nusing System.Windows.Shapes;\n\n\nnamespace WpfApp1\n{\n    /// &lt;summary&gt;\n    /// Interaction logic for MainWindow.xaml\n    /// &lt;/summary&gt;\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n\n\n        private void Grid_Drop(object sender, DragEventArgs e)\n        {\n            e.Effects = DragDropEffects.Copy;\n            e.Handled = true;\n\n\n        }\n\n\n        private void Grid_DragOver(object sender, DragEventArgs e)\n        {\n            e.Effects = DragDropEffects.Copy;\n            e.Handled = true;\n        }\n\n\n        private void Grid_DragEnter(object sender, DragEventArgs e)\n        {\n            e.Effects = DragDropEffects.Copy;\n            e.Handled = true;\n        }\n\n        private void Grid_PreviewDrop(object sender, DragEventArgs e)\n        {\n            e.Effects = DragDropEffects.Copy;\n            e.Handled = true;\n        }\n\n\n        private void Grid_PreviewDragEnter(object sender, DragEventArgs e)\n        {\n            e.Effects = DragDropEffects.Copy;\n            e.Handled = true;\n        }\n\n\n        private void Grid_PreviewDragOver(object sender, DragEventArgs e)\n        {\n            e.Effects = DragDropEffects.Copy;\n            e.Handled = true;\n        }\n    }\n}\n\n\n\n</pre><p>What should I do next?</p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/1/2020, 10:40 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 5/8/2020, 03:27 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n\n#### Hrvoje Batrnek solved on 5/8/2020, 04:20 PM, 0 votes: \n\n<p>\"I have detected that for the last 35 days...\"</p><p>Your detection has an error. I am waiting for the response and there was no response.</p>\n","Url":"https://github.com/dotnet/wpf/issues/3772","RelatedDescription":"Open issue \"WPF drop is not working\" (#3772)"},{"Id":"737426305","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:48","Actor":"vsfeedback","Number":"3771","RawContent":null,"Title":"Wpf's Button's Thickness property is invalid","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Wpfs-Buttons-Thickness-property-is-inv/958226)._\n\n---\nNew construction of win7 flagship system,\nButton's ThicknessBorder was found to be invalid, always displaying a 1-pixel border.\nPutting the project into Win10 can be displayed normally.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/23/2020, 07:33 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 5/8/2020, 03:19 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3771","RelatedDescription":"Open issue \"Wpf's Button's Thickness property is invalid\" (#3771)"},{"Id":"737426257","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:41","Actor":"vsfeedback","Number":"3770","RawContent":null,"Title":"CollectionViewGroup.Items not raising PropertyChanged after having an item added?","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/CollectionViewGroupItems-not-raising-Pr/958020)._\n\n---\n<p>Hello!</p><p>I was trying to add grouping with subtotal sum into WPF DataGrid. The solution is to have an ObservableCollection with the data, wrap it into CollectionViewSource which in turn will be ItemsSource for the DataGrid. Subtotal is calculated with a converter, which receives Items of CollectionViewGroup as input and calculates the sum.</p><p>All works fine only at the initial population of the ObservableCollection, or when adding an item creates the new group. But if an item is added into any existing group, converter is simply not called for recalculation - apparently CollectionViewGroup.Items is not raising PropertyChanged event!</p><p>I browsed a bit in <a href=\"https://referencesource.microsoft.com/PresentationFramework/src/Framework/System/Windows/Data/CollectionViewGroup.cs.html\" target=_blank>CollectionViewGroup.cs source</a> - Items are ReadOnlyObservableCollection&lt;object&gt;, which should trigger PropertyChanged after an item added, shouldn't it?</p><p>Then I noticed, that CollectionViewGroup.ItemCount is displayed properly after adding new items, so I tried a trick with a MultiBinding - added an IMultiValueConverter converter which takes both Items and ItemCount as parameters, expecting ItemCount to trigger the recalculation. I  worked, but again without full success - somehow the converter gets the correct input only once, when the new group is created. If an item was added to an existing group, ItemCount is correct, but Items are not! Items collection is missing the newly added item! E.g. when ItemCount=2, Items have only 1 &quot;old&quot; item (Items.Count=1). When ItemCount=3, Items have only 2 &quot;old&quot; items (Items.Count=2), etc. So again the converter cannot calculate the correct subtotal, because the input is incomplete...</p><p>It looks  like the only working solution would be calling Refresh() for the whole CollectionViewSource, but that expands all the groups, cause flickering, breaks MVVM concept, so it is ugly...</p><p>So my questions are:</p><ul><li>Is there still any change to make CollectionViewGroup.Items raise PropertyChanged properly?</li><li>Isn't it a bug in CollectionViewGroup, that when adding an item, Multi Converter receives Items.Count = ItemCount - 1?</li></ul><p>Any advice would be highly appreciated!</p><p>The full sample code is on <a href=\"https://github.com/pavka1799/ObservableVsConverter.git\" target=_blank>GitHub</a>.</p><p>Some code excerpts are below -<br><strong>XAML</strong>:</p><pre>                &lt;DataGrid.GroupStyle&gt;\n                &lt;GroupStyle&gt;\n                    &lt;GroupStyle.ContainerStyle&gt;\n                        &lt;Style TargetType=&quot;{x:Type GroupItem}&quot;&gt;\n                            &lt;Setter Property=&quot;Margin&quot; Value=&quot;0,0,0,5&quot;/&gt;\n                            &lt;Setter Property=&quot;Template&quot;&gt;\n                                &lt;Setter.Value&gt;\n                                    &lt;ControlTemplate TargetType=&quot;{x:Type GroupItem}&quot;&gt;                                       \n                                        &lt;Expander IsExpanded=&quot;True&quot; BorderThickness=&quot;1,1,1,5&quot;&gt;\n                                            &lt;Expander.Header&gt;\n                                                &lt;DockPanel&gt;\n                                                    &lt;TextBlock FontWeight=&quot;Bold&quot; Text=&quot;{Binding Path=Name}&quot; Margin=&quot;5,0,0,0&quot; Width=&quot;100&quot;/&gt;\n                                                    &lt;TextBlock FontWeight=&quot;Bold&quot; Text=&quot;{Binding Path=ItemCount}&quot;/&gt;\n                                                    &lt;TextBlock FontWeight=&quot;Bold&quot; Text=&quot;Sum 1: &quot; Margin=&quot;5,0,0,0&quot;/&gt;\n                                                    &lt;TextBlock FontWeight=&quot;Bold&quot;  &gt;\n                                                        &lt;TextBlock.Text&gt;\n                                                            &lt;Binding Path=&quot;Items&quot; Converter=&quot;{StaticResource sumConverter}&quot; ConverterParameter=&quot;AmountValue&quot; StringFormat=&quot;{}{0:N2}&quot;/&gt;\n                                                        &lt;/TextBlock.Text&gt;\n                                                    &lt;/TextBlock&gt;\n                                                    &lt;TextBlock FontWeight=&quot;Bold&quot; Text=&quot;Sum 2: &quot; Margin=&quot;5,0,0,0&quot;/&gt;\n                                                    &lt;TextBlock FontWeight=&quot;Bold&quot;  &gt;\n                                                        &lt;TextBlock.Text&gt;\n                                                            &lt;MultiBinding Converter=&quot;{StaticResource sumMulConverter}&quot; ConverterParameter=&quot;AmountValue&quot; StringFormat=&quot;{}{0:N2}&quot;&gt;\n                                                                &lt;Binding Path=&quot;Items&quot;/&gt;\n                                                                &lt;Binding Path=&quot;ItemCount&quot;/&gt;\n                                                            &lt;/MultiBinding&gt;\n                                                        &lt;/TextBlock.Text&gt;\n                                                    &lt;/TextBlock&gt;\n                                                &lt;/DockPanel&gt;\n                                            &lt;/Expander.Header&gt;\n                                            &lt;Expander.Content&gt;\n                                                &lt;ItemsPresenter /&gt;\n                                            &lt;/Expander.Content&gt;\n                                        &lt;/Expander&gt;\n                                    &lt;/ControlTemplate&gt;\n                                &lt;/Setter.Value&gt;\n                            &lt;/Setter&gt;\n                        &lt;/Style&gt;\n                    &lt;/GroupStyle.ContainerStyle&gt;\n                &lt;/GroupStyle&gt;\n            &lt;/DataGrid.GroupStyle&gt;\n</pre><p><strong>Converters:</strong></p><pre>    public class SumConverter : IValueConverter\n    {\n        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)\n        {\n            if (value == DependencyProperty.UnsetValue) return DependencyProperty.UnsetValue;\n            if (null == parameter) return null;\n            string propertyName = (string)parameter;\n            if (!(value is ReadOnlyObservableCollection&lt;object&gt;)) return null;\n            ReadOnlyObservableCollection&lt;object&gt; collection = (ReadOnlyObservableCollection&lt;object&gt;)value;\n            decimal sum = 0;\n            foreach (object o in collection)\n            {\n                sum += (decimal)o.GetType().GetProperty(propertyName).GetValue(o);\n            }\n            return sum;\n        }\n\n        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)\n        {\n            throw new NotImplementedException();\n        }\n    }\n\n    public class SumMulConverter : IMultiValueConverter\n    {\n        public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)\n        {\n            if (null == parameter) return null;\n            if (!(parameter is string)) return null;\n            string propertyName = (string)parameter;\n\n            if (values == DependencyProperty.UnsetValue) return DependencyProperty.UnsetValue;\n            if (values == null) return null;\n            if (values.Length &lt; 2) return null;\n            if (!(values[0] is ReadOnlyObservableCollection&lt;object&gt;)) return null;\n            ReadOnlyObservableCollection&lt;object&gt; collection = (ReadOnlyObservableCollection&lt;object&gt;)values[0];\n            if (!(values[1] is int)) return null;\n            Debug.Print($&quot;ItemCount={(int)values[1]}; Collection Count = {collection.Count}&quot;);\n            decimal sum = 0;\n            foreach (object o in collection)\n            {\n                sum += (decimal)o.GetType().GetProperty(propertyName).GetValue(o);\n            }\n            return sum; //.ToString(&quot;N2&quot;, CultureInfo.CurrentCulture);\n        }\n\n        public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)\n        {\n            throw new NotImplementedException();\n        }\n    }<br></pre><p>  </p>\n</pre>\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/23/2020, 08:51 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Pavel Karasev on 3/25/2020, 05:22 AM: \n\n<p>Got an advice that when an item is added to Items, the collection triggers CollectionChanged event (not PropertyChanged), so not raising PropertyChanged maybe be a correct behavior. Still,  the situation with the Multi Converter receiving Items.Count = ItemCount - 1 seems to be incorrect...</p><p>Also, would appreciate an advice, how to make use of CollectionChanged in the &lt;GroupStyle&gt;, to ensure correct recalculation of subtotals on adding items in the existing groups. Thank you!</p>\n\n#### Feedback Bot on 5/8/2020, 03:17 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3770","RelatedDescription":"Open issue \"CollectionViewGroup.Items not raising PropertyChanged after having an item added?\" (#3770)"},{"Id":"737426196","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:32","Actor":"vsfeedback","Number":"3769","RawContent":null,"Title":"System.Windows.Primitives.Popup - Can't refocus to TextBox after clicking another Window","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemWindowsPrimitivesPopup---Cant-/940323)._\n\n---\nIn my WPF application I have a Popup whose StaysOpen=\"True\".  Works great.  On my Poup is another UserControl that contains TextBoxes, ComboBoxes, Buttons, etc.\n\nWhen I show the Popup using, MyPopup.IsOpen = true; from the code behind of my application it is displayed as I would expect.\n\nWhile the Popup is open I navigate to any other application, use Windows Notepad as an example.  I start typing in Notepad and then return to my WPF application whose Popup is still being displayed.  This is the behavior I want to see.\n\nHere lies the problem.  If I click the TextBox on the Poup my application seems to **never be notified that the focus has been set on the TextBox.**  If I start typing after clicking on my Textbox the characters are added to the open Notepad application.  This behavior happens no matter which \"other\" application I open and/or select while my Popup is displayed.  The only way to overcome this problem is to close the Popup by clicking my close button on the Popup.  For whatever reason Buttons are not affected by this strange behavior.\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/6/2020, 11:56 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 4/10/2020, 03:54 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3769","RelatedDescription":"Open issue \"System.Windows.Primitives.Popup - Can't refocus to TextBox after clicking another Window\" (#3769)"},{"Id":"737426154","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:24","Actor":"vsfeedback","Number":"3768","RawContent":null,"Title":"WPF . NetCore DynamicResource broken by Visibility","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF--NetCore-DynamicResource-broken-by-/927043)._\n\n---\nI have a button that is placed into a grid. The button has the content property set to a **DynamicResource Icon** and the grid has the visibility property set to **Collapsed**.\n\nIf i use the method that set the grid property Visibility to **Visible**, then the **DynamicResource Icon** from the button is **not shown**.\n\nThe **Icon** has the type Path and is placed into ResourceDictionary file. This ResourceDictionary file is placed in a second Project (CustomControlLibrary).\n\nThe main project is WPF . NetCore . The Second project is referenced to the main project and the ResourceDictionary file from the second project is set in App.xaml in MergedDictionaries as Resource.\n\nIf i use **Hidden** instead of **Collapsed** and then the method, then works fine. If i use **Visible** instead of **Collapsed** without method then it works.\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/24/2020, 00:50 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 4/3/2020, 04:46 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Huber Patrik on 4/3/2020, 06:28 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3768","RelatedDescription":"Open issue \"WPF . NetCore DynamicResource broken by Visibility\" (#3768)"},{"Id":"737426115","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:17","Actor":"vsfeedback","Number":"3767","RawContent":null,"Title":"WPF DataGrid with 1 frozen column - horizontal scroll problem","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF-DataGrid-with-1-frozen-column---hori/922614)._\n\n---\n<p>I have a very simple WPF app with a DataGrid with 1 frozen column. When I scroll horizontally (to the right or left) by clicking in the empty portion of the scrollbar, I scroll too far- probably by the width of the frozen column. (Other ways of scrolling, dragging the thumb, clicking the right or left arrowhead buttons, work fine). I have a few rows and 10 columns, Col00 thru Col09. Col00 is frozen. A click in the area shown in the image causes scrolling too far- skipped Col04.</p> <p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/119348-horizscrollproblem.png\"> Image:119348-horizscrollproblem.png</a><br></p><p>XAML and C# shown below...</p> <p>RowOfCells is my class of 10 public properties, Col00 thru Col09.</p> <p>I have built in VS2015 (.Net 4.6.1) and VS2017 (.Net 4.7.2 and .Net 4.8), and ran in Win10 ver.1909.</p> <p>I have tried many different ways of creating this simple app  but the behavior is always the same. The behavior is unaffected by the presence of the vertical scrollbar.  </p><p>If I remove the frozen column then all ways of scrolling are fine, but I need that 1 frozen column.</p> <p>Is there a fix for this? Or a work-around? Thank you for your time.</p> <pre>&lt;Window x:Class=&quot;TestDatagridScroll.MainWindow&quot;\n        xmlns=&quot;&lt;the usual URL&gt;&quot;\n        xmlns:x=&quot;&lt;the usual URL&gt;&quot;\n        Title=&quot;TestDataGridScroll&quot; Height=&quot;198&quot; Width=&quot;343&quot;&gt;\n    &lt;Grid&gt;\n        &lt;DataGrid Name=&quot;dg&quot; AutoGenerateColumns=&quot;True&quot; FrozenColumnCount=&quot;1&quot; &gt;\n        &lt;/DataGrid&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n\npublic MainWindow()\n{\n    InitializeComponent();\n    List&lt;RowOfCells&gt; rowOfCellsList = new List&lt;RowOfCells&gt;();\n    RowOfCells rowOfCells = null;\n    for (int i = 0; i &lt; 20; i++)  //  generate some data rows\n    {\n        rowOfCells = new RowOfCells();\n        rowOfCells.Col00 = $&quot;TextCol00-{i:D2}&quot;;\n        rowOfCells.Col01 = $&quot;TextCol01-{i:D2}&quot;;\n        rowOfCells.Col02 = $&quot;TextCol02-{i:D2}&quot;;\n        rowOfCells.Col03 = $&quot;TextCol03-{i:D2}&quot;;\n        rowOfCells.Col04 = $&quot;TextCol04-{i:D2}&quot;;\n        rowOfCells.Col05 = $&quot;TextCol05-{i:D2}&quot;;\n        rowOfCells.Col06 = $&quot;TextCol06-{i:D2}&quot;;\n        rowOfCells.Col07 = $&quot;TextCol07-{i:D2}&quot;;\n        rowOfCells.Col08 = $&quot;TextCol08-{i:D2}&quot;;\n        rowOfCells.Col09 = $&quot;TextCol09-{i:D2}&quot;;\n        rowOfCellsList.Add(rowOfCells);\n    }\n    dg. ItemsSource = rowOfCellsList;\n}\n\n</pre>\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/20/2020, 09:02 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Bruce Aker on 2/26/2020, 02:39 PM: \n\n<p>The same incorrect behavior happens with .Net Core 3.1 and VS2019</p>\n\n#### Feedback Bot on 3/27/2020, 09:52 AM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3767","RelatedDescription":"Open issue \"WPF DataGrid with 1 frozen column - horizontal scroll problem\" (#3767)"},{"Id":"737426067","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:11","Actor":"vsfeedback","Number":"3766","RawContent":null,"Title":"WPF Window isn't drawn in correct bounds if  WindowState is Maximized and WindowStyle is changed in runtime","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF-Window-isnt-drawn-in-correct-bounds/918914)._\n\n---\n<p>To reproduce this issue, follow these steps:</p><p><br>1. Run the sample from the attachment.</p> <p>2. Window is appeared as a full screen borderless window, covers the Taskbar. </p> <p>2. Click the button &quot;Click me&quot;.</p> <p>3. Window style is changed from None to SingleBorder. It looks as a usual maximized window.</p> <p>4. Click the button again.</p> <p>5.Window style is changed to None again. But the window looks ugly, its size isn't correct, doesn't cover the Taskbar. All in all, it is expected looks like in step 2, but it doesn't.</p> <p><br></p><p>attachments:</p><p><a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/118863-sample.mp4\">sample.mp4</a></p><p><a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/118863-sample.mp4\"></a><a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/118864-sample.zip\">sample.zip</a><br></p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/17/2020, 07:31 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 3/20/2020, 10:29 AM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3766","RelatedDescription":"Open issue \"WPF Window isn't drawn in correct bounds if  WindowState is Maximized and WindowStyle is changed in runtime\" (#3766)"},{"Id":"737426034","IsPullRequest":false,"CreatedAt":"2020-11-06T03:24:05","Actor":"vsfeedback","Number":"3765","RawContent":null,"Title":"System.Windows.Media.Imaging.RenderTargetBitmap.Render does not render from remote desktop","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/SystemWindowsMediaImagingRenderTarge/914276)._\n\n---\n<p>I am not sure but I think the System.Windows.Media.Imaging.RenderTargetBitmap.Render method does not render content of System.Windows.Media.DrawingVisual object on System.Windows.Media.Imaging.RenderTargetBitmap if application is running thru a remote desktop session and the user disconnects from the remote desktop while application is running.</p> <p>  The problem can be reproduced using the following steps:</p><p>1. Project file attached <a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/118156-rdptestwpf-1.zip\">rdptestwpf-1.zip</a></p><p>  \n</p><p>2. Open project in Visual Studio 2019 in local computer with Windows 10.</p> <p>  \n</p><p>3. Compile project.</p> <p>  \n</p><p>4. Connect to the local computer via remote session.</p> <p>  \n</p><p>5. Start project in Visual Studio.</p> <p>  \n</p><p>6. Wait while progress will going and close the remote session.</p> <p>  \n</p><p>7. Login to the local session and see image files in project's output path. The &quot;first&quot; group of images will contain white rectangle with green line.</p> <p>     The &quot;second&quot; group of images will contain black rectangle (empty content). The &quot;second&quot; group of images was created when user closed the remote session.</p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/12/2020, 10:57 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 3/20/2020, 10:28 AM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3765","RelatedDescription":"Open issue \"System.Windows.Media.Imaging.RenderTargetBitmap.Render does not render from remote desktop\" (#3765)"},{"Id":"737425990","IsPullRequest":false,"CreatedAt":"2020-11-06T03:23:58","Actor":"vsfeedback","Number":"3764","RawContent":null,"Title":"WPF XAML TextBlock does not display text properly when you assign Afgheni currency symbol","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF-XAML-TextBlock-does-not-display-text/891756)._\n\n---\nWPF XAML TextBlock does not display text properly when you assign Afgheni currency symbol and there is also a number in the same text.\nExample:\n  $ / 100 Lbs .\nnow replace the $ with ؋\nand you get this.\n\n؋ / 100 Lbs.\nbut if I don't use numbers it works as intended\n؋ / one hundred Lbs.\n\nI realize that probably Afghanies read from right to left, but I am displaying this to US users and that's not what the label says, it does not says $100 per LB. It says money symbol per 100 punds.\n\n---\n### Original Comments\n\n#### Feedback Bot on 1/22/2020, 03:32 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 2/28/2020, 09:41 AM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3764","RelatedDescription":"Open issue \"WPF XAML TextBlock does not display text properly when you assign Afgheni currency symbol\" (#3764)"},{"Id":"737425931","IsPullRequest":false,"CreatedAt":"2020-11-06T03:23:48","Actor":"vsfeedback","Number":"3763","RawContent":null,"Title":"Header is not updated in HeaderedContentControl when dynamically change the item using TreeView","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Header-is-not-updated-in-HeaderedContent/875973)._\n\n---\n<p>I test this on .Net 4.6</p><p>It seems like when you change the selected item in TreeView, the corresponding <em>HeaderedContentControl</em> tag might not be updated-- instead, it is being erased.</p> <p>I attach the complete small example <a href=\"https://developercommunity.visualstudio.com/storage/attachments/112350-headeredcontentcontrol.zip\" target=_blank>here</a>.</p> <p>The important thing to note is that if I change the second Item from type <strong>ViewModel2</strong> to <strong>ViewModel</strong>, then the header is updated properly. I've no idea why this is the case, that <strong>ViewModel2</strong> type fails to work but <strong>ViewModel</strong> works, after all, <strong>ViewModel2</strong> is a subclass of <strong>ViewModel</strong> and has no extra content. </p><p></p><p></p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 1/7/2020, 10:49 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 2/14/2020, 05:01 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3763","RelatedDescription":"Open issue \"Header is not updated in HeaderedContentControl when dynamically change the item using TreeView\" (#3763)"},{"Id":"737425899","IsPullRequest":false,"CreatedAt":"2020-11-06T03:23:42","Actor":"vsfeedback","Number":"3762","RawContent":null,"Title":"WPF app throws memory overflow on Windows 8 with a specific combo of StackPanel and images","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF-app-throws-memory-overflow-on-Window/870731)._\n\n---\n<p>I struggled with a memory overflow on a WPF app, happening only on Windows 8/8.1 - any installation (Win7 and Win10 worked fine).</p> <p>The app just crashed at start (when the app first displayed the main window), with a memory overflow exception, with presentation core as source.</p> <p>I found out that the problem only happened when two small images were both scaled high quality in the same panel:</p><pre>&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;\n&lt;Image Source=&quot;.. \\Images\\Tools.png&quot; Width=&quot;24&quot; Height=&quot;24&quot; RenderOptions.BitmapScalingMode=&quot;HighQuality&quot;&gt;&lt;/Image&gt;\n&lt;Image Source=&quot;.. \\Images\\DownArrow.png&quot; Width=&quot;8&quot; Height=&quot;8&quot; RenderOptions.BitmapScalingMode=&quot;Linear&quot;&gt;&lt;/Image&gt; &lt;!-- HighQuality scaling would crash on Windows 8 --&gt;\n&lt;/StackPanel&gt;\n</pre><p>Images are 64x64 PNGs, so there's no apparent reason for a memory problem. Using &quot;linear&quot; as scaling mode for one of the two imagines solved. Using a DockPanel instead of a StackPanel, for example, doesn't solve.</p> <p>The app was addressed to the Framework 4.6.1, and the installed framework was 4.8.03761.</p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 1/2/2020, 11:32 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 2/7/2020, 11:32 AM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3762","RelatedDescription":"Open issue \"WPF app throws memory overflow on Windows 8 with a specific combo of StackPanel and images\" (#3762)"},{"Id":"737425730","IsPullRequest":false,"CreatedAt":"2020-11-06T03:23:15","Actor":"vsfeedback","Number":"3761","RawContent":null,"Title":".NET Framework 4.8 WPF - Setting MainWindow.Language may cause app not displaying","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/NET-Framework-48-WPF---Setting-MainWin/833881)._\n\n---\nI'm building a .NET Framework 4.8 WPF app. I have this code in the main window `Loaded` event,\n\n`this. Language = System.Windows.Markup.XmlLanguage.GetLanguage(System.Threading.Thread.CurrentThread.CurrentUICulture.IetfLanguageTag);`\n\nand on certain PCs/laptops (it doesn't happen on all PCs), the app will run and the main window displayed fine on the first run. If I exit the app and re-run the app, the main window will not appear anymore but the app is running (from Task Manager). Terminating and re-running it won't resolve the issue. The only possible workaround is to restart Windows and then the app main window will be displayed again.\n\nIf I remove the line stated above, everything works fine.\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/26/2019, 05:01 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 1/3/2020, 09:36 AM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3761","RelatedDescription":"Open issue \".NET Framework 4.8 WPF - Setting MainWindow.Language may cause app not displaying\" (#3761)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-11T05:30:46.7355358Z","RunDurationInMilliseconds":551}