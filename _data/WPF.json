{"Data":{"GitHub":{"Issues":[{"Id":"880789144","IsPullRequest":true,"CreatedAt":"2021-05-08T13:21:14","Actor":"dotnet-maestro[bot]","Number":"4490","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210508.2\r\n- **Date Produced**: 5/8/2021 12:47 PM\r\n- **Commit**: 6856790743b0e82244b0ccad5fd7382c92adda5d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21257.2 to 6.0.0-preview.5.21258.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC3345d90&targetVersion=GC6856790&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4490","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4490)"},{"Id":"878985045","IsPullRequest":true,"CreatedAt":"2021-05-07T13:35:45","Actor":"dotnet-maestro[bot]","Number":"4489","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210507.2\r\n- **Date Produced**: 5/7/2021 1:07 PM\r\n- **Commit**: 3345d90dcd6d3e4151150c3ecc97be7416d6031f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21256.2 to 6.0.0-preview.5.21257.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCd7f63ee&targetVersion=GC3345d90&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4489","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4489)"},{"Id":"878854354","IsPullRequest":false,"CreatedAt":"2021-05-07T11:50:42","Actor":"samir-dahal","Number":"4488","RawContent":null,"Title":"Is there anyway to simulate touch on WPF UI? ","State":"open","Body":"Is this feature request related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the request via the instructions here: https://docs.microsoft.com/visualstudio/ide/suggest-a-feature?view=vs-2019\r\n\r\n<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n","Url":"https://github.com/dotnet/wpf/issues/4488","RelatedDescription":"Open issue \"Is there anyway to simulate touch on WPF UI? \" (#4488)"},{"Id":"878848336","IsPullRequest":true,"CreatedAt":"2021-05-07T11:46:33","Actor":"lindexi","Number":"4487","RawContent":null,"Title":"Make some lock object as readonly","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/4487","RelatedDescription":"Open PR \"Make some lock object as readonly\" (#4487)"},{"Id":"878803916","IsPullRequest":true,"CreatedAt":"2021-05-07T11:15:36","Actor":"lindexi","Number":"4486","RawContent":null,"Title":"In FamilyCollection.cs replace Dictionary ContainsKey-Add with TryAdd","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/4486","RelatedDescription":"Open PR \"In FamilyCollection.cs replace Dictionary ContainsKey-Add with TryAdd\" (#4486)"},{"Id":"875120095","IsPullRequest":false,"CreatedAt":"2021-05-07T04:16:37","Actor":"trodent83","Number":"4472","RawContent":null,"Title":"CommandParameter doesn't trigger Command revalidation","State":"closed","Body":".NET Core Version: 5.0.201\r\nWindows version: Windows 10 Entrprise 190\r\nDoes the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n**Problem description: \r\nIf the CommandParameter of a Button is changed the Command will not be automaticly revalidated and this can result in the strange behavior that even though the parameter is set the command doesn't see this until something else triggers the revalidation of the command.\r\n\r\nThis would have the beneficial effect that the revalidating of the commands could  be more event driven.\r\n\r\n**Actual behavior: If only the command parameter is change nothing happens\r\n\r\n**Expected behavior: The CanExecute of the corresponding command should be automaticly triggered.","Url":"https://github.com/dotnet/wpf/issues/4472","RelatedDescription":"Closed issue \"CommandParameter doesn't trigger Command revalidation\" (#4472)"},{"Id":"873749464","IsPullRequest":false,"CreatedAt":"2021-05-06T22:20:15","Actor":"jnm2","Number":"4467","RawContent":null,"Title":"The recommended /p:ContinuousIntegrationBuild=true causes a wpftmp build error","State":"closed","Body":"* .NET Core Version: 5.0.300-preview.21180.15\r\n* Windows version: 20H2\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\nSteps to reproduce:\r\n\r\n- Create a new WPF app using the WPF template targeting net5.0\r\n- At the command line, type `dotnet build /p:ContinuousIntegrationBuild=true`\r\n\r\nResult:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.10.0-preview-21175-01+afd0b6210 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  You are using a preview version of .NET. See: https://aka.ms/dotnet-core-preview\r\nC:\\Program Files\\dotnet\\sdk\\5.0.300-preview.21180.15\\Roslyn\\Microsoft.Managed.Core.targets(191,5): error : SourceRoot\r\nitems must include at least one top-level (not nested) item when DeterministicSourcePaths is true\r\n[C:\\Users\\Joseph\\Source\\Repos\\WpfRepro\\WpfRepro_necdjk00_wpftmp.csproj]\r\n\r\nBuild FAILED.\r\n```","Url":"https://github.com/dotnet/wpf/issues/4467","RelatedDescription":"Closed issue \"The recommended /p:ContinuousIntegrationBuild=true causes a wpftmp build error\" (#4467)"},{"Id":"876986192","IsPullRequest":true,"CreatedAt":"2021-05-06T15:33:46","Actor":"ryalanms","Number":"4482","RawContent":null,"Title":"Fix ReachFramework's resource string resolution","State":"closed","Body":"## Description\r\n\r\nSystem.Windows.Documents.Serialization.SerializerProvider creation always fails while creating System.Uri. \r\n\r\n```cs\r\nSerializerProvider sp = new SerializerProvider();\r\n```   \r\n> at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString)\r\n   at System.Windows.Xps.Serialization.XpsSerializerFactory.get_ManufacturerWebsite()\r\n   at System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(ISerializerFactory factoryInstance)\r\n   at System.Windows.Documents.Serialization.SerializerProvider..ctor()\r\n   at TestSerializerProvider.MainWindow..ctor() in D:\\PluginSerializer\\TestSerializerProvider\\MainWindow.xaml.cs:line 30\r\n\r\nThe issue is that resource lookups for the ReachFramework were not actually resolving the string, and instead were returning the key.  When the key `Xps_ManufacturersWebsite` was passed in to the URI constructor, URI creation failed.  Fixing the resource lookup path fixed `SerializerProvider`.  Fixes https://github.com/dotnet/wpf/issues/4481.  \r\n\r\nThis bug is blocking testing of the fix for another bug that is preventing WPF from taking the latest WinForms update: https://github.com/dotnet/wpf/issues/4479.  \r\n\r\n## Regression\r\n\r\nNo.  This is a longstanding bug from 3.0.  \r\n\r\n## Testing\r\n\r\nRepro'd the failure, fixed the resource string lookup, and verified SerializerProvider is working.  \r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4482","RelatedDescription":"Closed or merged PR \"Fix ReachFramework's resource string resolution\" (#4482)"},{"Id":"876943733","IsPullRequest":false,"CreatedAt":"2021-05-06T15:33:46","Actor":"ryalanms","Number":"4481","RawContent":null,"Title":"System.Windows.Documents.Serialization.SerializerProvider default constructor fails creating System.Uri","State":"closed","Body":"System.Windows.Documents.Serialization.SerializerProvider creation always fails while creating System.Uri. \r\n\r\n```cs\r\nSerializerProvider sp = new SerializerProvider();\r\n```   \r\n> at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString)\r\n   at System.Windows.Xps.Serialization.XpsSerializerFactory.get_ManufacturerWebsite()\r\n   at System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(ISerializerFactory factoryInstance)\r\n   at System.Windows.Documents.Serialization.SerializerProvider..ctor()\r\n   at TestSerializerProvider.MainWindow..ctor() in D:\\PluginSerializer\\TestSerializerProvider\\MainWindow.xaml.cs:line 30","Url":"https://github.com/dotnet/wpf/issues/4481","RelatedDescription":"Closed issue \"System.Windows.Documents.Serialization.SerializerProvider default constructor fails creating System.Uri\" (#4481)"},{"Id":"877456665","IsPullRequest":true,"CreatedAt":"2021-05-06T12:53:30","Actor":"dotnet-maestro[bot]","Number":"4484","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210506.2\r\n- **Date Produced**: 5/6/2021 12:33 PM\r\n- **Commit**: d7f63ee877663f18f0aa1e120245edce77bbb0fc\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21255.2 to 6.0.0-preview.5.21256.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC19c3c89&targetVersion=GCd7f63ee&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4484","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4484)"},{"Id":"877437437","IsPullRequest":true,"CreatedAt":"2021-05-06T12:20:24","Actor":"dotnet-maestro[bot]","Number":"4483","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20210507.5\r\n- **Date Produced**: 5/8/2021 1:44 AM\r\n- **Commit**: 5faea1b7965644d1f1c666a7130f6f614abe76c0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21254.3 to 6.0.0-beta.21257.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21254.3 to 6.0.0-beta.21257.5][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21254.3 to 6.0.0-beta.21257.5][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21254.3 to 6.0.0-beta.21257.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21254.3 to 6.0.0-beta.21257.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/0cfaf93...5faea1b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4483","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#4483)"},{"Id":"869602137","IsPullRequest":false,"CreatedAt":"2021-05-06T06:38:31","Actor":"lindexi","Number":"4461","RawContent":null,"Title":"How about create the xaml element with container?","State":"closed","Body":"Should WPF supports the dependency injection (DI) software design pattern by create the XAML element with container?\r\n\r\nSee: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-5.0","Url":"https://github.com/dotnet/wpf/issues/4461","RelatedDescription":"Closed issue \"How about create the xaml element with container?\" (#4461)"},{"Id":"876741568","IsPullRequest":false,"CreatedAt":"2021-05-05T18:51:44","Actor":"MarkusNeff","Number":"4480","RawContent":null,"Title":"WPF dirty rectangle glitches in high GPU-load situations","State":"open","Body":"- In high GPU-load situations, dirty-rect handling in WPF-based applications gets out of sync with window content update\r\n- This triggers situations in which e.g. a bigger update of a visual is first clipped to the update rectangle of another overlaid smaller visual / control and just shows in one of the subsequent frames\r\n- Preliminary analysis suggests, that this is because of D3D 9Ex with D3DSWAPEFFECT_COPY is used by the WPF rendering engine and partial updates during D3D 9Ex application frame rendering are not properly synchronized with DWM GPU blit copy presentation and DWM update rectangle / presentation history handling\r\n- A detailed write-up can be found in the attached document:\r\n[D3D9Ex_WPF_Update_Rectangle_Glitches.pdf](https://github.com/dotnet/wpf/files/6429461/D3D9Ex_WPF_Update_Rectangle_Glitches.pdf)\r\n- More detailed information like videos, screenshots, GPUView ETW traces and reproducer applications are available for download here: https://drive.google.com/file/d/1yfLaGcvRUD4rAXRPjfpvTHhaytXAk-KI/view?usp=sharing","Url":"https://github.com/dotnet/wpf/issues/4480","RelatedDescription":"Open issue \"WPF dirty rectangle glitches in high GPU-load situations\" (#4480)"},{"Id":"876391075","IsPullRequest":true,"CreatedAt":"2021-05-05T17:52:39","Actor":"dotnet-maestro[bot]","Number":"4477","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20210504.3\r\n- **Date Produced**: 5/4/2021 9:32 PM\r\n- **Commit**: 0cfaf935894a4c98ff7445c903f1b4c32990b127\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.21253.2 to 6.0.0-beta.21254.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21253.2 to 6.0.0-beta.21254.3][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.21253.2 to 6.0.0-beta.21254.3][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.21253.2 to 6.0.0-beta.21254.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21253.2 to 6.0.0-beta.21254.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e9fd640...0cfaf93\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.100-preview.3.21202.5\r\n  - Updates tools.dotnet to 6.0.100-preview.3.21202.5\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4477","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4477)"},{"Id":"872482123","IsPullRequest":true,"CreatedAt":"2021-05-05T17:28:55","Actor":"dotnet-maestro[bot]","Number":"4465","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210430.2\r\n- **Date Produced**: 4/30/2021 12:58 PM\r\n- **Commit**: caf6941bc7703220c355fe01970e0203c0ef5346\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21229.2 to 6.0.0-preview.5.21230.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC5361643&targetVersion=GCcaf6941&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4465","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4465)"},{"Id":"876678841","IsPullRequest":false,"CreatedAt":"2021-05-05T17:26:26","Actor":"ryalanms","Number":"4479","RawContent":null,"Title":"SerializerDescriptor relies on unsupported reflection API and will always throw","State":"open","Body":"SerializerDescriptor needs to be updated to use System.Reflection.MetadataLoadContext.   \r\n\r\n(This is covered by internal test Avalon.Test.D2.Print.PluginSerializer.PluginSrzTestApp.)","Url":"https://github.com/dotnet/wpf/issues/4479","RelatedDescription":"Open issue \"SerializerDescriptor relies on unsupported reflection API and will always throw\" (#4479)"},{"Id":"876429178","IsPullRequest":true,"CreatedAt":"2021-05-05T13:25:17","Actor":"dotnet-maestro[bot]","Number":"4478","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210505.2\r\n- **Date Produced**: 5/5/2021 12:53 PM\r\n- **Commit**: 19c3c8994e89fe08bfc7cb1061fb7cf1672472e8\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21254.2 to 6.0.0-preview.5.21255.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC98527fa&targetVersion=GC19c3c89&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4478","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4478)"},{"Id":"871258065","IsPullRequest":true,"CreatedAt":"2021-05-04T21:17:25","Actor":"mmitche","Number":"4463","RawContent":null,"Title":"Revert to a shipped S.R.E and clean up version props","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/4463","RelatedDescription":"Closed or merged PR \"Revert to a shipped S.R.E and clean up version props\" (#4463)"},{"Id":"875563664","IsPullRequest":false,"CreatedAt":"2021-05-04T15:11:10","Actor":"brunosegiu","Number":"4475","RawContent":null,"Title":"Crash while querying interface on ITfMessagePump (System.Windows.Threading.Dispatcher.GetMessagePump)","State":"open","Body":"* .NET Core Version: 5.0.202\r\n* Windows version: 10.0.1904\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\n **Problem description:**\r\n\r\nI'm getting random crashes when WPF (.NET 4.8) tries to get ahold of the Text Service Framework message pump, which I haven't been able to get much info on.\r\n\r\n[Here's the source of the function that's trying to cast it.][1] I've tried disabling it by turning off support for it but there's no way.\r\n\r\nHow can I debug this? WPF works alright and renders fine until it just stops here (I guess the Text Service Framework interface loads and eventually stops working).\r\n \r\n **Actual behavior:**\r\n\r\nException thrown at 0x00007FFFE7234B59 (KernelBase.dll) in MyApp.exe: WinRT originate error - 0x80040155 : 'Failed to find proxy registration for IID: {8F1B8AD8-0B6B-4874-90C5-BD76011E8F7C}.'.\r\n\r\n Callstack:\r\n```\r\n>\tKernelBase.dll!RaiseException()\tUnknown\r\n \tcombase.dll!SendReport(HRESULT error, unsigned int cchMax, const wchar_t * message, unsigned short pSid, void * pExceptionObject, IUnknown *) Line 433\tC++\r\n \tcombase.dll!RoOriginateErrorW(HRESULT error, unsigned int cchMax, const wchar_t * message) Line 569\tC++\r\n \t[Inline Frame] combase.dll!OriginateErrorUsingFormattedResource(HRESULT) Line 83\tC++\r\n \tcombase.dll!CRIFTable::GetPSClsidHelper(const _GUID & riid, bool suppressErrorOrigination, _GUID * pclsid, CRIFTable::tagRIFEntry * * ppEntry) Line 1816\tC++\r\n \t[Inline Frame] combase.dll!CRIFTable::GetPSClsidAndObject(const _GUID &) Line 1656\tC++\r\n \tcombase.dll!GetPSFactoryInternal(unsigned long dwContext, const _GUID & riid, IPSFactoryBuffer * * ppFactory) Line 2492\tC++\r\n \tcombase.dll!GetPSFactory(const _GUID & riid, IPSFactoryBuffer * * ppFactory) Line 2611\tC++\r\n \tcombase.dll!CStdWrapper::CreateIFaceEntry(const _GUID & riid, void * pServer, IFaceEntry * * ppEntry) Line 1097\tC++\r\n \tcombase.dll!CrossCtxQIFn(void * pv) Line 1513\tC++\r\n \tcombase.dll!EnterForCallback(tagRPCOLEMESSAGE * pMessage, CPolicySet * pPS, HRESULT(*)(void *) pfnCallback, void * pv, const _GUID & riid, unsigned long) Line 2073\tC++\r\n \tcombase.dll!SwitchForCallback(CPolicySet * pPS, HRESULT(*)(void *) pfnCallback, void * pv, const _GUID & riid, unsigned long iMethod, IUnknown * pUnk) Line 1705\tC++\r\n \tcombase.dll!CStdWrapper::CrossCtxQI(CPolicySet * pPS, const _GUID & riid, IFaceEntry * * ppEntry) Line 3524\tC++\r\n \tcombase.dll!CStdWrapper::InternalQI(const _GUID & riid, void * * ppv, int pWrapperEntry, int) Line 2296\tC++\r\n \tcombase.dll!CStdWrapper::QueryInterface(const _GUID & riid, void * * ppv) Line 2391\tC++\r\n \t[Managed to Native Transition]\t\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.GetMessagePump()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.GetMessage(ref System.Windows.Interop.MSG msg, System.IntPtr hwnd, int minMessage, int maxMessage)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame)\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore)\tUnknown\r\n \tPresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window)\tUnknown\r\n \tMyApp.exe!MyApp.UI.App.Main()\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \tmscoreei.dll!_CorExeMain()\tUnknown\r\n \tmscoree.dll!_CorExeMain_Exported()\tUnknown\r\n \tkernel32.dll!BaseThreadInitThunk()\tUnknown\r\n \tntdll.dll!RtlUserThreadStart()\tUnknown\r\n\r\n```\r\n **Expected behavior:**\r\nNo crash\r\n \r\n **Minimal repro:**\r\nReproducing this is just random. Happens sometimes.","Url":"https://github.com/dotnet/wpf/issues/4475","RelatedDescription":"Open issue \"Crash while querying interface on ITfMessagePump (System.Windows.Threading.Dispatcher.GetMessagePump)\" (#4475)"},{"Id":"875449301","IsPullRequest":true,"CreatedAt":"2021-05-04T13:38:43","Actor":"dotnet-maestro[bot]","Number":"4474","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210504.2\r\n- **Date Produced**: 5/4/2021 12:59 PM\r\n- **Commit**: 98527fa4d7ccc273b507358b6296ec9fdd2be02c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21251.2 to 6.0.0-preview.5.21254.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCc37ea21&targetVersion=GC98527fa&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4474","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4474)"},{"Id":"875135042","IsPullRequest":false,"CreatedAt":"2021-05-04T06:06:06","Actor":"trodent83","Number":"4473","RawContent":null,"Title":"ICommand.CanExecuteChanged should handle the execution on the correct thread","State":"open","Body":"NET Core Version: 5.0.201\r\nWindows version: Windows 10 Entrprise 190\r\nDoes the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n**Problem description:\r\nCurrently the registration to the ICommand.CanExecuteChanged event doesn't consider that the triggering of the command state change can happen from a background thread and throws an InvalidOperationException.\r\n\r\nConsidering that the registration to the command even happens in the control it should ensure the execution of the refresh will happen on the thread of the control.\r\n\r\n**Actual behavior: Exception is thrown when the CanExecuteChanged is called from not the Owner thread.\r\n\r\n**Expected behavior: The state refresh should be executed without any problems","Url":"https://github.com/dotnet/wpf/issues/4473","RelatedDescription":"Open issue \"ICommand.CanExecuteChanged should handle the execution on the correct thread\" (#4473)"},{"Id":"875112446","IsPullRequest":false,"CreatedAt":"2021-05-04T05:19:59","Actor":"trodent83","Number":"4471","RawContent":null,"Title":"If Window.Title is set to null Exception is thrown","State":"open","Body":"* .NET Core Version: 5.0.201\r\n* Windows version: Windows 10 Entrprise 190\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n **Problem description: If the Title of a window is set to null then an Exception is thrown, and this cannot be avoided by Coerce\r\n \r\n **Actual behavior: ArgmentException is thrown\r\n \r\n **Expected behavior: Null value is handled as an empty string\r\n","Url":"https://github.com/dotnet/wpf/issues/4471","RelatedDescription":"Open issue \"If Window.Title is set to null Exception is thrown\" (#4471)"},{"Id":"875062882","IsPullRequest":true,"CreatedAt":"2021-05-04T03:28:30","Actor":"dotnet-maestro[bot]","Number":"4470","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210501.2\r\n- **Date Produced**: 5/1/2021 12:53 PM\r\n- **Commit**: c37ea21a9caffe6959208fda31d8b2214f3b8959\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21229.2 to 6.0.0-preview.5.21251.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC5361643&targetVersion=GCc37ea21&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4470","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4470)"},{"Id":"874957201","IsPullRequest":true,"CreatedAt":"2021-05-03T22:43:58","Actor":"dotnet-maestro[bot]","Number":"4469","RawContent":null,"Title":"[release/6.0-preview4] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:725c9ff9-100c-4b79-5a81-08d8ff79a3bc)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 725c9ff9-100c-4b79-5a81-08d8ff79a3bc\r\n- **Build**: 20210503.1\r\n- **Date Produced**: 5/3/2021 10:18 PM\r\n- **Commit**: 259955081c48c8c4a7fde1b8b69da2996740389d\r\n- **Branch**: refs/heads/release/6.0-preview4\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.4.21222.7 to 6.0.0-preview.4.21253.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.4.21222.7 to 6.0.0-preview.4.21253.1][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.CodeDom**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21222.10 to 6.0.0-preview.4.21253.7][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/3dea3e1...2599550\r\n[2]: https://github.com/dotnet/runtime/compare/bd2d701...bfd6048\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:725c9ff9-100c-4b79-5a81-08d8ff79a3bc)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4469","RelatedDescription":"Closed or merged PR \"[release/6.0-preview4] Update dependencies from dotnet/winforms\" (#4469)"},{"Id":"874618937","IsPullRequest":false,"CreatedAt":"2021-05-03T14:21:34","Actor":"oatkins","Number":"4468","RawContent":null,"Title":"Very slow performance due to internal WPF deferred resource reference list","State":"open","Body":"* .NET Core Version: 5.0.5\r\n* Windows version: 10.0.19042\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n**Problem description:**\r\nOpening, closing and moving between views in a WPF application becomes extremely slow.\r\n \r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nDebugging tools show that considerable time is spent in [FindWeakReference()](https://source.dot.net/WindowsBase/R/97683fbd5ceeb8ca.html) iterating over items in [ResourceDictionary._deferredResourceReferences](https://source.dot.net/PresentationFramework/R/256cf1aca0bb8160.html).\r\n\r\n![image](https://user-images.githubusercontent.com/10925800/116887869-c927cd00-abf8-11eb-842f-f8c035c8f730.png)\r\n\r\nThe list accumulates tens of thousands of entries.\r\n\r\n**Expected behavior:**\r\nNo delays as described above. From browsing the source code, we believe that entries in `_deferredResourceReferences` are intended to be short lived.\r\n \r\n**Minimal repro:**\r\nhttps://github.com/oatkins/WpfDeferredResourceLookupRepro/tree/repro\r\n\r\nThe above repro is a bit contrived, but reproduces delays of the same order of magnitude as we are seeing in a real LOB application. It seems that all of the following are needed to reproduce this:\r\n\r\n1. Controls whose style has dependency properties set to `DynamicResource` references.\r\n2. Some of those dependency properties supply values that are not used straight away  or at all. (This apparently causes evaluation of the property to be deferred).\r\n3. At least one resource is redefined: that is, in the resource dictionaries merged into the application's resources, it is defined in more than one place.\r\n4. For the controls referenced in 1. above, at least one other dependency property that _is_ used is set using a `DynamicResource` reference.\r\n\r\nSteps 1-3 cause the list of `_deferredResourceReferences` to become long, but this doesn't actually affect performance without step 4.\r\n\r\nThis is easy to reproduce using the popular [MahApps.Metro](https://github.com/MahApps/MahApps.Metro) UI toolkit for the following reasons:\r\n\r\n- It uses dynamic resources extensively to support theme switching [1 and 4 above].\r\n- [Some styles](https://github.com/MahApps/MahApps.Metro/blob/a636cc8295742a230682ad7c5033cf4520b0916c/src/MahApps.Metro/Styles/Controls.CheckBox.xaml#L291) adopt a pattern that involves setting _many_ dependency properties [2 above].\r\n- Some dependency properties are rarely accessed, e.g. [Validation.ErrorTemplate](https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.validation.errortemplate?view=net-5.0) and [ContextMenuService.ContextMenu](https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.contextmenuservice.contextmenu?view=net-5.0#System_Windows_Controls_ContextMenuService_ContextMenu) [2 above].\r\n- It's common to import all the MahApps styles into the application's resources, then override some of them with customized versions [3 above].\r\n\r\nIn our application, this performance bottleneck is typically responsible for adding an additional 7 seconds to the time it takes to open a form, bringing the total time to 10 seconds. It accounts for an even longer delay closing the same form.\r\n\r\nNote that, while an application using MahApps is particularly likely to exhibit this behaviour, I'm reporting it here because its quite easily reproducible in an application that doesn't deviate from normal WPF coding practices.\r\n\r\nWe are hoping to work around this by modifying our styles (and overriding default MahApps styles) to reduce the number of dependency properties that are assigned a value using `DynamicResource` when that value is not read almost immediately. Our application currently runs on .NET Framework 4.8, but we hope, in time, to migrate it to .NET 5 or 6. However, the repro linked above shows that the problem is currently manifest in both flavours of WPF.\r\n\r\nThis issue is to do a few things:\r\n\r\n- Track discussion about whether this could be improved in WPF itself.\r\n  - Is it expected that the list of deferred resources should grow to contain tens of thousands of items? Is retaining these necessary in this situation, or could the code be adjusted to release them earlier?\r\n  - If not, could the list be re-implemented as some kind of hash set to reduce the time spent in `FindWeakReference()`?\r\n- Solicit any other suggestions on how we might avoid hitting this scenario.\r\n  - We realise that changing this in WPF itself might be considered high risk for you (especially in .NET Framework), but we'd appreciate your observations, especially on whether this is a \"known issue\" with WPF.","Url":"https://github.com/dotnet/wpf/issues/4468","RelatedDescription":"Open issue \"Very slow performance due to internal WPF deferred resource reference list\" (#4468)"},{"Id":"877990015","IsPullRequest":false,"CreatedAt":"2021-05-02T00:58:32","Actor":"devedse","Number":"4485","RawContent":null,"Title":"Running my trimmed WPF .NET 5.0 application results in exception code 0xe0434352","State":"open","Body":"## Problem\r\n\r\nI saw a lot of other issues where people seem to have issues with running a WPF app with PublishTrimmed=true.\r\n\r\nFor most of the issues the fix was to add the following item group to the .csproj file:\r\n```\r\n  <ItemGroup>\r\n    <TrimmerRootAssembly Include=\"System.Collections\" />\r\n    <TrimmerRootAssembly Include=\"System.Runtime\" />\r\n    <TrimmerRootAssembly Include=\"System.Runtime.Extensions\" />\r\n    <TrimmerRootAssembly Include=\"System.Runtime.InteropServices\" />\r\n    <TrimmerRootAssembly Include=\"System.Runtime.CompilerServices.VisualC\" />\r\n  </ItemGroup>\r\n```\r\n\r\nFor my project however this doesn't seem to work. When I start my .exe file nothing happens, the only thing I see is an exception in the windows event log:\r\n\r\n```\r\nFaulting application name: DeveImageOptimizerWPF.exe, version: 1.0.523.0, time stamp: 0x605138bc\r\nFaulting module name: KERNELBASE.dll, version: 10.0.19041.964, time stamp: 0x812662a7\r\nException code: 0xe0434352\r\nFault offset: 0x0000000000034b89\r\nFaulting process id: 0x4b0c\r\nFaulting application start time: 0x01d73eed93cbf116\r\nFaulting application path: C:\\Users\\******\\Downloads\\DeveImageOptimizerWPF_win-x64_trimmed\\DeveImageOptimizerWPF.exe\r\nFaulting module path: C:\\WINDOWS\\System32\\KERNELBASE.dll\r\nReport Id: 27f3e7c5-9bec-47cc-9b0d-e86f9991dfbc\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n## My application\r\n\r\n**My build command:**\r\n\r\n```\r\ndotnet publish .\\DeveImageOptimizerWPF\\DeveImageOptimizerWPF.csproj -r win-x64 -c Release -o \"DeveImageOptimizerWPF\\bin\\Release\\net5.0-windows\\win-x64\\publishtrimmed\\\" /p:PublishSingleFile=true /p:SelfContained=true /p:IncludeNativeLibrariesForSelfExtract=true /p:PublishTrimmed=true\r\n```\r\nSee also: https://github.com/devedse/DeveImageOptimizerWPF/blob/master/.github/workflows/githubactionsbuilds.yml\r\n\r\n**Build artifacts:**\r\n\r\n(If you download the trimmed .exe file the error can easily be reproduced)\r\nhttps://github.com/devedse/DeveImageOptimizerWPF/actions/runs/803276315#artifacts\r\n\r\n**csproj:**\r\n\r\nhttps://github.com/devedse/DeveImageOptimizerWPF/blob/master/DeveImageOptimizerWPF/DeveImageOptimizerWPF.csproj","Url":"https://github.com/dotnet/wpf/issues/4485","RelatedDescription":"Open issue \"Running my trimmed WPF .NET 5.0 application results in exception code 0xe0434352\" (#4485)"},{"Id":"872620128","IsPullRequest":false,"CreatedAt":"2021-04-30T14:33:17","Actor":"wstaelens","Number":"4466","RawContent":null,"Title":"[Question] [XPS] Drawing a Visual is always being rasterized","State":"open","Body":"XPS: When drawing a Visual on a DrawingContext of a FixedPage, the image is being rasterized and losing the Vector quality.\r\n\r\n``` \r\nDrawingContextWrapper cntxt;\r\nVisual visualToDraw;\r\n// ...\r\n\r\nvar drawing = VisualTreeHelper.GetDrawing(visualToDraw); // <-- vector\r\nSystem.Windows.Media.ImageSource image = new DrawingImage(drawing); \r\ncntxt.Canvas.DrawImage(image, drawingBounds.ToRect()); // <-- raster\r\n```\r\n\r\n\r\nHow to draw a Visual on a DrawingContext as a vector without it being rasterized (XPS)?\r\n\r\n\r\n\r\n(found something related but not really the same: https://stackoverflow.com/questions/6490576/wpf-image-vector-format-export-xps/ )","Url":"https://github.com/dotnet/wpf/issues/4466","RelatedDescription":"Open issue \"[Question] [XPS] Drawing a Visual is always being rasterized\" (#4466)"},{"Id":"871744168","IsPullRequest":false,"CreatedAt":"2021-04-30T01:01:11","Actor":"lindexi","Number":"4464","RawContent":null,"Title":"WPF known issues: Application will FailFast when not find the Arial font from system","State":"open","Body":"* .NET Core Version: All\r\n* Windows version: All\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:**\r\n\r\nWhen we indirectly or directly call the FirstFontFamily method of FontFamily.cs, if we call FindFirstFontFamilyAndFace and the font is not found, then we will look for the system's Arial font.\r\n\r\nhttps://github.com/dotnet/wpf/blob/6cd4ee063a4d1f764a8e5f27f02df971dbc4a900/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/FontFamily.cs#L350-L362\r\n\r\nThe LookupFontFamily method return NULL when the user deletes the Arial font. And then we will enter the `Invariant.Assert(family != null)` to make the Application to FailFast.\r\n\r\nhttps://github.com/dotnet/wpf/blob/6cd4ee063a4d1f764a8e5f27f02df971dbc4a900/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/FontFamily.cs#L361\r\n\r\nhttps://github.com/dotnet/wpf/blob/6cd4ee063a4d1f764a8e5f27f02df971dbc4a900/src/Microsoft.DotNet.Wpf/src/Shared/MS/Internal/Invariant.cs#L85-L91\r\n\r\nhttps://github.com/dotnet/wpf/blob/6cd4ee063a4d1f764a8e5f27f02df971dbc4a900/src/Microsoft.DotNet.Wpf/src/Shared/MS/Internal/Invariant.cs#L199-L213\r\n\r\nI don't think this is a good design.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n Application will FailFast and I can not do anything and do not know why\r\n\r\n \r\n **Expected behavior:**\r\n\r\nWe can handle it or receive the event\r\n \r\n **Minimal repro:**\r\n","Url":"https://github.com/dotnet/wpf/issues/4464","RelatedDescription":"Open issue \"WPF known issues: Application will FailFast when not find the Arial font from system\" (#4464)"},{"Id":"870979026","IsPullRequest":true,"CreatedAt":"2021-04-29T13:03:36","Actor":"dotnet-maestro[bot]","Number":"4462","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20210429.2\r\n- **Date Produced**: 4/29/2021 12:40 PM\r\n- **Commit**: 5361643b5d95d0d0eda1b679f9dd2147e159f52e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-preview.5.21224.2 to 6.0.0-preview.5.21229.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCc32c38e&targetVersion=GC5361643&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4462","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#4462)"},{"Id":"867420320","IsPullRequest":true,"CreatedAt":"2021-04-26T08:26:46","Actor":"dotnet-maestro[bot]","Number":"4460","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20210508.2\r\n- **Date Produced**: 5/8/2021 1:02 PM\r\n- **Commit**: e513a403c7a0de2c5902eb2c27e0ad8415fdf4a3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 6.0.0-preview.5.21226.1 to 6.0.0-preview.5.21258.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 6.0.0-preview.5.21226.1 to 6.0.0-preview.5.21258.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.CodeDom**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/02ba694...e513a40\r\n[2]: https://github.com/dotnet/runtime/compare/90f97ac...7c69ca6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.Win32.Registry**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.AccessControl**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Principal.Windows**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILDAsm**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.ILAsm**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: from 6.0.0-preview.5.21224.4 to 6.0.0-preview.5.21258.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/4460","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#4460)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-05-09T05:30:38.0804893Z","RunDurationInMilliseconds":549}