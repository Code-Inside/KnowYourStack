{"Data":{"GitHub":{"Issues":[{"Id":"1323011713","IsPullRequest":true,"CreatedAt":"2022-07-30T13:05:51","Actor":"dotnet-maestro[bot]","Number":"6858","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220729.10\r\n- **Date Produced**: July 30, 2022 12:59:35 AM UTC\r\n- **Commit**: 1e73f4ab4c172aa55614f24b2d5c319e1efb8813\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22378.16 to 7.0.0-beta.22379.10][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22378.16 to 7.0.0-beta.22379.10][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22378.16 to 7.0.0-beta.22379.10][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22378.16 to 7.0.0-beta.22379.10][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22378.16 to 7.0.0-beta.22379.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6f93ec8...1e73f4a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6858)","Url":"https://github.com/dotnet/wpf/pull/6858","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6858)"},{"Id":"1322983745","IsPullRequest":true,"CreatedAt":"2022-07-30T10:22:21","Actor":"miloush","Number":"6857","RawContent":null,"Title":"Check script of combining marks during font fallback","State":"open","Body":"Fixes #6801 \r\n\r\n## Description\r\n\r\nFont fallback does not check combining marks associated with a base character, because the shaping engine might precompose the character with mark into single one which might be present in the font.\r\n\r\nHowever, when the marks are from a different script than the base character, the text does not get to the correct shaping engine, and inappropriate clusters are made (e.g. punctuation with Indic vowels).\r\n\r\nThe PR compares the script of the base character and the combining marks and only allows to skip font fallback check if they are the same, using the existing character classification tables.\r\n\r\n## Customer Impact\r\n\r\nCustomers not taking this fix will see incorrectly shaped text and will have difficulty editing affected text, since in non-Latin script cases, cursor cannot be put between the base character and the combining mark.\r\n\r\nVisual Studio is a notable impacted customer as in general programming languages are more susceptible to placing isolated combining marks inside quotation marks as chars and strings, and those get glued together. Depending on how the editor colorizes and tokenizes the string, customers will see inconsistent rendering that might cause a reflow just as cursor is moved around.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt and verified the test case in #6801 is shaped as expected in 7.0.0-preview.4.22229.4, i.e. Indic vowel marks don't get shaped together with punctuation as base characters, and that the specified font for fallback is selected. Ad-hoc verified that Latin combining marks still work with Latin bases like before.\r\n\r\n## Risk\r\n\r\nRuns with marks from different scripts will get split iff the marks are not present in the font. This could theoretically affect some combinations valid via script extensions, however, neither DWrite nor WPF currently support script extensions.\r\n\r\nThere will be slight performance decrease for combining mark characters (two more lookups of character attributes). This is a trade off decision that allows base characters (including standard Latin text going through fast path) to remain unaffected.\r\n\r\nThe existing code looks up attributes several times per each character. That is an opportunity for potentially interesting performance improvement, however this PR does not address it.\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6857)","Url":"https://github.com/dotnet/wpf/pull/6857","RelatedDescription":"Open PR \"Check script of combining marks during font fallback\" (#6857)"},{"Id":"1322622577","IsPullRequest":true,"CreatedAt":"2022-07-29T20:21:10","Actor":"dotnet-maestro[bot]","Number":"6856","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220729.2\r\n- **Date Produced**: July 29, 2022 7:21:04 PM UTC\r\n- **Commit**: 0554a59f67f2cdb9a83345314b496e17643e2ece\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22377.2 to 7.0.0-rc.1.22379.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22377.2 to 7.0.0-rc.1.22379.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-rc.1.22376.8 to 7.0.0-rc.1.22378.5][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/55b2969...0554a59\r\n[2]: https://github.com/dotnet/runtime/compare/2c31641...d7c8bc1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6856)","Url":"https://github.com/dotnet/wpf/pull/6856","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6856)"},{"Id":"1322194497","IsPullRequest":true,"CreatedAt":"2022-07-29T13:09:37","Actor":"dotnet-maestro[bot]","Number":"6853","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220728.16\r\n- **Date Produced**: July 29, 2022 12:25:05 AM UTC\r\n- **Commit**: 6f93ec8da69a42fbe9a702a33e104f94773c3f03\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22377.15 to 7.0.0-beta.22378.16][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22377.15 to 7.0.0-beta.22378.16][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22377.15 to 7.0.0-beta.22378.16][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22377.15 to 7.0.0-beta.22378.16][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22377.15 to 7.0.0-beta.22378.16][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7df6759...6f93ec8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6853)","Url":"https://github.com/dotnet/wpf/pull/6853","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6853)"},{"Id":"1313193371","IsPullRequest":true,"CreatedAt":"2022-07-28T13:01:26","Actor":"dotnet-maestro[bot]","Number":"6839","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220727.15\r\n- **Date Produced**: July 28, 2022 12:50:32 AM UTC\r\n- **Commit**: 7df67590fb080663ada77f269a8b132ef127a039\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22369.9 to 7.0.0-beta.22377.15][8]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22369.9 to 7.0.0-beta.22377.15][8]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22369.9 to 7.0.0-beta.22377.15][8]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22369.9 to 7.0.0-beta.22377.15][8]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22369.9 to 7.0.0-beta.22377.15][8]\r\n\r\n[8]: https://github.com/dotnet/arcade/compare/cda7646...7df6759\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6839)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6839","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6839)"},{"Id":"1320627608","IsPullRequest":false,"CreatedAt":"2022-07-28T09:07:30","Actor":"rickardadolfsson","Number":"6852","RawContent":null,"Title":"Tooltip disappears immediately for inherited FrameworkElement with DrawingVisual at location with negative relative coordinates","State":"open","Body":"* .NET Core Version: .NET 6 Version: 6.0.6, Commit 7cca709db2\r\n\r\n* Windows version: Windows 10 Version 21H2 (OS Build 19044.1826)\r\n\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\n I have a class which inherits FrameworkElement and is used to display points on a Canvas. The points are created by using a combination of Geometry, GeometryDrawing, and DrawingVisual. Because the points need to be centered around their location, they are offset by half of their width and height. This means that the DrawingVisual can have coordinates that are negative relative to the FrameworkElement. This causes issues with the tooltip of the FrameworkElement, which will not stay open when hovering over points with negative positions. It displays once and then disappears immediately.\r\n\r\nThe issue was not present for .NET Framework, and only appears when targeting .NET6.\r\n\r\nThis also happened for points with positive offsets, but could be prevented by implementing the MeasureOverride method to return the size of the FrameworkElement's visual elements. However there is no way to say that the FrameworkElement has visual elements outside its bounds, and the issue can not be mitigated for points with negative coordinates.\r\n\r\nFor .NET Framework, the MeasureOverride method does not need to be implemented and points with negative positions display the tooltip correctly.\r\n\r\n **Actual behavior:**\r\nThe tooltip disappears immediately while hovering over any visual element with negative coordinates relative to the FrameworkElement.\r\n \r\n **Expected behavior:**\r\nThe tooltip displays correctly while hovering over any visual element belonging to the FrameworkElement.\r\n \r\n **Minimal repro:**\r\nBelow is the code for the inherited FrameworkElement class. I have also attached an example project showing the observed behavior.\r\n[FrameworkTestApp.zip](https://github.com/dotnet/wpf/files/9207450/FrameworkTestApp.zip)\r\n\r\n    using System;\r\n    using System.Windows;\r\n    using System.Windows.Media;\r\n\r\n    namespace TestFrameworkElement\r\n    {\r\n        public class GeometryFrameworkElement : FrameworkElement\r\n        {\r\n            protected VisualCollection Children { get; set; }\r\n\r\n            protected override int VisualChildrenCount => Children.Count;\r\n\r\n            protected override Visual GetVisualChild(int index)\r\n            {\r\n                if (index < 0 || index >= Children.Count)\r\n                {\r\n                    throw new ArgumentOutOfRangeException(nameof(index));\r\n                }\r\n\r\n                return Children[index];\r\n            }\r\n\r\n            protected override Size MeasureOverride(Size availableSize)\r\n            {\r\n                var left = 0d;\r\n                var right = 0d;\r\n                var top = 0d;\r\n                var bottom = 0d;\r\n\r\n                foreach (DrawingVisual visual in Children)\r\n                {\r\n                    left = Math.Min(left, visual.ContentBounds.Left);\r\n                    right = Math.Max(right, visual.ContentBounds.Right);\r\n                    top = Math.Min(top, visual.ContentBounds.Top);\r\n                    bottom = Math.Max(bottom, visual.ContentBounds.Bottom);\r\n                }\r\n\r\n                double width = right - left;\r\n                double height = bottom - top;\r\n\r\n                return new Size(width, height);\r\n            }\r\n\r\n            public GeometryFrameworkElement()\r\n            {\r\n                Children = new VisualCollection(this)\r\n                {\r\n                    // Locations with positive coordinates display tooltip correctly\r\n                    GetGeometryVisual(new Point(20, 20), new Size(10, 10), new Pen(Brushes.ForestGreen, 1)),\r\n                    GetGeometryVisual(new Point(0, 0), new Size(10, 10), new Pen(Brushes.ForestGreen, 1)),\r\n                \r\n                    // Locations with negative coordinates do not\r\n                    GetGeometryVisual(new Point(-20, -20), new Size(10, 10), new Pen(Brushes.OrangeRed, 1)),\r\n                \r\n                    // Centered, only works for bottom right quadrant\r\n                    GetGeometryVisual(new Point(-5, -5), new Size(10, 10), new Pen(Brushes.Yellow, 1)),\r\n                };\r\n\r\n                ToolTip = \"Framework element tooltip\";\r\n            }\r\n\r\n            private DrawingVisual GetGeometryVisual(Point location, Size size, Pen pen)\r\n            {\r\n                var geometry = new RectangleGeometry(new Rect(location, size));\r\n                geometry.Freeze();\r\n\r\n                var gd = new GeometryDrawing(pen.Brush, pen, geometry);\r\n                gd.Freeze();\r\n\r\n                var drawingVisual = new DrawingVisual();\r\n                DrawingContext dc = drawingVisual.RenderOpen();\r\n                dc.DrawDrawing(gd);\r\n                dc.Close();\r\n\r\n                return drawingVisual;\r\n            }\r\n        }\r\n    }","Url":"https://github.com/dotnet/wpf/issues/6852","RelatedDescription":"Open issue \"Tooltip disappears immediately for inherited FrameworkElement with DrawingVisual at location with negative relative coordinates\" (#6852)"},{"Id":"1312028314","IsPullRequest":true,"CreatedAt":"2022-07-27T20:00:48","Actor":"dotnet-maestro[bot]","Number":"6838","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220727.2\r\n- **Date Produced**: July 27, 2022 6:42:32 PM UTC\r\n- **Commit**: 55b296932065022705a6af218ab04a9d90049a28\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22370.1 to 7.0.0-rc.1.22377.2][31]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22370.1 to 7.0.0-rc.1.22377.2][31]\r\n  - **System.CodeDom**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.DirectoryServices**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Drawing.Common**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Security.Permissions**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Windows.Extensions**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.IO.Packaging**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **System.Resources.Extensions**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8][32]\r\n\r\n[31]: https://github.com/dotnet/winforms/compare/0f10e2b...55b2969\r\n[32]: https://github.com/dotnet/runtime/compare/62eb291...2c31641\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6838)\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-rc.1.22369.9 to 7.0.0-rc.1.22376.8 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6838","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6838)"},{"Id":"1318804615","IsPullRequest":true,"CreatedAt":"2022-07-27T09:28:30","Actor":"mmitche","Number":"6848","RawContent":null,"Title":"Workaround missing lib with non-preview images","State":"closed","Body":"Should work around https://github.com/dotnet/arcade/issues/10106","Url":"https://github.com/dotnet/wpf/pull/6848","RelatedDescription":"Closed or merged PR \"Workaround missing lib with non-preview images\" (#6848)"},{"Id":"1318895913","IsPullRequest":true,"CreatedAt":"2022-07-27T00:55:41","Actor":"lindexi","Number":"6851","RawContent":null,"Title":"Remove the unnecessary fields in DpiHelper","State":"open","Body":"## Description\r\n\r\nWe can merge the `_transformToDevice` and `_transformToDip` fields to local variable. Why we define the  `_transformToDevice` and `_transformToDip` fields? Because we use the two fields to store the DPI in the previous version, and the code is:\r\n\r\n```csharp\r\n        private static Matrix _transformToDevice;\r\n        private static Matrix _transformToDip;\r\n\r\n        [SuppressMessage(\"Microsoft.Performance\", \"CA1810:InitializeReferenceTypeStaticFieldsInline\")]\r\n        static DpiHelper()\r\n        {\r\n            using (SafeDC desktop = SafeDC.GetDesktop())\r\n            {\r\n                int deviceCaps1 = NativeMethods.GetDeviceCaps(desktop, DeviceCap.LOGPIXELSX);\r\n                int deviceCaps2 = NativeMethods.GetDeviceCaps(desktop, DeviceCap.LOGPIXELSY);\r\n                DpiHelper._transformToDip = Matrix.Identity;\r\n                DpiHelper._transformToDip.Scale(96.0 / (double)deviceCaps1, 96.0 / (double)deviceCaps2);\r\n                DpiHelper._transformToDevice = Matrix.Identity;\r\n                DpiHelper._transformToDevice.Scale((double)deviceCaps1 / 96.0, (double)deviceCaps2 / 96.0);\r\n            }\r\n        }\r\n```\r\n\r\nIn order to support Per-Moniter v2, we will use the DPI in per window and we do not get the dpi from desktop once. It is means that we do not need these two fields anymore.\r\n\r\n## Customer Impact\r\n\r\nNone.\r\n\r\n## Regression\r\n\r\nNone.\r\n\r\n## Testing\r\n\r\nJust CI.\r\n\r\n## Risk\r\n\r\nLow. Unless some developers rely on using reflection to get fields.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6851)","Url":"https://github.com/dotnet/wpf/pull/6851","RelatedDescription":"Open PR \"Remove the unnecessary fields in DpiHelper\" (#6851)"},{"Id":"1317421098","IsPullRequest":false,"CreatedAt":"2022-07-27T00:42:16","Actor":"Miryunku","Number":"6846","RawContent":null,"Title":"Adding an Image with a TransformedBitmap (with a ScaleTransform) as Source into a canvas changes the expected size","State":"closed","Body":"Hello, I have a project in where you can put `Image`s in a `Canvas` and move them around and resize them.\r\nYou can extract images from the canvas (removing an `Image` from Canvas.Children) and the image \"will remember\" the size it had if you put the image again into the canvas, so that the user does not have to resize it again. The problem is that the image is draw with the wrong size, even though the values that I pass are correct. I checked with the debugger and they are correct at all times. It seems that the size changes when I add the image into the canvas (canvas.Children.Add(UIElement)).\r\n\r\nI created a demo project to see if that behaviour would still be present, and it is. You can download the demo project in here:\r\nhttps://1drv.ms/u/s!Amb20j9mfkXDc7HKkr6n6T7Y0rU?e=ZfOn7r\r\nThe link points to my OneDrive, towards a .7z file of 148KB. Inside the file you can find the source code, don't worry, it is a small project. I included an image that you will need as source for a BitmapImage, just copy it to the working directory.\r\n\r\nWhen you compile the program, all you have to do is to press the \"Insert in canvas\" button for an image to appear, you can move the image around and resize it with you mouse as advertised. To resize the image, just check the \"Resizer\" `RadioButton` and click on the `Image` for a ResizingBorder (a UserControl) to appear.\r\n\r\nIt is more noticeable if you resize the height.\r\n\r\nImportant places are: the Button_Click_InsertInCanvas function and Canvas_MouseLeftButtonUp function (which book-keeps the values needed to set the size of the image, you will see in the debugger that they are correct).","Url":"https://github.com/dotnet/wpf/issues/6846","RelatedDescription":"Closed issue \"Adding an Image with a TransformedBitmap (with a ScaleTransform) as Source into a canvas changes the expected size\" (#6846)"},{"Id":"1318810623","IsPullRequest":true,"CreatedAt":"2022-07-26T22:25:19","Actor":"mmitche","Number":"6849","RawContent":null,"Title":"Some pipeline cleanup","State":"open","Body":"- Remove unused secrets\r\n- PublishUsingPipelines is always true\r\n- Fix the internal runtime download location\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6849)","Url":"https://github.com/dotnet/wpf/pull/6849","RelatedDescription":"Open PR \"Some pipeline cleanup\" (#6849)"},{"Id":"1318594795","IsPullRequest":true,"CreatedAt":"2022-07-26T18:44:50","Actor":"dotnet-maestro[bot]","Number":"6847","RawContent":null,"Title":"[release/7.0-preview7] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:288179f0-f220-4541-5055-08da5f9ad98d)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 288179f0-f220-4541-5055-08da5f9ad98d\r\n- **Build**: 20220726.2\r\n- **Date Produced**: July 26, 2022 5:43:35 PM UTC\r\n- **Commit**: 4a1a26506a8e83fa30769750682f5bca0e15c572\r\n- **Branch**: refs/heads/release/7.0-preview7\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.7.22369.6 to 7.0.0-preview.7.22376.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.7.22369.6 to 7.0.0-preview.7.22376.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.7.22369.4 to 7.0.0-preview.7.22375.6][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/d2b2f80...4a1a265\r\n[2]: https://github.com/dotnet/runtime/compare/db5d4df...eecb028\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:288179f0-f220-4541-5055-08da5f9ad98d)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6847)","Url":"https://github.com/dotnet/wpf/pull/6847","RelatedDescription":"Closed or merged PR \"[release/7.0-preview7] Update dependencies from dotnet/winforms\" (#6847)"},{"Id":"1316316121","IsPullRequest":false,"CreatedAt":"2022-07-25T06:06:03","Actor":"xunmeng2002","Number":"6845","RawContent":null,"Title":"Binding Error For TabControl","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019).\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/main/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nBinding Error on the second TabItem.\r\nI use a DataGrid in a TabControl, and under the two TabItems below the TabControl, add two identical DataGrids. The DataGrid under the first TabItem binds data successfully, but the CheckBox for the header of the first column under the second DataGrid fails.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n System.Windows.Data Error: 4 : Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='BindingTest.MainWindow', AncestorLevel='1''. BindingExpression:Path=OrderViewModel.IsAllOrderSelected; DataItem=null; target element is 'CheckBox' (Name=''); target property is 'IsChecked' (type 'Nullable`1')\r\n\r\n\r\n **Expected behavior:**\r\n \r\n **Minimal repro:**\r\n`<TabControl Grid.Row=\"2\">\r\n  <TabItem Header=\"Order1\">\r\n      <DataGrid ItemsSource=\"{Binding ElementName=mainWindow, Path=OrderViewModel.Orders}\" AutoGenerateColumns=\"False\" IsReadOnly=\"True\">\r\n          <DataGrid.Columns>\r\n              <DataGridCheckBoxColumn Binding=\"{Binding isSelected, UpdateSourceTrigger=PropertyChanged}\" IsReadOnly=\"False\">\r\n                  <DataGridCheckBoxColumn.Header>\r\n                      <CheckBox IsChecked=\"{Binding ElementName=mainWindow, Path=OrderViewModel.IsAllOrderSelected, UpdateSourceTrigger=PropertyChanged}\">SelectAll</CheckBox>\r\n                  </DataGridCheckBoxColumn.Header>\r\n              </DataGridCheckBoxColumn>\r\n          </DataGrid.Columns>\r\n      </DataGrid>\r\n  </TabItem>\r\n  <TabItem Header=\"Order2\" DataContext=\"{Binding ElementName=mainWindow}\">\r\n      <DataGrid ItemsSource=\"{Binding ElementName=mainWindow, Path=OrderViewModel.Orders}\" AutoGenerateColumns=\"False\" IsReadOnly=\"True\">\r\n          <DataGrid.Columns>\r\n              <DataGridCheckBoxColumn Binding=\"{Binding isSelected, UpdateSourceTrigger=PropertyChanged}\" IsReadOnly=\"False\">\r\n                  <DataGridCheckBoxColumn.Header>\r\n                      <CheckBox IsChecked=\"{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}, Path=OrderViewModel.IsAllOrderSelected, UpdateSourceTrigger=PropertyChanged}\">SelectAll</CheckBox>\r\n                  </DataGridCheckBoxColumn.Header>\r\n              </DataGridCheckBoxColumn>\r\n          </DataGrid.Columns>\r\n      </DataGrid>\r\n  </TabItem>\r\n</TabControl>`\r\n","Url":"https://github.com/dotnet/wpf/issues/6845","RelatedDescription":"Open issue \"Binding Error For TabControl\" (#6845)"},{"Id":"1315718480","IsPullRequest":true,"CreatedAt":"2022-07-23T18:23:53","Actor":"feast107","Number":"6844","RawContent":null,"Title":"修改NET SDK版本","State":"open","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6844)","Url":"https://github.com/dotnet/wpf/pull/6844","RelatedDescription":"Open PR \"修改NET SDK版本\" (#6844)"},{"Id":"1315708571","IsPullRequest":true,"CreatedAt":"2022-07-23T17:32:26","Actor":"bgrainger","Number":"6843","RawContent":null,"Title":"Close Stream when creating an ImageSource from a Uri","State":"open","Body":"Fixes #6842\r\n\r\n## Description\r\n\r\nDuring XAML serialization, an `ImageSource` may first be loaded by `ImageSourceConverter.ConvertFrom`. This calls `BitmapDecoder.CreateFromUriOrStream` with a pack URI, opens a `Stream`, and keeps it open. This will eventually be closed by the `BitmapDecoder` finalizer (see comments in that method).\r\n\r\nhttps://github.com/dotnet/wpf/blob/c8742b5c39f72927e8598825291d6cf4e593df10/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/Imaging/BitmapDecoder.cs#L215-L221\r\n\r\nSubsequently the same pack URI is opened by `ImageSourceTypeConverter.ConvertTo`. This throws an `IOException: 'Entries cannot be opened multiple times in Update mode.'`. This occurs because the same `ZipArchiveEntry` is being opened a second time, while the first stream is still open.\r\n\r\nBy specifying `BitmapCacheOption.OnLoad` here, `BitmapDecoder.Initialize` will eagerly close the stream, which allows the `ZipArchiveEntry` to be opened a second time.\r\n\r\n## Customer Impact\r\n\r\nFixes an exception that prevents certain documents (presumably ones containing images, or ImageBrushes?) from printing.\r\n\r\n## Regression\r\n\r\nYes, regression from .NET Framework 4.8.\r\n\r\n## Testing\r\n\r\nTested in real-world application by using Faithlife.WPF: https://github.com/Faithlife/wpf/blob/stable/README.md#faithlifewpf\r\n\r\n## Risk\r\n\r\nUnknown. May improve system resource usage by closing streams early instead of letting them be closed by a finalizer? OTOH, may perform unnecessary image decoding work up-front?\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6843)","Url":"https://github.com/dotnet/wpf/pull/6843","RelatedDescription":"Open PR \"Close Stream when creating an ImageSource from a Uri\" (#6843)"},{"Id":"1315663833","IsPullRequest":false,"CreatedAt":"2022-07-23T13:51:47","Actor":"bgrainger","Number":"6842","RawContent":null,"Title":"IOException in ZipArchiveEntry.OpenInUpdateMode when printing","State":"open","Body":"* .NET Core Version: Microsoft.NETCore.App 6.0.7\r\n* Windows version: Windows 10 21H2 x64, 19044.1826\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\n **Problem description:**\r\n\r\nIn a WPF application ported to .NET 6.0 from .NET Framework 4.7.2, printing a complex document throws an exception, and nothing prints. (The Microsoft Print to PDF driver writes a 0-byte file.)\r\n\r\nAt the moment, I don't have a self-contained repro, but reporting the call stack as part of starting the investigation, and in case anyone else has relevant information.\r\n \r\n **Actual behavior:** \r\n\r\nSystem.IO.IOException: 'Entries cannot be opened multiple times in Update mode.'\r\n\r\n```\r\nSystem.IO.Compression.dll!System.IO.Compression.ZipArchiveEntry.OpenInUpdateMode() Line 699\tC#\r\nSystem.IO.Compression.dll!System.IO.Compression.ZipArchiveEntry.Open() Line 297\tC#\r\nSystem.IO.Packaging.dll!System.IO.Packaging.ZipStreamManager.Open(System.IO.Compression.ZipArchiveEntry zipArchiveEntry, System.IO.FileMode streamFileMode, System.IO.FileAccess streamFileAccess) Line 85\tC#\r\nSystem.IO.Packaging.dll!System.IO.Packaging.ZipPackagePart.GetStreamCore(System.IO.FileMode streamFileMode, System.IO.FileAccess streamFileAccess) Line 45\tC#\r\nSystem.IO.Packaging.dll!System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode mode, System.IO.FileAccess access) Line 320\tC#\r\nWindowsBase.dll!MS.Internal.IO.Packaging.PackagePartExtensions.GetSeekableStream(System.IO.Packaging.PackagePart packPart, System.IO.FileMode mode, System.IO.FileAccess access) Line 62\tC#\r\nPresentationCore.dll!System.IO.Packaging.PackWebResponse.CachedResponse.GetResponseStream() Line 652\tC#\r\nPresentationCore.dll!System.IO.Packaging.PackWebResponse.GetResponseStream() Line 273\tC#\r\nPresentationCore.dll!MS.Internal.WpfWebRequestHelper.CreateRequestAndGetResponseStream(System.Uri uri) Line 180\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) Line 245\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualSerializer.WriteBitmap(string attribute, System.Windows.Media.ImageSource imageSource) Line 647\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualSerializer.BrushToString(System.Windows.Media.Brush brush, System.Windows.Rect bounds) Line 774\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualSerializer.FindBrush(System.Windows.Media.Brush brush, System.Windows.Rect bounds) Line 273\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualSerializer.WriteBrush(string attribute, System.Windows.Media.Brush brush, System.Windows.Rect bounds) Line 905\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualSerializer.System.Windows.Xps.Serialization.IMetroDrawingContext.DrawGeometry(System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry) Line 1925\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.DrawingContextFlattener.DrawGeometry(System.Windows.Media.Brush brush, System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry) Line 283\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualTreeFlattener.DrawingWalk(System.Windows.Media.Drawing d, System.Windows.Media.Matrix drawingToWorldTransform) Line 699\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualTreeFlattener.DrawingWalk(System.Windows.Media.Drawing d, System.Windows.Media.Matrix drawingToWorldTransform) Line 761\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.VisualTreeFlattener.StartVisual(System.Windows.Media.Visual visual) Line 641\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.ReachVisualSerializerAsync.SerializeNextTreeNode(System.Windows.Xps.Serialization.ReachVisualSerializerContext context) Line 174\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.ReachVisualSerializerAsync.AsyncOperation(System.Windows.Xps.Serialization.ReachSerializerContext context) Line 73\tC#\r\nReachFramework.dll!System.Windows.Xps.Serialization.XpsOMSerializationManagerAsync.InvokeSaveAsXamlWorkItem(object arg) Line 148\tC#\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs) Line 103\tC#\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler) Line 36\tC#\r\nWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl() Line 540\tC#\r\nWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(object state) Line 489\tC#\r\nWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(object obj) Line 215\tC#\r\nSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 183\tC#\r\nSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 148\tC#\r\nWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 172\tC#\r\nWindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke() Line 412\tC#\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue() Line 2087\tC#\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) Line 2296\tC#\r\nWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled) Line 295\tC#\r\nWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o) Line 429\tC#\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs) Line 103\tC#\r\nWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler) Line 36\tC#\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs) Line 1329\tC#\r\nWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam) Line 341\tC#\r\n[Native to Managed Transition]\t\r\n[Managed to Native Transition]\t\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame) Line 2135\tC#\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame frame) Line 329\tC#\r\nWindowsBase.dll!System.Windows.Threading.Dispatcher.Run() Line 297\tC#\r\nPresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore) Line 2405\tC#\r\nPresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window) Line 1695\tC#\r\nPresentationFramework.dll!System.Windows.Application.Run() Line 198\tC#\r\n```\r\n \r\n **Expected behavior:**\r\n\r\nPrinting works without exception.\r\n \r\n **Minimal repro:**\r\n\r\nN/A","Url":"https://github.com/dotnet/wpf/issues/6842","RelatedDescription":"Open issue \"IOException in ZipArchiveEntry.OpenInUpdateMode when printing\" (#6842)"},{"Id":"1315600965","IsPullRequest":false,"CreatedAt":"2022-07-23T08:23:34","Actor":"Symbai","Number":"6841","RawContent":null,"Title":"[API Proposal] System.Windows.WindowStartupMonitor","State":"open","Body":"In times of multi monitor setup I would like to propose a new API that allows us to set the startup monitor of the window. I am open for naming changes. The reason is that many developers would prefer to use/keep the `WindowStartupLocation.CenterScreen` but only change the monitor from \"the monitor on which the mouse is currently located\" to a fixed monitor. \r\n\r\nThe way to do this ourselves is tedious. Enumerating all screens, calculating the center, use WinAPIs to move the window. `WindowStartupMonitor` could be an integer which stands for the index of the monitor. By default it could be `-1` which means \"the monitor on which the mouse is currently located\".\r\n\r\nIdeas? Suggestions?","Url":"https://github.com/dotnet/wpf/issues/6841","RelatedDescription":"Open issue \"[API Proposal] System.Windows.WindowStartupMonitor\" (#6841)"},{"Id":"1314023450","IsPullRequest":true,"CreatedAt":"2022-07-22T01:33:26","Actor":"lindexi","Number":"6840","RawContent":null,"Title":"Fix get TransformToDevice in Stylus Input thread will throw the InvalidOperationException","State":"open","Body":"Fixes https://github.com/dotnet/wpf/issues/6829\r\n\r\n## Description\r\n\r\nSee https://github.com/dotnet/wpf/issues/6829\r\n\r\nThe `Stylus Input` thread will enter the GetAndCacheTransformToDeviceMatrix method to get the Matrix. But after we change the DPI, the `Stylus Input` thread can not find the Matrix in `_transformToDeviceMatrices`. It means that the `Stylus Input` thread should get the Matrix from `HwndTarget.TransformToDevice` property which only allow get from UI Thread.\r\n\r\nI fix it by dispatch to UI Thread. To improve performance, we will calculate it `CurrentDpiScale` property.\r\n\r\n## Customer Impact\r\n\r\nFix tocuh in Window with StylusPlugIn may throw InvalidOperationException\r\n\r\n## Regression\r\n\r\nYes, see https://github.com/dotnet/wpf/pull/2891\r\n\r\n## Testing\r\n\r\nJust CI\r\n\r\nAnd I pick the code to https://github.com/dotnet-campus/dotnetCampus.CustomWpf/pull/21 to build the private version to test it by my application.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6840)","Url":"https://github.com/dotnet/wpf/pull/6840","RelatedDescription":"Open PR \"Fix get TransformToDevice in Stylus Input thread will throw the InvalidOperationException\" (#6840)"},{"Id":"1311172048","IsPullRequest":true,"CreatedAt":"2022-07-20T14:26:46","Actor":"dotnet-maestro[bot]","Number":"6837","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220720.1\r\n- **Date Produced**: July 20, 2022 1:33:03 PM UTC\r\n- **Commit**: 0f10e2bdc7a075b7af583f972ce237e9e94c567f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22369.8 to 7.0.0-rc.1.22370.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22369.8 to 7.0.0-rc.1.22370.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-rc.1.22368.8 to 7.0.0-rc.1.22369.9][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/07747de...0f10e2b\r\n[2]: https://github.com/dotnet/runtime/compare/9ad3026...62eb291\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6837)","Url":"https://github.com/dotnet/wpf/pull/6837","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6837)"},{"Id":"1311014560","IsPullRequest":true,"CreatedAt":"2022-07-20T12:58:23","Actor":"dotnet-maestro[bot]","Number":"6835","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220719.9\r\n- **Date Produced**: July 20, 2022 12:27:31 AM UTC\r\n- **Commit**: cda764613f89280de6d5c5383ebded9ac01ebd00\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22368.5 to 7.0.0-beta.22369.9][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22368.5 to 7.0.0-beta.22369.9][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22368.5 to 7.0.0-beta.22369.9][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22368.5 to 7.0.0-beta.22369.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22368.5 to 7.0.0-beta.22369.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6bf3e1d...cda7646\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6835)","Url":"https://github.com/dotnet/wpf/pull/6835","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6835)"},{"Id":"1311020349","IsPullRequest":false,"CreatedAt":"2022-07-20T12:41:46","Actor":"saiganesh-sakthivel","Number":"6836","RawContent":null,"Title":"When exporting data into excel, we are exception thrown on Microsoft Interop Excel in Net Core 3.1","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019).\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/main/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n When exporting data into excel, we are facing the exception is thrown on Microsoft Interop Excel in Net Core 3.1, the same code works fine in WPF Framework.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\n![Screenshot (327)](https://user-images.githubusercontent.com/61176526/179983193-fe061322-5058-4736-9fd8-0f0dbab07ae2.png)\r\n\r\n **Expected behavior:**\r\n It should work correctly.\r\n \r\n **Minimal repro:**\r\n\r\n[GanttWPF_Core.zip](https://github.com/dotnet/wpf/files/9149808/GanttWPF_Core.zip)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6836","RelatedDescription":"Open issue \"When exporting data into excel, we are exception thrown on Microsoft Interop Excel in Net Core 3.1\" (#6836)"},{"Id":"1310437921","IsPullRequest":true,"CreatedAt":"2022-07-20T05:43:50","Actor":"dotnet-bot","Number":"6833","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 217: Build ID 1892077","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6833)","Url":"https://github.com/dotnet/wpf/pull/6833","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 217: Build ID 1892077\" (#6833)"},{"Id":"1310458438","IsPullRequest":true,"CreatedAt":"2022-07-20T05:27:26","Actor":"ThomasGoulet73","Number":"6834","RawContent":null,"Title":"Replace resource constants with properties in System.Windows.Controls.Ribbon","State":"open","Body":"Contributes to dotnet/wpf#1\r\n\r\n## Description\r\nReplace the use of resource constants with properties in System.Windows.Controls.Ribbon. This follows the standard of other .Net projects, like [dotnet/runtime](https://github.com/dotnet/runtime).\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + CI.\r\n\r\n## Risk\r\nNone.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6834)","Url":"https://github.com/dotnet/wpf/pull/6834","RelatedDescription":"Open PR \"Replace resource constants with properties in System.Windows.Controls.Ribbon\" (#6834)"},{"Id":"1310396147","IsPullRequest":true,"CreatedAt":"2022-07-20T04:04:08","Actor":"ThomasGoulet73","Number":"6832","RawContent":null,"Title":"Replace resource constants with properties in UIAutomationClientSideProviders","State":"open","Body":"Contributes to dotnet/wpf#1\r\n\r\n## Description\r\nReplace the use of resource constants with properties in UIAutomationClientSideProviders. This follows the standard of other .Net projects, like [dotnet/runtime](https://github.com/dotnet/runtime).\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + CI.\r\n\r\n## Risk\r\nNone.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6832)","Url":"https://github.com/dotnet/wpf/pull/6832","RelatedDescription":"Open PR \"Replace resource constants with properties in UIAutomationClientSideProviders\" (#6832)"},{"Id":"1310287974","IsPullRequest":true,"CreatedAt":"2022-07-20T02:18:52","Actor":"dotnet-maestro[bot]","Number":"6831","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220719.8\r\n- **Date Produced**: July 20, 2022 1:22:40 AM UTC\r\n- **Commit**: 07747de084aa403be88bf309baf9b3516e00b76a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22369.7 to 7.0.0-rc.1.22369.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22369.7 to 7.0.0-rc.1.22369.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/0b753c1...07747de\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6831)","Url":"https://github.com/dotnet/wpf/pull/6831","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6831)"},{"Id":"1310254944","IsPullRequest":true,"CreatedAt":"2022-07-20T01:39:19","Actor":"dotnet-maestro[bot]","Number":"6830","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220719.7\r\n- **Date Produced**: July 20, 2022 12:49:56 AM UTC\r\n- **Commit**: 0b753c1876983d26713b87f2f62ed64e6b138d27\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22369.5 to 7.0.0-rc.1.22369.7][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22369.5 to 7.0.0-rc.1.22369.7][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/03806f4...0b753c1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6830)","Url":"https://github.com/dotnet/wpf/pull/6830","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6830)"},{"Id":"1310250453","IsPullRequest":false,"CreatedAt":"2022-07-20T01:09:34","Actor":"lindexi","Number":"6829","RawContent":null,"Title":"WPF tocuh in Window with StylusPlugIn may throw InvalidOperationException ","State":"open","Body":"* .NET Core Version: 6.0.121.56705\r\n* Windows version: win10 21H2\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n \r\n **Problem description:**\r\n\r\nAfter https://github.com/dotnet/wpf/pull/2891 the `Stylus Input` thread will call the `GetAndCacheTransformToDeviceMatrix` to get the Matrix to calculate.\r\n\r\nhttps://github.com/dotnet/wpf/blob/ab8e3f026bc4319aae72e0b3b0383acbc500aeef/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/Stylus/Common/StylusLogic.cs#L417-L435\r\n\r\nAfter we changed the moniter DPI and then we touch the application immediately, the `GetAndCacheTransformToDeviceMatrix` will call `hwndSource.CompositionTarget.TransformToDevice` and then throw the System.InvalidOperationException: The calling thread cannot access this object because a different thread owns it.\r\n\r\nhttps://github.com/dotnet/wpf/blob/ab8e3f026bc4319aae72e0b3b0383acbc500aeef/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/Stylus/Common/StylusLogic.cs#L427\r\n\r\nBecause we can not find the new DpiScale in `_transformToDeviceMatrices`\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n```\r\nApplication: Application.exe\r\nCoreCLR Version: 6.0.121.56705\r\n.NET Version: 6.0.1\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.InvalidOperationException: The calling thread cannot access this object because a different thread owns it.\r\n   at System.Windows.Threading.Dispatcher.ThrowVerifyAccess()\r\n   at System.Windows.Threading.Dispatcher.VerifyAccess()\r\n   at System.Windows.Threading.DispatcherObject.VerifyAccess()\r\n   at System.Windows.Media.CompositionTarget.VerifyAPIReadOnly()\r\n   at System.Windows.Interop.HwndTarget.get_TransformToDevice()\r\n   at System.Windows.Input.StylusLogic.GetAndCacheTransformToDeviceMatrix(PresentationSource source)\r\n   at System.Windows.Input.StylusWisp.WispLogic.GetTabletToViewTransform(PresentationSource source, TabletDevice tabletDevice)\r\n   at System.Windows.Input.PenContexts.InvokeStylusPluginCollection(RawStylusInputReport inputReport)\r\n   at System.Windows.Input.StylusWisp.WispLogic.InvokeStylusPluginCollection(RawStylusInputReport inputReport)\r\n   at System.Windows.Input.StylusWisp.WispLogic.ProcessInputReport(RawStylusInputReport inputReport)\r\n   at System.Windows.Input.StylusWisp.WispLogic.ProcessInput(RawStylusActions actions, PenContext penContext, Int32 tabletDeviceId, Int32 stylusDeviceId, Int32[] data, Int32 timestamp, PresentationSource inputSource)\r\n   at System.Windows.Input.PenContexts.ProcessInput(RawStylusActions actions, PenContext penContext, Int32 tabletDeviceId, Int32 stylusPointerId, Int32[] data, Int32 timestamp)\r\n   at System.Windows.Input.PenContexts.OnPenDown(PenContext penContext, Int32 tabletDeviceId, Int32 stylusPointerId, Int32[] data, Int32 timestamp)\r\n   at System.Windows.Input.PenContext.FirePenDown(Int32 stylusPointerId, Int32[] data, Int32 timestamp)\r\n   at System.Windows.Input.PenThreadWorker.FireEvent(PenContext penContext, Int32 evt, Int32 stylusPointerId, Int32 cPackets, Int32 cbPacket, IntPtr pPackets)\r\n   at System.Windows.Input.PenThreadWorker.ThreadProc()\r\n   at System.Threading.Thread.StartHelper.Callback(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Thread.StartCallback()\r\n```\r\n \r\n **Expected behavior:**\r\n \r\nWork well.\r\n\r\n **Minimal repro:**\r\n\r\n1. Create the application and attache the StylusPlugIn to main window\r\n2. Run the application in the device with touch screen.\r\n3. Touch the main window and then change the moniter DPI and then touch the application immediately\r\n\r\nRepeat step 3 many times, and we will find the exception.\r\n\r\n\r\nReference: https://github.com/dotnet/wpf/issues/6415\r\n\r\ncc @rladuca ","Url":"https://github.com/dotnet/wpf/issues/6829","RelatedDescription":"Open issue \"WPF tocuh in Window with StylusPlugIn may throw InvalidOperationException \" (#6829)"},{"Id":"1310221295","IsPullRequest":true,"CreatedAt":"2022-07-20T00:39:54","Actor":"dotnet-maestro[bot]","Number":"6828","RawContent":null,"Title":"[release/7.0-preview7] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:288179f0-f220-4541-5055-08da5f9ad98d)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 288179f0-f220-4541-5055-08da5f9ad98d\r\n- **Build**: 20220719.6\r\n- **Date Produced**: July 19, 2022 11:46:38 PM UTC\r\n- **Commit**: d2b2f809703f0dbcda70ff110c64c5de06da9680\r\n- **Branch**: refs/heads/release/7.0-preview7\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.7.22365.1 to 7.0.0-preview.7.22369.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.7.22365.1 to 7.0.0-preview.7.22369.6][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.7.22364.6 to 7.0.0-preview.7.22369.4][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/1757301...d2b2f80\r\n[2]: https://github.com/dotnet/runtime/compare/3b0a075...db5d4df\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:288179f0-f220-4541-5055-08da5f9ad98d)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6828)","Url":"https://github.com/dotnet/wpf/pull/6828","RelatedDescription":"Closed or merged PR \"[release/7.0-preview7] Update dependencies from dotnet/winforms\" (#6828)"},{"Id":"1310016698","IsPullRequest":true,"CreatedAt":"2022-07-19T21:16:30","Actor":"dotnet-maestro[bot]","Number":"6826","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220719.5\r\n- **Date Produced**: July 19, 2022 8:02:26 PM UTC\r\n- **Commit**: 03806f4553a4ea33955c7e29b81db941c43d3891\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22369.4 to 7.0.0-rc.1.22369.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22369.4 to 7.0.0-rc.1.22369.5][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/6c9f0db...03806f4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6826)","Url":"https://github.com/dotnet/wpf/pull/6826","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6826)"},{"Id":"1309833598","IsPullRequest":true,"CreatedAt":"2022-07-19T17:46:44","Actor":"dotnet-maestro[bot]","Number":"6825","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220719.4\r\n- **Date Produced**: July 19, 2022 4:56:10 PM UTC\r\n- **Commit**: 6c9f0dbbc5a444b7cb72d5452fc1226865c3773a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-rc.1.22369.2 to 7.0.0-rc.1.22369.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-rc.1.22369.2 to 7.0.0-rc.1.22369.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f7adf27...6c9f0db\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/6825)","Url":"https://github.com/dotnet/wpf/pull/6825","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6825)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-07-31T03:30:30.2628438Z","RunDurationInMilliseconds":546}