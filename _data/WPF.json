{"Data":{"GitHub":{"Issues":[{"Id":"2665977781","IsPullRequest":false,"CreatedAt":"2024-11-17T14:46:50","Actor":"rosyzc7","Number":"10083","RawContent":null,"Title":"TextBox SelectAll Input Chinese crash","State":"open","Body":"Hello everyone, I am a technician engaged in smart home programming, mainly using the ETS5 software of the KNX Association, recently replaced the new computer, found that this software will crash after I input Chinese. I've looked up all the solutions I can find online but the problem still hasn't been solved. Please help me take a look, thank you!!\n\n> 应用程序: ETS5N.exe\nFramework 版本: v4.0.30319\n说明: 应用程序通过 System.Environment.FailFast(string message) 请求终止进程。\n消息: 不可恢复的系统错误。\n堆栈:\n   在 System.Environment.FailFast(System.String)\n   在 MS.Internal.Invariant.FailFast(System.String, System.String)\n   在 System.Windows.Documents.TextStore.VerifyTextStoreConsistency()\n   在 System.Windows.Documents.TextStore.GrantLock()\n   在 System.Windows.Documents.TextStore.GrantLockWorker(LockFlags)\n   在 System.Windows.Documents.TextStore.RequestLock(LockFlags, Int32 ByRef)\n   在 MS.Win32.UnsafeNativeMethods+ITextStoreACPSink.OnSelectionChange()\n   在 System.Windows.Documents.TextStore.OnSelectionChanged()\n   在 System.Windows.Documents.TextSelection.System.Windows.Documents.ITextRange.NotifyChanged(Boolean, Boolean)\n   在 System.Windows.Documents.TextRangeBase.EndChange(System.Windows.Documents.ITextRange, Boolean, Boolean)\n   在 System.Windows.Documents.TextRange.System.Windows.Documents.ITextRange.EndChange(Boolean, Boolean)\n   在 System.Windows.Documents.TextRange+ChangeBlock.System.IDisposable.Dispose()\n   在 System.Windows.Documents.TextEditorTyping.DoTextInput(System.Windows.Documents.TextEditor, System.String, Boolean, Boolean)\n   在 System.Windows.Documents.TextEditorTyping+TextInputItem.Do()\n   在 System.Windows.Documents.TextEditorTyping.ScheduleInput(System.Windows.Documents.TextEditor, InputItem)\n   在 System.Windows.Documents.TextEditorTyping.OnTextInput(System.Object, System.Windows.Input.TextCompositionEventArgs)\n   在 System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n   在 System.Windows.UIElement.OnTextInputThunk(System.Object, System.Windows.Input.TextCompositionEventArgs)\n   在 System.Windows.Input.TextCompositionEventArgs.InvokeEventHandler(System.Delegate, System.Object)\n   在 System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate, System.Object)\n   在 System.Windows.RoutedEventHandlerInfo.InvokeHandler(System.Object, System.Windows.RoutedEventArgs)\n   在 System.Windows.EventRoute.InvokeHandlersImpl(System.Object, System.Windows.RoutedEventArgs, Boolean)\n   在 System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject, System.Windows.RoutedEventArgs)\n   在 System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs)\n   在 System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs, Boolean)\n   在 System.Windows.Input.InputManager.ProcessStagingArea()\n   在 System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)\n   在 System.Windows.Input.TextCompositionManager.UnsafeCompleteComposition(System.Windows.Input.TextComposition)\n   在 System.Windows.Input.DefaultTextStore.OnTransitoryExtensionUpdated(ITfContext, Int32, ITfRange, ITfRange, Boolean ByRef)\n   在 MS.Win32.UnsafeNativeMethods+ITfThreadMgr.SetFocus(ITfDocumentMgr)\n   在 System.Windows.Documents.TextStore.OnGotFocus()\n   在 System.Windows.Documents.TextServicesHost._RegisterTextStore(System.Windows.Documents.TextStore)\n   在 System.Windows.Documents.TextStore.OnAttach()\n   在 System.Windows.Documents.TextEditor.InitTextStore(System.Object)\n   在 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n   在 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n   在 System.Windows.Threading.DispatcherOperation.InvokeImpl()\n   在 System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(System.Object)\n   在 MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object)\n   在 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\n   在 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\n   在 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\n   在 MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object)\n   在 System.Windows.Threading.DispatcherOperation.Invoke()\n   在 System.Windows.Threading.Dispatcher.ProcessQueue()\n   在 System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n   在 MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n   在 MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\n   在 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n   在 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n   在 System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\n   在 MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\n   在 MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\n   在 System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame)\n   在 System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)\n   在 Knx.Ets.ViewModel.Extensions.WindowExtensions.DoEvents()\n   在 Knx.Ets.ViewModel.Extensions.WindowExtensions.ShowModal(System.Windows.FrameworkElement, Boolean, System.String, Knx.Ets.ViewModel.Enumerations.WindowType)\n   在 Knx.Ets.ViewModel.Extensions.WindowExtensions.ShowModal(Knx.Ets.ViewModel.Interfaces.IClosable, System.String, Boolean, Knx.Ets.ViewModel.Enumerations.WindowType)\n   在 Knx.Ets.UserControls.Workplace.AddDialogService.ShowDialog(System.Object, System.Object, Knx.Ets.ObjectModel.Project.Project)\n   在 Knx.Ets.ViewModel.Commands.AddCommand.AddWithDialog(System.Object, System.Object)\n   在 Knx.Ets.ViewModel.Commands.AddCommand.Execute(System.Object, System.Object, Boolean)\n   在 Knx.Ets.ViewModel.Commands.CommandExecutorProvider.OnAdd(System.Object, System.Object, Boolean)\n   在 Knx.Ets.ViewModel.Application.Workspace.ContentPanelViewModel.AddItemExecuted(System.Object)\n   在 Knx.Ets.ViewModel.Application.Workspace.ContentPanelViewModel.<InitializeCommands>b__263_0()\n   在 System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean)\n   在 System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(System.Object, System.Object[], System.Object[])\n   在 System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\n   在 GalaSoft.MvvmLight.Helpers.WeakAction.Execute()\n   在 GalaSoft.MvvmLight.CommandWpf.RelayCommand.Execute(System.Object)\n   在 MS.Internal.Commands.CommandHelpers.CriticalExecuteCommandSource(System.Windows.Input.ICommandSource, Boolean)\n   在 System.Windows.Controls.Primitives.ButtonBase.OnClick()\n   在 System.Windows.Controls.Button.OnClick()\n   在 System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n   在 System.Windows.UIElement.OnMouseLeftButtonUpThunk(System.Object, System.Windows.Input.MouseButtonEventArgs)\n   在 System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate, System.Object)\n   在 System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate, System.Object)\n   在 System.Windows.RoutedEventHandlerInfo.InvokeHandler(System.Object, System.Windows.RoutedEventArgs)\n   在 System.Windows.EventRoute.InvokeHandlersImpl(System.Object, System.Windows.RoutedEventArgs, Boolean)\n   在 System.Windows.UIElement.ReRaiseEventAs(System.Windows.DependencyObject, System.Windows.RoutedEventArgs, System.Windows.RoutedEvent)\n   在 System.Windows.UIElement.OnMouseUpThunk(System.Object, System.Windows.Input.MouseButtonEventArgs)\n   在 System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate, System.Object)\n   在 System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate, System.Object)\n   在 System.Windows.RoutedEventHandlerInfo.InvokeHandler(System.Object, System.Windows.RoutedEventArgs)\n   在 System.Windows.EventRoute.InvokeHandlersImpl(System.Object, System.Windows.RoutedEventArgs, Boolean)\n   在 System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject, System.Windows.RoutedEventArgs)\n   在 System.Windows.UIElement.RaiseTrustedEvent(System.Windows.RoutedEventArgs)\n   在 System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs, Boolean)\n   在 System.Windows.Input.InputManager.ProcessStagingArea()\n   在 System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)\n   在 System.Windows.Input.InputProviderSite.ReportInput(System.Windows.Input.InputReport)\n   在 System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr, System.Windows.Input.InputMode, Int32, System.Windows.Input.RawMouseActions, Int32, Int32, Int32)\n   在 System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr, MS.Internal.Interop.WindowMessage, IntPtr, IntPtr, Boolean ByRef)\n   在 System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n   在 MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n   在 MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\n   在 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n   在 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n   在 System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\n   在 MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\n   在 MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\n   在 System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame)\n   在 System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)\n   在 System.Windows.Application.RunDispatcher(System.Object)\n   在 System.Windows.Application.RunInternal(System.Windows.Window)\n   在 System.Windows.Application.Run(System.Windows.Window)\n   在 System.Windows.Application.Run()\n   在 Knx.Ets.Ets5.App.Main()\n\n> 出错应用程序名称： ETS5N.exe，版本： 5.7.743.36956，时间戳： 0x5cb7245d\n出错模块名称： WindowsBase.ni.dll， 版本： 4.8.9277.0，时间戳： 0x66d144f2\n异常代码： 0x80131623\n错误偏移： 0x0029ec98\n出错进程 ID： 0x3508\n出错应用程序开始时间： 0x1DB38FBCB1DB6DF\nFaulting 应用程序路径： C:\\Program Files (x86)\\ETS5\\ETS5N.exe\nFaulting 模块路径： C:\\Windows\\assembly\\NativeImages_v4.0.30319_32\\WindowsBase\\c8f2deadff83fd67e7b6cf2d16d9beae\\WindowsBase.ni.dll\nReport ID： bf69b6ce-a5e8-4fff-b845-61909a1c150d\nFaulting 包全名： \nFaulting 程序包相对应用程序 ID：  个","Url":"https://github.com/dotnet/wpf/issues/10083","RelatedDescription":"Open issue \"TextBox SelectAll Input Chinese crash\" (#10083)"},{"Id":"2665151758","IsPullRequest":true,"CreatedAt":"2024-11-17T02:08:03","Actor":"lindexi","Number":"10082","RawContent":null,"Title":"Keep the Button HorizontalAlignment be Center in Fluent style","State":"open","Body":"Fixes #10077\r\n\r\n\r\n\r\n## Description\r\n\r\nIn the Fluent style, ensure that the `HorizontalAlignment` property of buttons is set to `Center`. This helps maintain consistent behavior with previous styles.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nMaintaining consistent behavior allows developers to more easily apply the Fluent theme without worrying about layout changes due to style switches.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nSee https://github.com/dotnet/wpf/pull/8870\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nJust CI and Snoop\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow. This potentially breaking scenarios where buttons relying on the Fluent style are left-aligned. Therefore, I believe the sooner this change is merged, the lower the risk will be, as fewer developers will depend on buttons being left-aligned.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10082)","Url":"https://github.com/dotnet/wpf/pull/10082","RelatedDescription":"Open PR \"Keep the Button HorizontalAlignment be Center in Fluent style\" (#10082)"},{"Id":"2665044034","IsPullRequest":false,"CreatedAt":"2024-11-16T22:43:53","Actor":"JeremyKuhne","Number":"10081","RawContent":null,"Title":"Improving WPF (and WinForms) engineering agility","State":"open","Body":"WPF and WinForms are the two components of https://github.com/dotnet/windowsdesktop. The two projects have a long history that has intertwined in various ways over the past 20+ years. Leaning in together as the Win32 managed frameworks we can leverage each-other's efforts, reduce duplication, and make it easier for contributions to accrue to both platforms.\n\nIn .NET 10 we plan to start sharing code between the two platforms. WPF already depends on the WinForms build. As such, the shared code will come from the WinForms repo. WinForms introduced a lower-level System.Private.Windows.Core assembly in .NET 9 to facilitate the two packages that ship from WinForms: WinForms itself, and System.Drawing.Common. This no-dependency assembly is the one we'll be sharing throughout both WPF and WinForms.\n\nThe better aligned the two repos are, the easier it will be. There are a few key tasks that we want to tackle in the short term to move things forward here in a significant way:\n\n- [ ] Align code styles and code analysis (#10017)\n- [ ] Enable xUnit unit testing in WPF for all projects (#10023)\n- [ ] Consume shared testing utilities (System.Private.Windows.Core.TestUtilities)\n- [ ] Consume System.Private.Windows.Core (#10047)\n- [ ] Start using CsWin32 (#10047)\n- [ ] Use wildcard includes for code files (see System.Windows.Primitives where this is currently done)\n- [ ] Consider where to locate shared docs (probably WindowsDesktop)\n\nThis is an initial brain dump, I'll be adding more here.","Url":"https://github.com/dotnet/wpf/issues/10081","RelatedDescription":"Open issue \"Improving WPF (and WinForms) engineering agility\" (#10081)"},{"Id":"2664983752","IsPullRequest":true,"CreatedAt":"2024-11-16T21:46:17","Actor":"JeremyKuhne","Number":"10080","RawContent":null,"Title":"Align .editorconfig with WinForms","State":"open","Body":"This effectively copies the `.editorconfig` from WinForms to align the baseline.\r\n\r\nAs there are many deviations from the rules in the sources, added a temporary `.editorconfig` in the product src directory. This will need to have rules pulled bit by bit as the projects are fixed. Most of the rules are pretty easy to fix but would require some pretty massive code fix changes. They are reasonably safe to do, but they will create disruption for existing PRs as they'll need to rebase.\r\n\r\nCreated another `.editorconfig` specifically for the cycle breaker projects. Fixed the headers in the cycle breakers, but otherwise mostly left them alone.\r\n\r\nTest projects were updated to pass without needing any overrides. As a general rule, we try to not disable rules for test projects as we want to keep good habits over the entire codebase.\r\n\r\nThe sooner the automated fixes are done, the better. It is better to have this done before Preview 1 and it is better to aggressively push to do them. Don't wait for full test passes in-between changes, do a full pass once they are committed. The recommendation:\r\n\r\n1. For each rule where there is an automated fix, run the fix and create a PR that says that you ran the code fix\r\n2. Sanity review and merge each as quickly as possible (check off, merge as soon as green)\r\n3. Run a full test pass when finished\r\n\r\nClearing the automated fixes should be able to be done in a couple weeks at most. Once the rules are turned on it will significantly improve the contribution process. Less cleanup to review, less iteration over rules, etc.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10080)","Url":"https://github.com/dotnet/wpf/pull/10080","RelatedDescription":"Open PR \"Align .editorconfig with WinForms\" (#10080)"},{"Id":"2663536977","IsPullRequest":true,"CreatedAt":"2024-11-16T00:15:37","Actor":"JeremyKuhne","Number":"10078","RawContent":null,"Title":"Change primitives to build platform specific","State":"open","Body":"If just building AnyCPU only the x86 transport package gets the runtime assembly. Rather than work around that, build explicitly for each platform so WindowsDesktop can get what it needs.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10078)","Url":"https://github.com/dotnet/wpf/pull/10078","RelatedDescription":"Open PR \"Change primitives to build platform specific\" (#10078)"},{"Id":"2663017786","IsPullRequest":false,"CreatedAt":"2024-11-15T20:14:23","Actor":"adegeo","Number":"10077","RawContent":null,"Title":"Setting ThemeMode on a window causes a button to be positioned differently","State":"open","Body":"### Description\n\nSetting `ThemeMode` on a window causes a button to be completely repositioned.\n\n### Reproduction Steps\n\n1. Brand new WPF project.\n2. Add a button to the grid and set the width/height to something small.\n3. Set the `ThemeMode` property on the window to anything other than `None`.\n\n```xaml\n<Window x:Class=\"Names.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:Names\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"300\" Width=\"400\" ThemeMode=\"System\">\n    <Grid>\n        <Button Width=\"200\" Height=\"30\" />\n    </Grid>\n</Window>\n```\n\nBefore `ThemeMode` is set:\n\n![Image](https://github.com/user-attachments/assets/01af1e09-54e8-4e1c-b3f8-a8722a2d2f39)\n\nAfter `ThemeMode` is set:\n\n![Image](https://github.com/user-attachments/assets/5978b7c8-8e09-40d9-88a3-9e7c116f5186)\n\n\n\n### Expected behavior\n\nDon't alter the layout.\n\n### Actual behavior\n\nLayout is altered.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n- Visual Studio 2022 17.12 GA\n- .NET 9 GA\n\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10077","RelatedDescription":"Open issue \"Setting ThemeMode on a window causes a button to be positioned differently\" (#10077)"},{"Id":"2661994354","IsPullRequest":false,"CreatedAt":"2024-11-15T13:34:04","Actor":"antikmozib","Number":"10076","RawContent":null,"Title":"ListView missing in .NET 9 Fluent theme","State":"open","Body":"### Description\n\n![Image](https://github.com/user-attachments/assets/a3c18e78-f6d0-43d1-944a-3aef14a9370b)\nThe above screenshots represent the same application and code except that the first one is built with .NET 9 using Fluent theme and the second one is built with .NET 8.\n\nI am wondering if I am missing something here or if it's a bug.\n\nThank you\n\n---\n\nMainWindow.xaml\n\n```\n<Window x:Class=\"WpfApp1.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WpfApp1\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\"\n        Height=\"200\"\n        Width=\"300\">\n    <Grid>\n        <ListView ItemsSource=\"{Binding Cars}\">\n            <ListView.View>\n                <GridView>\n                    <GridViewColumn Header=\"Make\"\n                                    DisplayMemberBinding=\"{Binding Path=Make}\" />\n                    <GridViewColumn Header=\"Model\"\n                                    DisplayMemberBinding=\"{Binding Path=Model}\" />\n                </GridView>\n            </ListView.View>\n        </ListView>\n    </Grid>\n</Window>\n```\n\nMainWindow.xaml.cs\n```\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n\n        DataContext = new MainViewModel();\n    }\n}\n```\n\n\nMainViewModel.cs\n\n```\npublic class MainViewModel\n{\n    public class Car\n    {\n        public string? Make { get; set; }\n\n        public string? Model { get; set; }\n    }\n\n    public ObservableCollection<Car> Cars { get; set; } = [];\n\n    public MainViewModel()\n    {\n        Cars.Add(new Car() { Make = \"Toyota\", Model = \"Corolla\" });\n        Cars.Add(new Car() { Make = \"Honda\", Model = \"Civic\" });\n    }\n}\n```\n\n\n\n### Reproduction Steps\n\nCreate a WPF project with .NET 9 + Fluent theme and add a `ListView` with some column headers.\n\n### Expected behavior\n\nListView in Fluent style.\n\n### Actual behavior\n\nNo ListView.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET 9.0.100\nVS 2022 17.12\nWindows 11 24H2 x64\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10076","RelatedDescription":"Open issue \"ListView missing in .NET 9 Fluent theme\" (#10076)"},{"Id":"2661504219","IsPullRequest":false,"CreatedAt":"2024-11-15T10:10:43","Actor":"koenigst","Number":"10074","RawContent":null,"Title":"[API Proposal]: Dispose Application in Generated Entry Point","State":"open","Body":"### Background and motivation\n\nIf any disposable fields are present in the application (i.e. `App.xaml.cs`) the default analyzers will suggests implementing `IDisposable` on the application class. The code generator for the entry point creates the application without disposing it at the end. This might confuse developers.\n\nThe fix would be quite simple by just generating a using statement if the application class implements `IDisposable`.\n\nA workaround is possible by creating a custom entry point.\n\n### API Proposal\n\nGenerated output:\n```csharp\n/// <summary>\n/// Application Entry Point.\n/// </summary>\n[System.STAThreadAttribute()]\n[System.Diagnostics.DebuggerNonUserCodeAttribute()]\n[System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"8.0.5.0\")]\npublic static void Main() {\n\tSplashScreen splashScreen = new SplashScreen(\"splash.png\");\n\tsplashScreen.Show(true);\n\tusing (App app = new App())\n\t{\n\t\tapp.InitializeComponent();\n\t\tapp.Run();\n\t}\n}\n```\n\n\n### API Usage\n\n```csharp\npublic partial class App : Application, IDisposable\n{\n    public void Dispose()\n    {\n        // Dispose resources\n    }\n}\n```\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\nApplication classes already implementing `IDisposable` will get an additional call to `Dispose`. This should be a small issue as `Dispose` should be safe to call multiple times.","Url":"https://github.com/dotnet/wpf/issues/10074","RelatedDescription":"Open issue \"[API Proposal]: Dispose Application in Generated Entry Point\" (#10074)"},{"Id":"2660538817","IsPullRequest":true,"CreatedAt":"2024-11-15T02:37:48","Actor":"h3xds1nz","Number":"10073","RawContent":null,"Title":"Fix missing RecognizesAccessKey property on Fluent controls","State":"open","Body":"Fixes #10071\r\n\r\n## Description\r\n\r\nFixes missing `RecognizesAccessKey` property on some Fluent controls that I found to be lacking based on the original issue.\r\n\r\n## Customer Impact\r\n\r\nUsers will get less buggy experience migrating to Fluent Theme.\r\n\r\n## Regression\r\n\r\nKinda, from previous themes.\r\n\r\n## Testing\r\n\r\nLocal build, sample app.\r\n\r\n## Risk\r\n\r\nNone.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10073)","Url":"https://github.com/dotnet/wpf/pull/10073","RelatedDescription":"Open PR \"Fix missing RecognizesAccessKey property on Fluent controls\" (#10073)"},{"Id":"2660427468","IsPullRequest":false,"CreatedAt":"2024-11-15T00:36:25","Actor":"antikmozib","Number":"10071","RawContent":null,"Title":"Incorrect display of Button shortcut access key","State":"open","Body":"### Description\n\n![Image](https://github.com/user-attachments/assets/eeb49823-74ce-47f9-9f4e-1ef6b21b7e55)\n\n```\n<Window x:Class=\"WpfApp1.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WpfApp1\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"200\" Width=\"300\">\n    <Grid>\n        <StackPanel Margin=\"8\">\n            <Button Content=\"_Press Me\" />\n        </StackPanel>\n    </Grid>\n</Window>\n```\n\n\n### Reproduction Steps\n\n1. Create a new WPF project with .NET 9.\n2. Set ThemeMode = \"Light\" in App.xaml.\n3. Add a Button to MainWindow.xaml.\n4. Set Button.Content = \"_Press Me\".\n\n\n### Expected behavior\n\n![Image](https://github.com/user-attachments/assets/3d493ac1-3510-41cf-ae33-0dff148537d7)\n\n\n### Actual behavior\n\n![Image](https://github.com/user-attachments/assets/2cf21847-c742-4ae6-8779-1eca396e4bb9)\n\n\n### Regression?\n\nYes\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET 9.0.100\nVS 2022 17.12\nWindows 11 24H2 x64\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10071","RelatedDescription":"Open issue \"Incorrect display of Button shortcut access key\" (#10071)"},{"Id":"2659030628","IsPullRequest":true,"CreatedAt":"2024-11-14T14:39:45","Actor":"dotnet-maestro[bot]","Number":"10070","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 2bde0aa3-7165-43c9-100b-08dcbc30275f\r\n- **Build**: 20241112.13\r\n- **Date Produced**: November 12, 2024 10:26:47 PM UTC\r\n- **Commit**: 1c7e09a8d9c9c9b15ba574cd6a496553505559de\r\n- **Branch**: refs/heads/release/9.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24509.3 to 9.0.0-beta.24562.13][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.24509.3 to 9.0.0-beta.24562.13][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.24509.3 to 9.0.0-beta.24562.13][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24509.3 to 9.0.0-beta.24562.13][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/05c72bb3c9...1c7e09a8d9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10070)","Url":"https://github.com/dotnet/wpf/pull/10070","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#10070)"},{"Id":"2658823195","IsPullRequest":true,"CreatedAt":"2024-11-14T13:24:56","Actor":"dotnet-maestro[bot]","Number":"10069","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241114.1\r\n- **Date Produced**: November 14, 2024 10:19:48 AM UTC\r\n- **Commit**: c1852b9ac37df9a86630c2f078dbee43f7b186e7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24562.15 to 10.0.0-beta.24564.1][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24562.15 to 10.0.0-beta.24564.1][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24562.15 to 10.0.0-beta.24564.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24562.15 to 10.0.0-beta.24564.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/e882d5925c...c1852b9ac3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10069)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10069","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10069)"},{"Id":"2653302987","IsPullRequest":true,"CreatedAt":"2024-11-14T05:26:30","Actor":"vseanreesermsft","Number":"10060","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10060)","Url":"https://github.com/dotnet/wpf/pull/10060","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#10060)"},{"Id":"2653275748","IsPullRequest":true,"CreatedAt":"2024-11-14T05:21:23","Actor":"vseanreesermsft","Number":"10058","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10058)","Url":"https://github.com/dotnet/wpf/pull/10058","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#10058)"},{"Id":"2653294514","IsPullRequest":true,"CreatedAt":"2024-11-14T05:20:45","Actor":"vseanreesermsft","Number":"10059","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10059)","Url":"https://github.com/dotnet/wpf/pull/10059","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#10059)"},{"Id":"2654433652","IsPullRequest":true,"CreatedAt":"2024-11-14T04:41:52","Actor":"github-actions[bot]","Number":"10065","RawContent":null,"Title":"[release/6.0] Fix: Missing 'L' encoding-prefix for character literal","State":"closed","Body":"Backport of #10063 to release/6.0\n/cc @harshit7962\n## Customer Impact\n## Testing\n## Risk\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10065)","Url":"https://github.com/dotnet/wpf/pull/10065","RelatedDescription":"Closed or merged PR \"[release/6.0] Fix: Missing 'L' encoding-prefix for character literal\" (#10065)"},{"Id":"2654342836","IsPullRequest":true,"CreatedAt":"2024-11-14T04:41:12","Actor":"github-actions[bot]","Number":"10064","RawContent":null,"Title":"[release/8.0] Fix: Missing 'L' encoding-prefix for character literal","State":"closed","Body":"Backport of #10063 to release/8.0\n/cc @harshit7962\n## Customer Impact\n## Testing\n## Risk\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10064)","Url":"https://github.com/dotnet/wpf/pull/10064","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix: Missing 'L' encoding-prefix for character literal\" (#10064)"},{"Id":"2656346166","IsPullRequest":false,"CreatedAt":"2024-11-13T18:02:45","Actor":"candritzky","Number":"10068","RawContent":null,"Title":".NET 9 SDK WPF build broken with AssemblyName in Directory.Build.props","State":"open","Body":"### Description\n\nWe have a pretty complex solution with a central `Directory.Build.props` file.\nThis `Directory.Build.props` file contains - among other stuff - a `RootNamespace` property that sets a default root namespace according to our conventions.\n\nSomething similar to this:\n\n```\n  <PropertyGroup>\n    <RootNamespace>MyCompanyName.MyProductName.$(MSBuildProjectName)</RootNamespace>\n    <AssemblyName>$(RootNamespace)</AssemblyName>\n  </PropertyGroup>\n```\n\nThe goal of this is that our `.csproj` files have short names without a `MyCompanyName.MyProductName.` prefix, but the namespaces and generated assemblies should have this prefix.\n\nThis worked since years up to .NET SDK 8.0.403. But it's broken since 2024-11-13 when Visual Studio 17.12 (which brings .NET SDK 9.0.100) was installed. It breaks WPF builds if the `Directory.Build.props` file sets a `RootNamespace` and/or a custom `AssemblyName` MSBuild property. It works if the property is moved to the WPF project's `.csproj` file. But it really needs to be moved, i.e. removed from the central `Directory.Build.props` file.\n\nSomething seems to be broken in the WPF XAML compile process.\n\nAs a workaround, I would have to comment out the `<AssemblyName>` property in `Directory.Build.props`, but this would break (or at least change) the output of all our other projects.\n\n### Reproduction Steps\n\nPlease see that attached ZIP file for a minimal repro.\nUncomment the `<AssemblyName>` tag in `Directory.Build.props` and the (clean) build will fail.\n\n[MyWpfApp.zip](https://github.com/user-attachments/files/17737199/MyWpfApp.zip)\n\n\n### Expected behavior\n\nWPF apps should build without errors in .NET SDK 9 as they did in .NET SDK 8.\n\n### Actual behavior\n\nBuilding with .NET SDK 9 is broken if there is a `Directory.Build.props` file with a custom `<AssemblyName>` property.\n\n### Regression?\n\nYes, it worked up to .NET SDK 8.0.403. Broken since 9.0.100.\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10068","RelatedDescription":"Open issue \".NET 9 SDK WPF build broken with AssemblyName in Directory.Build.props\" (#10068)"},{"Id":"2655986605","IsPullRequest":false,"CreatedAt":"2024-11-13T16:00:30","Actor":"MNDIA","Number":"10067","RawContent":null,"Title":"In the WPF project with a SplashScreen, the first MessageBox.Show in the App's OnStartup method always fails","State":"open","Body":"### Description\n\nIn the WPF project with a SplashScreen, the first MessageBox.Show in the App's OnStartup method always fails (the display disappears for 0.3 seconds or so and returns No, which does not block the thread). \nNo matter how long it sleeps before that, It always fails the first time.\n```C#\npublic partial class App\n{\n    private void OnStartup(object sender, StartupEventArgs e)\n    {\n        System.Threading.Thread.Sleep(15000); // No matter how long or 0, The SplashScreen stays displayed when sleeping\n        //At this point the startup image starts to fade and disappear\n        var result = System.Windows.MessageBox.Show(\"The first use always automatically disappears and returns No\");\n        Debug.WriteLine($\"The first use always returns no test: {result}\");\n        var result2 = System.Windows.MessageBox.Show(\"Subsequent normal use test, click OK to close\");\n        Debug.WriteLine($\"Subsequent normal use test: {result2}\");\n        var result3 = System.Windows.MessageBox.Show(\"Subsequent normal use test, click OK to close\");\n        Debug.WriteLine($\"Subsequent normal use test: {result3}\");\n\n        System.Windows.MessageBox.Show(\"Blocking for log replication\");\n    }\n}\n```\ndebugging log:\n```log\n“WpfApp1.exe”(CoreCLR: DefaultDomain): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Private.CoreLib.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Users\\MNDIA\\source\\repos\\WpfApp1\\bin\\Debug\\net8.0-windows\\WpfApp1.dll”。已加载符号。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\PresentationFramework.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\WindowsBase.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\System.Xaml.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“d:\\coder\\vs2022\\common7\\ide\\commonextensions\\microsoft\\hotreload\\Microsoft.Extensions.DotNetDeltaApplier.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.IO.Pipes.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Linq.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Collections.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Console.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Threading.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.InteropServices.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Threading.Overlapped.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Security.AccessControl.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Security.Principal.Windows.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Security.Claims.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.Loader.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“D:\\Coder\\VS2022\\Common7\\IDE\\PrivateAssemblies\\Runtime\\Microsoft.VisualStudio.Debugger.Runtime.NetCoreApp.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\netstandard.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Threading.ThreadPool.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Diagnostics.TraceSource.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Collections.Concurrent.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Text.RegularExpressions.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Memory.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\Microsoft.Win32.Primitives.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\Microsoft.Win32.Registry.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Collections.Specialized.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\zh-Hans\\WindowsBase.resources.dll”。模块已生成，不包含符号。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.ComponentModel.Primitives.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Threading.Thread.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\System.Configuration.ConfigurationManager.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Private.Uri.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Xml.ReaderWriter.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Private.Xml.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Net.WebClient.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Text.Encoding.Extensions.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n单步执行: 正在逐过程执行非用户代码“WpfApp1.App..ctor”\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\System.IO.Packaging.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\PresentationCore.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.10\\DirectWriteForwarder.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.Extensions.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Diagnostics.Debug.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.CompilerServices.VisualC.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“d:\\coder\\vs2022\\common7\\ide\\commonextensions\\microsoft\\xamldiagnostics\\Core\\x64\\Microsoft.VisualStudio.DesignTools.WpfTap.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Diagnostics.Tracing.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Collections.NonGeneric.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Threading.Tasks.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n单步执行: 正在逐过程执行非用户代码“WpfApp1.App.InitializeComponent”\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.ObjectModel.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.ComponentModel.TypeConverter.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.ComponentModel.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.Serialization.Json.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Private.DataContractSerialization.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.Serialization.Xml.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Runtime.Serialization.Primitives.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Resources.ResourceManager.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Reflection.Emit.ILGeneration.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Reflection.Emit.Lightweight.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Reflection.Primitives.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\n线程 '[线程已销毁]' (6096) 已退出，返回值为 0 (0x0)。\n“WpfApp1.exe”(CoreCLR: clrhost): 已加载“C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\8.0.10\\System.Diagnostics.Process.dll”。已跳过加载符号。模块进行了优化，并且调试器选项“仅我的代码”已启用。\nThe first use always returns no test: No\n线程 '[线程已销毁]' (17268) 已退出，返回值为 0 (0x0)。\n线程 '[线程已销毁]' (6004) 已退出，返回值为 0 (0x0)。\n线程 '[线程已销毁]' (11372) 已退出，返回值为 0 (0x0)。\n线程 '[线程已销毁]' (29948) 已退出，返回值为 0 (0x0)。\nSubsequent normal use test: OK\nSubsequent normal use test: OK\n\n```\n\n### Reproduction Steps\n\nNew WPF Project with .NET 8.0 Using OnStartup in App.xaml\n\n### Expected behavior\n\nThe first messagebox should block the threads\n\n### Actual behavior\n\nIn the WPF project with a SplashScreen, the first MessageBox.Show in the App's OnStartup method always fails (the display disappears for 0.3 seconds or so and returns No, which does not block the thread). This does not convey interactive information\n\n### Regression?\n\n.NET CORE3.1 does not have a SplashScreen.\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10067","RelatedDescription":"Open issue \"In the WPF project with a SplashScreen, the first MessageBox.Show in the App's OnStartup method always fails\" (#10067)"},{"Id":"2655480217","IsPullRequest":true,"CreatedAt":"2024-11-13T16:00:28","Actor":"dotnet-maestro[bot]","Number":"10066","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241112.15\r\n- **Date Produced**: November 13, 2024 2:22:29 AM UTC\r\n- **Commit**: e882d5925ca55013d5810ac51e36574a65c5da84\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24561.1 to 10.0.0-beta.24562.15][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24561.1 to 10.0.0-beta.24562.15][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24561.1 to 10.0.0-beta.24562.15][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24561.1 to 10.0.0-beta.24562.15][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/32b8acf5b6...e882d5925c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10066)","Url":"https://github.com/dotnet/wpf/pull/10066","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10066)"},{"Id":"2654260865","IsPullRequest":true,"CreatedAt":"2024-11-13T06:14:25","Actor":"harshit7962","Number":"10063","RawContent":null,"Title":"Fix: Missing 'L' encoding-prefix for character literal","State":"closed","Body":"Fixes the above mentioned build error in `PrintSystemPathResolver.cpp`\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10063)","Url":"https://github.com/dotnet/wpf/pull/10063","RelatedDescription":"Closed or merged PR \"Fix: Missing 'L' encoding-prefix for character literal\" (#10063)"},{"Id":"2652170546","IsPullRequest":true,"CreatedAt":"2024-11-13T05:18:36","Actor":"dotnet-maestro[bot]","Number":"10057","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241111.1\r\n- **Date Produced**: November 11, 2024 9:05:13 PM UTC\r\n- **Commit**: 32b8acf5b6f79e78a7cc5f7b7c619f68ff0c97ad\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24560.1 to 10.0.0-beta.24561.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24560.1 to 10.0.0-beta.24561.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24560.1 to 10.0.0-beta.24561.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24560.1 to 10.0.0-beta.24561.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/232061b49a...32b8acf5b6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10057)","Url":"https://github.com/dotnet/wpf/pull/10057","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10057)"},{"Id":"2653985652","IsPullRequest":true,"CreatedAt":"2024-11-13T03:00:20","Actor":"dotnet-maestro[bot]","Number":"10062","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241116.1\r\n- **Date Produced**: November 16, 2024 2:36:41 PM UTC\r\n- **Commit**: 98c761f4d9863f99cdb48ac9e87feef01d5c595e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24566.1][9]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24566.1][9]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24566.1][9]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3][10]\r\n\r\n[9]: https://github.com/dotnet/winforms/compare/fae358b666...98c761f4d9\r\n[10]: https://github.com/dotnet/runtime/compare/5db0ce0fa2...55eee32465\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10062)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24560.1 to 10.0.0-alpha.1.24565.3 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10062","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10062)"},{"Id":"2653726661","IsPullRequest":true,"CreatedAt":"2024-11-13T00:21:10","Actor":"ThomasGoulet73","Number":"10061","RawContent":null,"Title":"Cleanup: Use named arguments in System.Xaml","State":"open","Body":"Contributes to dotnet/wpf#10018\r\n\r\n## Description\r\nI replaced comments specifying an argument name with named arguments, which were introduced in C# 7. This improves readability and maintainability.\r\n\r\n**Note: The compiled IL is identical.**\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + validated IL.\r\n\r\n## Risk\r\nLow to none.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10061)","Url":"https://github.com/dotnet/wpf/pull/10061","RelatedDescription":"Open PR \"Cleanup: Use named arguments in System.Xaml\" (#10061)"},{"Id":"2649327243","IsPullRequest":true,"CreatedAt":"2024-11-12T11:21:50","Actor":"dotnet-maestro[bot]","Number":"10052","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241110.1\r\n- **Date Produced**: November 10, 2024 11:18:24 AM UTC\r\n- **Commit**: 232061b49ae2157efbb83acde9acae79ef3d6d40\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24558.2 to 10.0.0-beta.24560.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24558.2 to 10.0.0-beta.24560.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24558.2 to 10.0.0-beta.24560.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24558.2 to 10.0.0-beta.24560.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/74ee04447a...232061b49a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10052)","Url":"https://github.com/dotnet/wpf/pull/10052","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10052)"},{"Id":"2651021319","IsPullRequest":true,"CreatedAt":"2024-11-12T05:12:13","Actor":"hiteshwpfmsft","Number":"10056","RawContent":null,"Title":"fixing build error for PrintSystemPathResolver","State":"closed","Body":"## Description\r\n\r\nWe recently encountered the following build error in WPF:\r\n\r\nC:\\Users\\X\\source\\repos\\wpf\\src\\Microsoft.DotNet.Wpf\\src\\System.Printing\\CPP\\src\\PrintSystemPathResolver.cpp(308,50): error C5307: 'int System::String::IndexOf(wchar_t,int)': argument (1) converted from 'char' to 'wchar_t'. Missing 'L' encoding-prefix for character literal? [C:\\Users\\ X\\source\\repos\\wpf\\src\\Microsoft.DotNet.Wpf\\src\\System.Printing\\System.Printing.vcxproj]\r\n\r\n**Cause**\r\nThe error suggests that the IndexOf method expects a wchar_t type for the character literal, but a char is currently being passed. This is due to recent changes in the IndexOf method for System::String or updates in compiler behavior.\r\n\r\n**Fix**\r\nThis PR addresses the issue by converting the character to a wide character using the L prefix, ensuring compatibility with the expected wchar_t type.\r\n\r\n## Testing\r\n\r\nBuilt locally\r\n\r\n## Risk\r\n\r\nLow, doesn't introduce any behavior change\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10056)","Url":"https://github.com/dotnet/wpf/pull/10056","RelatedDescription":"Closed or merged PR \"fixing build error for PrintSystemPathResolver\" (#10056)"},{"Id":"2650979166","IsPullRequest":true,"CreatedAt":"2024-11-12T04:49:18","Actor":"Kuldeep-MS","Number":"10055","RawContent":null,"Title":"Modifying default reviewers ","State":"closed","Body":"**Change Description** Modifying default reviewers \n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10055)","Url":"https://github.com/dotnet/wpf/pull/10055","RelatedDescription":"Closed or merged PR \"Modifying default reviewers \" (#10055)"},{"Id":"2650938738","IsPullRequest":false,"CreatedAt":"2024-11-12T03:49:01","Actor":"Zagrthos","Number":"10054","RawContent":null,"Title":"Control with Win11 theming falls back to \"old\" theming when applying a style","State":"open","Body":"### Description\n\nWhen applying a custom style to a control which is themed via the Windows 11 MergedDictionary it falls back to the old theming.\n\n### Reproduction Steps\n\nCreate a new WPF Window and add a TabControl with TabItems to it. Then apply the following style to the window:\n```\n<Window.Resources>\n    <Style TargetType=\"TabItem\">\n        <Setter Property=\"FontWeight\" Value=\"Normal\"/>\n        <Style.Triggers>\n            <Trigger Property=\"IsSelected\" Value=\"True\">\n                <Setter Property=\"FontWeight\" Value=\"Bold\"/>\n            </Trigger>\n        </Style.Triggers>\n    </Style>\n</Window.Resources>\n```\n\n### Expected behavior\n\nThe style is just added without removing the theming.\n\n### Actual behavior\n\nFallback to old theming\n![Image](https://github.com/user-attachments/assets/3c9a0d80-5e38-42c8-8df2-62274259b11e)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n* .NET Version: 9.0.100-rc.2.24474.11\n* OS: Windows 11 22635.4445\n* Arch: x64\n\n### Other information\n\nMaybe I am too new to WPF and that's expected, because it's wanted by design, but for me right now it's appears like a (possible) bug.","Url":"https://github.com/dotnet/wpf/issues/10054","RelatedDescription":"Open issue \"Control with Win11 theming falls back to \"old\" theming when applying a style\" (#10054)"},{"Id":"2650056258","IsPullRequest":false,"CreatedAt":"2024-11-11T18:23:39","Actor":"JeremyKuhne","Number":"10053","RawContent":null,"Title":"WPF should probably target netx.0-windows","State":"open","Body":"It doesn't target `-windows` currently.\n\nhttps://github.com/dotnet/wpf/pull/10023#discussion_r1837043555\n\n@ViktorHofer ","Url":"https://github.com/dotnet/wpf/issues/10053","RelatedDescription":"Open issue \"WPF should probably target netx.0-windows\" (#10053)"},{"Id":"2649323479","IsPullRequest":true,"CreatedAt":"2024-11-11T13:14:53","Actor":"dipeshmsft","Number":"10051","RawContent":null,"Title":"Add fluent usage documentation","State":"open","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10051)","Url":"https://github.com/dotnet/wpf/pull/10051","RelatedDescription":"Open PR \"Add fluent usage documentation\" (#10051)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-18T03:30:28.2152068Z","RunDurationInMilliseconds":429}