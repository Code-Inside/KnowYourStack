{"Data":{"GitHub":{"Issues":[{"Id":"2991568386","IsPullRequest":false,"CreatedAt":"2025-04-14T13:10:04","Actor":"courbevoie","Number":"10764","RawContent":null,"Title":"DataGrid intercepts CTRL+C KeyGesture even if DataGrid.ClipboardCopyMode is set to DataGridClipboardCopyMode.None","State":"closed","Body":"### Description\n\nI realize, that changing this would probably break _quite a few_ apps, but:\nIs it really the intended behaviour, that a `DataGrid` keeps intercepting the CTRL+C `KeyGesture`, even if its `DataGrid.ClipboardCopyMode` property is set to `DataGridClipboardCopyMode.None` and one of its ancestors in the logical tree has a `CommandBinding` for `ApplicationCommands.Copy` in its `CommandBindings` collection.\n\nOne may verify this behaviour by deriving a class from `DataGrid` and override `DataGrid.OnExecutedCopy` like this:\n```csharp\n    public class CDataGridEx : DataGrid\n    {\n        protected override void OnExecutedCopy(ExecutedRoutedEventArgs args)\n        {\n            Debug.WriteLine(\"Datagrid.OnExecutedCopy\");\n        } \n    }\n\n```\n\n\n### Reproduction Steps\n\nMainWindow.xaml:\n```xaml\n<Window x:Class=\"DataGridTest.MainWindow\" ... >\n    <UIElement.CommandBindings>\n        <CommandBinding Command=\"ApplicationCommands.Copy\" Executed=\"CommandBinding_Executed\"/>\n    </UIElement.CommandBindings>             \n\n    <DataGrid\n        ...\n        ClipboardCopyMode=\"None\"\n        ...\n    />\n</Window>\n```\n\nMainWindow.xaml.cs:\n```csharp\nnamespace DataGridTest\n{\n    public partial class MainWindow : Window\n    {\n        ...\n        private void CommandBinding_Executed(object sender, ExecutedRoutedEventArgs e)\n        {\n            // not called\n        }\n        ...\n    }\n}\n```\n\n### Expected behavior\n\n`Ctrl+C` should not be intercepted by a `DataGrid` if its `DataGrid.ClipboardCopyMode` property is set `DataGridClipboardCopyMode.None`.\n\n### Actual behavior\n\nA `DataGrid` control intercepts the CTRL+C `KeyGesture`, even if its `DataGrid.ClipboardCopyMode` property is set to `DataGridClipboardCopyMode.None` and one of its ancestors in the logical tree has a `CommandBinding` for `ApplicationCommands.Copy` in its `CommandBindings` collection.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET version: 9\nOS: Windows 11\nArchitecture: x64\n\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10764","RelatedDescription":"Closed issue \"DataGrid intercepts CTRL+C KeyGesture even if DataGrid.ClipboardCopyMode is set to DataGridClipboardCopyMode.None\" (#10764)"},{"Id":"2992821376","IsPullRequest":false,"CreatedAt":"2025-04-14T11:48:25","Actor":"kirill-zakharov-altium","Number":"10767","RawContent":null,"Title":"ComboBox resets selected item to the first one on Esc key press when the drop-down is closed","State":"open","Body":"### Description\n\nIf you focus a ComboBox and press the Esc key, it resets the selected item to the first one. It happens when the ComboBox's drop-down is closed. In the .NET Framework 4.8, it didn't happen.\n\nSee the video:\nhttps://github.com/user-attachments/assets/5db212dd-2d89-4fe1-b00d-07d23ace75f0\n\nHere are the repro projects:\n[ComboBoxTest.zip](https://github.com/user-attachments/files/19735871/ComboBoxTest.zip)\n\n### Reproduction Steps\n\n- Create a new WPF project in .NET6,8,9 (the bug is reproducible in all 3 versions)\n- Add the following code into the MainWindow.xaml into the root Window tag:\n```\n    <ComboBox\n        Width=\"100\"\n        HorizontalAlignment=\"Center\"\n        VerticalAlignment=\"Center\"\n        SelectedIndex=\"0\">\n        <ComboBox.Items>\n            <ComboBoxItem>1</ComboBoxItem>\n            <ComboBoxItem>2</ComboBoxItem>\n            <ComboBoxItem>3</ComboBoxItem>\n        </ComboBox.Items>\n    </ComboBox>\n```\n- Run the project, click on the combo-box, click on the 3rd item in the drop-down, and then **press the Esc key** (when the drop-down is closed).\n\n### Expected behavior\n\nThe selected item must not be changed on the Esc key press and must remain \"3\". That's how it worked in .NET Framework 4.8.\n\n### Actual behavior\n\nThe selected item is reset to \"1\" after the Esc key press. That's very counterintuitive.\n\n### Regression?\n\nIt's a regression to the .NET Framework 4.8 version.\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10767","RelatedDescription":"Open issue \"ComboBox resets selected item to the first one on Esc key press when the drop-down is closed\" (#10767)"},{"Id":"2982377240","IsPullRequest":false,"CreatedAt":"2025-04-14T11:27:12","Actor":"dotnet-maestro-bot","Number":"10745","RawContent":null,"Title":"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch","State":"closed","Body":"Branch [release/9.0](https://github.com/dotnet/wpf/commits/release/9.0/) in `dotnet/wpf` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-wpf?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/wpf/issues/10745","RelatedDescription":"Closed issue \"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch\" (#10745)"},{"Id":"2992239728","IsPullRequest":true,"CreatedAt":"2025-04-14T10:47:47","Actor":"dipeshmsft","Number":"10766","RawContent":null,"Title":"Added missing TextControl brushes","State":"closed","Body":"## Description\r\nAdded missing TextControl brushes that are used in all the text based controls : TextBox, PasswordBox, DatePicker, etc.\r\n\r\n## Customer Impact\r\nCorrect resources for Fluent styles. Reduces the amount of changes in other style fixing PRs for text controls.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal app testing\r\n\r\n## Risk\r\nMinimal\r\n=\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10766)","Url":"https://github.com/dotnet/wpf/pull/10766","RelatedDescription":"Closed or merged PR \"Added missing TextControl brushes\" (#10766)"},{"Id":"2992129015","IsPullRequest":true,"CreatedAt":"2025-04-14T07:21:43","Actor":"dipeshmsft","Number":"10765","RawContent":null,"Title":"Added Fluent theme resource dictionary tests","State":"open","Body":"## Description\r\nReference #8552 \r\nThis PR adds tests for Fluent theme resource dictionary -\r\n1. Loading Fluent theme resource dictionary : Fluent.Light.xaml, Fluent.Dark.xaml and Fluent.HC.xaml\r\n2. Match the key names in the above dictionaries. \r\n    1. Compares the count of the resources in each dictionary.\r\n    2. Compares the name of the resources in each dictionary.\r\n\r\n## Customer Impact\r\nThis PR will avoid basic failure use cases like loading the dictionary and resource reference exception when theme changes.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nThis PR adds test\r\n\r\n## Risk\r\nNone\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10765)","Url":"https://github.com/dotnet/wpf/pull/10765","RelatedDescription":"Open PR \"Added Fluent theme resource dictionary tests\" (#10765)"},{"Id":"2987935114","IsPullRequest":false,"CreatedAt":"2025-04-14T05:27:07","Actor":"batzen","Number":"10755","RawContent":null,"Title":"Usage of FluentAssertions","State":"closed","Body":"Hi there,\n\ni just noticed that the tests are using FluentAssertions and was wondering how this will licensed.\nDoes WPF count as a non commercial project according to the rules from https://github.com/fluentassertions/fluentassertions/blob/main/LICENSE?\nJust want to make sure we don't violate the changed license starting with version 8 of FluentAssertions.","Url":"https://github.com/dotnet/wpf/issues/10755","RelatedDescription":"Closed issue \"Usage of FluentAssertions\" (#10755)"},{"Id":"2990712470","IsPullRequest":true,"CreatedAt":"2025-04-14T05:27:06","Actor":"ThomasGoulet73","Number":"10761","RawContent":null,"Title":"Replace FluentAssertions with AwesomeAssertions","State":"closed","Body":"Fixes dotnet/wpf#10755\r\n\r\n## Description\r\nReplace FluentAssertions with AwesomeAssertions. AwesomeAssertions is a fork of FluentAssertions before FluentAssertions \r\n changed its license (See fluentassertions/fluentassertions#2943).\r\n\r\nThis change is similar to what has been done in Runtime (dotnet/runtime#113425) and WinForms (dotnet/winforms#13108).\r\n\r\n## Customer Impact\r\nNone, tests only.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nRan tests locally.\r\n\r\n## Risk\r\nNone, tests only.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10761)","Url":"https://github.com/dotnet/wpf/pull/10761","RelatedDescription":"Closed or merged PR \"Replace FluentAssertions with AwesomeAssertions\" (#10761)"},{"Id":"2989517817","IsPullRequest":true,"CreatedAt":"2025-04-14T05:19:39","Actor":"dotnet-maestro[bot]","Number":"10758","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250411.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2685556)\n- **Date Produced**: April 12, 2025 6:04:57 AM UTC\n- **Commit**: [bd91bfb26ce90ac31e950c01dcb2b6e0776453a7](https://github.com/dotnet/winforms/commit/bd91bfb26ce90ac31e950c01dcb2b6e0776453a7)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25210.3 to 10.0.0-preview.4.25211.1][3]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25210.3 to 10.0.0-preview.4.25211.1][3]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25210.3 to 10.0.0-preview.4.25211.1][3]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Management**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Speech**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25209.13 to 10.0.0-preview.4.25211.17][4]\n\n[3]: https://github.com/dotnet/winforms/compare/1d6143481c...bd91bfb26c\n[4]: https://github.com/dotnet/runtime/compare/00b00500cc...850b0bab65\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10758)\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10758","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10758)"},{"Id":"2987798744","IsPullRequest":true,"CreatedAt":"2025-04-14T04:56:47","Actor":"harshit7962","Number":"10754","RawContent":null,"Title":"Add DataObject SetData tests","State":"closed","Body":"## Description\r\nThe changes here aims at adding tests around `SetData` method of DataObject class. This is to validate that the contracts are not breached and avoid minor bugs after the merger of #10544. The changes also references to a task item mentioned in https://github.com/dotnet/wpf/issues/10736.\r\n\r\nThe following tests are added in the following changes\r\n**Around [SetData(Object)](https://learn.microsoft.com/en-us/dotnet/api/system.windows.dataobject.setdata?view=windowsdesktop-9.0#system-windows-dataobject-setdata(system-object))**\r\n- Different types returns expected values.\r\n- Same type, returns later value.\r\n\r\n**Around [SetData(String, Object)](https://learn.microsoft.com/en-us/dotnet/api/system.windows.dataobject.setdata?view=windowsdesktop-9.0#system-windows-dataobject-setdata(system-string-system-object))**\r\n- Base Init test\r\n- ArgumentNullException while using Null data\r\n- ArgumentException while using empty string\r\n- Same key added twice, returns latest addition\r\n- Different keys can have data separately\r\n\r\n**Around [SetData(Type, Object)](https://learn.microsoft.com/en-us/dotnet/api/system.windows.dataobject.setdata?view=windowsdesktop-9.0#system-windows-dataobject-setdata(system-type-system-object))**\r\n- Base Init test\r\n- ArgumentNullException while using Null key\r\n- ArgumentNullException while using Null data\r\n- Same type added twice, returns latest data\r\n- Different types can have data separately\r\n\r\n**Around [SetData(String, Data, Boolean)](https://learn.microsoft.com/en-us/dotnet/api/system.windows.dataobject.setdata?view=windowsdesktop-9.0#system-windows-dataobject-setdata(system-string-system-object-system-boolean))**\r\n- Base Init test\r\n- ArgumentNullException while using Null key\r\n- ArgumentNullException while using Null data\r\n- ArgumentException while using empty string\r\n\r\n## Regression\r\n_None_\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nBuild pass, the tests are all green\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\r\ncc: @JeremyKuhne \r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10754)","Url":"https://github.com/dotnet/wpf/pull/10754","RelatedDescription":"Closed or merged PR \"Add DataObject SetData tests\" (#10754)"},{"Id":"2990938251","IsPullRequest":false,"CreatedAt":"2025-04-13T02:18:03","Actor":"baikaishiuc","Number":"10763","RawContent":null,"Title":"How to build Microsoft.Windowsdesktop.App package","State":"open","Body":"Hi, I arranged the directory structure like this:\n\n```\n${rootdir}\n|------> wpf\n|------> runtime\n|------> windowsdesktop\n```\n\nThen I entered the windowsdesktop subdirectory and ran:\n\n```\ncd windowsdesktop\n.\\build.cmd -pack -c Release\n```\n\nThis generated a package at:\n```\nartifacts\\packages\\Release\\Shipping\\windowsdesktop-runtime-8.0.11-win-x64.zip\n```\n\nHowever, after extracting this ZIP package, I found that the PresentationCore.dll MD5 hash is different from the one in wpf/artifacts.\n\n\nWhere is the library in the windowsdesktop package coming from?\nHow can I pack my custom PresentationCore.dll in  windowsdesktop-runtime-8.0.11-win-x64.zip","Url":"https://github.com/dotnet/wpf/issues/10763","RelatedDescription":"Open issue \"How to build Microsoft.Windowsdesktop.App package\" (#10763)"},{"Id":"2990732994","IsPullRequest":true,"CreatedAt":"2025-04-12T21:40:41","Actor":"ThomasGoulet73","Number":"10762","RawContent":null,"Title":" [StyleCleanUp] Fix MilCodeGen empty lines","State":"open","Body":"## Description\r\nFixes empty lines added by MilCodeGen.\r\n\r\nThis PR also syncs MilCodeGen with the empty line changes from dotnet/wpf#10021.\r\n\r\n## Customer Impact\r\nNone, whitespace changes only.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + ran MilCodeGen.\r\n\r\n## Risk\r\nNone, whitespace changes only.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10762)","Url":"https://github.com/dotnet/wpf/pull/10762","RelatedDescription":"Open PR \" [StyleCleanUp] Fix MilCodeGen empty lines\" (#10762)"},{"Id":"2990216972","IsPullRequest":true,"CreatedAt":"2025-04-12T05:02:12","Actor":"dotnet-maestro[bot]","Number":"10760","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [840bf684-917a-4879-f62c-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=840bf684-917a-4879-f62c-08d8e93a0c51)\n- **Build**: [20250412.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2685632)\n- **Date Produced**: April 12, 2025 9:49:55 AM UTC\n- **Commit**: [87401be5731aa537bbf4cb71d7800d1c74d5e429](https://github.com/dotnet/arcade/commit/87401be5731aa537bbf4cb71d7800d1c74d5e429)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25212.1][2]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25212.1][2]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25212.1][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25210.1 to 10.0.0-beta.25212.1][2]\n\n[2]: https://github.com/dotnet/arcade/compare/490307dc9b...87401be573\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10760)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10760","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10760)"},{"Id":"2989734999","IsPullRequest":false,"CreatedAt":"2025-04-11T21:10:05","Actor":"safreed-msft","Number":"10759","RawContent":null,"Title":"ThemeMode style not applying to TextBlock in a Page","State":"open","Body":"### Description\n\nI'm trying out the new fluent ui theming in .NET 9 but hit an issue where the theme styles aren't inherited by pages. (update: Seems to only be for TextBlocks?)\n\n![Image](https://github.com/user-attachments/assets/b3e1e141-9ad5-49e1-95ae-3fd7882ffdd4)\n\n### Reproduction Steps\n\n1. Create new WPF project with .NET 9\n2. Set ThemeMode=\"Dark\" in App.xaml\n3. Create a Page with just a TextBlock\n4. In MainWindow.xaml, add a Frame and navigate to the created Page\n\n### Expected behavior\n\nPage's textblock is styled appropriately (light foreground color since background is dark)\n\n### Actual behavior\n\nText foreground is dark\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10759","RelatedDescription":"Open issue \"ThemeMode style not applying to TextBlock in a Page\" (#10759)"},{"Id":"2989016434","IsPullRequest":false,"CreatedAt":"2025-04-11T15:39:36","Actor":"dha125","Number":"10757","RawContent":null,"Title":"RibbonWindow not working correctly with ThemeMode=\"System\"","State":"open","Body":"### Description\n\nRibbonWindow fails to correctly render if  **ThemeMode=\"System\"** is in either App.xaml or MainWindow.xaml. RibbonWindow and Ribbon are well written but seem to have missed the modernization in dotnet 9.\n\n### Reproduction Steps\n\nAny valid RibbonWindow fails to render the quick access toolbar in the window title bar in a net9.0-windows or net10.0-windows project if any ThemeMode is set. I'm currently testing with 10.0.100-preview.2.25164.34.\n\n<RibbonWindow x:Class=\"WpfRibbonApp.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WpfRibbonApp\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\"\n        **ThemeMode=\"System\"**>\n    <DockPanel>\n        <Ribbon DockPanel.Dock=\"Top\">\n            <!-- any ribbon content here-->\n        </Ribbon>\n        <StackPanel>\n        </StackPanel>\n    </DockPanel>\n</RibbonWindow>\n\n### Expected behavior\n\nQuick access toolbar in the window title bar.\n![Image](https://github.com/user-attachments/assets/d424066d-7228-487f-a66a-e74c212cc42b)\n\n### Actual behavior\n\nSee image in expected behavior.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10757","RelatedDescription":"Open issue \"RibbonWindow not working correctly with ThemeMode=\"System\"\" (#10757)"},{"Id":"2983653060","IsPullRequest":true,"CreatedAt":"2025-04-11T09:51:25","Actor":"dotnet-maestro[bot]","Number":"10749","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25207.7 to 10.0.0-preview.4.25209.13 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: [dd483b3f-65b0-44ab-f62d-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n- **Build**: [20250410.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2684543)\n- **Date Produced**: April 11, 2025 1:37:31 AM UTC\n- **Commit**: [1d6143481c8f3f0b4cb74cf661a896dc0c6a3a29](https://github.com/dotnet/winforms/commit/1d6143481c8f3f0b4cb74cf661a896dc0c6a3a29)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25208.4 to 10.0.0-preview.4.25210.3][5]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25208.4 to 10.0.0-preview.4.25210.3][5]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25208.4 to 10.0.0-preview.4.25210.3][5]\n\n[5]: https://github.com/dotnet/winforms/compare/378a836749...1d6143481c\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10749)\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10749","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10749)"},{"Id":"2984462359","IsPullRequest":true,"CreatedAt":"2025-04-11T09:50:59","Actor":"dotnet-maestro[bot]","Number":"10751","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [840bf684-917a-4879-f62c-08d8e93a0c51](https://maestro.dot.net/subscriptions?search=840bf684-917a-4879-f62c-08d8e93a0c51)\n- **Build**: [20250410.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2684021)\n- **Date Produced**: April 10, 2025 10:52:06 AM UTC\n- **Commit**: [490307dc9bb09caf016b2fa96005ac8aaa89c4e7](https://github.com/dotnet/arcade/commit/490307dc9bb09caf016b2fa96005ac8aaa89c4e7)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25208.5 to 10.0.0-beta.25210.1][2]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25208.5 to 10.0.0-beta.25210.1][2]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25208.5 to 10.0.0-beta.25210.1][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25208.5 to 10.0.0-beta.25210.1][2]\n\n[2]: https://github.com/dotnet/arcade/compare/d33398b1de...490307dc9b\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10751)\n\n\n","Url":"https://github.com/dotnet/wpf/pull/10751","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10751)"},{"Id":"2988092559","IsPullRequest":true,"CreatedAt":"2025-04-11T09:24:57","Actor":"dipeshmsft","Number":"10756","RawContent":null,"Title":"[Fluent] Fixes mulitple issues is TextBox and TextBoxBase styles","State":"open","Body":"Partially fixes #10358 ( have not looked at the selection issue yet )\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nIn this PR I have attempted to restyle TextBox and TextBoxBase styles for Fluent theme in WPF. Here is the list of changes done : \r\n1. Modified ControlTemplate to closely mirror WinUI, which fixes the positioning of clear button as well.\r\n2. Modified triggers, to hide the clear button when TextWrapping=Wrap or AcceptsReturn=True.\r\n3. Added TextControl specific color and brush resources.\r\n\r\n## Customer Impact\r\nDevelopers using TextBox in Fluent style will get the correct behaviors.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal app testing\r\n\r\n## Risk\r\nNo behavioral breaking change yet.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10756)","Url":"https://github.com/dotnet/wpf/pull/10756","RelatedDescription":"Open PR \"[Fluent] Fixes mulitple issues is TextBox and TextBoxBase styles\" (#10756)"},{"Id":"2985618796","IsPullRequest":true,"CreatedAt":"2025-04-11T06:42:25","Actor":"harshit7962","Number":"10753","RawContent":null,"Title":"Add Resource Dictionary Tests","State":"closed","Body":"## Description\r\nThe following changes adds some unit tests around `ResourceDictionary` and some more `DynamicResource` based tests that ensures obvious functionalities are not breaking. Again, the change here is to validate, to an elementary extent, the changes of the PR #10532 \r\n\r\n## Regression\r\n_None_\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nBuild pass, the unit tests are green here\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nLow\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10753)","Url":"https://github.com/dotnet/wpf/pull/10753","RelatedDescription":"Closed or merged PR \"Add Resource Dictionary Tests\" (#10753)"},{"Id":"2982996880","IsPullRequest":true,"CreatedAt":"2025-04-11T05:14:07","Actor":"dotnet-maestro[bot]","Number":"10747","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [3e242e43-3358-4aa6-cbf7-08db9e4fbff5](https://maestro.dot.net/subscriptions?search=3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n- **Build**: [20250408.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682673)\n- **Date Produced**: April 9, 2025 2:29:53 AM UTC\n- **Commit**: [c7a36e53f91e41943746f97a8c183549364c5092](https://github.com/dotnet/arcade/commit/c7a36e53f91e41943746f97a8c183549364c5092)\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.ApiCompat**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.GenAPI**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.25164.5 to 8.0.0-beta.25208.7][1]\n\n[1]: https://github.com/dotnet/arcade/compare/802042c6e7...c7a36e53f9\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 8.0.115\n  - Updates tools.dotnet to 8.0.115\n\n[marker]: <> (End:3e242e43-3358-4aa6-cbf7-08db9e4fbff5)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10747)","Url":"https://github.com/dotnet/wpf/pull/10747","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#10747)"},{"Id":"2983546980","IsPullRequest":false,"CreatedAt":"2025-04-11T05:12:52","Actor":"mprevot","Number":"10748","RawContent":null,"Title":"Suggestion: 10bits and HDR display","State":"closed","Body":"To my knowledge, WPF is limited to 8 bits display and SDR.\nAn extension to 10 bits display and HDR would be great, modern, especially for high end imaging and video applications, and maybe games, on Windows 10/11.\nSince WPF relies on DirectX, it is technically possible, maybe not too complicated.\n","Url":"https://github.com/dotnet/wpf/issues/10748","RelatedDescription":"Closed issue \"Suggestion: 10bits and HDR display\" (#10748)"},{"Id":"2984719215","IsPullRequest":true,"CreatedAt":"2025-04-10T09:22:14","Actor":"dipeshmsft","Number":"10752","RawContent":null,"Title":"Added text control common resources and brushes","State":"closed","Body":"### Description \r\nText control common resources and brushes are used by multiple controls like DatePicker, TextBox, RichTextBox, EditableComboBox etc. Therefore adding it before hand to the resources files in Fluent.\r\n\r\n### Customer Impact\r\nCorrect Fluent style for controls.\r\n\r\n### Testing \r\nMinimal\r\n\r\n### Risk\r\nMinimal\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10752)","Url":"https://github.com/dotnet/wpf/pull/10752","RelatedDescription":"Closed or merged PR \"Added text control common resources and brushes\" (#10752)"},{"Id":"2983913015","IsPullRequest":true,"CreatedAt":"2025-04-09T21:04:44","Actor":"h3xds1nz","Number":"10750","RawContent":null,"Title":"Swap `Dictionary<K, V>` with `HashSet<XamlMember>`, avoid double lookup","State":"open","Body":"## Description\r\n\r\nReplaces `XamlPropertySet` which is just a wrapped `Dictionary<XamlMember, bool>` with `HashSet<XamlMember>` for improved performance and decreased allocations. The conditions under which this was written do no longer apply.\r\n\r\nAlso avoids double lookup on each addition.\r\n\r\n## Customer Impact\r\n\r\nImproved performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10750)","Url":"https://github.com/dotnet/wpf/pull/10750","RelatedDescription":"Open PR \"Swap `Dictionary<K, V>` with `HashSet<XamlMember>`, avoid double lookup\" (#10750)"},{"Id":"2982689613","IsPullRequest":false,"CreatedAt":"2025-04-09T12:35:27","Actor":"Laniusexcubitor","Number":"10746","RawContent":null,"Title":"[API Proposal]: Fallback when binding target type does not match","State":"open","Body":"### Background and motivation\n\nCurrently when we use a binding with an interface we get a binding error or warning when the source type does not implement the interface: `TargetException:'System.Reflection.TargetException: Object does not match target type.`  \nSometimes this is completely ok, but we get a nasty binding warning in XAML Binding failures when a FallBack value has been set otherwise a binding error is generated.\nI propose a new property on a binding like `FallbackOnUnmatchedTargetType` that will suppress the resulting binding warning.\n\n### API Proposal\n\n```CSharp\npublic class Binding : BindingBase\n{\n    // ...\n    [DefaultValue(false)]\n    public bool FallbackOnUnmatchedTargetType { get; set }\n}\n```\n\n\n### API Usage\n\n```xaml\n<TextBox Text=\"{Binding Path=(namespace:IInterface.SomeProperty), FallbackOnUnmatchedTargetType=True, FallBackValue={x:Null}}\" />\n```\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\nThis would not change the current behavior except of suppressing the current warning/error.  Using the property developers are saying that they know that there will be unmatched objects, and they don't need a warning about it.","Url":"https://github.com/dotnet/wpf/issues/10746","RelatedDescription":"Open issue \"[API Proposal]: Fallback when binding target type does not match\" (#10746)"},{"Id":"2980722719","IsPullRequest":true,"CreatedAt":"2025-04-09T12:19:11","Actor":"vseanreesermsft","Number":"10742","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10742)","Url":"https://github.com/dotnet/wpf/pull/10742","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#10742)"},{"Id":"2981910496","IsPullRequest":true,"CreatedAt":"2025-04-09T11:18:58","Actor":"dipeshmsft","Number":"10744","RawContent":null,"Title":"Fixes TreeViewItem chevron arrow orientation when FlowDirection is RightToLeft","State":"closed","Body":"Fixes #10209 \r\n\r\n## Description\r\nIn Fluent styles, we use icon fonts to render the arrow / chevron in TreeViewItem instead of Path ( as in Aero2 ). When FlowDirection is set RightToLeft, the arrow defined in Path was reversed, but in case of TextBlock, this does not happen with characters. So, in order to fix this I use a trigger which uses the left chevron for the icon. \r\n\r\n## Customer Impact\r\nDevelopers will correct behavior for TreeViewItem when using Fluent theme and RightToLeft FlowDirection.\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal app testing.\r\n\r\n## Risk\r\nMinimal\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10744)","Url":"https://github.com/dotnet/wpf/pull/10744","RelatedDescription":"Closed or merged PR \"Fixes TreeViewItem chevron arrow orientation when FlowDirection is RightToLeft\" (#10744)"},{"Id":"2981539403","IsPullRequest":true,"CreatedAt":"2025-04-09T10:28:06","Actor":"dotnet-maestro[bot]","Number":"10743","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [2bde0aa3-7165-43c9-100b-08dcbc30275f](https://maestro.dot.net/subscriptions?search=2bde0aa3-7165-43c9-100b-08dcbc30275f)\n- **Build**: [20250408.6](https://dev.azure.com/dnceng/internal/_build/results?buildId=2682667)\n- **Date Produced**: April 9, 2025 2:17:37 AM UTC\n- **Commit**: [aa61e8c20a869bcc994f8b29eb07d927d2bec6f4](https://github.com/dotnet/arcade/commit/aa61e8c20a869bcc994f8b29eb07d927d2bec6f4)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n  - **Microsoft.DotNet.GenAPI**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25204.5 to 9.0.0-beta.25208.6][1]\n\n[1]: https://github.com/dotnet/arcade/compare/97cbc7361f...aa61e8c20a\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 9.0.105\n  - Updates tools.dotnet to 9.0.105\n\n[marker]: <> (End:2bde0aa3-7165-43c9-100b-08dcbc30275f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10743)","Url":"https://github.com/dotnet/wpf/pull/10743","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#10743)"},{"Id":"2980697256","IsPullRequest":true,"CreatedAt":"2025-04-09T10:27:07","Actor":"vseanreesermsft","Number":"10741","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10741)","Url":"https://github.com/dotnet/wpf/pull/10741","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#10741)"},{"Id":"2980625983","IsPullRequest":false,"CreatedAt":"2025-04-08T18:23:51","Actor":"JeremyKuhne","Number":"10740","RawContent":null,"Title":"Investigate removing hard dependency on System.Drawing.Common for Clipboard","State":"open","Body":"Now that CsWin32 is fully available, there is no need to load the entirety of `System.Drawing.Common` to handle Clipboard scenarios. https://github.com/dotnet/wpf/tree/main/src/Microsoft.DotNet.Wpf/src/Extensions/PresentationFramework-SystemDrawing should be able to be removed.\n\nTo do this safely, GDI+ initialization needs to be done via `GdiPlusInitialization.EnsureInitialized()` in `System.Private.Windows.Core`. GDI+ CsWin32 handle types are exposed in this assembly.\n\nGDI+ is mostly being used for creating HBITMAP and looking at image metadata. Another option here may be going directly against WIC APIs for some of the functionality, which GDI+ uses under the covers anyway.","Url":"https://github.com/dotnet/wpf/issues/10740","RelatedDescription":"Open issue \"Investigate removing hard dependency on System.Drawing.Common for Clipboard\" (#10740)"},{"Id":"2980603410","IsPullRequest":false,"CreatedAt":"2025-04-08T18:13:50","Actor":"JeremyKuhne","Number":"10739","RawContent":null,"Title":"Convert drag/drop code to use shared implementation","State":"open","Body":"The shared code is available, but WPF has not been converted to use it.\n\nhttps://github.com/dotnet/winforms/blob/main/src/System.Private.Windows.Core/src/System/Private/Windows/Ole/DragDropHelper.cs\n\nThis has not been investigated yet. Code paths would need compared between WinForms and WPF to ensure the shared code satisfies WPF needs. @JeremyKuhne and @Tanya-Solyanik can be consulted.","Url":"https://github.com/dotnet/wpf/issues/10739","RelatedDescription":"Open issue \"Convert drag/drop code to use shared implementation\" (#10739)"},{"Id":"2980596059","IsPullRequest":false,"CreatedAt":"2025-04-08T18:11:31","Actor":"JeremyKuhne","Number":"10738","RawContent":null,"Title":"Null annotate new APIs in ref assembly","State":"open","Body":"Clipboard and DataObject are null annotated in the implementation, but the ref assembly code has not been updated with the null annotations.","Url":"https://github.com/dotnet/wpf/issues/10738","RelatedDescription":"Open issue \"Null annotate new APIs in ref assembly\" (#10738)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-15T03:30:27.102831Z","RunDurationInMilliseconds":545}