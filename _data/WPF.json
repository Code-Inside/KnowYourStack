{"Data":{"GitHub":{"Issues":[{"Id":"2944850750","IsPullRequest":true,"CreatedAt":"2025-03-25T01:05:26","Actor":"h3xds1nz","Number":"10637","RawContent":null,"Title":"Add test coverage for public API surface of KeySplineConverter","State":"open","Body":"## Description\r\n\r\nAdds test coverage for `KeySplineConverter`. Sending these to support the #9364 PR.\r\n\r\n## Customer Impact\r\n\r\nImproved test coverage on public API surface.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10637)","Url":"https://github.com/dotnet/wpf/pull/10637","RelatedDescription":"Open PR \"Add test coverage for public API surface of KeySplineConverter\" (#10637)"},{"Id":"2944576555","IsPullRequest":true,"CreatedAt":"2025-03-24T22:06:56","Actor":"h3xds1nz","Number":"10636","RawContent":null,"Title":"Remove dead code in BamlRecordReader associated with TreeBuilderBamlTranslator","State":"open","Body":"## Description\r\n\r\nRemoves unused/dead code that's just a remnant from `TreeBuilderBamlTranslator` which was only in use for `NetFX 3.5`, it is unused since `NetFX 4.0` and therefore can be safely removed. There's a bit more but this one I'm confident with.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers, less memory usage.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nReviewers should check the correctness of removing/adjusting the if statements after removal of the properties/fields based on their default values.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10636)","Url":"https://github.com/dotnet/wpf/pull/10636","RelatedDescription":"Open PR \"Remove dead code in BamlRecordReader associated with TreeBuilderBamlTranslator\" (#10636)"},{"Id":"2944557614","IsPullRequest":true,"CreatedAt":"2025-03-24T21:57:49","Actor":"h3xds1nz","Number":"10635","RawContent":null,"Title":"Remove TreeBuilder and all the dead code associated from PBT","State":"open","Body":"## Description\r\n\r\nRemoves `TreeBuilder`, which is just nowadays an unused `abstract` class from PBT and the associated dead code.\r\nThis was only in `NetFX 3.5`, it is unused since `NetFX 4.0`.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone, unused dead code.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10635)","Url":"https://github.com/dotnet/wpf/pull/10635","RelatedDescription":"Open PR \"Remove TreeBuilder and all the dead code associated from PBT\" (#10635)"},{"Id":"2944199612","IsPullRequest":true,"CreatedAt":"2025-03-24T19:01:39","Actor":"dotnet-maestro[bot]","Number":"10634","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: [20250324.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2670676)\n- **Date Produced**: March 24, 2025 1:56:05 PM UTC\n- **Commit**: [400bc27b2519bf9b776322e43aa6bec92c7cc25c](https://github.com/dotnet/winforms/commit/400bc27b2519bf9b776322e43aa6bec92c7cc25c)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25173.1 to 10.0.0-preview.4.25174.3][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25173.1 to 10.0.0-preview.4.25174.3][1]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25173.1 to 10.0.0-preview.4.25174.3][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Management**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Speech**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25168.9 to 10.0.0-preview.4.25173.3][2]\n\n[1]: https://github.com/dotnet/winforms/compare/1f3ba5392f...400bc27b25\n[2]: https://github.com/dotnet/runtime/compare/79edb64066...a50b4a0784\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10634)","Url":"https://github.com/dotnet/wpf/pull/10634","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10634)"},{"Id":"2944066325","IsPullRequest":true,"CreatedAt":"2025-03-24T18:03:35","Actor":"h3xds1nz","Number":"10633","RawContent":null,"Title":"Add test coverage for public API surface of ColorConverter","State":"open","Body":"## Description\r\n\r\nAdds test coverage for `ColorConverter`. Sending these to support the #10225 PR.\r\n\r\nThis doesn't add `ConvertTo`/`ITypeDescriptorContext` tests (as they're not relevant for the PR), should be added later.\r\n\r\n## Customer Impact\r\n\r\nImproved test coverage on public API surface.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10633)","Url":"https://github.com/dotnet/wpf/pull/10633","RelatedDescription":"Open PR \"Add test coverage for public API surface of ColorConverter\" (#10633)"},{"Id":"2944063492","IsPullRequest":true,"CreatedAt":"2025-03-24T18:02:18","Actor":"h3xds1nz","Number":"10632","RawContent":null,"Title":"Add test coverage for public API surface of BrushConverter","State":"open","Body":"## Description\r\n\r\nAdds test coverage for `BrushConverter`. Sending these to support the #10225 PR.\r\n\r\nThis doesn't add `ConvertTo`/`ITypeDescriptorContext` tests (as they're not relevant for the PR), should be added later.\r\n\r\n## Customer Impact\r\n\r\nImproved test coverage on public API surface.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10632)","Url":"https://github.com/dotnet/wpf/pull/10632","RelatedDescription":"Open PR \"Add test coverage for public API surface of BrushConverter\" (#10632)"},{"Id":"2943989382","IsPullRequest":true,"CreatedAt":"2025-03-24T17:35:30","Actor":"harshit7962","Number":"10631","RawContent":null,"Title":"Fix: Plausible Exception while closing an Application","State":"open","Body":"## Description\r\nThe `PostMessage` call while closing the application might throw an invalid window handle exception. Ideally, the `Win32`'s `PostMessage` call is not designed to throw an exception; instead, it is meant to return a boolean indicating success or failure. However, the current call is wrapped to throw a `Win32Exception`. Interestingly, the `SetWindowLong` call just above this call is in a try-catch block that ignores the invalid window handle exception. It makes sense to move the `PostMessage` call inside the try-catch block to avoid the same exception being thrown.\r\n\r\nThe current `PostMessage` wrapper being used is also modified to get the error code as soon as the failure in `IntPostMessage` is encountered.\r\n\r\n## Customer Impact\r\nThis might be a potential fix to the issue #7536 \r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nLocal Build Pass\r\nTested with a possible failing scenario\r\n\r\n## Risk\r\nLow\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10631)","Url":"https://github.com/dotnet/wpf/pull/10631","RelatedDescription":"Open PR \"Fix: Plausible Exception while closing an Application\" (#10631)"},{"Id":"2943542789","IsPullRequest":true,"CreatedAt":"2025-03-24T14:59:19","Actor":"h3xds1nz","Number":"10630","RawContent":null,"Title":"Optimize ComputerInkBoundingBox(LtoR), remove unnecessary additional branch","State":"open","Body":"## Description\r\n\r\nOptimizes `ComputerInkBoundingBox` / `ComputerInkBoundingBoxLtoR` methods, collapsing additional branch for `TextFormattingMode.Display` into `EmGlyphMetrics`, which now takes a readonly `ref` of `GlyphMetrics` to avoid copies.\r\n\r\nThis is one of the hottest methods traditionally when working with glyphs, so it deserves a bit of special care. `EmGlyphMetrics` is just a data container with a bit of logic, and it is kind of imperative that the logic in the `ctor` is actually inlined inside the original method and the `struct` ceases to exist at runtime, otherwise due to the nature of the code, this could get pretty messy at the given JIT state.\r\n\r\nThis gets inlined usually even without forcing it via `AggressiveInlining` but it doesn't hurt to force it in this case, it would hurt in case it didn't get inlined, so we want to prevent that from happening.\r\n\r\nFor 8 glyphs, the difference is already significant:\r\n\r\n| Method    | otherVal    | Mean [ns] | Error [ns] | StdDev [ns] | Code Size [B] | Allocated [B] |\r\n|---------- |---------------- |----------:|-----------:|------------:|--------------:|--------------:|\r\n| Original |  GlyphMetrics[8] |  42.41 ns |   0.251 ns |    0.222 ns |       2,882 B |             - |\r\n| PR__EDIT  | GlyphMetrics[8] |  34.01 ns |   0.188 ns |    0.166 ns |       2,736 B |             - |\r\n\r\n## Customer Impact\r\n\r\nImproved performance.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, perf benchmarks.\r\n\r\n## Risk\r\n\r\nImho it is low, we don't change any existing logic.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10630)","Url":"https://github.com/dotnet/wpf/pull/10630","RelatedDescription":"Open PR \"Optimize ComputerInkBoundingBox(LtoR), remove unnecessary additional branch\" (#10630)"},{"Id":"2942811395","IsPullRequest":false,"CreatedAt":"2025-03-24T10:42:54","Actor":"shillingp","Number":"10629","RawContent":null,"Title":"ComboBox Grouping Template","State":"open","Body":"https://github.com/dotnet/wpf/blob/029481b2d036c5d3d0556b157c0f6db91dc6f91c/src/Microsoft.DotNet.Wpf/src/Themes/PresentationFramework.Fluent/Styles/ComboBox.xaml#L285-L288\n\nThere is currently an issue with ComboBox grouping which causes only the group Header to be visible.\n\n### Minimum Reproduction\n```xaml\n<CollectionViewSource x:Key=\"GroupedBooksViewSource\">\n\t<CollectionViewSource.GroupDescriptions>\n        <PropertyGroupDescription PropertyName=\"Publisher\" />\n    </CollectionViewSource.GroupDescriptions>\n</CollectionViewSource>\n\n<ComboBox\n\tItemsSource=\"{Binding Source={StaticResource GroupedBooksViewSource}}\"\n\tDisplayMemberPath=\"Name\">\n\t<ComboBox.GroupStyle>\n        <GroupStyle>\n            <GroupStyle.HeaderTemplate>\n                <DataTemplate DataType=\"{x:Type GroupItem}\">\n                    <TextBlock\n                        Margin=\"10,5\"\n                        Style=\"{StaticResource BodyStrongTextBlockStyle}\"\n                        Text=\"{Binding Name}\" />\n                </DataTemplate>\n            </GroupStyle.HeaderTemplate>\n        </GroupStyle>\n    </ComboBox.GroupStyle>\n</ComboBox>\n```\n\n\n### Recommended Solution\nThe solution to this is to change these lines to be the following:\n\n```xaml\n<ItemsPresenter\n     KeyboardNavigation.DirectionalNavigation=\"Contained\" \n     TextElement.FontSize=\"{TemplateBinding FontSize}\" /> \n```","Url":"https://github.com/dotnet/wpf/issues/10629","RelatedDescription":"Open issue \"ComboBox Grouping Template\" (#10629)"},{"Id":"2942679789","IsPullRequest":true,"CreatedAt":"2025-03-24T09:57:31","Actor":"h3xds1nz","Number":"10628","RawContent":null,"Title":"Stop boxing booleans in DataBindEngine, use BooleanBoxes instead","State":"open","Body":"## Description\r\n\r\nA tiny PR that avoids boxing the booleans when posted into `Dispatcher` queue, using the established `BooleanBoxes` instead.\r\n\r\n## Customer Impact\r\n\r\nDecreased allocations.\r\n\r\n## Regression\r\n\r\nNope, has been like that since the start.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNext to none.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10628)","Url":"https://github.com/dotnet/wpf/pull/10628","RelatedDescription":"Open PR \"Stop boxing booleans in DataBindEngine, use BooleanBoxes instead\" (#10628)"},{"Id":"2941259398","IsPullRequest":false,"CreatedAt":"2025-03-24T08:52:11","Actor":"h3xds1nz","Number":"10624","RawContent":null,"Title":"Issues caused by code coverage in RuntimeHelpers.GetSpanDataFrom","State":"closed","Body":"With #10514 being merged in, a change was made to prevent CI builds from failing when using `RuntimeHelpers.CreateSpan` in one particular case in `ContentType` from `WindowsBase` here:\n\nhttps://github.com/dotnet/wpf/pull/10514/files/a6cedcc7dce51a30caf60a3f07ec899fb8141f34#diff-1d02f80080e968e5fec25cef51809b5d0a9d18fce33cd7bd8fb2f9c75f14409aR665\n\nThis is caused by using outdated `Coverlet` version (3.1.2) which uses old version of `Mono.Cecil`. `Coverlet` is injecting methods to the assembly but the old version of Cecil has a bug with RVA alignment of packed fields, which causes it to fail at runtime when using CreateSpan. This was fixed in `Mono.Cecil` https://github.com/jbevain/cecil/pull/817 and https://github.com/jbevain/cecil/pull/888.\n\n`Coverlet` uses `Mono.Cecil` containing those fixes since `6.0.0`\n","Url":"https://github.com/dotnet/wpf/issues/10624","RelatedDescription":"Closed issue \"Issues caused by code coverage in RuntimeHelpers.GetSpanDataFrom\" (#10624)"},{"Id":"2941259622","IsPullRequest":true,"CreatedAt":"2025-03-24T08:52:10","Actor":"h3xds1nz","Number":"10625","RawContent":null,"Title":"Update Coverlet version and revert ContentType changes from #10514","State":"closed","Body":"Fixes #10624\r\n\r\n## Description\r\n\r\nUpdates Coverlet to newest version and reverts a workaround change in `ContentType` from #10514.\r\n\r\nSee #10624 for detailed description.\r\n\r\n## Customer Impact\r\n\r\nLess memory usage at runtime.\r\n\r\n## Regression\r\n\r\nYes\r\n\r\n## Testing\r\n\r\nLocal build, CI flow.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10625)","Url":"https://github.com/dotnet/wpf/pull/10625","RelatedDescription":"Closed or merged PR \"Update Coverlet version and revert ContentType changes from #10514\" (#10625)"},{"Id":"2941994617","IsPullRequest":true,"CreatedAt":"2025-03-24T05:33:50","Actor":"dotnet-maestro[bot]","Number":"10627","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n## From https://github.com/dotnet/winforms\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\n- **Build**: [20250323.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2670241)\n- **Date Produced**: March 24, 2025 1:39:15 AM UTC\n- **Commit**: [1f3ba5392fd044ad0c2df1ddd191280852ab7856](https://github.com/dotnet/winforms/commit/1f3ba5392fd044ad0c2df1ddd191280852ab7856)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.4.25169.1 to 10.0.0-preview.4.25173.1][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.4.25169.1 to 10.0.0-preview.4.25173.1][1]\n  - **System.Drawing.Common**: [from 10.0.0-preview.4.25169.1 to 10.0.0-preview.4.25173.1][1]\n\n[1]: https://github.com/dotnet/winforms/compare/e48889fa96...1f3ba5392f\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10627)","Url":"https://github.com/dotnet/wpf/pull/10627","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10627)"},{"Id":"2940051613","IsPullRequest":true,"CreatedAt":"2025-03-24T05:14:16","Actor":"dotnet-maestro[bot]","Number":"10614","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\n- **Build**: [20250321.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2668833)\n- **Date Produced**: March 21, 2025 12:46:28 PM UTC\n- **Commit**: [235443a5c1136571cacdfd40576f263f26bf5b9b](https://github.com/dotnet/arcade/commit/235443a5c1136571cacdfd40576f263f26bf5b9b)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25164.6 to 10.0.0-beta.25171.1][1]\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.25164.6 to 10.0.0-beta.25171.1][1]\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.25164.6 to 10.0.0-beta.25171.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25164.6 to 10.0.0-beta.25171.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/1912d9f4fc...235443a5c1\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 10.0.100-preview.3.25167.3\n  - Updates tools.dotnet to 10.0.100-preview.3.25167.3\n\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10614)","Url":"https://github.com/dotnet/wpf/pull/10614","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10614)"},{"Id":"2941797186","IsPullRequest":true,"CreatedAt":"2025-03-24T05:12:27","Actor":"dotnet-maestro[bot]","Number":"10626","RawContent":null,"Title":"[release/10.0-preview3] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:Coherency Updates)\n## Coherency Updates\n\nThe following updates ensure that dependencies with a *CoherentParentDependency*\nattribute were produced in a build used as input to the parent dependency's build.\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Coherency Updates**:\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Windows.Extensions**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Resources.Extensions**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.CodeDom**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Data.Odbc**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Data.OleDb**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.EventLog**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices.Protocols**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.DirectoryServices**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Formats.Nrbf**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Packaging**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.IO.Ports**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Management**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Reflection.Context**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Runtime.Caching**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Cryptography.Xml**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Security.Permissions**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceModel.Syndication**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Speech**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Text.Encoding.CodePages**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.Threading.AccessControl**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5 (parent: Microsoft.Private.Winforms)\n\n[DependencyUpdate]: <> (End)\n\n[marker]: <> (End:Coherency Updates)\n\n[marker]: <> (Begin:ef84d7ce-9bbd-4f3f-9dc0-1394d450533f)\n## From https://github.com/dotnet/winforms\n- **Subscription**: ef84d7ce-9bbd-4f3f-9dc0-1394d450533f\n- **Build**: [20250323.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2670263)\n- **Date Produced**: March 24, 2025 2:03:48 AM UTC\n- **Commit**: [9066c05e3ef5e6f4b845a1e7a9baf2c4b6af1db4](https://github.com/dotnet/winforms/commit/9066c05e3ef5e6f4b845a1e7a9baf2c4b6af1db4)\n- **Branch**: refs/heads/release/10.0-preview3\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-preview.3.25169.2 to 10.0.0-preview.3.25173.2][1]\n  - **Microsoft.Private.Winforms**: [from 10.0.0-preview.3.25169.2 to 10.0.0-preview.3.25173.2][1]\n  - **System.Drawing.Common**: [from 10.0.0-preview.3.25169.2 to 10.0.0-preview.3.25173.2][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.CodeDom**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Data.Odbc**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Data.OleDb**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.DirectoryServices**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.IO.Packaging**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.IO.Ports**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Management**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Reflection.Context**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Security.Permissions**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Speech**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.3.25169.5 to 10.0.0-preview.3.25171.5][2]\n\n[1]: https://github.com/dotnet/winforms/compare/fe50f0f4f1...9066c05e3e\n[2]: https://github.com/dotnet/runtime/compare/4dcbbe4783...0a33e18a0b\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:ef84d7ce-9bbd-4f3f-9dc0-1394d450533f)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10626)","Url":"https://github.com/dotnet/wpf/pull/10626","RelatedDescription":"Closed or merged PR \"[release/10.0-preview3] Update dependencies from dotnet/winforms\" (#10626)"},{"Id":"2941205743","IsPullRequest":true,"CreatedAt":"2025-03-23T13:54:34","Actor":"h3xds1nz","Number":"10623","RawContent":null,"Title":"Add BitmapImage initialization tests validating fix in #10428","State":"open","Body":"## Description\r\n\r\nAdds very basic initialization tests for `BitmapImage`, mostly driven just to provide a test validating fix in #10428.\r\n\r\nAlso adds reference to `System.IO.Packaging` for `PresentationCore.Tests` since otherwise the package ain't present, causing any `PresentationCore` tests to fail that load types which rely on it as the library cannot be loaded.\r\n\r\n## Customer Impact\r\n\r\nNone, just a few more tests validating codebase health.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10623)","Url":"https://github.com/dotnet/wpf/pull/10623","RelatedDescription":"Open PR \"Add BitmapImage initialization tests validating fix in #10428\" (#10623)"},{"Id":"2941199767","IsPullRequest":true,"CreatedAt":"2025-03-23T13:47:03","Actor":"jizc","Number":"10622","RawContent":null,"Title":"[StyleCleanUp] Use conditional delegate call (IDE1005)","State":"open","Body":"Fixes #10621\r\n\r\n## Description\r\n\r\n- Fixed all `IDE1005` warnings.\r\n- Updated `MilCodeGen` to not generate `IDE1005` violations, and then ran `MilCodeGen`.\r\n- All changes were automated, with the exception of a couple whitespace fixes and the `MilCodeGen` update.\r\n- Applied suggestion about null propagation in `ShaderEffect.cs` to fix CI failure.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build. Ran `MilCodeGen` after updating it.\r\n\r\n## Risk\r\n\r\nNone.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10622)","Url":"https://github.com/dotnet/wpf/pull/10622","RelatedDescription":"Open PR \"[StyleCleanUp] Use conditional delegate call (IDE1005)\" (#10622)"},{"Id":"2941197433","IsPullRequest":false,"CreatedAt":"2025-03-23T13:43:22","Actor":"jizc","Number":"10621","RawContent":null,"Title":"IDE1005: Use conditional delegate call","State":"open","Body":"More info: https://learn.microsoft.com/en-gb/dotnet/fundamentals/code-analysis/style-rules/ide1005","Url":"https://github.com/dotnet/wpf/issues/10621","RelatedDescription":"Open issue \"IDE1005: Use conditional delegate call\" (#10621)"},{"Id":"2941187422","IsPullRequest":true,"CreatedAt":"2025-03-23T13:25:31","Actor":"jizc","Number":"10620","RawContent":null,"Title":"[StyleCleanUp] Use compound assignment (IDE0054)","State":"open","Body":"Fixes #10619\r\n\r\n## Description\r\n\r\nFixes all `IDE0054` warnings by switching to compound assignment. All changes were automated, with the exception of restoring comments in `Popup.cs`.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nNone.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10620)","Url":"https://github.com/dotnet/wpf/pull/10620","RelatedDescription":"Open PR \"[StyleCleanUp] Use compound assignment (IDE0054)\" (#10620)"},{"Id":"2941184850","IsPullRequest":false,"CreatedAt":"2025-03-23T13:21:19","Actor":"jizc","Number":"10619","RawContent":null,"Title":"IDE0054: Use compound assignment","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074","Url":"https://github.com/dotnet/wpf/issues/10619","RelatedDescription":"Open issue \"IDE0054: Use compound assignment\" (#10619)"},{"Id":"2940316683","IsPullRequest":true,"CreatedAt":"2025-03-22T11:20:22","Actor":"h3xds1nz","Number":"10618","RawContent":null,"Title":"[MilCodeGen] Declare Equals/GetHashCode and property getters for fields as readonly","State":"open","Body":"## Description\r\n\r\nModifies MilCodeGen to generate `readonly` getters for fields where `SkipProperties=\"false\"`, in case the properties are skipped (`SkipProperties=\"true\"`) they live in the non-generated area and thus were modified manually.\r\n- The `Equals` override uses new syntax and is `readonly`.\r\n- The non-override `Equals ` is now `readonly`.\r\n- `GetHashCode` is `readonly` and all the supporting props (`IsEmpty`, `IsDistinguishedIdentity`) are `readonly` to prevent copies in the particular call chain.\r\n\r\nRest of the members that were not in the impact zone are left untouched and shall be done separately in subsequent PRs.\r\n\r\n## Customer Impact\r\n\r\nIncreased performance/better codegen.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, most of the generated structs have unit tests already including `Equals`/`GetHashCode` checks.\r\n\r\n## Risk\r\n\r\nLow. The point to consider is whether we could make any of the members that are to become `readonly` mutate the struct in the future, for me that answer is no. `Equals`/`GetHashCode` should never modify the state, even on mutable structs.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10618)","Url":"https://github.com/dotnet/wpf/pull/10618","RelatedDescription":"Open PR \"[MilCodeGen] Declare Equals/GetHashCode and property getters for fields as readonly\" (#10618)"},{"Id":"2940240217","IsPullRequest":true,"CreatedAt":"2025-03-22T09:04:27","Actor":"h3xds1nz","Number":"10617","RawContent":null,"Title":"[StyleCleanUp] Test for NaN correctly (CA2242)","State":"open","Body":"Fixes #10616\r\n\r\n## Description\r\n\r\nFixes two comparisons for NaN that were done incorrectly and will always evaluate to `false`.\r\n\r\n## Customer Impact\r\n\r\nDepends, the code will now finally do what has been the original intent.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, I did not test these two changes.\r\n\r\n## Risk\r\n\r\nFor the converter, I guess we can properly test that it doesn't break the `Expander`\r\n(@dipeshmsft, you're signed under that change to test for NaN that can never evaluate to `true`).\r\n\r\nFor the stylus, seems appropriate to check.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10617)","Url":"https://github.com/dotnet/wpf/pull/10617","RelatedDescription":"Open PR \"[StyleCleanUp] Test for NaN correctly (CA2242)\" (#10617)"},{"Id":"2940239566","IsPullRequest":false,"CreatedAt":"2025-03-22T09:02:57","Actor":"h3xds1nz","Number":"10616","RawContent":null,"Title":"CA2242: Test for NaN correctly","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2242","Url":"https://github.com/dotnet/wpf/issues/10616","RelatedDescription":"Open issue \"CA2242: Test for NaN correctly\" (#10616)"},{"Id":"2940104643","IsPullRequest":true,"CreatedAt":"2025-03-22T05:51:41","Actor":"ThomasGoulet73","Number":"10615","RawContent":null,"Title":"[StyleCleanUp] Fix MilCodeGen generated code whitespaces","State":"open","Body":"## Description\r\nFixes some whitespace issues in code generated by MilCodeGen. I looked for obvious issues manually so I probably missed some issues but this is a good start.\r\n\r\nThis PR is fairly large so it's probably a good idea to focus the review on files in `src/Microsoft.DotNet.Wpf/src/WpfGfx/codegen/mcg`\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nLocal build + validated that IL didn't change.\r\n\r\n## Risk\r\nLow.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10615)","Url":"https://github.com/dotnet/wpf/pull/10615","RelatedDescription":"Open PR \"[StyleCleanUp] Fix MilCodeGen generated code whitespaces\" (#10615)"},{"Id":"2939555383","IsPullRequest":true,"CreatedAt":"2025-03-21T21:40:50","Actor":"h3xds1nz","Number":"10613","RawContent":null,"Title":"[StyleCleanUp] Use `is null` check (IDE0041)","State":"open","Body":"Fixes #10612\r\n\r\n## Description\r\n\r\nAvoids using `ReferenceEquals` to check each object and uses `is null` check instead. \r\n- In case of `WeakRefKey` and `DpiScale`, the boxing casts are removed as they're both non-nullable structs.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase for developers, should reduce some boxes and branches.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal testing/build.\r\n\r\n## Risk\r\n\r\nShould be low, mostly analyzer fixes but I did adjust some to remove double-checks on the same field.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10613)","Url":"https://github.com/dotnet/wpf/pull/10613","RelatedDescription":"Open PR \"[StyleCleanUp] Use `is null` check (IDE0041)\" (#10613)"},{"Id":"2939548262","IsPullRequest":false,"CreatedAt":"2025-03-21T21:36:08","Actor":"h3xds1nz","Number":"10612","RawContent":null,"Title":"IDE0041: Use 'is null' check","State":"open","Body":"More info: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0041","Url":"https://github.com/dotnet/wpf/issues/10612","RelatedDescription":"Open issue \"IDE0041: Use 'is null' check\" (#10612)"},{"Id":"2938061585","IsPullRequest":false,"CreatedAt":"2025-03-21T11:11:00","Actor":"adesypri","Number":"10611","RawContent":null,"Title":"[Accessibility] In WPF Narrator is not reading the items of an Editable ComboBox","State":"open","Body":"### Description\n\n.NET Core Version: net8\nIs this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\n\nThis issue has been opened again https://github.com/dotnet/wpf/issues/7005, however we noticed that the app does not send the events that the Narrator expects.\n\nThe attached video comes from our application, but we can also reproduce in the attached sample app.\n\nThis only reproduces when the ComboBox's IsEditable is True, and we have no customizations in the area.\n\n[WpfApp2_combobox_isEditableBreaksNarratorFocus_bug.zip](https://github.com/user-attachments/files/19388012/WpfApp2_combobox_isEditableBreaksNarratorFocus_bug.zip)\n\n\n### Reproduction Steps\n\nCreate an editable ComboBox with some items.\nNavigate using Narrator\n\n### Expected behavior\n\nNarrator does not move to the items\n\n### Actual behavior\n\nNarrator should move to the items\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10611","RelatedDescription":"Open issue \"[Accessibility] In WPF Narrator is not reading the items of an Editable ComboBox\" (#10611)"},{"Id":"2936409613","IsPullRequest":false,"CreatedAt":"2025-03-20T19:06:50","Actor":"Nintynuts","Number":"10610","RawContent":null,"Title":"Modularise IDE integration for better extensibility","State":"open","Body":"This is a feature request related to tooling in Visual Studio, but not exclusively and since the community hub is awful for tracking progress, I thought I'd post it here. If there's support for this, then a community hub request could be raised too.\n\nSo, there are a few parts to this, which I think are all related by the general idea...\n\nA lot of working with WPF XAML comes down to how the IDE works, which needs to have an understanding of the code it's operating on to provide useful suggestions. For very specific things this is extensible (for example putting an enum in your markup extension), but many features seem to be hard-coded to look for Markup elements like `Binding`, and `TemplateBinding`. Because of this, creating custom markups which rely on `PropertyPath` for example aren't very useful because there's no intellisense or validation, and the only way I can see to making that work extensibly is having attributes on the `MarkupExtension` property/parameter or `DependencyProperty` to instruct how the IDE should determine what intellisense to provide or how to behave. \n\nThere are already some XAML extensibility features the codebase, for example `TypeConverterAttribute`, `ContentPropertyAttribute` and `DictionaryKeyPropertyAttribute`, however if you use the last one, it [doesn't actually get recognised](https://github.com/dotnet/wpf/issues/7562). Adding `ContentProperty` to `Setter` has been a [long-awaited change](https://github.com/dotnet/wpf/issues/84) which keeps getting undone because of backwards compatibility.\n\nAlso, some things seem to be hard-coded by the compiler and/or IDE, like how only extensions derived from `StaticExtension`, `TypeExtension`, `ResourceKeyExtension` can be used as a resource key, even though in theory any `MarkupExtension` could provide an `object` value for a key. \n\nSimilarly, although C# analysers are now very easy to add yourself, there's no official way to implement analysers for XAML. \n\nA possible solution to both of these is 'write a visual studio extension' but that's a big ask for small teams and much easier said than done. The only one I know about is [RapidXaml](https://github.com/mrlacey/Rapid-XAML-Toolkit), and it's not yet been ported to VS 2022. The only other option is Resharper, which is extra and has its own entirely separate code inspection system.\n\nSo TLDR:\n- Make IDE intellisense features for XAML rely on annotations in WPF that can also be applied to custom types.\n- Make analysers for XAML (not necessarily just WPF) a first class feature to allow code and style validation (and automated fixes).\n\nI appreciate this is a huge amount of work, and probably needs breaking down, but it would be a good to get an idea of feasibility.","Url":"https://github.com/dotnet/wpf/issues/10610","RelatedDescription":"Open issue \"Modularise IDE integration for better extensibility\" (#10610)"},{"Id":"2935925889","IsPullRequest":false,"CreatedAt":"2025-03-20T15:45:15","Actor":"bent-rasmussen","Number":"10609","RawContent":null,"Title":"Application crash on customer machine (Fluent Theme?)","State":"open","Body":"### Description\n\nOur company is now at the point where we want to release our app, built with the new Fluent theme. However, we get a customer reporting a crash on the preview release of our app. The application itself targets .NET 9.0.1.\n\nI asked the customer for the crash dump file and can share it privately with a Microsoft employee.\n\nThere appears to be a stackoverflow involved, as can be seen by dumping exceptions via the `dumpexceptions` command in `dotnet dump`:\n\n```\n> dumpexceptions\n         Address      MethodTable Message Name\n    019740818db0     7ff7bfae5ae8 System.ObjectDisposedException\n        Message: Cannot access a disposed object.\n    0198396f9fb8     7ff7bff61fc8 System.Xaml.XamlObjectWriterException\n        Message: Add value to collection of type 'System.Windows.Controls.UIElementCollection' threw an exception.\n        StackFrame: MS.Internal.Xaml.Runtime.ClrObjectRuntime.Add(System.Object, System.Xaml.XamlType, System.Object, System.Xaml.XamlType)\n    0198396fa3b8     7ff7bff845d0 System.Windows.Markup.XamlParseException\n        Message: Add value to collection of type 'System.Windows.Controls.UIElementCollection' threw an exception.\n        StackFrame: System.Windows.Markup.XamlReader.RewrapException(System.Exception, System.Xaml.IXamlLineInfo, System.Uri)\n    0197415310d8     7ff7c222cf08 Statical.Workspace.RuntimePackageFormatNotSupportedException\n        Message: Runtime package format not supported.\n    01974157cfd0     7ff7c222cf08 Statical.Workspace.RuntimePackageFormatNotSupportedException\n        Message: Runtime package format not supported.\n    01974157dbd0     7ff7c222cf08 Statical.Workspace.RuntimePackageFormatNotSupportedException\n        Message: Runtime package format not supported.\n    01974157e6d0     7ff7c222cf08 Statical.Workspace.RuntimePackageFormatNotSupportedException\n        Message: Runtime package format not supported.\n    01974157f208     7ff7c222cf08 Statical.Workspace.RuntimePackageFormatNotSupportedException\n        Message: Runtime package format not supported.\n    01973e800088     7ff7bf6be550 System.OutOfMemoryException\n        Message: <null>\n    01973e800100     7ff7bf6be678 System.StackOverflowException\n        Message: <null>\n    01973e800178     7ff7bf6be7a0 System.ExecutionEngineException\n        Message: <null>\n    01973e81cb88     7ff7bf6be260 System.Exception\n        Message: <null>\n    0197f0143710     7ff7bf6be260 System.Exception\n        Message: s_doneWritingSentinel\n    019740067bd8     7ff7c222cf08 Statical.Workspace.RuntimePackageFormatNotSupportedException\n        Message: Runtime package format not supported.\n    0198383782a8     7ff7bf79b858 System.InvalidOperationException\n        Message: Layout recursion reached allowed limit to avoid stack overflow: '2047'. Either the tree contains a loop or is too deep.\n        StackFrame: System.Windows.UIElement.PropagateResumeLayout(System.Windows.Media.Visual, System.Windows.Media.Visual)\n```\n\nNote the last exception:\n\n```\n    0198383782a8     7ff7bf79b858 System.InvalidOperationException\n        Message: Layout recursion reached allowed limit to avoid stack overflow: '2047'. Either the tree contains a loop or is too deep.\n        StackFrame: System.Windows.UIElement.PropagateResumeLayout(System.Windows.Media.Visual, System.Windows.Media.Visual)\n```\n\nThe CLR stack trace is enormous:\n\n```\n> clrstack\nOS Thread Id: 0x4acc (0)\n        Child SP               IP Call Site\n0000000C1E006110 00007ff8d7d7ab06 [InlinedCallFrame: 0000000c1e006110] <Module>.malloc(UInt64)\n0000000C1E006110 00007ff7bf6e24b5 [InlinedCallFrame: 0000000c1e006110] <Module>.malloc(UInt64)\n0000000C1E0060E0 00007FF7BF6E24B5 ILStubClass.IL_STUB_PInvoke(UInt64)\n0000000C1E0061A0 00007FF7C1A9DB5A <Module>.new(UInt64)\n0000000C1E0061E0 00007FF7C1F786A3 MS.Internal.Text.TextInterface.TextAnalyzer.GetGlyphs(Char*, UInt32, MS.Internal.Text.TextInterface.Font, UInt16, Boolean, Boolean, System.Globalization.CultureInfo, MS.Internal.Text.TextInterface.DWriteFontFeature[][], UInt32[], UInt32, System.Windows.Media.TextFormattingMode, MS.Internal.Text.TextInterface.ItemProps, UInt16*, UInt16*, UInt16*, UInt32*, Int32*, UInt32 ByRef)\n0000000C1E0063B0 00007FF7C1F78135 MS.Internal.TextFormatting.LineServicesCallbacks.GetGlyphsRedefined(IntPtr, IntPtr*, Int32*, Int32, Char*, Int32, MS.Internal.TextFormatting.LsTFlow, UInt16*, UInt32*, Int32, Int32 ByRef, UInt16*, UInt16*, Int32*, Int32 ByRef)\n0000000C1E006510 00007FF7C02413AD ILStubClass.IL_STUB_ReversePInvoke(Int64, System.IntPtr*, System.Int32*, Int32, System.Char*, Int32, Int32, System.UInt16*, System.UInt32*, Int32, Int32*, System.UInt16*, System.UInt16*, System.Int32*, Int32*)\n0000000C1E008588 00007ff82cb1cfd2 [InlinedCallFrame: 0000000c1e008588] MS.Internal.TextFormatting.UnsafeNativeMethods.LoCreateLine(IntPtr, Int32, Int32, Int32, UInt32, IntPtr, MS.Internal.TextFormatting.LsLInfo ByRef, IntPtr ByRef, Int32 ByRef, MS.Internal.TextFormatting.LsLineWidths ByRef)\n0000000C1E008588 00007ff7c023f2f2 [InlinedCallFrame: 0000000c1e008588] MS.Internal.TextFormatting.UnsafeNativeMethods.LoCreateLine(IntPtr, Int32, Int32, Int32, UInt32, IntPtr, MS.Internal.TextFormatting.LsLInfo ByRef, IntPtr ByRef, Int32 ByRef, MS.Internal.TextFormatting.LsLineWidths ByRef)\n0000000C1E008530 00007FF7C023F2F2 ILStubClass.IL_STUB_PInvoke(IntPtr, Int32, Int32, Int32, UInt32, IntPtr, MS.Internal.TextFormatting.LsLInfo ByRef, IntPtr ByRef, Int32 ByRef, MS.Internal.TextFormatting.LsLineWidths ByRef)\n0000000C1E008640 00007FF7C1FC47BE MS.Internal.TextFormatting.TextMetrics+FullTextLine.FormatLine(MS.Internal.TextFormatting.FullTextState, Int32, Int32, Int32, Int32, Int32, MS.Internal.TextFormatting.LineFlags, MS.Internal.TextFormatting.FormattedTextSymbols)\n0000000C1E0087A0 00007FF7C1FC2EFF MS.Internal.TextFormatting.TextFormatterImp.FormatLine(System.Windows.Media.TextFormatting.TextSource, Int32, Double, System.Windows.Media.TextFormatting.TextParagraphProperties, System.Windows.Media.TextFormatting.TextLineBreak, System.Windows.Media.TextFormatting.TextRunCache)\n0000000C1E008860 00007FF7C2C87483 System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)\n0000000C1E008AB0 00007FF7C1FBE58A System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n0000000C1E008EC0 00007FF7C1F483CF System.Windows.UIElement.Measure(System.Windows.Size)\n0000000C1E008FF0 00007FF7C1F4A123 System.Windows.Controls.Grid.MeasureCell(Int32, Boolean)\n0000000C1E0090A0 00007FF7C1F4A784 System.Windows.Controls.Grid.MeasureCellsGroup(Int32, System.Windows.Size, Boolean, Boolean, Boolean ByRef)\n0000000C1E009300 00007FF7C1FC17E3 System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)\n0000000C1E009470 00007FF7C1FBE58A System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n0000000C1E009880 00007FF7C1F483CF System.Windows.UIElement.Measure(System.Windows.Size)\n0000000C1E0099B0 00007FF7C3D4875C MS.Internal.Helper.MeasureElementWithSingleChild(System.Windows.UIElement, System.Windows.Size)\n0000000C1E009A50 00007FF7C1FBE58A System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n0000000C1E009E60 00007FF7C1F483CF System.Windows.UIElement.Measure(System.Windows.Size)\n\nSNIP\n\n0000000C1E17C150 00007FF7C4EE1161 System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)\n0000000C1E17C320 00007FF7C1FBE58A System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n0000000C1E17C730 00007FF7C1F483CF System.Windows.UIElement.Measure(System.Windows.Size)\n0000000C1E17C860 00007FF7C2C80471 System.Windows.ContextLayoutManager.UpdateLayout()\n0000000C1E17C970 00007FF7C2C917BE System.Windows.ContextLayoutManager.UpdateLayoutCallback(System.Object)\n0000000C1E17C9A0 00007FF7C1FBAE02 System.Windows.Media.MediaContext.FireInvokeOnRenderCallbacks()\n0000000C1E17CA00 00007FF7C1FB99CB System.Windows.Media.MediaContext.RenderMessageHandlerCore(System.Object)\n0000000C1E17CAA0 00007FF7C373DBE2 System.Windows.Media.MediaContext.RenderMessageHandler(System.Object)\n0000000C1E17CB00 00007FF7C1EFE492 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n0000000C1E17CB80 00007FF7C1EFE272 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n0000000C1E17CBD0 00007FF7C1F02315 System.Windows.Threading.DispatcherOperation.InvokeImpl()\n0000000C1E17CC50 00007FF7C1F020A4 MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object)\n0000000C1E17CCB0 00007FF7C1F00E89 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [/_/src/libraries/System.Private.CoreLib/src/System/Threading/ExecutionContext.cs @ 179]\n0000000C1E17CD20 00007FF7C1F01CD9 MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object)\n0000000C1E17CD90 00007FF7C1F019A3 System.Windows.Threading.DispatcherOperation.Invoke()\n0000000C1E17CDF0 00007FF7C1F01496 System.Windows.Threading.Dispatcher.ProcessQueue()\n0000000C1E17CE90 00007FF7C1F00FCF System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n0000000C1E17CF00 00007FF7C1F00929 MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n0000000C1E17CFA0 00007FF7C1EFE470 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n0000000C1E17D020 00007FF7C1EFE272 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n0000000C1E17D070 00007FF7C1EFFD20 System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\n0000000C1E17D110 00007FF7C1EFF801 MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\n0000000C1E17D210 00007FF7BF6E7E4C ILStubClass.IL_STUB_ReversePInvoke(Int64, Int32, Int64, Int64)\n0000000C1E17D4C8 00007ff8d7b7ef5c [InlinedCallFrame: 0000000c1e17d4c8] MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\n0000000C1E17D4C8 00007ff7bf718fba [InlinedCallFrame: 0000000c1e17d4c8] MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\n0000000C1E17D4A0 00007FF7BF718FBA ILStubClass.IL_STUB_PInvoke(System.Windows.Interop.MSG ByRef)\n0000000C1E17D560 00007FF87AA2891F System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame)\n0000000C1E17D5F0 00007FF80A46A988 System.Windows.Window.ShowHelper(System.Object)\n0000000C1E17D6B0 00007FF80A4612C9 System.Windows.Window.Show()\n0000000C1E17D6E0 00007FF80A46167D System.Windows.Window.ShowDialog()\n0000000C1E17D7A0 00007FF809A2C8A9 <StartupCode$Prism-Core>.$Startup+RunAsync@245-31.MoveNext()\n0000000C1E17D8A0 00007FF7C0266500 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Int32, System.Private.CoreLib],[<StartupCode$Prism-Core>.$Startup+RunAsync@245-31, Prism.Core]].ExecutionContextCallback(System.Object) [/_/src/libraries/System.Private.CoreLib/src/System/Runtime/CompilerServices/AsyncTaskMethodBuilderT.cs @ 293]\n0000000C1E17D8E0 00007FF81E66C344 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [/_/src/libraries/System.Private.CoreLib/src/System/Threading/ExecutionContext.cs @ 179]\n0000000C1E17D950 00007FF7C02663B3 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Int32, System.Private.CoreLib],[<StartupCode$Prism-Core>.$Startup+RunAsync@245-31, Prism.Core]].MoveNext(System.Threading.Thread) [/_/src/libraries/System.Private.CoreLib/src/System/Runtime/CompilerServices/AsyncTaskMethodBuilderT.cs @ 372]\n0000000C1E17D9C0 00007FF7C026629A System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Int32, System.Private.CoreLib],[<StartupCode$Prism-Core>.$Startup+RunAsync@245-31, Prism.Core]].MoveNext() [/_/src/libraries/System.Private.CoreLib/src/System/Runtime/CompilerServices/AsyncTaskMethodBuilderT.cs @ 350]\n0000000C1E17D9F0 00007FF87AA25749 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n0000000C1E17DA50 00007FF87AA25582 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n0000000C1E17DAA0 00007FF87AA2B95C System.Windows.Threading.DispatcherOperation.InvokeImpl()\n0000000C1E17DB20 00007FF87A9CDBA7 MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object)\n0000000C1E17DB60 00007FF81E66C344 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [/_/src/libraries/System.Private.CoreLib/src/System/Threading/ExecutionContext.cs @ 179]\n0000000C1E17DBD0 00007FF87A9CDAF2 MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object)\n0000000C1E17DC30 00007FF87AA2B6E3 System.Windows.Threading.DispatcherOperation.Invoke()\n0000000C1E17DC90 00007FF87AA28749 System.Windows.Threading.Dispatcher.ProcessQueue()\n0000000C1E17DD30 00007FF87AA28C8D System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n0000000C1E17DDC0 00007FF87A9C3885 MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\n0000000C1E17DE50 00007FF87A9C2A56 MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\n0000000C1E17DEA0 00007FF87AA25755 System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\n0000000C1E17DF00 00007FF87AA25582 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\n0000000C1E17DF50 00007FF87AA2741F System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\n0000000C1E17DFD0 00007FF87AA27033 System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority, System.Delegate, System.Object)\n0000000C1E17E030 00007FF87A9C27B5 MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\n0000000C1E17E150 00007FF7BF6E7E4C ILStubClass.IL_STUB_ReversePInvoke(Int64, Int32, Int64, Int64)\n0000000C1E17E408 00007ff8d7b7ef5c [InlinedCallFrame: 0000000c1e17e408] MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\n0000000C1E17E408 00007ff7bf718fba [InlinedCallFrame: 0000000c1e17e408] MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\n0000000C1E17E3E0 00007FF7BF718FBA ILStubClass.IL_STUB_PInvoke(System.Windows.Interop.MSG ByRef)\n0000000C1E17E4A0 00007FF87AA2891F System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame)\n0000000C1E17E530 00007FF80A4001ED System.Windows.Application.RunDispatcher(System.Object)\n0000000C1E17E570 00007FF80A3FEAA2 System.Windows.Application.RunInternal(System.Windows.Window)\n0000000C1E17E5D0 00007FF80EC74AAD Statical.Prism.App.Main()\n```\n\n\n\n### Reproduction Steps\n\nN/A\n\n### Expected behavior\n\n~~Crash 💥~~\n\n### Actual behavior\n\nCrash 💥\n\n### Regression?\n\nWe think this may be related to the new Fluent Theme, as we have not had this kind of crash before. Well, at least not with WPF...\n\n### Known Workarounds\n\nNone\n\n### Impact\n\nThe customer cannot use our application since it often crashes or freezes for them. We are unsure how many customers this affects, since we have not shipped the next major version with the Fluent Theme version yet - only a preview version.\n\nWe instructed the customer to update to the latest Windows version and update graphics drivers, since we have had issues with that before. The customer has done so but it has not resolved the issue.\n\n### Configuration\n\nFrom the customer:\n\n![Image](https://github.com/user-attachments/assets/8d0845ba-7f68-4b92-b157-4e9083717b7a)\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10609","RelatedDescription":"Open issue \"Application crash on customer machine (Fluent Theme?)\" (#10609)"},{"Id":"2934544914","IsPullRequest":false,"CreatedAt":"2025-03-20T08:41:17","Actor":"dotnet-maestro-bot","Number":"10607","RawContent":null,"Title":"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/9.0](https://github.com/dotnet/wpf/commits/release/9.0/) in `dotnet/wpf` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-wpf?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/wpf/issues/10607","RelatedDescription":"Open issue \"[dnceng-bot] Branch `wpf/release/9.0` can't be merged to Azdo internal branch\" (#10607)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-25T03:30:28.7526654Z","RunDurationInMilliseconds":443}