{"Data":{"GitHub":{"Issues":[{"Id":"2628922819","IsPullRequest":true,"CreatedAt":"2024-11-01T12:13:49","Actor":"dotnet-maestro[bot]","Number":"10027","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241101.1\r\n- **Date Produced**: November 1, 2024 11:39:46 PM UTC\r\n- **Commit**: 1818ed2babf890a1cd62fa96a1f03abdada2d003\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24530.1 to 10.0.0-beta.24551.1][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24530.1 to 10.0.0-beta.24551.1][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24530.1 to 10.0.0-beta.24551.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24530.1 to 10.0.0-beta.24551.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/e8d1fc3561...1818ed2bab\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10027)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10027","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10027)"},{"Id":"2628904570","IsPullRequest":true,"CreatedAt":"2024-11-01T12:00:22","Actor":"dotnet-maestro[bot]","Number":"10026","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241103.1\r\n- **Date Produced**: November 3, 2024 2:38:38 PM UTC\r\n- **Commit**: c9aa1c92b9927cfa7ef959d8b735b192cfc50ccf\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24531.1 to 10.0.0-alpha.1.24553.1][6]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24531.1 to 10.0.0-alpha.1.24553.1][6]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24531.1 to 10.0.0-alpha.1.24553.1][6]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2][7]\r\n\r\n[6]: https://github.com/dotnet/winforms/compare/380ea838bd...c9aa1c92b9\r\n[7]: https://github.com/dotnet/runtime/compare/1b27ee9197...408caa4e28\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10026)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24530.5 to 10.0.0-alpha.1.24552.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10026","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10026)"},{"Id":"2628774253","IsPullRequest":false,"CreatedAt":"2024-11-01T10:31:20","Actor":"HppZ","Number":"10025","RawContent":null,"Title":"Support `MediaElement.SetMediaStreamSource`","State":"open","Body":"https://learn.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.mediaelement.setmediastreamsource?view=winrt-26100","Url":"https://github.com/dotnet/wpf/issues/10025","RelatedDescription":"Open issue \"Support `MediaElement.SetMediaStreamSource`\" (#10025)"},{"Id":"2628147400","IsPullRequest":true,"CreatedAt":"2024-11-01T05:16:13","Actor":"dotnet-maestro[bot]","Number":"10024","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241031.1\r\n- **Date Produced**: October 31, 2024 1:36:25 PM UTC\r\n- **Commit**: 380ea838bdd9bba541fddb07f2d62103749bf6e7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24529.3 to 10.0.0-alpha.1.24531.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24529.3 to 10.0.0-alpha.1.24531.1][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24529.3 to 10.0.0-alpha.1.24531.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24528.7 to 10.0.0-alpha.1.24530.5][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/6505997339...380ea838bd\r\n[2]: https://github.com/dotnet/runtime/compare/cca022b621...1b27ee9197\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10024)","Url":"https://github.com/dotnet/wpf/pull/10024","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10024)"},{"Id":"2623919102","IsPullRequest":true,"CreatedAt":"2024-11-01T05:15:39","Actor":"dotnet-maestro[bot]","Number":"10019","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241030.1\r\n- **Date Produced**: October 30, 2024 11:49:47 PM UTC\r\n- **Commit**: e8d1fc3561447ab2e1015780db7c5388fc4a9b61\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24527.1 to 10.0.0-beta.24530.1][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24527.1 to 10.0.0-beta.24530.1][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24527.1 to 10.0.0-beta.24530.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24527.1 to 10.0.0-beta.24530.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/bee0a0f7b1...e8d1fc3561\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10019)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10019","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10019)"},{"Id":"2625648670","IsPullRequest":true,"CreatedAt":"2024-10-31T00:22:00","Actor":"JeremyKuhne","Number":"10023","RawContent":null,"Title":"Enable xunit testing in VS with the dispatcher","State":"open","Body":"Enable xunit testing in VS with the dispatcher\r\nThis change enables writing and debugging unit tests in the Test Explorer in Visual Studio. I added a new test project for WindowsBase that has a unit test that launches the SplashScreen as an example.\r\n\r\nIn order to make this happen I had to reference the xunit.stafact package which introduced a number of challenges to overcome. The package has a reference to the desktop sdk and needs to be used in a project that targets `net10.0-windows`, not `net10.0`. To make everything work seamlessly I had to:\r\n\r\n- Strip the platform reference\r\n- Apply actual versions from the sdk\r\n- Get rid of AnyCPU and explictly use x86 (everything has a native dependency)\r\n- Enable transitive copying of references for the unit test projects\r\n- Target the 10.0 SDK (would get version confusion otherwise)\r\n- Add an override setting for WinForms which still targets the 9.0 SDK\r\n- Remove other targets that were trying to fixup WindowsBase references from the .NET SDK\r\n\r\nThis builds on https://github.com/dotnet/wpf/pull/9914, which is included.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10023)","Url":"https://github.com/dotnet/wpf/pull/10023","RelatedDescription":"Open PR \"Enable xunit testing in VS with the dispatcher\" (#10023)"},{"Id":"2625167408","IsPullRequest":false,"CreatedAt":"2024-10-30T19:42:25","Actor":"MichaelSimons","Number":"10022","RawContent":null,"Title":"Upgrade opensuse helix usage to 15.6","State":"open","Body":"The [Power BI Docker EOL Usage report](https://msit.powerbi.com/groups/de8c4cb8-b06d-4af8-8609-3182bb4bdc7c/reports/98fbbdff-fe2c-4acd-b574-223be8b5b520?ctid=72f988bf-86f1-41af-91ab-2d7cd011db47&pbi_source=linkShare&bookmarkGuid=b9834f51-7a38-41ef-af72-b1e8fce8c07f) (Microsoft internal link) shows that wpf is using the opensuse-15.2-helix-amd64 image in a number of branches.  OpenSuse 15.4 went EOL on 07 Dec 2023.  Please upgrade to the OpenSuse 15.6 image added with https://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/1227.","Url":"https://github.com/dotnet/wpf/issues/10022","RelatedDescription":"Open issue \"Upgrade opensuse helix usage to 15.6\" (#10022)"},{"Id":"2624404818","IsPullRequest":true,"CreatedAt":"2024-10-30T15:04:01","Actor":"h3xds1nz","Number":"10021","RawContent":null,"Title":"[Cleanup] Add missing accessibility modifiers in System.Xaml (IDE0040)","State":"open","Body":"## Description\r\n\r\nAdds missing accessibility modifiers in `System.Xaml`. All of the edits were done automatically.\r\n\r\n## Customer Impact\r\n\r\nCleaner codebase.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nMinimal.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10021)","Url":"https://github.com/dotnet/wpf/pull/10021","RelatedDescription":"Open PR \"[Cleanup] Add missing accessibility modifiers in System.Xaml (IDE0040)\" (#10021)"},{"Id":"2624026350","IsPullRequest":false,"CreatedAt":"2024-10-30T12:58:39","Actor":"umanagarajan12","Number":"10020","RawContent":null,"Title":"Break Issue in Net9.0","State":"open","Body":"### Description\nWe've updated all our projects to support .NET 9.0. Our projects use a custom theme, which has been causing issues specifically in .NET 9.0, even though the same setup works seamlessly in .NET 8.0 and other frameworks. We've attached sample projects to illustrate this issue.\n### Replication Procedure\n\n1. Run the sample.\n2. Click the ComboBox to open the dropdown.\n\n### Screenshot\n![Image](https://github.com/user-attachments/assets/eb6cabc4-48be-4373-9b76-f0a50c5dbf48)\n\n[WpfAppNet90.zip](https://github.com/user-attachments/files/17572867/WpfAppNet90.zip)\n[WpfAppNet80.zip](https://github.com/user-attachments/files/17572875/WpfAppNet80.zip)\n","Url":"https://github.com/dotnet/wpf/issues/10020","RelatedDescription":"Open issue \"Break Issue in Net9.0\" (#10020)"},{"Id":"2618257573","IsPullRequest":true,"CreatedAt":"2024-10-30T09:20:12","Actor":"dotnet-maestro[bot]","Number":"10007","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241027.1\r\n- **Date Produced**: October 28, 2024 3:08:39 AM UTC\r\n- **Commit**: bee0a0f7b1e68e88c63261e127beee2ed06c6d13\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24525.3 to 10.0.0-beta.24527.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24525.3 to 10.0.0-beta.24527.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24525.3 to 10.0.0-beta.24527.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24525.3 to 10.0.0-beta.24527.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ee7a468d81...bee0a0f7b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10007)","Url":"https://github.com/dotnet/wpf/pull/10007","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10007)"},{"Id":"2619929283","IsPullRequest":true,"CreatedAt":"2024-10-30T09:20:03","Actor":"dotnet-maestro[bot]","Number":"10012","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241029.3\r\n- **Date Produced**: October 30, 2024 12:05:18 AM UTC\r\n- **Commit**: 6505997339fb040d02b8ac3c575bfaa1ec726757\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24529.3][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24529.3][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24529.3][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24526.1 to 10.0.0-alpha.1.24528.7][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/7376e50c5a...6505997339\r\n[4]: https://github.com/dotnet/runtime/compare/3648d836eb...cca022b621\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10012)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10012","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10012)"},{"Id":"2622783154","IsPullRequest":false,"CreatedAt":"2024-10-30T03:33:59","Actor":"ThomasGoulet73","Number":"10018","RawContent":null,"Title":"[Cleanup] Replace comments with named arguments","State":"open","Body":"In the codebase, there are a lot of comments specifying an argument value is for what argument when calling a method. These comments were probably written before \"Named Arguments\" were introduced in C# 7 ([Documentation](https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/named-and-optional-arguments)).\n\nHere's an example of code that could use named arguments instead of comments:\nhttps://github.com/dotnet/wpf/blob/86ef9ee8e3988a5fdf423551851f16c1a0f81ecc/src/Microsoft.DotNet.Wpf/src/System.Xaml/System/Xaml/XamlType.cs#L340\n\nReplacing them would make the code more readable and improve the maintainability. It would improve maintainability because renaming the argument in the called method without renaming the named arguments in the calls to said method would break the build instead of making the comments innacurate (Some comments in the code base are already innacurate).\n\nUnfortunately, it's not easy to automate this change. Some comments are to explain the value instead of naming the argument and some comments are innacurate (E.g.: The argument was renamed), this means that it requires some manual work. I'm able to make it work with a couple of regexes and some manual edits.","Url":"https://github.com/dotnet/wpf/issues/10018","RelatedDescription":"Open issue \"[Cleanup] Replace comments with named arguments\" (#10018)"},{"Id":"2622601593","IsPullRequest":false,"CreatedAt":"2024-10-30T00:49:19","Actor":"JeremyKuhne","Number":"10017","RawContent":null,"Title":"Align WPF and WinForms code style guidelines","State":"open","Body":"WPF and WinForms aren't far off. We both point to the runtime repo and Framework Design Guidelines, but WinForms has elaborated a bit more:\n\nhttps://github.com/dotnet/winforms/blob/main/docs/coding-style.md\n\nIf we share the same guidelines, it will facilitate moving between the two repos for both internal and external contributors.\n\n@Kuldeep-MS, @pchaurasia14 ","Url":"https://github.com/dotnet/wpf/issues/10017","RelatedDescription":"Open issue \"Align WPF and WinForms code style guidelines\" (#10017)"},{"Id":"2622330242","IsPullRequest":false,"CreatedAt":"2024-10-29T21:06:39","Actor":"Tanya-Solyanik","Number":"10016","RawContent":null,"Title":"[API Proposal]: New Clipboard and DataObject APIs","State":"open","Body":"This is a notification about an API proposal in WinForms that will be applicable to both WinForms and WPF.\nhttps://github.com/dotnet/winforms/issues/12362\n\nThank you @miloush for pointing out an omission on our part.","Url":"https://github.com/dotnet/wpf/issues/10016","RelatedDescription":"Open issue \"[API Proposal]: New Clipboard and DataObject APIs\" (#10016)"},{"Id":"2621449004","IsPullRequest":false,"CreatedAt":"2024-10-29T14:34:26","Actor":"DaveInCaz","Number":"10015","RawContent":null,"Title":"Tooltips rapidly close - existing WPF 4.8 application - some computers only","State":"open","Body":"### Description\n\nThis problem is specific to certain PCs, and I am looking for advice how to narrow down the cause. The problem has emerged for an existing compiled WPF 4.8 application, seemingly triggered by certain system updates.\n\nProblem: certain Tooltips will rapidly flash on/off. This is similar to other tooltip issues here but none were for .NET Framework 4.8. (https://github.com/dotnet/wpf/issues/7489, https://github.com/dotnet/wpf/issues/6710, https://github.com/dotnet/wpf/issues/6852, https://github.com/dotnet/wpf/issues/6289, https://github.com/dotnet/wpf/issues/6220)\n\nIn one example we had a user whose PC was updated from Windows 10 to 11; no problem before the update, problem occurs after the update. Something relevant must have changed -- but what? \n\n---\n\nI will gladly add any additional information about my application or system details that might be useful. But I'm not sure what to do next to figure that out.\n\n\n### Reproduction Steps\n\nMy application consistently shows the problem on some computers but I have not yet been able to create a small repro that also does so.\n\nOn PCs with this issue, when the user mouses over certain custom controls (derived from `Control`) the problem happens. Other controls have no problem.\n\n### Expected behavior\n\nTooltip remains visible.\n\n### Actual behavior\n\nTooltip briefly appears/disappears.\n\nUsing WPF Snoop the following events all are logged at the same moment:\n![Image](https://github.com/user-attachments/assets/df9d3307-0c41-4e5c-81a2-2a04050a1e78)\n\n\n\n### Regression?\n\nYes\n\n### Known Workarounds\n\nNone\n\n### Impact\n\nWe use the tooltips to summarize some info that the user otherwise can only access with many more steps.\n\n### Configuration\n\nSystem info... may or may not be relevant:\n\nFrom computer C **without** the issue:\n - `RuntimeInformation.FrameworkDescription = \".NET Framework 4.8.4739.0\"`\n - `System.Environment.Version = \"4.0.30319.42000\"`\n - OS Name\tMicrosoft Windows 10 Enterprise\n - Version\t10.0.19045 Build 19045\n\n\nFrom computer D **with** the issue:\n - `RuntimeInformation.FrameworkDescription = \".NET Framework 4.8.9277.0\"`\n - `System.Environment.Version = \"4.0.30319.42000\"`\n - OS Name\tMicrosoft Windows 11 Enterprise\n - Version\t10.0.22631 Build 22631\n\n\nFrom computer J **without** the issue:\n - `RuntimeInformation.FrameworkDescription = \".NET Framework 4.8.9277.0\"`\n - `System.Environment.Version = \"4.0.30319.42000\"`\n - OS Name\tMicrosoft Windows 11 Enterprise\n - Version\t10.0.22631 Build 22631\n\nNote that D and J are the same so I'm obviously missing some key distinguishing detail.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10015","RelatedDescription":"Open issue \"Tooltips rapidly close - existing WPF 4.8 application - some computers only\" (#10015)"},{"Id":"2619939108","IsPullRequest":true,"CreatedAt":"2024-10-29T02:08:40","Actor":"ThomasGoulet73","Number":"10013","RawContent":null,"Title":"Use ReadOnlyCollection.Empty","State":"open","Body":"## Description\r\nReplaces ReadOnlyCollection allocations with a shared singleton. I also replaced EmptyList with ReadOnlyCollection.Empty because it does the same thing, is a BCL API and allows to potentially allocate less ReadOnlyCollection instances.\r\n\r\n## Customer Impact\r\nBetter perf and memory usage.\r\n\r\n## Regression\r\nNone.\r\n\r\n## Testing\r\nLocal testing.\r\n\r\n## Risk\r\nLow.","Url":"https://github.com/dotnet/wpf/pull/10013","RelatedDescription":"Open PR \"Use ReadOnlyCollection.Empty\" (#10013)"},{"Id":"2619828982","IsPullRequest":true,"CreatedAt":"2024-10-29T00:14:38","Actor":"JeremyKuhne","Number":"10011","RawContent":null,"Title":"General using cleanup in C# files","State":"open","Body":"This removes unnecessary using statements and moves them outside of the namespaces when they were inside them.\r\n\r\nI manually cleaned up the headers a bit for several hundred files, but the cleanup there isn't exhaustive by any means. Changes are only to the tops of files.\r\n\r\nTo make this work a bit more cleanly I've added GlobalUsings.cs files to some of the assemblies.\r\n\r\nNOTE: This was done using the code tools in Visual Studio.\r\n\r\nHaving usings inside of namespaces makes it difficult to use CsWin32, which uses the published Widows metadata names. Unsurprisingly, namespaces all start with `Windows.` which doesn't resolve when trying to do a using inside of a namespace definition where `Windows` is part of the name.\r\n\r\nFinally, there are three HRESULT implementations in WPF, which are all visible in some assemblies. I had to put a couple of static usings inside of namespaces to resolve this. Moving to CsWin32 we can use the generated definition and avoid the conflicts.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10011)","Url":"https://github.com/dotnet/wpf/pull/10011","RelatedDescription":"Open PR \"General using cleanup in C# files\" (#10011)"},{"Id":"2618974084","IsPullRequest":false,"CreatedAt":"2024-10-28T19:04:57","Actor":"trebahl","Number":"10010","RawContent":null,"Title":"fix documentation for Popup.PlacementMode","State":"closed","Body":"### Description\n\nI have seen a couple of closed issues on this question, but they don't address fixing the documentation.\n\nLeft and right are swapped based on SystemParameters.MenuDropAlignment (including in modes Top and Bottom). \n\n````\n            bool dropFromRight = SystemParameters.MenuDropAlignment;\n\n            switch (placement)\n            {\n                case PlacementMode.Bottom:\n                case PlacementMode.Mouse:\n                    axis = PopupPrimaryAxis.Horizontal;\n                    if (dropFromRight)\n                    {\n                        if (i == 0) return new PointCombination(InterestPoint.BottomRight, InterestPoint.TopRight);\n                        if (i == 1) return new PointCombination(InterestPoint.TopRight, InterestPoint.BottomRight);\n                    }\n                    else\n                    {\n                        if (i == 0) return new PointCombination(InterestPoint.BottomLeft, InterestPoint.TopLeft);\n                        if (i == 1) return new PointCombination(InterestPoint.TopLeft, InterestPoint.BottomLeft);\n                    }\n                    break;\n````\n\nThis should be explained in the documentation.\n\n### Reproduction Steps\n\nDoesn't apply; I'm just begging for the documentation to match the implementation.\n\n\n### Expected behavior\n\nDocumentation explaining that if SystemParameters.MenuDropAlignment is true, then left and right are swapped.\n\n### Actual behavior\n\nDocumentation says that left is left and right is right.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\nProgrammers will waste time searching through the source code of wpf to understand the behaviour they see on screen.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10010","RelatedDescription":"Closed issue \"fix documentation for Popup.PlacementMode\" (#10010)"},{"Id":"2618908457","IsPullRequest":true,"CreatedAt":"2024-10-28T16:24:50","Actor":"h3xds1nz","Number":"10009","RawContent":null,"Title":"Remove PartialArray<T> in favor of Span<T> and avoid struct boxing","State":"open","Body":"## Description\r\n\r\nRemoves the internal `PartialArray<T>` which is basically duplicating `Span<T>` functionality (in cases where it is used, not globally, obviously). Since this is then passed to `IList<T>` params and used as an interface, the struct needs to be boxed on top of everything and most of those calls are done via dispatch instead of using it directly.\r\n\r\nGiven how few places it is used, we can just replace it and remove the type altogether. In some places it was just used to wrap a regular array without any benefit.\r\n\r\nThe removed null-checks were really for `null` but I've checked the call chains and there's no way it should ever be `null` (or it wouldn't matter if the `Span<T>` was empty).\r\n\r\n## Customer Impact\r\n\r\nIncreased performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10009)","Url":"https://github.com/dotnet/wpf/pull/10009","RelatedDescription":"Open PR \"Remove PartialArray<T> in favor of Span<T> and avoid struct boxing\" (#10009)"},{"Id":"2618845168","IsPullRequest":true,"CreatedAt":"2024-10-28T15:58:17","Actor":"h3xds1nz","Number":"10008","RawContent":null,"Title":"Use ReadOnlySpan<HwndWrapperHook> instead of a temporary heap array","State":"open","Body":"## Description\r\n\r\nAvoids creation of temporary heap array when initiating `HwndWrapper`, contributing to startup performance.\r\n\r\n- I've also replaced `\"\"` with `string.Empty` to use singletons in the API calls.\r\n- I've also modified the hwnd class-name creation to avoid some allocations, logic of course stays the same. (to be honest, the best would be to cache the assembly name in case you're creating multiple windows, since now this needs to be retrieved everytime though #8567 has optimized this to at least be just 1 call per invocation but could be zero after 1st retrieval, really).\r\n- Tons of unnecessary usings from touched files were removed.\r\n- Also removes `HWND` struct as a bonus (one of many, this one is unsed and also not particularly perfect).\r\n\r\n## Customer Impact\r\n\r\nIncreased performance, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, app run.\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10008)","Url":"https://github.com/dotnet/wpf/pull/10008","RelatedDescription":"Open PR \"Use ReadOnlySpan<HwndWrapperHook> instead of a temporary heap array\" (#10008)"},{"Id":"2617642116","IsPullRequest":false,"CreatedAt":"2024-10-28T08:11:33","Actor":"Laniusexcubitor","Number":"10006","RawContent":null,"Title":"[API Proposal]: Make ItemsControl::OnBringItemIntoView protected","State":"open","Body":"### Background and motivation\n\nWhen inheriting from ItemsControl, there is no direct way to use the existing API, but it can be useful to have the possibility to use it.\n\n### API Proposal\n\n```csharp\nprotected internal object OnBringItemIntoView(object arg)\n{\n    //\n}\n```\n\n### API Usage\n\nI just want to be able use the same code as in ListBox\n```csharp\npublic void ScrollIntoView(object item)\n{\n    if (ItemContainerGenerator.Status == GeneratorStatus.ContainersGenerated)\n    {\n        OnBringItemIntoView(item);\n    }\n    else\n    {\n        // The items aren't generated, try at a later time\n        Dispatcher.BeginInvoke(DispatcherPriority.Loaded, new DispatcherOperationCallback(OnBringItemIntoView), item);\n    }\n}\n```\n\n\n### Alternative Designs\n\nPerhaps a better alternative would be to bring the public method `ListBox::ScrollIntoView` up to `ItemsControl`. But make it virtual, as e.g. `ComboBox` needs some special love (see `ComboBoxAutomationProvider::ScrollItemIntoView`).\n\n### Risks\n\nCould break Applications when developers have a derived `ItemsControl` where they already have a `OnBringItemIntoView` method with the same signature. Or in case of the alternative a `ScrollIntoView` method.","Url":"https://github.com/dotnet/wpf/issues/10006","RelatedDescription":"Open issue \"[API Proposal]: Make ItemsControl::OnBringItemIntoView protected\" (#10006)"},{"Id":"2613946437","IsPullRequest":true,"CreatedAt":"2024-10-28T05:20:37","Actor":"dotnet-maestro[bot]","Number":"9997","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241025.3\r\n- **Date Produced**: October 25, 2024 9:09:03 PM UTC\r\n- **Commit**: ee7a468d815a3401b842e23ee336dd9d679d973d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24523.2 to 10.0.0-beta.24525.3][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24523.2 to 10.0.0-beta.24525.3][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24523.2 to 10.0.0-beta.24525.3][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24523.2 to 10.0.0-beta.24525.3][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/89040b649a...ee7a468d81\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/9997)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/9997","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9997)"},{"Id":"2615454569","IsPullRequest":true,"CreatedAt":"2024-10-28T05:18:19","Actor":"dotnet-maestro[bot]","Number":"10001","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241026.1\r\n- **Date Produced**: October 26, 2024 1:17:05 PM UTC\r\n- **Commit**: 7376e50c5a762131398992def2e76f4586fe5025\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24524.3 to 10.0.0-alpha.1.24526.1][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24524.3 to 10.0.0-alpha.1.24526.1][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24524.3 to 10.0.0-alpha.1.24526.1][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24523.5 to 10.0.0-alpha.1.24526.1][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/132e6e7e5d...7376e50c5a\r\n[4]: https://github.com/dotnet/runtime/compare/edaa25e694...3648d836eb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10001)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10001","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10001)"},{"Id":"2617025245","IsPullRequest":false,"CreatedAt":"2024-10-28T01:03:33","Actor":"ShannonZ","Number":"10005","RawContent":null,"Title":"Memory leak on some graphic cards","State":"open","Body":"### Description\n\n [Here](https://github.com/ShannonZ/playground) is a minimal reproducible demo. \nThere is a **rapid memory increment after clicking the minimize button**. I've tested this problem with different graphic cards (integrated and discrete ). Until now, the following cards could reproduce the memory leak issue:\n\n- NVIDIA GeForce GTX 1650\n- NVIDIA GeForce GTX 3050\n- NVidia Geforce GT 710\n- ATI 6750\n- Intel UHD 630 Graphics (integrated with i7-9700)\n\nI've also tested the problem on different OSes (win10 LTSC2018-2022, win10 home, win 11 home) and .NET versions (framework 4.5 4.6 4.7 4.8, dotnet6 8).  Unfortunately, all these software conditions have the same problem.\n\nFor Intel UHD 630, driver versions from old 27.x to the latest 30.x were tested, no help.\n\n[3GB version dump file](https://drive.google.com/file/d/1QV4osqoLkoK2fmPcCp7qvhaWji63bejX/view?usp=sharing)\n\n\n\n\n### Reproduction Steps\n\n[This video](https://drive.google.com/file/d/1M__dGl626e1GMHajEe12PMH9UUJxCmIf/view?usp=sharing) is a step-by-step example demonstrating how to reproduce this issue.\n\n### Expected behavior\n\nThere should be no memory leaks when running on different graphics cards.\n\n### Actual behavior\n\nMemory leaks occur when running on some graphics cards.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n1. Comment the `WindowChrome` part out in Style could solve the leak problem. But I don't know why; (No minimization button, should press win+D to minimize the window)\n![image](https://github.com/user-attachments/assets/14e0be46-aef9-4357-a817-699675dbc73d);\n2. Using software-rendering;\n3. Restore the window to the normal state, those memory would be \"released\". [Video](https://drive.google.com/file/d/1Rf1hP5xpFwYSGM7sCO4tXTM53WqmPjrJ/view?usp=sharing);\n4. No obvious memory leak on NVIDIA Geforce RTX 4060 Laptop GPU, win 11\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10005","RelatedDescription":"Open issue \"Memory leak on some graphic cards\" (#10005)"},{"Id":"2616176517","IsPullRequest":true,"CreatedAt":"2024-10-26T22:12:01","Actor":"h3xds1nz","Number":"10004","RawContent":null,"Title":"Remove locks on Style/TriggerBase counters, use atomic increments instead","State":"open","Body":"## Description\r\n\r\nSimilarly as in #9741, we will use simple `Interlocked.Increment` to retrieve the next globally unique index, instead of using a full-blown `Monitor`-type lock for such simple operation. This will contribute to startup performance mostly.\r\n\r\nI've also removed `IsEqual` private static method in `Style` as it was just staring there at me, unused.\r\n\r\n## Customer Impact\r\n\r\nIncreased (mostly startup) performance.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow, this is very easy to grasp.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10004)","Url":"https://github.com/dotnet/wpf/pull/10004","RelatedDescription":"Open PR \"Remove locks on Style/TriggerBase counters, use atomic increments instead\" (#10004)"},{"Id":"2616156825","IsPullRequest":true,"CreatedAt":"2024-10-26T21:32:48","Actor":"h3xds1nz","Number":"10003","RawContent":null,"Title":"Update PropertyValues in TriggerBase/FrameworkElementFactory via reference","State":"open","Body":"## Description\r\n\r\nAdds ability to retrieve elements via `ref` from `FrugalStructList<T>` and the underlying storage formats, allowing for future optimizations. I intentionally did not modify the indexer as this can be done easily later on, so there's a new method for it now, which will allow for incremental optimizations in future on another types, where it makes sense and is safe to do so.\r\n\r\nThis allows us to update items via reference, which is particularly useful in case of `PropertyValues` used in `TriggerBase` and `FrameworkElementFactory` since it is a struct that needs to be copied everytime on update back and forth.\r\n\r\nIt is particularly efficient optimization here since the struct is full of managed pointers and ain't blittable, which takes considerable time to track back and forth for a simple update on one property.\r\n\r\nI've also updated the getter/setter on `FrugalStructList<T>` for a minor speed boost, since it is used in almost every WPF collection, every branch counts. Nothing extra new, this is used in `List<T>` by default for several releases.\r\n\r\n### Original getter/setter prolog:\r\n\r\n```assembly\r\nmov rcx, [rcx+8]\r\ntest rcx, rcx      \r\nje short L0021 \r\ncmp edx, [rcx+8]     \r\njge short L0021\r\ntest edx, edx\r\njl short L0021\r\n```\r\n\r\n### New getter/setter prolog:\r\n\r\n```assembly\r\nmov rcx, [rcx+8]\r\ntest rcx, rcx    \r\nje short L001d \r\ncmp edx, [rcx+8] \r\njae short L001d\r\n```\r\n\r\n### Updating PropertyValues before/after\r\n\r\n| Method          |  Mean [ns] | Error [ns] | StdDev [ns] | Code Size [B] | Allocated [B] |\r\n|---------------- |----------:|-----------:|------------:|--------------:|--------------:|\r\n| Original | 459.11 ns |   2.278 ns |    2.131 ns |       1,072 B |             - |\r\n| PR__EDIT|  58.45 ns |   0.464 ns |    0.434 ns |         469 B |             - |\r\n\r\n<details><summary>Minimal benchmark code</summary>\r\n\r\n```csharp\r\n[Benchmark]\r\npublic static FrugalStructList<PropertyValue> PropertyValues = new();\r\npublic static FrugalStructList<PropertyValue> PropertyValues2 = new();\r\n\r\npublic static IEnumerable<TriggerCondition[]> KeysToTest\r\n{\r\n    get\r\n    {\r\n        yield return new TriggerCondition[] { new TriggerCondition() {  SourceChildIndex = 4}, new TriggerCondition() { SourceChildIndex = 1 }, new TriggerCondition() { SourceChildIndex = 3 } };\r\n    }\r\n}\r\n\r\n[GlobalSetup]\r\npublic static void Setup()\r\n{\r\n  PropertyValues.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n\r\n  PropertyValues2.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues2.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues2.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues2.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues2.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n  PropertyValues2.Add(new PropertyValue() { ChildName = \"abcd\", Conditions = new TriggerCondition[5], Property = TextBox.TextProperty, ValueInternal = 45, ValueType = PropertyValueType.Trigger });\r\n}\r\n\r\n[ArgumentsSource(nameof(KeysToTest))]\r\npublic void Original(TriggerCondition[] triggerCondition)\r\n{\r\n    // Set Condition for all data triggers\r\n    for (int i = 0; i < PropertyValues.Count; i++)\r\n    {\r\n        PropertyValue propertyValue = PropertyValues[i];\r\n\r\n        propertyValue.Conditions = triggerCondition;\r\n        switch (propertyValue.ValueType)\r\n        {\r\n            case PropertyValueType.Trigger:\r\n                propertyValue.ValueType = PropertyValueType.DataTrigger;\r\n                break;\r\n            case PropertyValueType.DataTrigger:\r\n                propertyValue.ValueType = PropertyValueType.Trigger;\r\n                break;\r\n            case PropertyValueType.PropertyTriggerResource:\r\n                propertyValue.ValueType = PropertyValueType.DataTriggerResource;\r\n                break;\r\n            default:\r\n                throw new InvalidOperationException(\"fail\");\r\n        }\r\n\r\n        // Put back modified struct\r\n        PropertyValues[i] = propertyValue;\r\n    }\r\n}\r\n\r\n[Benchmark]\r\n[ArgumentsSource(nameof(KeysToTest))]\r\npublic void PR__EDIT(TriggerCondition[] triggerCondition)\r\n{\r\n    // Set Condition for all data triggers\r\n    for (int i = 0; i < PropertyValues2.Count; i++)\r\n    {\r\n        ref PropertyValue propertyValue = ref PropertyValues2.GetEntryAtRef(i);\r\n\r\n        propertyValue.Conditions = triggerCondition;\r\n        switch (propertyValue.ValueType)\r\n        {\r\n            case PropertyValueType.Trigger:\r\n                propertyValue.ValueType = PropertyValueType.DataTrigger;\r\n                break;\r\n            case PropertyValueType.DataTrigger:\r\n                propertyValue.ValueType = PropertyValueType.Trigger;\r\n                break;\r\n            case PropertyValueType.PropertyTriggerResource:\r\n                propertyValue.ValueType = PropertyValueType.DataTriggerResource;\r\n                break;\r\n            default:\r\n                throw new InvalidOperationException(\"fail\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n</details>\r\n\r\n## Customer Impact\r\n\r\nIncreased startup performance mostly, but also when dynamically creating triggers at runtime and obviously everything related to ContentPresenter, Validation, ItemsControl templates etc. I could observe about several milliseconds improvement with a simple app with a few controls with ScrollViewer (ListBox) etc.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, sample apps testing with styles/triggers to check they're applied property.\r\n\r\n## Risk\r\n\r\nLow-to-medium, reviewers shall check that the `ref` is not forwarded/used anywhere while the `FrugalStructList<T>` could be modified (this really means when Grow or for example Remove happens), R/W operations via indexer do not matter as they do not modify the backing store in size/copy it.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10003)","Url":"https://github.com/dotnet/wpf/pull/10003","RelatedDescription":"Open PR \"Update PropertyValues in TriggerBase/FrameworkElementFactory via reference\" (#10003)"},{"Id":"2615840193","IsPullRequest":true,"CreatedAt":"2024-10-26T12:36:33","Actor":"h3xds1nz","Number":"10002","RawContent":null,"Title":"Optimize lookups in FontEmbeddingManager, use HashSet over Dictionary","State":"open","Body":"## Description\r\n\r\nOptimizes methods in `FontEmbeddingManager`, using `HashSet<ushort>` over `Dictionary<ushort, bool>` since the `bool` is useless and as the comment says, it was always the plan anyways.\r\n\r\n- `GetUsedGlyphs` throws `KeyNotFoundException` over `ArgumentException` but that bug was already present.\r\n    - I'll log an issue for this later.\r\n\r\n### 3 Different faces, 9 Glyph Runs\r\n\r\n| Method          | Mean [ns]  | Error [ns] | StdDev [ns] | Gen0   | Code Size [B] | Allocated [B] |\r\n|---------------- |-----------:|-----------:|------------:|-------:|--------------:|--------------:|\r\n| Original | 1,344.4 ns |   13.79 ns |    12.23 ns | 0.1507 |       1,066 B |        2544 B |\r\n| PR_EDIT |   850.7 ns |   11.54 ns |    10.23 ns | 0.1297 |       1,577 B |        2184 B |\r\n\r\n<details>\r\n<summary>Benchmark data source</summary>\r\n\r\n```csharp\r\nyield return new List<GlyphRun>() { giveme(\"Consolas\", \"hello\"), giveme(\"Arial\", \"hannah\"), giveme(\"Consolas\", \"test\"),\r\n                                    giveme(\"Arial\", \"hello\"), giveme(\"Consolas\", \"hannah\"), giveme(\"Arial\", \"test\"),\r\n                                    giveme(\"Times New Roman\", \"hello\"), giveme(\"Times New Roman\", \"hannah\"), giveme(\"Times New Roman\", \"test\") };\r\n\r\n```\r\n\r\n</details>\r\n\r\n### 1 font, 9 Glyph Runs (XpsFontSubsetter scenario)\r\n\r\n| Method          | Mean [ns]  | Error [ns] | StdDev [ns] | Gen0   | Code Size [B] | Allocated [B] |\r\n|---------------- |-----------:|-----------:|------------:|-------:|--------------:|--------------:|\r\n| Original | 1,401.2 ns |    5.46 ns |     5.11 ns | 0.1087 |       1,063 B |        1832 B |\r\n| PR_EDIT |   878.1 ns |    3.87 ns |     3.43 ns | 0.1020 |       1,394 B |        1712 B |\r\n\r\n<details>\r\n<summary>Benchmark data source</summary>\r\n\r\n```csharp\r\nyield return new List<GlyphRun>() { giveme(\"Consolas\", \"hello\"), giveme(\"Consolas\", \"hannah\"), giveme(\"Consolas\", \"test\"),\r\n                                    giveme(\"Consolas\", \"hello\"), giveme(\"Consolas\", \"hannah\"), giveme(\"Consolas\", \"test\"),\r\n                                    giveme(\"Consolas\", \"hello\"), giveme(\"Consolas\", \"hannah\"), giveme(\"Consolas\", \"Okay, lets change this a bit!\") };\r\n\r\n```\r\n\r\n</details>\r\n\r\n## Customer Impact\r\n\r\nImproved performance, slightly decreased allocations. This is used by the `XpsFontSubsetter`, so it could gain a bit of perf.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build.\r\n\r\n## Risk\r\n\r\nLow, just a simple swap.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10002)","Url":"https://github.com/dotnet/wpf/pull/10002","RelatedDescription":"Open PR \"Optimize lookups in FontEmbeddingManager, use HashSet over Dictionary\" (#10002)"},{"Id":"2614730358","IsPullRequest":true,"CreatedAt":"2024-10-25T17:33:54","Actor":"h3xds1nz","Number":"10000","RawContent":null,"Title":"Replace Hashtable/ArrayList in AccessKeyManager and remove locks","State":"open","Body":"#10000, would you look at that?\r\n\r\n## Description\r\n\r\nThis basically turned into overhaul of `AccessKeyManager` because unless I've missed a class on threading and read the code incorrectly, there's just a lot of unnecessary overhead within the entire class that deserves to be removed.\r\n\r\n- I've removed the locking when accessing `_keyToElements` since it is an instance member and all instances are inherently one per thread (`AccessKeyManager` has a <ins>private</ins> `ctor` that is only called via <ins>private</ins> `Current` property where the instance is stored in `[ThreadStatic] s_accessKeyManager` variable. So there should be no way how a different thread can ever gain access to an instance of the dictionary with current code.\r\n- This means that all methods can inherently be `static` as they either do not modify state or request the one-per-thread instance from `Current` and can gain access to the only instance member via the property.\r\n- `AccessKeyInformation` is now a `readonly struct` as there's no reason for it to be mutable.\r\n- Instead of using untyped `ArrayList`, we will swap to `List<WeakReference<IInputElement>>`.\r\n- Instead of using untyped `Hashtable`, we will swap to `Dictionary<string, List<WeakReference<IInputElement>>>`.\r\n- Instead of using untyped `WeakReference`, we will use the generic `WeakReference<IInputElement>`.\r\n- `CriticalGetActiveSource` was removed as it duplicates `GetActiveSource`.\r\n- Some members in `AccessKeyEventArgs` / `AccessKeyPressedEventArgs` were made `readonly`.\r\n\r\n## Customer Impact\r\n\r\nIncreased performance, faster startup, decreased allocations.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nLocal build, testing with access keys.\r\n\r\n## Risk\r\n\r\nLow-to-medium, while the changes are mostly replacements, there are different uses of indexers (`Hashtable` vs `Dictionary`) and work with generic `WeakReference` is different, so reviewers shall pay attention I did do anything that shall change behaviour in that regard though from my testing it seemed fine.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10000)","Url":"https://github.com/dotnet/wpf/pull/10000","RelatedDescription":"Open PR \"Replace Hashtable/ArrayList in AccessKeyManager and remove locks\" (#10000)"},{"Id":"2614529627","IsPullRequest":false,"CreatedAt":"2024-10-25T16:08:34","Actor":"MichaelSimons","Number":"9998","RawContent":null,"Title":"autogenerated files by Microsoft Visual C++ that may can be deleted","State":"open","Body":"Transferred WPF specific files from https://github.com/dotnet/aspnetcore/issues/58632 originally logged by @dviererbe\n\n### Describe the Bug\n\nI was running lintian (static analysis tool for deb packages) in pedantic mode and it made suggestion to remove auto generated files from the source. I just wanted to share these remarks here, in case they may be useful. These files seem not to be important for Linux source built.\n\n```\nP: dotnet9 source: source-contains-autogenerated-visual-c++-file [src/wpf/src/Microsoft.DotNet.Wpf/src/PenImc/dll/resource.h]\n```\n\n### Steps to Reproduce\n\nFiles in the corresponding repositories:\n- [`src/wpf/src/Microsoft.DotNet.Wpf/src/PenImc/dll/resource.h`](https://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/PenImc/dll/resource.h)\n\n\n### Other Information\n\n```\n$ lintian-explain-tags source-contains-autogenerated-visual-c++-file\nP: source-contains-autogenerated-visual-c++-file\nN: \nN:   The following file is autogenerated by Microsoft Visual C++.\nN:   \nN:   They are usually provided for the convenience of users. These files usually just take up space\nN:   in the tarball and are of no use in Debian.\nN:   \nN:   Check if upstream also provides source-only tarballs that you can use as the upstream\nN:   distribution instead. If not, you may want to ask upstream to provide source-only tarballs.\nN: \nN:   Visibility: pedantic\nN:   Show-Always: no\nN:   Check: cruft\n```","Url":"https://github.com/dotnet/wpf/issues/9998","RelatedDescription":"Open issue \"autogenerated files by Microsoft Visual C++ that may can be deleted\" (#9998)"},{"Id":"2613596641","IsPullRequest":false,"CreatedAt":"2024-10-25T09:36:49","Actor":"h3xds1nz","Number":"9996","RawContent":null,"Title":"[API Proposal]: Implement IEquatable interface on DpiScale","State":"open","Body":"### Background and motivation\n\nCurrently, the `DpiScale` struct does not implement `IEquatable`, while we have an internal implemented wrapper class `DpiScale2` that does implement it and wraps this struct. This is for example used as a dictionary key in `StylusLogic`, which could then be simplified to use the regular struct and avoid for example temporary heap allocs on lookup.\n\nThere were already some boxing issues solved in #6309 but the equality is done with an internal `Equals` currently, however as Stephen Toub mentions, the hope is for `DpiScale` to implement `IEquatable` in the future and I couldn't agree more.\n\nWhile at it, I'd mark the struct as `readonly` since it is designed to be immutable anyways.\n\nThe hope is to have then 1 unifying type that we can use to represent `DpiScale` in different scenarios and not having to depend on internal types that are just wrappers around the struct to use it in other places.\n\n### API Proposal\n\n```diff\nnamespace System.Windows;\n\n- public partial struct DpiScale\n+ public readonly partial struct DpiScale : IEquatable<DpiScale>\n{\n+   public bool Equals(DpiScale other)\n+   public override bool Equals(object obj)\n+   public override int GetHashCode()\n+   public static bool operator ==(DpiScale left, DpiScale right)\n+   public static bool operator !=(DpiScale left, DpiScale right)\n}\n```\n\n\n### API Usage\n\nBesides other places:\n\nhttps://github.com/dotnet/wpf/blob/6c96913d693c56922e697b23b3053aa604d3bd2c/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/Stylus/Common/StylusLogic.cs#L183\n\n### Possible additions\n\nWe could also add a public utility factory method that's currently also on `DpiScale2`, that is `FromPixelsPerInch`, I believe it has its uses:\nhttps://github.com/dotnet/wpf/blob/6c96913d693c56922e697b23b3053aa604d3bd2c/src/Microsoft.DotNet.Wpf/src/PresentationCore/MS/internal/DpiScale2.cs#L202\n\n### Risks\n\nAdding `readonly` is not a breaking change, adding `IEquatable` can obviously produce a new behavior in terms of equality comparisons but I believe it is the right thing to do moving forward.","Url":"https://github.com/dotnet/wpf/issues/9996","RelatedDescription":"Open issue \"[API Proposal]: Implement IEquatable interface on DpiScale\" (#9996)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-04T03:30:29.1204023Z","RunDurationInMilliseconds":384}