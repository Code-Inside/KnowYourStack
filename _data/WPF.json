{"Data":{"GitHub":{"Issues":[{"Id":"1144738354","IsPullRequest":true,"CreatedAt":"2022-02-19T15:18:15","Actor":"dotnet-maestro[bot]","Number":"6157","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220219.1\r\n- **Date Produced**: February 19, 2022 2:26:41 PM UTC\r\n- **Commit**: d63f7d7caff090e7f107913f88a33016155f00b1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22118.3 to 7.0.0-preview.3.22119.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22118.3 to 7.0.0-preview.3.22119.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.9][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8494813...d63f7d7\r\n[2]: https://github.com/dotnet/runtime/compare/cc649ac...ca6f420\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6157","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6157)"},{"Id":"1144705453","IsPullRequest":true,"CreatedAt":"2022-02-19T13:48:39","Actor":"dotnet-maestro[bot]","Number":"6156","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220217.2\r\n- **Date Produced**: February 18, 2022 12:44:37 AM UTC\r\n- **Commit**: 49750c02e63d0ad3a77d035bba7498a0b1acd218\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22114.7 to 7.0.0-beta.22117.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22114.7 to 7.0.0-beta.22117.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22114.7 to 7.0.0-beta.22117.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22114.7 to 7.0.0-beta.22117.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22114.7 to 7.0.0-beta.22117.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6d97726...49750c0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6156","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6156)"},{"Id":"1144627651","IsPullRequest":true,"CreatedAt":"2022-02-19T09:24:50","Actor":"Ibrahimogod","Number":"6155","RawContent":null,"Title":"Command Base class Added (implements ICommand)","State":"open","Body":"Fixes #6151 \r\n\r\n## Description\r\nWeakEventManager Class Added to manage Events,\r\nICommand Interface Implemented with Command Class to be Base Class That takes an Action to Execute \r\n\r\n## Customer Impact\r\n\r\nmake it easy for developer to use MVVM with Command Binding in WPF\r\n\r\n## Regression\r\n\r\n## Testing\r\nTested Successfully on a wpf app\r\n\r\n## Risk\r\nJust make sure you don't have a class with \"Command\" where you Use System.Windows.Input","Url":"https://github.com/dotnet/wpf/pull/6155","RelatedDescription":"Open PR \"Command Base class Added (implements ICommand)\" (#6155)"},{"Id":"1143803400","IsPullRequest":true,"CreatedAt":"2022-02-19T09:00:53","Actor":"Ibrahimogod","Number":"6152","RawContent":null,"Title":"Command Base class Added (implements ICommand)","State":"closed","Body":"Fixes #6151 \r\n\r\n## Description\r\nWeakEventManager Class Added to manage Events,\r\nICommand Interface Implemented with Command Class to be Base Class That takes an Action to Execute \r\n\r\n## Customer Impact\r\n\r\nmake it easy for developer to use MVVM with Command Binding in WPF\r\n\r\n## Regression\r\n\r\n## Testing\r\nTested Successfully on a wpf app\r\n\r\n## Risk\r\nJust make sure you don't have a class with \"Command\" where you Use System.Windows.Input","Url":"https://github.com/dotnet/wpf/pull/6152","RelatedDescription":"Closed or merged PR \"Command Base class Added (implements ICommand)\" (#6152)"},{"Id":"1143954937","IsPullRequest":true,"CreatedAt":"2022-02-19T00:09:51","Actor":"dotnet-maestro[bot]","Number":"6154","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220218.3\r\n- **Date Produced**: February 18, 2022 11:17:05 PM UTC\r\n- **Commit**: 8494813dfe5cacb95d2abe6e214e47fa13dbca82\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22118.1 to 7.0.0-preview.3.22118.3][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22116.9 to 7.0.0-preview.3.22118.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/7df09af...8494813\r\n[2]: https://github.com/dotnet/runtime/compare/793185a...cc649ac\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6154","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6154)"},{"Id":"1143907325","IsPullRequest":false,"CreatedAt":"2022-02-18T23:01:23","Actor":"ebussa","Number":"6153","RawContent":null,"Title":"XamlC error after upgrading Visual Studio / SDK 6.0.2","State":"open","Body":"After updating Visual Studio / SDK 6.0.2, I am seeing the following Xaml compiler errors in my WPF App:\r\n\r\n```\r\nXamlC error XFC0000 : Cannot resolve type \"Application\"\r\nXamlC error XFC0000 : Cannot resolve type \"Window\".\r\n```\r\nI have isolated the cause of these errors to a package reference that references 'Xamarin.Forms'.  This package reference worked fine prior to installing the update.\r\n\r\n### Repro Steps\r\n\r\n1. Create a new WPF App.\r\n2. Add a package reference to 'Xamarin.Forms'.\r\n3. XAML compiler can not resolve \"Application\" and \"Window\" types.\r\n","Url":"https://github.com/dotnet/wpf/issues/6153","RelatedDescription":"Open issue \"XamlC error after upgrading Visual Studio / SDK 6.0.2\" (#6153)"},{"Id":"1143795843","IsPullRequest":false,"CreatedAt":"2022-02-18T21:26:06","Actor":"Ibrahimogod","Number":"6151","RawContent":null,"Title":"No Base Implementation For ICommand Interface  for WPF apps ","State":"open","Body":"Implementation needed for Command Base Class That works for WPF Command Binding as it works for Xamarin Forms","Url":"https://github.com/dotnet/wpf/issues/6151","RelatedDescription":"Open issue \"No Base Implementation For ICommand Interface  for WPF apps \" (#6151)"},{"Id":"1143681881","IsPullRequest":true,"CreatedAt":"2022-02-18T20:23:09","Actor":"dotnet-maestro[bot]","Number":"6150","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220218.1\r\n- **Date Produced**: February 18, 2022 7:29:15 PM UTC\r\n- **Commit**: 7df09af6ec6376863253bff7b111e85f457d1ad8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.3.22115.11 to 7.0.0-preview.3.22118.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.3.22115.11 to 7.0.0-preview.3.22118.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22116.9][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/01fb65d...7df09af\r\n[2]: https://github.com/dotnet/runtime/compare/14e6411...793185a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6150","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6150)"},{"Id":"1142808709","IsPullRequest":true,"CreatedAt":"2022-02-18T11:02:22","Actor":"dotnet-maestro[bot]","Number":"6149","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20220218.1\r\n- **Date Produced**: February 18, 2022 10:10:16 AM UTC\r\n- **Commit**: 21ded4b588dd69d8c17e9f8ba21f02f1a83b11dc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 7.0.0-preview.3.22116.6 to 7.0.0-preview.3.22118.1][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC21ded4b&targetVersion=GC21ded4b&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6149","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#6149)"},{"Id":"1142678202","IsPullRequest":true,"CreatedAt":"2022-02-18T09:06:01","Actor":"singhashish-wpf","Number":"6148","RawContent":null,"Title":"Add rules to fabricbot","State":"open","Body":"Adding rules to fabric bot for servicing consider and community contributions label.","Url":"https://github.com/dotnet/wpf/pull/6148","RelatedDescription":"Open PR \"Add rules to fabricbot\" (#6148)"},{"Id":"1142542148","IsPullRequest":false,"CreatedAt":"2022-02-18T07:32:16","Actor":"vsfeedback","Number":"6147","RawContent":null,"Title":"Windows MediaPlayer finalizer hang","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Windows-MediaPlayer-finalizer-hang/1485862)._\n\n---\nWindows Media Player (the application) fails to play a specific video - an mp4 with h264 (High 4:2:2) profile. And then hangs the app when trying to close (window itself is closed, but app can be seen in task manager.\n\nIn WPF, I can repro something similar by using MediaPlayer under a VideoDrawing element. Opening/playing a good file (e.g. mp4 with standard h264 profile) will play as expected in the view. Opening/playing the bad file doesn't work. All further attempts to play/open other files fail now as well.\n\nWhen in this state, a solid repro of the actual hang is to call GC. Collect() when the main window is closed.\nThe finalizer is being called, causing a hang. StackTrace:\n```\n[Managed to Native Transition]\nPresentationCore.dll! System.Windows.Media.SafeMediaHandle.ReleaseHandle() Line 42\n\tat /_/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Media/safemediahandle.cs(42)\nSystem.Private.CoreLib.dll! System.Runtime.InteropServices.SafeHandle.InternalRelease(bool disposeOrFinalizeOperation) Line 241\n\tat /_/src/libraries/System.Private.CoreLib/src/System/Runtime/InteropServices/SafeHandle.cs(241)\nSystem.Private.CoreLib.dll! System.Runtime.InteropServices.SafeHandle.Dispose(bool disposing) Line 97\n\tat /_/src/libraries/System.Private.CoreLib/src/System/Runtime/InteropServices/SafeHandle.cs(97)\nSystem.Private.CoreLib.dll! System.Runtime.InteropServices.SafeHandle.~SafeHandle() Line 72\n\tat /_/src/libraries/System.Private.CoreLib/src/System/Runtime/InteropServices/SafeHandle.cs(72)\n\n```\n\nA semi-workaround: Keep a static list of `MediaPlayer` objects and *never* null them out. They never get the finalizer hang, but can still prevent videos from playing if in the broken state.\nCurrent workaround: Restart application and use video files that work.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/26/2021, 05:08 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Chris Roybal on 8/3/2021, 01:37 AM: \n\n<p>Looks like as soon as MediaPlayer is in the bad state, the finalizer thread is already stuck. Pausing the attached debugger at any time after, I can see the finalizer thread is stuck waiting. This leads to constant memory leaks and random application hangs.</p>\n\n#### Feedback Bot on 11/1/2021, 04:33 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Mila Zhou[MSFT] on 1/21/2022, 05:39 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?<br>\nIf so, could you please provide a sample solution that has this problem so that we can conduct further research?</p>\n<p>We look forward to hearing from you!</p>\n\n#### Chris Roybal on 2/1/2022, 00:05 PM: \n\n<p>Yes it is still an issue.</p>\n<p>Here is a sample solution:<br>\n<a target='_blank' href=\"https://github.com/roybeast/MediaPlayerFinalizerHang\">https://github.com/roybeast/MediaPlayerFinalizerHang</a></p>\n\n#### Feedback Bot on 2/9/2022, 11:03 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 2/14/2022, 05:54 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6147","RelatedDescription":"Open issue \"Windows MediaPlayer finalizer hang\" (#6147)"},{"Id":"1142541933","IsPullRequest":false,"CreatedAt":"2022-02-18T07:32:04","Actor":"vsfeedback","Number":"6146","RawContent":null,"Title":"System.ArgumentException occurs while sorting the column when column name contains a comma(,) in DataTable collection","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/SystemArgumentException-occurs-while-so/1407323)._\n\n---\nI have defined the column name with a comma(,) in the DataTable collection. In this case, while sorting the column in DataGrid System.ArgumentException occurs. Replication procedure to reproduce the reported issue,\n\nStep 1: set the column name property as below mentioned\n\n```\n//I have defined the column name with a comma\nEmployeeDetails.Columns.Add(\"Cell (Row,Col)\", typeof(string)); \n```\nPlease refer to the screenshot,\n! [ColumnName.png] (https://aka.ms/dc/image?name=Be08250778a8444eaac4396a6d96439d6637549653017445778_ColumnName.png&tid=e08250778a8444eaac4396a6d96439d6637549653017445778)\n\nStep 2: Run the sample\n\nStep 4: Sort the Cell (Row,Col) column in DataGrid\n\nStep 5: System.ArgumentException occurs\n\nStackTrace details for your reference,\n\nSystem.ArgumentException\n  HResult=0x80070057\n  Message=[Cell (Row isn't a valid Sort string entry.\n  Source=System.Data\n  StackTrace:\n   at System.Data.DataTable.ParseSortString(String sortString)\n   at System.Data.DataView.CheckSort(String sort)\n   at System.Data.DataView.set_Sort(String value)\n   at System.Data.DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection sorts)\n   at System.Windows.Data.BindingListCollectionView.<>c__DisplayClass96_0. b__1()\n   at MS. Internal.Data.SynchronizationInfo.AccessCollection(IEnumerable collection, Action accessMethod, Boolean writeAccess)\n   at System.Windows.Data.BindingOperations.AccessCollection(IEnumerable collection, Action accessMethod, Boolean writeAccess)\n   at System.Windows.Data.BindingListCollectionView.RefreshOverride()\n   at System.Windows.Data.CollectionView.RefreshInternal()\n   at System.Windows.Data.CollectionView.Refresh()\n   at System.Windows.Data.CollectionView.EndDefer()\n   at System.Windows.Data.CollectionView.DeferHelper.Dispose()\n   at System.Windows.Controls.ItemCollection.EndDefer()\n   at System.Windows.Controls.ItemCollection.DeferHelper.Dispose()\n   at System.Windows.Controls.DataGrid.DefaultSort(DataGridColumn column, Boolean clearExistingSortDescriptions)\n   at System.Windows.Controls.DataGrid.OnSorting(DataGridSortingEventArgs eventArgs)\n   at System.Windows.Controls.DataGrid.PerformSort(DataGridColumn sortColumn)\n   at System.Windows.Controls.Primitives.DataGridColumnHeader.OnClick()\n   at System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\n   at System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonUp(MouseButtonEventArgs e)\n   at System.Windows.UIElement.OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)\n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n   at System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\n   at System.Windows.UIElement.OnMouseUpThunk(Object sender, MouseButtonEventArgs e)\n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n   at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n   at System.Windows.UIElement.RaiseTrustedEvent(RoutedEventArgs args)\n   at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\n   at System.Windows.Input.InputManager.ProcessStagingArea()\n   at System.Windows.Input.InputManager.ProcessInput(InputEventArgs input)\n   at System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\n   at System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\n   at System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   at System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   at MS. Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   at MS. Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\n   at MS. Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\n   at MS. Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\n   at System.Windows.Application.RunDispatcher(Object ignore)\n   at System.Windows.Application.RunInternal(Window window)\n   at System.Windows.Application.Run(Window window)\n   at System.Windows.Application.Run()\n   at SortingString.App.Main()\n\nThis exception was originally thrown at this call stack:\n    [External Code]\n\nI have attached the sample for your reference\n\n**Sample Link :** [SortingString.zip](https://aka.ms/dc/file?name=B3e957c2e1b82476f9d60b2e28f30dce3637549656762849409_SortingString.zip&tid=3e957c2e1b82476f9d60b2e28f30dce3637549656762849409)\n\nCan anyone share an idea to resolve the reported problem?\n\nRegards,\nVijayarasan S\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/27/2021, 10:32 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Vijayarasan Sivanandham on 6/2/2021, 02:24 PM: \n\n<p>Hi Team,</p>\n<p>Any update on this.</p>\n<p>Regards,<br>\nVijayarasan S</p>\n\n#### Feedback Bot on 8/2/2021, 03:27 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Mila Zhou[MSFT] on 1/21/2022, 05:56 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n\n#### Vijayarasan Sivanandham on 2/9/2022, 04:27 PM: \n\n<p>Hi Team,</p>\n<p>I have tested with the latest Visual Studio 2022. The reported problem still occurs. Please find the Visual Studio version details in the below mentioned screen shot,</p>\n<p><img src=\"https://aka.ms/dc/image?name=B94ab48e8d42740ffb261b6341cfe5644637799919172774506_VisualStudioVersion.png&amp;tid=94ab48e8d42740ffb261b6341cfe5644637799919172774506\" alt=\"VisualStudioVersion.png\"></p>\n<p>Regards,<br>\nVijayarasan S</p>\n\n#### Feedback Bot on 2/9/2022, 03:23 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n\n#### Vijayarasan Sivanandham on 2/9/2022, 04:32 PM: \n\n<p>Hi Team,</p>\n<p>Please check the reported problem in the Visual studio 2022 version.</p>\n<p>Regards,<br>\nVijayarasan S</p>\n\n#### Feedback Bot on 2/11/2022, 01:41 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 2/14/2022, 05:53 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6146","RelatedDescription":"Open issue \"System.ArgumentException occurs while sorting the column when column name contains a comma(,) in DataTable collection\" (#6146)"},{"Id":"1142541585","IsPullRequest":false,"CreatedAt":"2022-02-18T07:31:47","Actor":"vsfeedback","Number":"6145","RawContent":null,"Title":"System.InvalidOperationException while defining parenthesis in column property in DataTable collection ","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/SystemInvalidOperationException-while-d/1397282)._\n\n---\nI have defined the column name with parenthesis in the DataTable collection. In this case, while loading DataGrid System.InvalidOperationException. Replication procedure to reproduce the reported issue,\n\nStep 1: set the column name property as below mentioned \n\n```\n         //I have defined the column name with parenthesis\n            table. Columns.Add(\"Location in die [X,Y] in um\", typeof(string));           \n```\nPlease refer the screenshot,\n\n! [ColumnNameDefining.png] (https://aka.ms/dc/image?name=Bdb0828c36f234872828b26fd468233f8637539273471904671_ColumnNameDefining.png&tid=db0828c36f234872828b26fd468233f8637539273471904671)\n\nStep 2: Set the ItemSource as DataTable collection. Please refer the below code snippet,\n\n```\n \n```\n\nStep 3: Run the sample\n\nStep 4: System.InvalidOperationException occurs\n\nStackTrace details for your reference,\n\nat System.Windows.PropertyPath.PrepareSourceValueInfo(ITypeDescriptorContext typeDescriptorContext)\n   at System.Windows.PropertyPath.. ctor(String path, Object[] pathParameters)\n   at System.Windows.Data.Binding.. ctor(String path)\n   at System.Windows.Controls.DataGridColumn.CreateDefaultColumn(ItemPropertyInfo itemProperty)\n   at System.Windows.Controls.DataGrid.GenerateColumns(ReadOnlyCollection`1 itemProperties, DataGrid dataGrid, Collection`1 columnCollection)\n   at System.Windows.Controls.DataGrid.AddAutoColumns()\n   at System.Windows.Controls.DataGrid.MeasureOverride(Size availableSize)\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\n   at System.Windows.UIElement.Measure(Size availableSize)\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\n   at System.Windows.UIElement.Measure(Size availableSize)\n   at MS. Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\n   at System.Windows.Controls.ContentPresenter.MeasureOverride(Size constraint)\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\n   at System.Windows.UIElement.Measure(Size availableSize)\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\n   at System.Windows.UIElement.Measure(Size availableSize)\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\n   at System.Windows.UIElement.Measure(Size availableSize)\n   at System.Windows.Window.MeasureOverrideHelper(Size constraint)\n   at System.Windows.Window.MeasureOverride(Size availableSize)\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\n   at System.Windows.UIElement.Measure(Size availableSize)\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\n   at System.Windows.Interop.HwndSource.set_RootVisual(Visual value)\n   at System.Windows.Window.SetRootVisual()\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\n   at System.Windows.Window.CreateSourceWindowDuringShow()\n   at System.Windows.Window.SafeCreateWindowDuringShow()\n   at System.Windows.Window.ShowHelper(Object booleanBox)\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\n   at MS. Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at MS. Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Windows.Threading.DispatcherOperation.Invoke()\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   at MS. Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   at MS. Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\n   at MS. Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\n   at MS. Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\n   at System.Windows.Application.RunDispatcher(Object ignore)\n   at System.Windows.Application.RunInternal(Window window)\n   at System.Windows.Application.Run(Window window)\n   at System.Windows.Application.Run()\n   at SyntaxErrorException.App.Main()\n\nI have attached the sample for your reference\n\nSample Link: [SyntaxErrorException.zip](https://aka.ms/dc/file?name=Bdcf29b1aa5ee44eabba231904b3ab55f637539276935402533_SyntaxErrorException.zip&tid=dcf29b1aa5ee44eabba231904b3ab55f637539276935402533)\n\nCan anyone share an idea to resolve the reported problem?\n\nRegards,\nVijayarasan S\n\n---\n### Original Comments\n\n#### Feedback Bot on 4/14/2021, 03:23 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Vijayarasan Sivanandham on 6/16/2021, 00:33 PM: \n\n<p>Hi Team,</p>\n<p>Any update on this.</p>\n<p>Regards,<br>\nVijayarasan S</p>\n\n#### Feedback Bot on 8/2/2021, 03:27 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Mila Zhou[MSFT] on 1/21/2022, 05:51 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n\n#### Vijayarasan Sivanandham on 2/9/2022, 04:21 PM: \n\n<p>Hi Team,</p>\n<p>I have tested with the latest Visual Studio 2022. The reported problem still occurs. Please find the Visual Studio version details in the below mentioned screen shot,<br>\n<img src=\"https://aka.ms/dc/image?name=B09982164febd4208b6ed026c50e5a70b637799916643021493_VisualStudioVersion.png&amp;tid=09982164febd4208b6ed026c50e5a70b637799916643021493\" alt=\"VisualStudioVersion.png\"></p>\n<p>Regards,<br>\nVijayarasan S</p>\n\n#### Feedback Bot on 2/9/2022, 03:23 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n\n#### Feedback Bot on 2/11/2022, 01:41 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6145","RelatedDescription":"Open issue \"System.InvalidOperationException while defining parenthesis in column property in DataTable collection \" (#6145)"},{"Id":"1142541437","IsPullRequest":false,"CreatedAt":"2022-02-18T07:31:39","Actor":"vsfeedback","Number":"6144","RawContent":null,"Title":"Rendering Labels with TranslateTransform","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Rendering-Labels-with-TranslateTransform/1383441)._\n\n---\n[severity:It bothers me. A fix would be nice]\r\nHello,\ni do have the following Code:\n\n```\n        private static void AddElements(Canvas canvas)\n        {\n            double canvasHeight = canvas. Height;\n            double canvasWidth = canvas. Width;\n            double y0 = canvasHeight / 2;\n            double x0 = canvasWidth / 2;\n\n// Defining the new Coordinate-Point (0,0) to mid auf Canvas\n            TranslateTransform tt = new TranslateTransform(x0, y0);\n\nLine line1 = new Line();\n            line1. X1 = -350;\n            line1. Y1 = 0;\n            line1. X2 = 350;\n            line1. Y2 = 0;\n            line1. Stroke = Brushes.Black;\n            line1. StrokeThickness = 2.0;\n            line1. RenderTransform = tt;\n            canvas. Children.Add(line1);\n\nLine line2 = new Line();\n            line2. X1 = 0;\n            line2. Y1 = -350;\n            line2. X2 = 0;\n            line2. Y2 = 350;\n            line2. Stroke = Brushes.Black;\n            line2. StrokeThickness = 2.0;\n            line2. RenderTransform = tt;\n            canvas. Children.Add(line2);\n\nLabel lblN = new Label();\n            lblN.Width = 50;\n            lblN.Height = 15;\n            lblN.Background = Brushes.Red;\n            lblN.Margin = new System.Windows.Thickness(0, -300, 0, 0);\n            lblN.Content = $\"N\";\n            lblN.HorizontalContentAlignment = System.Windows.HorizontalAlignment.Center;\n            lblN.VerticalContentAlignment = System.Windows.VerticalAlignment.Center;\n            lblN.RenderTransform = tt;\n            lblN.Padding = new System.Windows.Thickness(0);\n            lblN.BorderBrush = Brushes.Black;\n            lblN.BorderThickness = new System.Windows.Thickness(2.0);\n            lblN.RenderTransform = tt;\n            canvas. Children.Add(lblN);\n\nLabel lblS = new Label();\n            lblS.Width = 50;\n            lblS.Height = 15;\n            lblS.Background = Brushes.Red;\n            lblS.Margin = new System.Windows.Thickness(0, 300, 0, 0);\n            lblS.Content = $\"S\";\n            lblS.HorizontalContentAlignment = System.Windows.HorizontalAlignment.Center;\n            lblS.VerticalContentAlignment = System.Windows.VerticalAlignment.Center;\n            lblS.RenderTransform = tt;\n            lblS.Padding = new System.Windows.Thickness(0);\n            lblS.BorderBrush = Brushes.Black;\n            lblS.BorderThickness = new System.Windows.Thickness(2.0);\n            lblS.RenderTransform = tt;\n            canvas. Children.Add(lblS);\n        }\n\n```\n\nthis method is called on an Menu-Eventhandler and it shows an coordinate system with (0,0) in the mid of the canvas. It should show a label with \"N\" at the top and a label with \"S\" at the bottom.\n\nBut i shows the attached image\n! [Screenshot_SetHeight.png] (https://aka.ms/dc/image?name=B0f35bbf7aace44918f1f9c91b038954d637524593333606810_Screenshot_SetHeight.png&tid=0f35bbf7aace44918f1f9c91b038954d637524593333606810)\n\nI expcted that the lblN to be more higher on the y-coordinate.\n\nDoes anyone know, why lblN looks different than lblS ?\n\nbest regards\n\nVolkhard\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/29/2021, 02:42 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 7/6/2021, 02:35 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Ashish Singh [MSFT] on 11/30/2021, 02:19 PM: \n\n<p>Please provide a sample repro app for this bug to be checked further.</p>\n\n#### Volkhard Vogeler on 12/11/2021, 04:28 PM: \n\n<p>Hello Ashish,</p>\n<p>thanks for your request.<br>\nAttached you find an sample. select Menu “Ansicht”=&gt; “Lagenkugeln in Pollage”</p>\n<p><a target='_blank' href=\"https://aka.ms/dc/file?name=B3b9bd6a9dc8c45ab965676f3308c4bdf637748080225886472_WpfApp1-v4.zip&amp;tid=3b9bd6a9dc8c45ab965676f3308c4bdf637748080225886472\">WpfApp1-v4.zip</a></p>\n\n#### Feedback Bot on 12/8/2021, 11:03 AM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n\n#### Feedback Bot on 12/27/2021, 05:41 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Feedback Bot on 2/14/2022, 05:52 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6144","RelatedDescription":"Open issue \"Rendering Labels with TranslateTransform\" (#6144)"},{"Id":"1142541167","IsPullRequest":false,"CreatedAt":"2022-02-18T07:31:25","Actor":"vsfeedback","Number":"6143","RawContent":null,"Title":"WPF TabControl bug","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/WPF-TabControl-bug/1111453)._\n\n---\nThere’s a WPF bug with Toolbars inside TabControls, starting with .NET Framework 4.7.1 and it also affects .NET Core. Location of bug in MSFT code, and workaround at bottom.\n\n**Repro**:\n\n1.  Create a WPF Application for .NET Framework 4.7.1 or later, or .NET Core 3.0 or later.\n2.  Paste this into the body of MainWindow.xaml:\n\n```  \n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n    \n\n  \n```\n\n3.  Run (Debug)\n4.  Select “Second Tab”\n5.  Select “First Tab”\n6.  Click “First Button”\n\n**Expected**: First Tab should remain selected\n\n**Actual**: Second Tab is re-selected. This does not happen in .NET Framework 4.7 or earlier.\n\n**Note:** This bug started with the changes in DDVSO 208019, \"change SelectedContent and focus before raising SelectionChanged\" and probably relates to this code:\n\n![](https://aka.ms/dc/file?name=B1d80c057ece04add877c807bef74d929637494580152737593_b5ljc.png&tid=1d80c057ece04add877c807bef74d929637494580152737593)  \n**A workaround** is to disable this new behavior by adding an app.config file and setting SelectionPropertiesCanLagBehindSelectionChangedEvent as shown [here](https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/retargeting/4.7-4.7.1#selector-selectionchanged-event-and-selectedvalue-property).\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/14/2020, 11:32 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### John on 8/22/2020, 06:29 AM: \n\n<p>Any progress? This broke our UI. Thank you.</p>\n\n#### Megan Tidd on 9/10/2020, 09:24 PM: \n\n<p><a rel=\"user\" href=\"https://vsf-prod.westus.cloudapp.azure.com/users/7/siteadmin.html\" nodeid=\"7\">@Feedback Bot</a> What is the current status of this bug?</p>\n\n#### John on 10/1/2020, 01:07 AM: \n\n<p>Is this being worked on? Thank you.<br><a rel=\"user\" href=\"https://vsf-prod.westus.cloudapp.azure.com/users/7/siteadmin.html\" nodeid=\"7\">@Feedback Bot</a></p>\n\n#### Feedback Bot on 10/30/2020, 02:31 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Fiona Niu[MSFT] on 1/21/2022, 03:43 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?<br>\nIf so, could you please provide a sample solution that has this problem so that we can conduct further research?</p>\n<p>We look forward to hearing from you!</p>\n\n#### John on 1/26/2022, 01:18 AM: \n\n<p>Sure, open this solution and start at step 3 of repro: <a target='_blank' href=\"https://aka.ms/dc/file?name=Bdf04a33f951a44b59ccb3773ffe6d5e1637787278098324370_TabControlBug.zip&amp;tid=df04a33f951a44b59ccb3773ffe6d5e1637787278098324370\">TabControlBug.zip</a></p>\n\n#### Feedback Bot on 2/18/2022, 01:47 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6143","RelatedDescription":"Open issue \"WPF TabControl bug\" (#6143)"},{"Id":"1142540715","IsPullRequest":false,"CreatedAt":"2022-02-18T07:31:01","Actor":"vsfeedback","Number":"6142","RawContent":null,"Title":"PriorityBinding for Image Source property does not fail over to next in row on UnsetValue","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/PriorityBinding-for-Image-Source-propert/1044519)._\n\n---\n<p><a href=\"https://aka.ms/dc/file?name=B752cf1504ded4f0eb23d8f19f23a7397637494443398424808_customcontrol-source.zip&amp;tid=752cf1504ded4f0eb23d8f19f23a7397637494443398424808\">customcontrol-source.zip</a>I have a <code>PriorityBinding</code> which simply refuses to fail over to the next item: I have a Image control which uses <code>PriorityBinding</code> to show first a specified image Image and it should fail over to DefaultImage if no image is set.</p><pre>&lt;Image.Source&gt;\n    &lt;PriorityBinding&gt;\n        &lt;Binding Path=&quot;Image&quot;           RelativeSource=&quot;{RelativeSource AncestorType=ccont:vokImage}&quot; /&gt;\n        &lt;Binding Path=&quot;DefaultImage&quot;    RelativeSource=&quot;{RelativeSource AncestorType=ccont:vokImage}&quot; /&gt;\n    &lt;/PriorityBinding&gt;\n&lt;/Image.Source&gt;</pre><p>For that purpose I tried using <code>DependencyProperty.UnsetValue</code> as specified in the documentation to handle cases where an image is unset or not there/existing.</p><p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.prioritybinding?view=netcore-3.1\">https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.prioritybinding?view=netcore-3.1</a></p><p>The expected behavior as per documentation is that the binding will be considered failed and it should move on to the next binding (in my case <code>DefaultImage</code>)</p><p>But setting <code>UnsetValue</code> does not behave as expected: the Image container does not display anything instead of showing <code>DefaultImage</code>. This is not an issue with DefaultImage as reversing the order of the bindings will show the default image, hence it is the <code>Image</code> binding that is still active and is sent to the <code>Image</code> control.</p><pre>    #region DepProp: DefaultImage\n    \n    public static readonly DependencyProperty DefaultImageProperty = DependencyProperty.Register(&quot;DefaultImage&quot;, typeof(ImageSource), typeof(vokImage), new PropertyMetadata(null));\n    \n    public ImageSource DefaultImage\n    {\n        get =&gt; (ImageSource)this.GetValue(DefaultImageProperty);\n        set =&gt; this.SetValue(DefaultImageProperty, value);\n    }\n    \n    #endregion\n    \n    #region DepProp: Image\n    \n    public static readonly DependencyProperty ImageProperty = DependencyProperty.Register(&quot;Image&quot;, typeof(ImageSource), typeof(vokImage), new PropertyMetadata(null, null, CoerceImage));\n    \n    public ImageSource Image\n    {\n        get =&gt; (ImageSource)this.GetValue(ImageProperty);\n        set =&gt; this.SetValue(ImageProperty, value);\n    }\n    \n    /// &lt;summary&gt;\n    /// Ensure than we have an image else unset property to display default image\n    /// &lt;/summary&gt;\n    private static object CoerceImage(DependencyObject d, object value)\n    {\n        return DependencyProperty.UnsetValue;\n        //return ((ImageSource)value)?.ToString() == null ? DependencyProperty.UnsetValue : value;\n    }\n    \n    #endregion</pre><p>And in XAML:</p><pre class=\"\">&lt;!-- Image to display --&gt;\n&lt;Image x:Name               = &quot;Image&quot;\n       Height               = &quot;{Binding Height, RelativeSource={RelativeSource AncestorType=ccont:vokImage}}&quot;\n       Width                = &quot;{Binding Width,  RelativeSource={RelativeSource AncestorType=ccont:vokImage}}&quot;\n       HorizontalAlignment  = &quot;Center&quot;\n       VerticalAlignment    = &quot;Center&quot;\n       Visibility           = &quot;Visible&quot;\n       Opacity              = &quot;1&quot;&gt;\n    \n    &lt;Image.Source&gt;\n        &lt;PriorityBinding&gt;\n            &lt;Binding Path=&quot;Image&quot;           RelativeSource=&quot;{RelativeSource AncestorType=ccont:vokImage}&quot; /&gt;\n            &lt;Binding Path=&quot;DefaultImage&quot;    RelativeSource=&quot;{RelativeSource AncestorType=ccont:vokImage}&quot; /&gt;\n        &lt;/PriorityBinding&gt;\n    &lt;/Image.Source&gt;\n    \n&lt;/Image&gt;</pre><p>When Image is set to <code>DependencyProperty.UnsetValue</code> I would expect <code>PriorityBinding</code> to move on to <code>DefaultImage</code>, but that just does not happen when using the <code>DependencyProperty</code> which is an <code>ImageSource</code>.</p><p><strong>Example where <code>PriorityBinding</code> DOES seem to work:</strong></p><p>If for example I use the very same code but for a TextBlock instead and bind to Width property for example:</p><pre>&lt;!-- Test with a TextBox: WORKS!!! --&gt;\n&lt;TextBlock&gt;\n    \n    &lt;TextBlock.Text&gt;\n        &lt;PriorityBinding&gt;\n            &lt;Binding Path=&quot;Image.Width&quot;           RelativeSource=&quot;{RelativeSource AncestorType=ccont:vokImage}&quot; /&gt;\n            &lt;Binding Path=&quot;DefaultImage.Width&quot;    RelativeSource=&quot;{RelativeSource AncestorType=ccont:vokImage}&quot; /&gt;\n        &lt;/PriorityBinding&gt;\n    &lt;/TextBlock.Text&gt;\n\n&lt;/TextBlock&gt;\n</pre><p>It looks like UnsetValue is not seen as a failed binding at all, and the TextBox binding only fails over to the next one because UnsetValue does fail as not having a member Width… ?!</p><p>In any case that somehow contradicts specification for PriorityBinding, and else I am not sure how to use Priority binding at all.</p><p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.prioritybinding?view=netcore-3.1\">https://docs.microsoft.com/en-us/dotnet/api/system.windows.data.prioritybinding?view=netcore-3.1</a></p><blockquote>\n<p>PriorityBinding lets you associate a binding target (target) property  with a list of bindings. The first binding that returns a value  successfully becomes the active binding.</p><p>A binding returns a value successfully if:</p><ol>\n<li>The path to the binding source resolves successfully.</li><li>The value converter, if any, is able to convert the resulting value.</li><li>The resulting value is valid for the target property.</li></ol><p>The value DependencyProperty.UnsetValue is not considered a successful return value.</p></blockquote><p>Versions:</p><p>Coding in .NET Core 3.1<br>\nVisual Studio 1.6.6</p><p>Voilà! Thanks in advance!</p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 5/22/2020, 05:03 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Patrick on 5/23/2020, 00:45 AM: \n\n<p>I hat to fix the code blocks that got crippled for some reason.</p><p>Please let me know if something is unclear.</p>\n\n#### Patrick on 5/30/2020, 01:16 AM: \n\n<p>I just added the source code for the CustomControl.</p><p>Note: the Image and DefaultImage properties are coerced in the CustomControl before being passed to the Theme. Eventually there lies the issue that causes UnsetValue not being properly handled?</p>\n\n#### Feedback Bot on 7/3/2020, 02:16 PM: \n\nI have detected that for the last 35 days, this issue didn't have much product team activity and a very small amount of new votes or comments. Based on this, its severity, and affected area, it’s my experience that this issue is very unlikely to be fixed.\n#### Patrick on 7/4/2020, 02:09 AM: \n\n<p>With the current status, PriorityBinding is not working and  hence useless in a CustomControl. Low activity could only mean people  then use a workaround and don't find this issue here in the topics.</p><p>PriorityBinding  could/would be a powerful feature if it did work. Please investigate  the issue, at least to rule out it is a implementation issue.</p>\n\n#### Patrick on 7/16/2020, 04:34 AM: \n\n<p>Any input that I can provide to solve the issue?</p>\n\n#### Patrick on 8/10/2020, 06:10 AM: \n\n<p>Still not able to get PriorityBinding to work with ImageSource... Please advice!</p>\n\n#### Patrick on 11/17/2020, 01:25 AM: \n\n<p>Is there any progress on this issue?! I am still not able to use Priority binding as intended...</p>\n\n#### Fiona Niu[MSFT] on 1/21/2022, 03:33 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?</p>\n<p>If so, in order for us to investigate further, please provide more information by recording your repro steps via the Visual Studio Feedback Tool (Help -&gt; Send Feedback -&gt; Report A Problem). The feedback tool will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace). Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool– <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019#when-further-information-is-needed\">full instructions</a><br>\nIn our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines/#writing-a-good-bug-report-or-feature-suggestion\">guidelines</a> , you can get tips on how to provide clear and simple reproducible steps.</p>\n<p>Get performance issues fixed quicker, please see <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/how-to-increase-chances-of-performance-issue-being-fixed?view=vs-2019</a>.</p>\n<p>We look forward to hearing from you!</p>\n\n#### Feedback Bot on 2/9/2022, 03:23 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n\n#### Feedback Bot on 2/14/2022, 04:52 PM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2019#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6142","RelatedDescription":"Open issue \"PriorityBinding for Image Source property does not fail over to next in row on UnsetValue\" (#6142)"},{"Id":"1142221925","IsPullRequest":false,"CreatedAt":"2022-02-18T02:41:43","Actor":"essoperagma","Number":"6141","RawContent":null,"Title":"How to pass a shared handle to D3DImage in a managed way?","State":"open","Body":"I have a Win32 application that is rendering a 3D scene onto a **shared texture** using Direct3D 9ex.\r\n\r\nI also have a WPF application, running as a **separate process**. It has access to the shared handle of the texture previously created by the 3D application.\r\n\r\nTo be able to display this image in my WPF app, I am trying to utilize 3D3Image.SetBackBuffer, which requires a pointer to the texture.\r\n```\r\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\r\n```\r\n\r\nHowever, at this point, I only have a shared handle and not a texture. My questions are:\r\n\r\n1. How can I create a texture from the shared handle while staying in managed code? Even an internal method that I can call via reflection would be acceptable for me.\r\n2. If this isn't possible, is there an unmanaged alternative that I can use with PInvoke? I'm fine with calling [IDirect3DDevice9::CreateTexture](https://docs.microsoft.com/en-us/windows/win32/api/d3d9/nf-d3d9-idirect3ddevice9-createtexture) using PInvoke, but that requires me to have a pointer to the D3DDevice which I don't have. Can I somehow access the device created by WPF runtime? If I created another device myself, can a texture created by this device be used with 3D3Image?\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6141","RelatedDescription":"Open issue \"How to pass a shared handle to D3DImage in a managed way?\" (#6141)"},{"Id":"1140877619","IsPullRequest":true,"CreatedAt":"2022-02-17T05:22:39","Actor":"dotnet-maestro[bot]","Number":"6140","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20220216.6\r\n- **Date Produced**: February 17, 2022 4:28:25 AM UTC\r\n- **Commit**: 21ded4b588dd69d8c17e9f8ba21f02f1a83b11dc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 7.0.0-preview.3.22116.1 to 7.0.0-preview.3.22116.6][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC21ded4b&targetVersion=GC21ded4b&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6140","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#6140)"},{"Id":"1140737552","IsPullRequest":false,"CreatedAt":"2022-02-17T00:44:49","Actor":"lindexi","Number":"6139","RawContent":null,"Title":"Can we public the `DefaultTextStore.Current.DocumentManager` property to create custom TextEditor with IME","State":"open","Body":"We should use the [ITfThreadMgr.SetFocus](https://docs.microsoft.com/en-us/windows/win32/api/msctf/nf-msctf-itfthreadmgr-setfocus) to make the [IME(Input Method Editors)](https://docs.microsoft.com/en-us/windows/apps/design/input/input-method-editors) focus TextEditor in application in WPF.\r\n\r\nBut we can only do that by InputMethod.IsInputMethodEnabledProperty.\r\n\r\nhttps://github.com/dotnet/wpf/blob/8e5c08117d14cc1ebfc3179fb1820bac5ffa0013/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/InputMethod.cs#L226-L233\r\n\r\nhttps://github.com/dotnet/wpf/blob/8e5c08117d14cc1ebfc3179fb1820bac5ffa0013/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/InputMethod.cs#L1347-L1354\r\n\r\nhttps://github.com/dotnet/wpf/blob/8e5c08117d14cc1ebfc3179fb1820bac5ffa0013/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/InputMethod.cs#L1360-L1376\r\n\r\nhttps://github.com/dotnet/wpf/blob/8e5c08117d14cc1ebfc3179fb1820bac5ffa0013/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/TextServicesContext.cs#L242-L245\r\n\r\nhttps://github.com/dotnet/wpf/blob/8e5c08117d14cc1ebfc3179fb1820bac5ffa0013/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/TextServicesContext.cs#L346-L354\r\n\r\nAs you can see, we can not call the `TextServicesContext.SetFocusOnDefaultTextStore` when the `InputMethod.IsInputMethodEnabledProperty` is true.\r\n\r\nThe other third part TextEditor, such as [AvalonEdit](https://github.com/icsharpcode/AvalonEdit), should call the `ITfThreadMgr.SetFocus(IntPtr.Zero)` to do that.\r\n\r\nhttps://github.com/icsharpcode/AvalonEdit/blob/395ef8166870e2c6e1f63a7d97ac22e5e646e790/ICSharpCode.AvalonEdit/Editing/ImeSupport.cs#L117-L122\r\n\r\nAfter we call the `ITfThreadMgr.SetFocus(IntPtr.Zero)`,  we can not switch the IME mode when the application is the sub-window in other process application.\r\n\r\nMy solution is calling the `InputMethod.EnableOrDisableInputMethod` by Reflection.\r\n\r\n```csharp\r\n                var type = typeof(InputMethod);\r\n                var methodInfo = type.GetMethod(\"EnableOrDisableInputMethod\",BindingFlags.Instance|BindingFlags.NonPublic);\r\n                if (methodInfo != null)\r\n                {\r\n                    methodInfo.Invoke(InputMethod.Current, new object[] { true });\r\n                }\r\n```\r\n\r\nCan we make the `DefaultTextStore.Current.DocumentManager` property as public property or make the `InputMethod.EnableOrDisableInputMethod` as public?","Url":"https://github.com/dotnet/wpf/issues/6139","RelatedDescription":"Open issue \"Can we public the `DefaultTextStore.Current.DocumentManager` property to create custom TextEditor with IME\" (#6139)"},{"Id":"1140697550","IsPullRequest":false,"CreatedAt":"2022-02-16T23:36:57","Actor":"noahfalk","Number":"6138","RawContent":null,"Title":"Add events that help do startup performance investigations","State":"open","Body":"This issue one part of a larger request being tracked in https://github.com/dotnet/runtime/issues/64993\r\n\r\nWhen developers want to improve the startup time of their applications, a common approach would be to run the app while taking an ETW trace, identify the period of time that corresponds to app startup, and then analyze the app behavior during that window. It would be helpful to have one or more canonical events that indicate when startup is complete however WPF app developers would usually define that. I'm not a WPF expert but I could imagine startup might be considered complete when the first window has been displayed and is responsive to user input.\r\n\r\nThe request here is:\r\n1) If useful startup events already exist, help make that information discoverable.\r\nI found a few references to wpf etw events in stackoverflow and old blog posts when I searched, but the links that looked like they would be the most informative were all dead. For comparison the .NET runtime documents relevant ETW events in the [official docs](https://docs.microsoft.com/en-us/dotnet/fundamentals/diagnostics/runtime-events)\r\n2) If no suitable events exist, add and document them.\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/6138","RelatedDescription":"Open issue \"Add events that help do startup performance investigations\" (#6138)"},{"Id":"1139847067","IsPullRequest":true,"CreatedAt":"2022-02-16T19:49:07","Actor":"dotnet-maestro[bot]","Number":"6136","RawContent":null,"Title":"[main] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: f8781171-8d89-4d6b-f62b-08d8e93a0c51\r\n- **Build**: 20220216.1\r\n- **Date Produced**: February 16, 2022 10:19:28 AM UTC\r\n- **Commit**: 21ded4b588dd69d8c17e9f8ba21f02f1a83b11dc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 7.0.0-preview.2.22110.6 to 7.0.0-preview.3.22116.1][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC99a29e8&targetVersion=GC21ded4b&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8781171-8d89-4d6b-f62b-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6136","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#6136)"},{"Id":"1139371044","IsPullRequest":true,"CreatedAt":"2022-02-16T19:48:47","Actor":"dotnet-maestro[bot]","Number":"6133","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220215.11\r\n- **Date Produced**: February 16, 2022 1:47:39 AM UTC\r\n- **Commit**: 01fb65d5b107f9b67764c20a10192df0f3809eea\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.2.22115.3 to 7.0.0-preview.3.22115.11][3]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.2.22115.3 to 7.0.0-preview.3.22115.11][3]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/2c7cd54...01fb65d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6133","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6133)"},{"Id":"1140461016","IsPullRequest":false,"CreatedAt":"2022-02-16T19:25:18","Actor":"vsfeedback","Number":"6137","RawContent":null,"Title":"Binding errors when running in Visual Studio but not when directly executing the EXE","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Binding-errors-when-running-in-Visual-St/1463517)._\n\n---\n[severity:It bothers me. A fix would be nice]\r\n(This is a repost of [this issue](https://developercommunity.visualstudio.com/t/Binding-errors-when-running-in-Visual-St/1294226) that I think was improperly closed and, as far as I can tell, never consider for reopening as I requested.)\n\nI am trying to fix some binding errors as I describe in [this issue](https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/issues/2196).  In the process of investigating that issue, I discovered that those binding errors happen when running the application through Visual Studio but not when directly executing the EXE.\n\n# Steps to reproduce\n1. Obtain my reproduction either form the attached ZIP, the [same ZIP from my Dropbox](https://www.dropbox.com/sh/pwy6nqdru2km0qr/AABfZfmyFQNZMfwEFSKkG-tda?dl=0), or [this repository](https://github.com/TysonMN/MaterialDesignInXaml_DataGrid_reproduction).\n2. Build the code\n3. Run the application, either from within Visual Studio or by opening the EXE (see GIFs below)\n4. Click the button \"Set level to Warning\" (only necessary when directly executing the EXE)\n5. Click the header of the DataGrid\n\n# Expected behavior\nI expect either choice in step 3 to lead to the same behavior.  (That binding errors happen at all when executing from Visual Studio is the _unexpected_ behavior in the linked issue.)\n\n# Actual behavior\nThe choice in step 3 leads to different behavior.  When executing from Visual Studio, there nine binding errors.  When directly executing the EXE, there are no binding errors.\n\n# When executing from Visual Studio\n[GIF] (https://www.dropbox.com/s/qkv9jnx7s4u17nx/Execute_from_Visual_Studio.gif)\n\n# When directly executing the EXE\n[GIF] (https://www.dropbox.com/s/yivdtishjvphgh2/Execute_from_bin_folder.gif)\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/30/2021, 02:36 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 10/9/2021, 02:05 AM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Mila Zhou[MSFT] on 1/21/2022, 00:40 AM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?<br>\nIf so, could you please provide a sample solution that has this problem so that we can conduct further research?</p>\n<p>We look forward to hearing from you!</p>\n\n#### Tyson Williams on 1/30/2022, 07:06 PM: \n\n<p>Hello Mila,</p>\n<p>Yes, I just reproduced the problem using version 17.0.5 of Visual Studio.</p>\n<p>I have already provided a sample solution and reproduction steps in my original post.</p>\n\n#### Feedback Bot on 2/8/2022, 07:02 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/6137","RelatedDescription":"Open issue \"Binding errors when running in Visual Studio but not when directly executing the EXE\" (#6137)"},{"Id":"1139474045","IsPullRequest":true,"CreatedAt":"2022-02-16T15:12:49","Actor":"singhashish-wpf","Number":"6134","RawContent":null,"Title":"Update branding to Preview 3","State":"closed","Body":"Update branding to Preview 3","Url":"https://github.com/dotnet/wpf/pull/6134","RelatedDescription":"Closed or merged PR \"Update branding to Preview 3\" (#6134)"},{"Id":"1139526005","IsPullRequest":true,"CreatedAt":"2022-02-16T04:37:39","Actor":"ThomasGoulet73","Number":"6135","RawContent":null,"Title":"Fix MilCodeGen","State":"open","Body":"## Description\r\nThis PR aims to fix MilCodeGen which seems to be very outdated and it doesn't seem like it ever worked in this repo (It probably worked in the internal repo for Microsoft).\r\n\r\nSince it does not seem like it ever worked, I did these changes just by deducing how it's supposed to work so this PR might be totally wrong.\r\n\r\nI noticed a couple of changes in the generated code other than white-space and license header where I don't know whether the source of truth is the new generated code or the existing generated code (It's mostly comments that differ between both).\r\n\r\nThis PR unblocks PRs like this one: #5651.\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nI tested this fix locally using this command `build -projects \"src\\Microsoft.DotNet.Wpf\\src\\WpfGfx\\codegen\\mcg\\mcg.proj\"` and by looking at the changes and doing a normal build afterwards.\r\n\r\n## Risk\r\nI think the risk is pretty low since it's only used for development in this repo and the worse that can happen is to be unable to run MilCodeGen (It didn't work before this PR so it can only be an improvement). All the generated code is checked out in Git so it's easier to validate that the generated code is good.","Url":"https://github.com/dotnet/wpf/pull/6135","RelatedDescription":"Open PR \"Fix MilCodeGen\" (#6135)"},{"Id":"1139155348","IsPullRequest":true,"CreatedAt":"2022-02-15T20:18:50","Actor":"dotnet-maestro[bot]","Number":"6132","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220215.3\r\n- **Date Produced**: February 15, 2022 7:07:01 PM UTC\r\n- **Commit**: 2c7cd54ba11a38c55e2454b2084a1d102a1ed817\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.2.22115.2 to 7.0.0-preview.2.22115.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.2.22115.2 to 7.0.0-preview.2.22115.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/26ce5ab...2c7cd54\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6132","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6132)"},{"Id":"1139126322","IsPullRequest":true,"CreatedAt":"2022-02-15T19:53:19","Actor":"dotnet-maestro[bot]","Number":"6131","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220215.2\r\n- **Date Produced**: February 15, 2022 6:57:54 PM UTC\r\n- **Commit**: 26ce5ab8420926beb19201a1c2eb0321e491f84f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.2.22115.1 to 7.0.0-preview.2.22115.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.2.22115.1 to 7.0.0-preview.2.22115.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8f69072...26ce5ab\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6131","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6131)"},{"Id":"1139051648","IsPullRequest":true,"CreatedAt":"2022-02-15T18:20:46","Actor":"kant2002","Number":"6130","RawContent":null,"Title":"Remove unused files","State":"open","Body":"Just general cleanup.\r\nThis `dir.props` is leftover from previous build infra.\r\nmakefiles also most likely do not used.","Url":"https://github.com/dotnet/wpf/pull/6130","RelatedDescription":"Open PR \"Remove unused files\" (#6130)"},{"Id":"1138821424","IsPullRequest":true,"CreatedAt":"2022-02-15T15:36:40","Actor":"dotnet-maestro[bot]","Number":"6129","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220215.1\r\n- **Date Produced**: February 15, 2022 2:37:23 PM UTC\r\n- **Commit**: 8f690724cb97c125172a87e89e57c541743dfaeb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.2.22114.6 to 7.0.0-preview.2.22115.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.2.22114.6 to 7.0.0-preview.2.22115.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/17bae80...8f69072\r\n[2]: https://github.com/dotnet/runtime/compare/6e05d78...14e6411\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6129","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6129)"},{"Id":"1138690699","IsPullRequest":true,"CreatedAt":"2022-02-15T13:54:22","Actor":"dotnet-maestro[bot]","Number":"6128","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220214.7\r\n- **Date Produced**: February 14, 2022 6:39:03 PM UTC\r\n- **Commit**: 6d977266bcc193caedb60a27ae44d14d9a11a040\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ff6cc4e...6d97726\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6128","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6128)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-02-20T03:30:33.0266237Z","RunDurationInMilliseconds":568}