{"Data":{"GitHub":{"Issues":[{"Id":"766551078","IsPullRequest":true,"CreatedAt":"2020-12-14T14:56:00","Actor":"lindexi","Number":"3909","RawContent":null,"Title":"Fix Grid SetFinalSize method comment","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/3909","RelatedDescription":"Open PR \"Fix Grid SetFinalSize method comment\" (#3909)"},{"Id":"765140881","IsPullRequest":true,"CreatedAt":"2020-12-13T07:38:55","Actor":"lindexi","Number":"3908","RawContent":null,"Title":"Using readonly struct in WPF Ink module","State":"open","Body":"See: https://github.com/dotnet/wpf/issues/812\r\n\r\nBenchmark:\r\n\r\n|          Method |           context |     Mean |     Error |    StdDev | Ratio | RatioSD |\r\n|---------------- |------------------ |---------:|----------:|----------:|------:|--------:|\r\n|    CalcGeometry |    WpfInk.Context | 1.595 ms | 0.0031 ms | 0.0029 ms |     ? |       ? |\r\n|                 |                   |          |           |           |       |         |\r\n| CalcGeometryOld | WpfInkOld.Context | 1.628 ms | 0.0069 ms | 0.0064 ms |  1.00 |    0.00 |\r\n\r\nBenchmark code:  https://github.com/lindexi/lindexi_gd/tree/376e4404/WpfInk\r\n\r\nUpdate https://github.com/dotnet/wpf/pull/2839/","Url":"https://github.com/dotnet/wpf/pull/3908","RelatedDescription":"Open PR \"Using readonly struct in WPF Ink module\" (#3908)"},{"Id":"764817462","IsPullRequest":true,"CreatedAt":"2020-12-13T02:55:35","Actor":"lindexi","Number":"3907","RawContent":null,"Title":"Make CustomGuids as readonly","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/3907","RelatedDescription":"Open PR \"Make CustomGuids as readonly\" (#3907)"},{"Id":"763848541","IsPullRequest":true,"CreatedAt":"2020-12-12T14:24:38","Actor":"dotnet-maestro[bot]","Number":"3906","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201212.3\r\n- **Date Produced**: 12/12/2020 1:42 PM\r\n- **Commit**: 43262e90bd3bd77fea7e9cde9d583f731b970c64\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20611.3 to 6.0.0-alpha.1.20612.3][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC3740880&targetVersion=GC43262e9&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3906)"},{"Id":"763787292","IsPullRequest":true,"CreatedAt":"2020-12-12T13:32:18","Actor":"dotnet-maestro[bot]","Number":"3905","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201210.4\r\n- **Date Produced**: 12/10/2020 11:23 PM\r\n- **Commit**: 3346d7b4ff047c854913fb2ded6e3aa726da6d11\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20609.9 to 6.0.0-beta.20610.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20609.9 to 6.0.0-beta.20610.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20609.9 to 6.0.0-beta.20610.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20609.9 to 6.0.0-beta.20610.4][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20609.9 to 6.0.0-beta.20610.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/66c6b1b...3346d7b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3905","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3905)"},{"Id":"763059026","IsPullRequest":false,"CreatedAt":"2020-12-11T23:41:34","Actor":"GeraudFabien","Number":"3904","RawContent":null,"Title":"Is this repo dead? ","State":"open","Body":"I remember asking that a few (years ago)[https://github.com/microsoft/xaml-standard/issues/230]. Seeing all the [complain ](https://devblogs.microsoft.com/dotnet/whats-new-in-windows-forms-runtime-in-net-5-0/) every time i read on somethinks about .net5 about the lack of activity here. I cannot resist to do it again.\r\n\r\nThere are no real update on master since September:\r\n- Commit are just small .net version update and doc an small chuck of code that i believe are related to the CI (No real issue fix).\r\n\r\nI understand that the team is focusing in WinUI or maui. And sincerly i preferred the team to work on MAUI than WPF or winform. But :\r\n- The readme explain how to open Issue why? \r\n- There is no link to explain to use WinUI and WPF is obsolete\r\n- Why WinForm is way more supported i expect the opposite or at least the same.\r\n\r\nTo be clear i don't ask for more support i ask to know what's going on. Just be clear with the community. Just update the readme to point to WinUI and Lock the repo if you don't want new issue. Just update the readme and do a blog post.\r\n\r\n> We will add more tests in **_2019 and 2020_**, however, it will be a progressive process.\r\n\r\n...","Url":"https://github.com/dotnet/wpf/issues/3904","RelatedDescription":"Open issue \"Is this repo dead? \" (#3904)"},{"Id":"762910351","IsPullRequest":false,"CreatedAt":"2020-12-11T21:12:07","Actor":"CarbonNeuron","Number":"3903","RawContent":null,"Title":".net 5 trimming causes crash on copying text","State":"open","Body":"* .NET Core Version: 5.0.101\r\n* Windows version: 20H2\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:** I am building a self-contained trimmed publish release of a project using .net 5, and using trimming. If you try to copy from the Text boxes in the GUI it will crash. This only happens with trimming.\r\n \r\n **Actual behavior:** \r\n`Faulting application name: TestWPF.exe, version: 1.0.0.0, time stamp: 0x5fbf1139\r\nFaulting module name: ntdll.dll, version: 10.0.19041.662, time stamp: 0x5f641e44\r\nException code: 0xc0000409\r\nFault offset: 0x00087160\r\nFaulting process id: 0x342c\r\nFaulting application start time: 0x01d6cfff6daa978a\r\nFaulting application path: C:\\Users\\Carbon\\source\\repos\\TestWPF\\TestWPF\\bin\\Release\\net5.0-windows\\publish\\TestWPF.exe\r\nFaulting module path: C:\\Windows\\SYSTEM32\\ntdll.dll\r\nReport Id: e5c5c421-412f-4a5f-aa52-d412120410da\r\nFaulting package full name: \r\nFaulting package-relative application ID: `\r\n \r\n **Expected behavior:** it copies the text to clipboard.\r\n \r\n **Minimal repro:** https://github.com/CarbonNeuron/WPFCopyCrash make sure to run the published file and not the debug one.\r\n","Url":"https://github.com/dotnet/wpf/issues/3903","RelatedDescription":"Open issue \".net 5 trimming causes crash on copying text\" (#3903)"},{"Id":"762467219","IsPullRequest":true,"CreatedAt":"2020-12-11T15:47:02","Actor":"dotnet-maestro[bot]","Number":"3902","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1b2e9dc5-44be-480a-8167-08d86afc0648\r\n- **Build**: 20201130.4\r\n- **Date Produced**: 11/30/2020 8:34 PM\r\n- **Commit**: 79333c52da3f213509ab79bd92924660e04e668c\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6f54e00...79333c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1b2e9dc5-44be-480a-8167-08d86afc0648)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3902","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#3902)"},{"Id":"762370952","IsPullRequest":true,"CreatedAt":"2020-12-11T14:23:38","Actor":"dotnet-maestro[bot]","Number":"3901","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201211.3\r\n- **Date Produced**: 12/11/2020 1:55 PM\r\n- **Commit**: 374088009fa93d5c26d17310f76cabec0f13a26b\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20610.2 to 6.0.0-alpha.1.20611.3][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC0053004&targetVersion=GC3740880&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3901","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3901)"},{"Id":"762323216","IsPullRequest":true,"CreatedAt":"2020-12-11T13:32:14","Actor":"dotnet-maestro[bot]","Number":"3900","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201209.9\r\n- **Date Produced**: 12/10/2020 5:26 AM\r\n- **Commit**: 66c6b1b53965afd8ee5695a36b1909d006ae98af\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/b984ce8...66c6b1b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3900","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3900)"},{"Id":"761281319","IsPullRequest":true,"CreatedAt":"2020-12-10T14:45:14","Actor":"dotnet-maestro[bot]","Number":"3899","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201210.2\r\n- **Date Produced**: 12/10/2020 2:11 PM\r\n- **Commit**: 0053004b88247048de9f81f9eab412aeb40ad93e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20609.3 to 6.0.0-alpha.1.20610.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCef056fc&targetVersion=GC0053004&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3899","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3899)"},{"Id":"761249395","IsPullRequest":false,"CreatedAt":"2020-12-10T13:38:43","Actor":"damien-c-d","Number":"3898","RawContent":null,"Title":"ClickOnce Publish Fails in .NET 5.0 for WPF Application","State":"open","Body":"\r\n\r\n* .NET Core Version: \r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n* Windows version: 10 Version 20H2 (OS Build 19042.630)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No \r\n \r\n **Problem description:** Publishing Self Contained Single File WPF Application in .NET 5.0 fails after adding references/nuget packages. \r\n \r\n **Actual behavior:** \r\n\r\n![image](https://user-images.githubusercontent.com/53846872/101777262-54b79900-3b46-11eb-9a84-ddb508480e50.png)\r\n\r\nOutput Window Text: \r\n[OutputWindowText.txt](https://github.com/dotnet/wpf/files/5673002/OutputWindowText.txt)\r\n\r\nLog File From Error Window:\r\n[tmp6214.tmp.txt](https://github.com/dotnet/wpf/files/5673015/tmp6214.tmp.txt)\r\n \r\n **Expected behavior:** Publish Succeeded\r\n \r\n **Minimal repro:**\r\n\r\n1. Create New WPF App (.NET) From VS Menu\r\n2. Open Project Properties\r\n3. Target Framework -> .NET 5.0\r\n4. Install NuGet Package System.Drawing.Common -> 5.0.0 (Issue happens with many other packages/assemblies/project references as well)\r\n5. Publish -> Folder -> ClickOnce -> Self Contained -> Win-x64 ->Produce Single File \r\n6. Publish Failed\r\n\r\n\r\n \r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/3898","RelatedDescription":"Open issue \"ClickOnce Publish Fails in .NET 5.0 for WPF Application\" (#3898)"},{"Id":"761222350","IsPullRequest":true,"CreatedAt":"2020-12-10T13:32:31","Actor":"dotnet-maestro[bot]","Number":"3897","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201208.21\r\n- **Date Produced**: 12/9/2020 6:43 AM\r\n- **Commit**: b984ce874f048ec28e1067e9f47bdb183682df46\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ae4226e...b984ce8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3897","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3897)"},{"Id":"760363370","IsPullRequest":true,"CreatedAt":"2020-12-09T14:40:57","Actor":"dotnet-maestro[bot]","Number":"3896","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201209.3\r\n- **Date Produced**: 12/9/2020 1:57 PM\r\n- **Commit**: ef056fc141d9ab6ecf21eeaf99a995623245d919\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.3][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC16686ed&targetVersion=GCef056fc&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3896","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3896)"},{"Id":"760309923","IsPullRequest":true,"CreatedAt":"2020-12-09T13:42:32","Actor":"dotnet-maestro[bot]","Number":"3895","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201207.11\r\n- **Date Produced**: 12/8/2020 3:15 AM\r\n- **Commit**: ae4226e0521b46075925444f3d733e05ae74dc0d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ea609b8...ae4226e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3895","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3895)"},{"Id":"760278996","IsPullRequest":false,"CreatedAt":"2020-12-09T13:40:23","Actor":"ZegerDK","Number":"3894","RawContent":null,"Title":"Large ListBox updated content not showing","State":"closed","Body":"The issue below is in .NET core 3.1 .\r\nI have a listbox where every item is a custom control which has a grid with 3 columns, each containing another custom control that contains a datagrid.\r\nThe reason I use a listbox is because each item in the listbox is a price group and depending on the selected price group, some things need to be done.\r\nThe listbox is longer than my application screen.\r\nI have a function giving a price a red background if something is wrong. This function checks every price in every price group and in every datagrid simultaneously as they could be related.\r\nI noticed that when running this function, the non visible listbox items didn't update the price background.\r\nAfter some checking, I noticed that if I first scroll through the listbox all the way down and then run the function, every datagrid shows the updated value, while if I run the function when I haven't scrolled through the list, only the visible seem to be updated.\r\nAs my datagrids are filled with observable collections, they update automatically after any changes, but it doesn't seem to show in every situation, which is off course not the idea.\r\n\r\nAny idea what can be the cause of this and how I can remedy this issue?\r\n\r\nThanks in advance,\r\n\r\nZeger\r\n","Url":"https://github.com/dotnet/wpf/issues/3894","RelatedDescription":"Closed issue \"Large ListBox updated content not showing\" (#3894)"},{"Id":"760030881","IsPullRequest":true,"CreatedAt":"2020-12-09T06:21:06","Actor":"dotnet-maestro[bot]","Number":"3893","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201208.2\r\n- **Date Produced**: 12/9/2020 5:55 AM\r\n- **Commit**: cff5155cf78c06ae6fc3f91447d70e5e87697506\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.2-servicing.20608.1 to 5.0.2-servicing.20608.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.2-servicing.20608.1 to 5.0.2-servicing.20608.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a450f46...cff5155\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3893","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3893)"},{"Id":"759935410","IsPullRequest":true,"CreatedAt":"2020-12-09T03:06:31","Actor":"ryalanms","Number":"3892","RawContent":null,"Title":"Update release/5.0 branding to 5.0.2","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/3892","RelatedDescription":"Closed or merged PR \"Update release/5.0 branding to 5.0.2\" (#3892)"},{"Id":"759918357","IsPullRequest":true,"CreatedAt":"2020-12-09T02:13:40","Actor":"dotnet-maestro[bot]","Number":"3891","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: cae6eaf7-3ded-48b2-2f07-08d85e5f2673\r\n- **Build**: 20201208.1\r\n- **Date Produced**: 12/9/2020 1:34 AM\r\n- **Commit**: a450f464724ed6620fdf38b9d432eba9184d55f4\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 5.0.1-servicing.20575.6 to 5.0.2-servicing.20608.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 5.0.1-servicing.20575.6 to 5.0.2-servicing.20608.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/200d740...a450f46\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:cae6eaf7-3ded-48b2-2f07-08d85e5f2673)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3891","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/winforms\" (#3891)"},{"Id":"759882842","IsPullRequest":true,"CreatedAt":"2020-12-09T00:13:53","Actor":"ryalanms","Number":"3890","RawContent":null,"Title":"Consolidate GenerateTemporaryTargetAssembly in to a single task/target ","State":"open","Body":"### Consolidate GenerateTemporaryTargetAssembly in to a single task/target \r\n\r\nThe original PR contained three new targets and tasks: \r\n\r\n> https://github.com/dotnet/wpf/pull/3585\r\n\r\nThis change combines the two GenerateTemporaryTargetAssembly task/targets in to a single task/target.\r\n\r\n> A single property turns off the new PackageReference support `(IncludePackageReferencesDuringMarkupCompilation = false)` and enables the old behavior.","Url":"https://github.com/dotnet/wpf/pull/3890","RelatedDescription":"Open PR \"Consolidate GenerateTemporaryTargetAssembly in to a single task/target \" (#3890)"},{"Id":"759480008","IsPullRequest":true,"CreatedAt":"2020-12-08T14:54:04","Actor":"dotnet-maestro[bot]","Number":"3889","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201208.2\r\n- **Date Produced**: 12/8/2020 2:01 PM\r\n- **Commit**: 16686edecd558a358000e43fda6c177f8f3f55ed\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20603.2 to 6.0.0-alpha.1.20608.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC621f091&targetVersion=GC16686ed&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3889","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3889)"},{"Id":"759427062","IsPullRequest":true,"CreatedAt":"2020-12-08T13:36:56","Actor":"dotnet-maestro[bot]","Number":"3888","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201204.2\r\n- **Date Produced**: 12/4/2020 6:19 PM\r\n- **Commit**: ea609b8e036359934332480de9336d98fcbb3f91\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20601.2 to 6.0.0-beta.20604.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20601.2 to 6.0.0-beta.20604.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20601.2 to 6.0.0-beta.20604.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20601.2 to 6.0.0-beta.20604.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20601.2 to 6.0.0-beta.20604.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6d8efa0...ea609b8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3888","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3888)"},{"Id":"758943256","IsPullRequest":false,"CreatedAt":"2020-12-07T23:56:57","Actor":"AzAgarampur","Number":"3887","RawContent":null,"Title":"The WindowChrome class needs to be updated & fixed","State":"open","Body":"* .NET Core Version: 3.1.6\r\n* Windows version: (`10.0.19042`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: **Yes**\r\n \r\n **Problem description:**\r\n \r\nThe `WindowChrome` class that allows us to customize the non-client area of WPF windows has a few bugs. First, the sizes for the window frame are not correct and do not represent the correct default window frame sizes.\r\n\r\nIn addition, this class has not been updated for Windows 10. Ever since Windows 10, the right, left, and bottom non-client frames are transparent except for a 1px border which is what gives windows their \"borderless\" look. When using `WindowChrome` on Windows 10, this is not taken into consideration.\r\n\r\nThe following XAML code will show the current problems with the `WindowChrome` class.\r\n\r\nXAML: `<WindowChrome/>`\r\n\r\n![image](https://user-images.githubusercontent.com/42058942/101418073-e05ccb80-38a1-11eb-8b20-6ddd009e4c74.png)\r\n\r\nThere are some problems as you can see:\r\n1. The size of all the extended window frames are too small.\r\n2. On Windows 10, the transparent side non-client frames are not being taken into account.\r\n\r\nIn order to fix the side border issues on Windows 10, we need to make the XAML the following: `<WindowChrome NonClientFrameEdges=\"Bottom,Left,Right\"/>` Consider making this the default behavior on Windows 10. However, this fixes only the side border problem, as the titlebar is still too small. Also, even though the side border do look fixed, the amount of non-client border that has been brought back is too little (due to the size of all the extended window frames being too small.) This results in:\r\n\r\n![image](https://user-images.githubusercontent.com/42058942/101418634-1cdcf700-38a3-11eb-8b47-e33bd0a618a4.png)\r\n\r\nWe need the correct extended frame sizes fixed first, because it not only messes up the look of the extended window frame borders, but it also will cause problems when an app is maximized, because the too small frame hangs over the monitor, which can result in transparent holes in the app's UI.\r\n\r\nNext, it seems like `WM_NCMOUSELEAVE` is not being handled properly. There are times when the mouse quickly moves over the extended frame's caption buttons then leaves, but the highlight is not removed from the caption button. This picture shows this phenomenon happening on the close button, but it happens on all buttons:\r\n\r\n![image](https://user-images.githubusercontent.com/42058942/101418836-8fe66d80-38a3-11eb-8e44-bddfd4e5ec10.png)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/3887","RelatedDescription":"Open issue \"The WindowChrome class needs to be updated & fixed\" (#3887)"},{"Id":"758909326","IsPullRequest":false,"CreatedAt":"2020-12-07T22:47:31","Actor":"kalaskarsanket","Number":"3886","RawContent":null,"Title":".NET 5 WPF application single file publishing error","State":"open","Body":"---\r\n**Issue moved from microsoft/dotnet#1267**\r\n- Please respond to @HenJigg.\r\n\r\n---\r\n\r\n_From @HenJigg on Thursday, November 12, 2020 4:13:31 AM_\r\n\r\n![image](https://user-images.githubusercontent.com/42528522/98894719-5ad33f00-24e0-11eb-9c5f-2b96c819919a.png)\r\n\r\nUse Visual Studio to debug normally, and Debug also runs normally. I want to confirm what caused this exception. Where can I view it?\r\n\r\nWhen creating a blank WPF application and publishing it, everything runs normally. It is most likely due to the nuget package in the project, or some aspect of the code. What I want to be sure is, if I find where the problem is?","Url":"https://github.com/dotnet/wpf/issues/3886","RelatedDescription":"Open issue \".NET 5 WPF application single file publishing error\" (#3886)"},{"Id":"758042424","IsPullRequest":false,"CreatedAt":"2020-12-06T22:45:10","Actor":"LakshanF","Number":"3885","RawContent":null,"Title":"Use C# for PresentationCore module initializer instead of the existing IL injection","State":"open","Body":"Trimming a default WPF application causes issues for the linker and I'm following up on those. One issue is related with the use of IL injection for the module cctor since earlier version of the C# compiler didn't have this support. \r\n\r\nMy colleague, @vitek-karas, has a change that addresses [this](https://github.com/dotnet/wpf/compare/master...vitek-karas:UseModuleInit) that can be leveraged for this purpose. The existing IL injection at [Arcade](https://github.com/dotnet/wpf/tree/master/eng/WpfArcadeSdk/tools/InjectModuleInitializer) might require some cleanup which could be done better by a WPF domain expert.\r\n\r\nThe other [issues](https://github.com/dotnet/sdk/issues/14261) related to WPF trimming are changes that we need to make on the linker side, at least to peel away to uncover any other deeper issues related to WPF heavy use of C++/CLI assemblies.\r\n","Url":"https://github.com/dotnet/wpf/issues/3885","RelatedDescription":"Open issue \"Use C# for PresentationCore module initializer instead of the existing IL injection\" (#3885)"},{"Id":"757248514","IsPullRequest":false,"CreatedAt":"2020-12-04T16:53:17","Actor":"MarkIngramUK","Number":"3884","RawContent":null,"Title":"BitmapImage crashes when loading a PNG with embedded colour profile and using a display virtual colour profile","State":"open","Body":"* .NET Core Version: N/A (.NET Framework)\r\n* Windows version: 10.0.19041 (20H1) and 10.0.19042 (20H2)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Unknown, using 4.7.2.\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\n **Problem description:**\r\nAfter customers have updated their OS to 20H1 or 20H2 some have had their System Default display colour profile changed to \"sRGB virtual device model profile\". When loading a PNG with the `iCCP` ancillary chunk as a `System.Windows.Media.Imaging.BitmapImage` from a stream, it will now crash. If the customer changes the colour profile back to \"sRGB IEC61966-2.1\" the crash no longer occurs (or if we load a PNG without the `iCCP` chunk, that won't crash either).\r\n\r\n\r\n **Actual behavior:**\r\nStack trace from our app:\r\n```\r\nFramework version: v4.0.30319\r\nDescription: The process terminated due to an unhandled exception.\r\nException information: System.ArithmeticException\r\n\r\nException information: System.OverflowException\r\n    at System.Windows.Media.Imaging.ColorConvertedBitmap.FinalizeCreation ()\r\n    at System.Windows.Media.Imaging.BitmapImage.FinalizeCreation ()\r\n    at System.Windows.Media.Imaging.BitmapImage.EndInit ()\r\n    ...\r\n```\r\n \r\n **Expected behavior:**\r\nDoesn't crash. \r\n\r\n **Minimal repro:**\r\n\r\nEnsure that your System Default colour profile is \"sRGB virtual device model profile\" (setting it for the user won't generate the crash, it has to be the System Default).\r\n\r\nI've attached a complete repo, including a PNG with embedded colour profile, but this is the source:\r\n[ColourProfileCrash.zip](https://github.com/dotnet/wpf/files/5644124/ColourProfileCrash.zip)\r\n\r\n```\r\nusing System.Reflection;\r\nusing System.Windows.Media.Imaging;\r\n\r\nnamespace ColourProfileCrash\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var assembly = Assembly.GetExecutingAssembly();\r\n            var names = assembly.GetManifestResourceNames();\r\n            var stream = assembly.GetManifestResourceStream(names[0]);\r\n\r\n            var image = new BitmapImage();\r\n            image.BeginInit();\r\n            image.StreamSource = stream;\r\n            //image.CreateOptions = BitmapCreateOptions.IgnoreColorProfile;\r\n            image.EndInit();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nException message (`OverflowException`):\r\n> The image data generated an overflow during processing.\r\n\r\nInner exception message (`ArithmeticException`):\r\n> Overflow or underflow in the arithmetic operation.\r\n\r\nOr solution has been to catch the exception, and try the load again, but ignoring the colour profile.\r\n```\r\nBitmapImage image;\r\ntry\r\n{\r\n\timage = new BitmapImage();\r\n\timage.BeginInit();\r\n\timage.StreamSource = stream;\r\n\timage.EndInit();\r\n}\r\ncatch(Exception)\r\n{\r\n\timage = new BitmapImage();\r\n\timage.BeginInit();\r\n\timage.StreamSource = stream;\r\n\timage.CreateOptions = BitmapCreateOptions.IgnoreColorProfile;\r\n\timage.EndInit();\r\n}\r\n```\r\n\r\n**Some customer reports of the issue:**\r\nhttps://forum.affinity.serif.com/index.php?/topic/121111-affinity-photo-and-designer-wont-launch-anymore/&do=findComment&comment=662948\r\nhttps://forum.affinity.serif.com/index.php?/topic/127975-win10-install-shows-in-system-tray-then-disappears/&do=findComment&comment=702680\r\nhttps://forum.affinity.serif.com/index.php?/topic/121274-the-colors-are-totally-wrong-in-affinity/&do=findComment&comment=661865\r\nhttps://forum.affinity.serif.com/index.php?/topic/126311-designer-publisher-and-photo-did-not-start-after-win10-update-to-20h2/\r\nhttps://forum.affinity.serif.com/index.php?/topic/124081-cant-reinstall-after-no-start-problem/&do=findComment&comment=682029\r\nhttps://forum.affinity.serif.com/index.php?/topic/118653-photo-crash-on-startup-even-installer-windows/&do=findComment&comment=645262\r\n","Url":"https://github.com/dotnet/wpf/issues/3884","RelatedDescription":"Open issue \"BitmapImage crashes when loading a PNG with embedded colour profile and using a display virtual colour profile\" (#3884)"},{"Id":"757224240","IsPullRequest":false,"CreatedAt":"2020-12-04T16:18:27","Actor":"dragomirtitian","Number":"3883","RawContent":null,"Title":"Binding on two different attached properties with the same local name causes both properties to be resolved to one of them\\","State":"open","Body":"* .NET Core Version: Not tested on core just .NET Framework, code looks the same though\r\n* Windows version: Windows 10 Version 1709 16299.1087\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:** Given two attached properties with the same name in a class with the same name but in different namespaces and aliased with the same xmlns prefix in a xaml file, the `PropertyPathWorker` will end up using only the first encountered property. This is because `AccessorTable` uses the local name as the cache key even though the two properties with the same local name may be unrelated. \r\n \r\n **Actual behavior:** In the second xaml file, the binding actually refers to the first attached property, while the property on the button refers to the correct attached property \r\n \r\n **Expected behavior:** The correct property is used in each xaml file both on the target control and in the binding\r\n \r\n **Minimal repro:**\r\n\r\n*MainWindow.xaml*\r\n```xaml\r\n<Window x:Class=\"BugRepro.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:local=\"clr-namespace:BugRepro\">\r\n    <StackPanel>\r\n        <local:UserControl1></local:UserControl1>\r\n        <local:UserControl2></local:UserControl2>\r\n    </StackPanel>\r\n</Window>\r\n```\r\n\r\n*UserControl1.xaml*\r\n```xaml\r\n<UserControl x:Class=\"BugRepro.UserControl1\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             xmlns:c=\"clr-namespace:BugRepro.UserControl1Props\">\r\n    <StackPanel Orientation=\"Horizontal\" TextBlock.FontSize=\"50\">\r\n        <TextBlock>1</TextBlock>\r\n        <Button x:Name=\"btn\" c:AttachedProps.SomeProp=\"1\">\r\n            <Button.Template>\r\n                <ControlTemplate TargetType=\"Button\">\r\n                    <StackPanel>\r\n                        <TextBlock Foreground=\"BlueViolet\" Text=\"{Binding Path=(c:AttachedProps.SomeProp), RelativeSource={RelativeSource Mode=TemplatedParent}}\"></TextBlock>\r\n                    </StackPanel>\r\n                </ControlTemplate>\r\n            </Button.Template>\r\n        </Button>\r\n    </StackPanel>\r\n</UserControl>\r\n\r\n```\r\n\r\n*UserControl1.xaml.cs*\r\n\r\n```cs\r\nusing System.Windows;\r\nusing System.Windows.Controls;\r\n\r\nnamespace BugRepro\r\n{\r\n    public partial class UserControl1 : UserControl\r\n    {\r\n        public UserControl1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n    }\r\n\r\n    namespace UserControl1Props\r\n    {\r\n        public class AttachedProps\r\n        {\r\n            public static int GetSomeProp(DependencyObject obj) => (int)obj.GetValue(SomePropProperty);\r\n            public static void SetSomeProp(DependencyObject obj, int value) => obj.SetValue(SomePropProperty, value);\r\n\r\n            // Using a DependencyProperty as the backing store for SomeProp.  This enables animation, styling, binding, etc...\r\n            public static readonly DependencyProperty SomePropProperty =\r\n                DependencyProperty.RegisterAttached(\"SomeProp\", typeof(int), typeof(AttachedProps), new PropertyMetadata(-1));\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n*UserControl1.xaml*\r\n```xaml\r\n<UserControl x:Class=\"BugRepro.UserControl2\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             xmlns:c=\"clr-namespace:BugRepro.UserControl2Props\">\r\n    <StackPanel Orientation=\"Horizontal\" TextBlock.FontSize=\"50\">\r\n        <TextBlock>2</TextBlock>\r\n        <Button x:Name=\"btn\" c:AttachedProps.SomeProp=\"2\">\r\n            <Button.Template>\r\n                <ControlTemplate TargetType=\"Button\">\r\n                    <StackPanel>\r\n                        <TextBlock Foreground=\"BlueViolet\" Text=\"{Binding Path=(c:AttachedProps.SomeProp), RelativeSource={RelativeSource Mode=TemplatedParent}}\"></TextBlock>\r\n                    </StackPanel>\r\n                </ControlTemplate>\r\n            </Button.Template>\r\n        </Button>\r\n    </StackPanel>\r\n</UserControl>\r\n```\r\n\r\n*UserControl2.xaml.cs*\r\n```cs\r\nusing System.Windows;\r\nusing System.Windows.Controls;\r\n\r\nnamespace BugRepro\r\n{\r\n    public partial class UserControl2 : UserControl\r\n    {\r\n        public UserControl2()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n    }\r\n\r\n    namespace UserControl2Props\r\n    {\r\n        public class AttachedProps\r\n        {\r\n            public static int GetSomeProp(DependencyObject obj) => (int)obj.GetValue(SomePropProperty);\r\n\r\n            public static void SetSomeProp(DependencyObject obj, int value) => obj.SetValue(SomePropProperty, value);\r\n\r\n            // Using a DependencyProperty as the backing store for SomeProp.  This enables animation, styling, binding, etc...\r\n            public static readonly DependencyProperty SomePropProperty =\r\n                DependencyProperty.RegisterAttached(\"SomeProp\", typeof(int), typeof(AttachedProps), new PropertyMetadata(-2));\r\n        }\r\n    }\r\n}\r\n```\r\nThe code above will display two controls, both with one static text, and one through a binding on an attached property. Usercontrol1 should display 1 1, while should display Usercontrol1 should display 2 2.  In actuality Usercontrol2 displays 2 -1. This is because teh binding in  Usercontrol2  will use the attached property in `UserControl1Props` which has a default of `-1`\r\n\r\n![image](https://user-images.githubusercontent.com/8193316/101184891-e5c7d500-3659-11eb-9ca9-1b94ad9357de.png)\r\n\r\nIf you change the local alias of the namespace from `c` to `cx` in any of the user controls the code works as expected:\r\n\r\n![image](https://user-images.githubusercontent.com/8193316/101185311-625ab380-365a-11eb-86e7-943e532aa0a2.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/3883","RelatedDescription":"Open issue \"Binding on two different attached properties with the same local name causes both properties to be resolved to one of them\\\" (#3883)"},{"Id":"756234950","IsPullRequest":true,"CreatedAt":"2020-12-03T14:40:36","Actor":"dotnet-maestro[bot]","Number":"3882","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20201203.2\r\n- **Date Produced**: 12/3/2020 2:10 PM\r\n- **Commit**: 621f0911e67a826877bae32b96415eddeaea36ee\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-alpha.1.20574.3 to 6.0.0-alpha.1.20603.2][1]\r\n\r\n[1]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GC1fca475&targetVersion=GC621f091&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3882","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#3882)"},{"Id":"756175533","IsPullRequest":true,"CreatedAt":"2020-12-03T13:37:50","Actor":"dotnet-maestro[bot]","Number":"3881","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20201201.2\r\n- **Date Produced**: 12/1/2020 7:10 PM\r\n- **Commit**: 6d8efa00a7dd2d15e07df673a83cecb8a0a3031f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.20573.2 to 6.0.0-beta.20601.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/35bddd4...6d8efa0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/3881","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3881)"},{"Id":"755762963","IsPullRequest":false,"CreatedAt":"2020-12-03T02:24:31","Actor":"vsfeedback","Number":"3880","RawContent":null,"Title":"Interop.Microsoft.Office.*.dll missing on publish","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/InteropMicrosoft-missing-on-publish/1108259)._\n\n---\nI am using Visual Studio Enterprise 2019 16.6.3.\nIn a .NET Core 3.1 WPF solution there are libraries that use MS Office COM references. When I publish a WPF application via FolderProfile that references such a library, the Interop.Microsoft.Office.*.dll is missing in the publish directory. However, it is available in the build directory of the library.\nI have attached a small example. Just call\nmsbuild Exe\\Exe.csproj /t:restore /t:publish /p:Configuration=Release /p:Platform=x64 /p:PublishProfile=FolderProfile\n\n---\n### Original Comments\n\n#### Wolfgang Kordts on 7/9/2020, 11:33 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 7/10/2020, 10:39 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 10/30/2020, 02:25 PM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n#### Mila Zhou[MSFT] on 11/3/2020, 05:02 PM: \n\n<p>Thank you for taking the time to log this issue! Did you still reproduce this issue in the latest stable version of Visual Studio installed from <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads\">https://visualstudio.microsoft.com/downloads</a> ?<br>\nIf so, in order for us to investigate this further, could you please provide repro steps, a more detailed description of the faulty behavior and the actions you were taking when the issue appeared to help us better understand this scenario?<br>\nWe look forward to hearing from you!</p>\n\n#### Wolfgang Kordts on 11/4/2020, 02:49 PM: \n\n<p>I added a replicate example a long time ago. So it can be reproduced.<br>\nIn the meantime, in cooperation with another Microsoft employee, we have come to the conclusion that the Interop Dlls are not required in the delivery in order to run correctly.</p>\n\n#### Feedback Bot on 12/3/2020, 01:29 AM: \n\nThank you for reporting this issue to us. We have changed the title to better describe the problem so others can find and engage with it.\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/3880","RelatedDescription":"Open issue \"Interop.Microsoft.Office.*.dll missing on publish\" (#3880)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-15T05:30:50.0531771Z","RunDurationInMilliseconds":646}