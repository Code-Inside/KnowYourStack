{"Data":{"GitHub":{"Issues":[{"Id":"1192507328","IsPullRequest":true,"CreatedAt":"2022-04-05T02:21:36","Actor":"dotnet-maestro[bot]","Number":"6356","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220404.1\r\n- **Date Produced**: April 5, 2022 1:29:40 AM UTC\r\n- **Commit**: 1616cf133035beadf3c97573c8abecbdb6750967\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22203.4 to 7.0.0-preview.4.22204.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22203.4 to 7.0.0-preview.4.22204.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/6cc092c...1616cf1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6356","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6356)"},{"Id":"1192497141","IsPullRequest":false,"CreatedAt":"2022-04-05T01:33:45","Actor":"NWoodsman","Number":"6355","RawContent":null,"Title":"Setting System.Windows.Media.Pen.DashStyle exhibits unreliable behavior","State":"open","Body":"* .NET Core Version: 6.0\r\n* Windows version: Windows 10 build 19043.1586\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/main/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nSetting `System.Windows.Media.Pen.DashStyle` to a value changes the UI once and not again. \r\n\r\nThe code sample includes the following code:\r\n\r\n```\r\n            switch (Counter)\r\n            {\r\n                case 0:\r\n                    LineElement.Pen.DashStyle = new DashStyle(new double[] { 4, 6 }, 0);\r\n                    Counter++;\r\n                    break;\r\n                case 1:\r\n                    LineElement.Pen.DashStyle = DashStyles.Solid;\r\n                    Counter++;\r\n                    break;\r\n                case 2:\r\n                    LineElement.Pen.DashStyle = new DashStyle(new double[] { 4, 6 }, 0);\r\n                    Counter++;\r\n                    break;\r\n                case 3:\r\n                    LineElement.Pen.DashStyle = DashStyles.Solid;\r\n                    Counter++;\r\n                    break;\r\n\r\n                default:\r\n                    throw new ArgumentOutOfRangeException();\r\n            }\r\n\r\n```\r\nIn the above code extracted from my gist, the GUI changes at case 0 correctly and draws a dashed line. Then it fails to update at every other case.\r\n\r\nThe code copied into a .Net 4.8 WPF app exhibits the same behavior.\r\n\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\nThe GUI changes exactly once when the `Pen.DashStyle` dependency property updates. Then it stops updating. \r\n\r\n **Expected behavior:**\r\n\r\nI expected that setting `Pen.DashStyle` more than once to new values would behave like a dependency property (since it is). \r\n \r\n **Minimal repro:**\r\n\r\nCreate new WPF .Net6 app, call it `WpfApp1`.\r\nReplace all of the code in MainWindow.xaml and MainWindow.xaml.cs with the code in the following gist files:\r\n[https://gist.github.com/NWoodsman/eccbc3c3164bc0691c6841d2836e6684](url)\r\nRun the app and click the button repeatedly.\r\n","Url":"https://github.com/dotnet/wpf/issues/6355","RelatedDescription":"Open issue \"Setting System.Windows.Media.Pen.DashStyle exhibits unreliable behavior\" (#6355)"},{"Id":"1191862185","IsPullRequest":true,"CreatedAt":"2022-04-04T14:15:54","Actor":"miloush","Number":"6354","RawContent":null,"Title":"DynamicResource support for app resource changes","State":"open","Body":"Fixes #6302\r\n\r\n## Description\r\n\r\nChanges in application resources are not picked up by `DynamicResource` extension if the target object is not in the visual tree (i.e. has no mentor). It already has code to access App/System resources in the absence of mentor which suggests this was meant to be a supported scenario.\r\n\r\nThis PR introduces internal `ResourcesChanged` instance event on the `Application` object and subscribes the `ResourceReferenceExpression` to the changes when the target element does not have a mentor.\r\n\r\n## Customer Impact\r\n\r\n`DynamicResource` extension on `DependencyObject`s such as `DataGridColumn`s or other user types will not track the changes to the application resources. However, the extension reads them correct the first time, making this issue difficult to diagnose.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt an updated _PresentationFramework.dll_ and tested with the repro project in #6302 on 6.0.2 x86 app.\r\n\r\n## Risk\r\n\r\nNo changes to public API. No changes to behavior when the resource does not come from App/System resources, or when the target object has a mentor. At runtime, each instance of `ResourceReferenceExpression` will create a strong reference to the Application instance, but only in the affected case.","Url":"https://github.com/dotnet/wpf/pull/6354","RelatedDescription":"Open PR \"DynamicResource support for app resource changes\" (#6354)"},{"Id":"1191718820","IsPullRequest":true,"CreatedAt":"2022-04-04T12:33:51","Actor":"miloush","Number":"6353","RawContent":null,"Title":"Adds System.Windows.DataObject.GetData overload taking an index","State":"open","Body":"Fixes #6352\r\n\r\n## Description\r\n\r\nApplications are unable to access multiple aspects/views of `IDataObject` (for example, when multiple files are pasted or dropped not from a file system).\r\n\r\nThe functionality already exists internally. This PR makes it accessible via a public API by adding an overload that accepts a value for `FORMATETC.lindex`.\r\n\r\nUnfortunately the functionality is only made available on `System.Windows.DataObject` since `IDataObject` is public and introducing a new member would break existing implementations.\r\n\r\nAn equivalent `SetData` update should be considered.\r\n\r\n## Customer Impact\r\n\r\nCustomers are unable to get data from drop operations or clipboard when `FileContents` format contains multiple files without rewriting the whole `IDataObject` stack.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nBuilt an updated _PresentationCore.dll_ and tested in 6.0.2 x86 app by dragging and dropping multiple attachments from Outlook onto a WPF window.\r\n\r\n## Risk\r\n\r\nAdding one new public overload of an existing method. If `DataObject` ever supports any other sources other than `OleConverter` and `DataStore`, the new `GetData` overload would need to be updated. Existing behavior not affected. ","Url":"https://github.com/dotnet/wpf/pull/6353","RelatedDescription":"Open PR \"Adds System.Windows.DataObject.GetData overload taking an index\" (#6353)"},{"Id":"1191644427","IsPullRequest":false,"CreatedAt":"2022-04-04T11:27:52","Actor":"miloush","Number":"6352","RawContent":null,"Title":"Support retrieving multiple file contents on drop","State":"open","Body":"**Scenario:**\r\n\r\nUser grabs multiple attachments in Outlook and drags & drops them into a WPF application. The application should be able to read the contents of all the files.\r\n\r\n**Current state:**\r\n\r\nThe existing `DataObject.GetData(\"FileContents\")` API only returns the first file. Other files need to be accessed by specifying the appropriate `FORMATETC.lindex` member, which is accessible through `DataObject.OleConverter.GetData` but not using the public API.\r\n\r\n**Proposed solution:**\r\n\r\nAdd `public GetData(string format, bool autoConvert, int index)` overload to `System.Windows.DataObject` that would pass the index to the underlying `DataObject.OleConverter.GetData` or `DataObject.DataStore.GetData` method. Ideally, this would be added on the `IDataObject` interface but that would be a breaking change since it's public.\r\n\r\nNote: This would enable developers to retrieve file content of all the dropped files. The developer would still need to obtain the file names and count by other means if needed, but reading the associated `FileGroupDescriptor` structure that is accessible through the existing API is much more straightforward then re-implementing the whole `IDataObject` API. ","Url":"https://github.com/dotnet/wpf/issues/6352","RelatedDescription":"Open issue \"Support retrieving multiple file contents on drop\" (#6352)"},{"Id":"1191550522","IsPullRequest":true,"CreatedAt":"2022-04-04T10:07:29","Actor":"miloush","Number":"6351","RawContent":null,"Title":"PickFolders option for OpenFileDialog","State":"open","Body":"For discussion. Fixes #438. Further discussion in #4039.\r\n\r\n## Description\r\n\r\nAllows developers to ask the user to select a folder, a feature known as `FolderBrowserDialog` in WinForms.\r\n\r\nThis PR is the least invasive way of introducing the feature. It closely reflects the underlying API design, i.e. the ability to specify `FOS_PICKFOLDERS` on the `IOpenFileDialog`. This is a backwards compatible solution - no public API has been moved or removed and no existing behavior has changed.\r\n\r\n### Tracking the flags\r\n\r\nThere is, however, an unfortunate implementation detail - the original authors of the code decided to use a single variable to store legacy OFN_ options, Vista FOS_ options and their own custom options. These options diverged and conflict with each other:\r\n\r\n| Value | OFN_ | FOS_ | OPTION_ |\r\n|---|---|---|---|\r\n| 0x0000_0001 | READONLY * | | |\r\n| 0x0000_0002 | OVERWRITEPROMPT | OVERWRITEPROMPT * | |\r\n| 0x0000_0004 | **HIDEREADONLY** * | **STRICTFILETYPES** | |\r\n| 0x0000_0008 | NOCHANGEDIR * | NOCHANGEDIR * | |\r\n| 0x0000_0010 | SHOWHELP | | |\r\n| 0x0000_0020 | **ENABLEHOOK** | **PICKFOLDERS** * | |\r\n| 0x0000_0040 | **ENABLETEMPLATE** | **FORCEFILESYSTEM** | |\r\n| 0x0000_0080 | **ENABLETEMPLATEHANDLE** | **ALLNONSTORAGEITEMS** | |\r\n| 0x0000_0100 | NOVALIDATE * | NOVALIDATE * | |\r\n| 0x0000_0200 | ALLOWMULTISELECT * | ALLOWMULTISELECT * | |\r\n| 0x0000_0400 | EXTENSIONDIFFERENT | | |\r\n| 0x0000_0800 | PATHMUSTEXIST * | PATHMUSTEXIST * | |\r\n| 0x0000_1000 | FILEMUSTEXIST | FILEMUSTEXIST * | |\r\n| 0x0000_2000 | CREATEPROMPT | CREATEPROMPT * | |\r\n| 0x0000_4000 | SHAREAWARE | SHAREAWARE | |\r\n| 0x0000_8000 | NOREADONLYRETURN | NOREADONLYRETURN | |\r\n| 0x0001_0000 | NOTESTFILECREATE | NOTESTFILECREATE | |\r\n| 0x0002_0000 | **NONETWORKBUTTON** | **HIDEMRUPLACES** | |\r\n| 0x0004_0000 | **NOLONGNAMES** | **HIDEPINNEDPLACES** | |\r\n| 0x0008_0000 | EXPLORER | | |\r\n| 0x0010_0000 | NODEREFERENCELINKS * | NODEREFERENCELINKS * | |\r\n| 0x0020_0000 | **LONGNAMES** | **OKBUTTONNEEDSINTERACTION** | |\r\n| 0x0040_0000 | ENABLEINCLUDENOTIFY | | |\r\n| 0x0080_0000 | ENABLESIZING | | |\r\n| 0x0100_0000 | USESHELLITEM | | |\r\n| 0x0200_0000 | DONTADDTORECENT | DONTADDTORECENT | |\r\n| 0x0400_0000 | | | |\r\n| 0x0800_0000 | | | |\r\n| 0x1000_0000 | FORCESHOWHIDDEN | FORCESHOWHIDDEN | |\r\n| 0x2000_0000 | | DEFAULTNOMINIMODE | |\r\n| 0x4000_0000 | | FORCEPREVIEWPANEON | |\r\n| 0x8000_0000 | | **SUPPORTSTREAMABLEITEMS** | **ADDEXTENSION** |\r\n\r\n\\* allowed to set in code as flags (i.e. preserved by masking)\r\n\r\nMost notably `FOS_PICKFOLDERS` conflicts with `OFN_ENABLEHOOK`. The existing code sort of supports only the flags having the same value in both API and passes the combination directly to the APIs. Few conflicting ones are enforced at call time and developers cannot disable them:\r\n\r\nFor legacy dialogs, that is:\r\n* `OFN_EXPLORER`\r\n* `OFN_ENABLEHOOK`\r\n* `OFN_ENABLESIZING`\r\n\r\nFor Vista dialogs, that is:\r\n* `FOS_DEFAULTNOMINIMODE`\r\n* `FOS_FORCEFILESYSTEM`\r\n\r\nUsing the existing infrastructure would mean either\r\n1) using `OFN_EXPLORER` bit to also mean `FOS_PICKFOLDERS`, or;\r\n2) adding a new custom `OPTION_PICKFOLDERS`, preferably as one of the unoccupied bits. \r\n\r\nThe former is messy (either requires casting from FOS or declaring fake OFN constant) and creates confusing code. The latter is in danger that new conflicting flags will be introduced, like it already happened with `OPTION_ADDEXTENSION`.\r\n\r\nI therefore decided for a potentially controversial solution - I split the backing field and track legacy and Vista options separately. The custom option stays in the legacy field, as no new flags are expected in the legacy API. I am willing to implement options 1) or 2) instead if that was preferred.\r\n\r\n### New visible members\r\n\r\nIn `OpenFileDialog`:\r\n* `public bool PickFolders { get; set; }`\r\n\r\nIn `FileDialog`:\r\n* `protected int VistaOptions { get; }`\r\n\r\n### CheckFileExists behavior\r\n\r\nThe `OpenFileDialog` turns on `CheckFileExists` by default. The property works as advertised, meaning users cannot confirm anything if only folders are available to pick. For convenience, setting the `PickFolders` option has a side effect of unsetting the `CheckFileExists` option.\r\n\r\n### Existing properties on folder dialog\r\n\r\n(excerpt from discussion in #4039)\r\n\r\nThese are the current public properties on the `FileDialog`.\r\n\r\nApplicable to folder selection:\r\n* `CustomPlaces`\r\n* `DereferenceLinks` - whether links to folders are followed or not allowed\r\n* `FileName` - e.g. _C:\\Users\\Thomas_\r\n* `FileNames` - always has 1 item at the moment\r\n* `InitialDirectory`\r\n* `SafeFileName` - e.g. _Thomas_\r\n* `SafeFileNames` - always has 1 item at the moment\r\n* `Tag`\r\n* `Title`\r\n\r\nDoing something, but wouldn't be necessary for folders:\r\n* `AddExtension` - internal WPF flag to ensure the file/folder name ends with an extension\r\n* `CheckFileExists` - makes it unable to select a folder, see above\r\n* `DefaultExt` - the extension to add by default\r\n* `ValidateNames` - this one is a red flag, the WPF documentation says \"indicating whether the dialog box accepts only valid Win32 file names.\" which is how the `OFN_NOVALIDATE` flag [works](https://docs.microsoft.com/en-us/windows/win32/api/commdlg/ns-commdlg-openfilenamea) in the legacy file dialogs. However, for the Vista dialogs, the `FOS_NOVALIDATE` flag [means](https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/ne-shobjidl_core-_fileopendialogoptions) \"check for situations that would prevent an application from opening the selected file, such as sharing violations or access denied errors.\"). In addition to the dialog behavior, WPF uses the flag for adding extensions and prompting for overwriting existing files.\r\n\r\nNote that `DefaultExt` with `AddExtensions` are already available for _open_ file dialog which doesn't make much sense, but they work the same when folders are selected.\r\n\r\nValid but currently without any effect:\r\n* `CheckPathExists` - only existing folders are available for selection currently\r\n* `RestoreDirectory` - applicable to legacy dialogs only, [not used](http://web.archive.org/web/20131017051601/http://msdn.microsoft.com/en-us/library/bb761832(VS.85).aspx) in Vista dialogs\r\n\r\nInvalid (the native call returns an error):\r\n* `Filter`\r\n* `FilterIndex`\r\n\r\n### Existing methods on folder dialog\r\n\r\n* `OpenFile` and `OpenFiles` throw `UnauthorisedAccessException` on folders. The existing code should already expect this type of exception when opening files.\r\n\r\n### Legacy behavior\r\n\r\nThe code currently throws `PlatformNotSupported` exception on Windows XP. If that is acceptable, exception message needs to be added. If not, support for `SHBrowseForFolder` API needs to be implemented, which carries non-trivial number of native types (or WinForms version called instead).\r\n\r\n## Customer Impact\r\n\r\nWithout this fix, users have to either use WinForms' `FolderBrowserDialog`, resort to 3rd party libraries or re-implement the whole `IFileDialog` API. #438 is currently the top voted issue in the repository.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nCompiled custom _PresentationFramework.dll_ and tested in 6.0.2 x86 app that both folder browsing and file browsing works as expected.\r\n\r\n## Risk\r\n\r\nOne public and one protected member are added. Existing behavior is not affected. Existing members (even private) still carry the same data. Minimal performance impact (most properties now change two fields) and minimal memory impact (one integer with corresponding generic type). \r\n\r\nUser code that processes \"used\" file dialogs could now be handed an instance that unexpectedly contains folders in the `FileName(s)` properties. This, however, would have to be explicitly caused using new code. Unexpected file operations on folders (i.e. trying to open them) yield IO exceptions that the existing code should be already handling.\r\n\r\n/cc @Symbai @ThomasGoulet73 @fabiant3 ","Url":"https://github.com/dotnet/wpf/pull/6351","RelatedDescription":"Open PR \"PickFolders option for OpenFileDialog\" (#6351)"},{"Id":"1191333160","IsPullRequest":true,"CreatedAt":"2022-04-04T07:12:38","Actor":"dotnet-maestro[bot]","Number":"6350","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220403.4\r\n- **Date Produced**: April 4, 2022 5:58:23 AM UTC\r\n- **Commit**: 6cc092ccf4eedcee415d8779a52bcc061846f7ca\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22203.3 to 7.0.0-preview.4.22203.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22203.3 to 7.0.0-preview.4.22203.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/713c51e...6cc092c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6350","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6350)"},{"Id":"1191310701","IsPullRequest":true,"CreatedAt":"2022-04-04T06:42:03","Actor":"dotnet-maestro[bot]","Number":"6349","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220403.3\r\n- **Date Produced**: April 4, 2022 5:50:43 AM UTC\r\n- **Commit**: 713c51eb66529e3367eca7ac39e0f2615a332d80\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22203.2 to 7.0.0-preview.4.22203.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22203.2 to 7.0.0-preview.4.22203.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b105cc4...713c51e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6349","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6349)"},{"Id":"1191288566","IsPullRequest":true,"CreatedAt":"2022-04-04T06:16:50","Actor":"dotnet-maestro[bot]","Number":"6348","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220403.2\r\n- **Date Produced**: April 4, 2022 5:28:25 AM UTC\r\n- **Commit**: b105cc49b72e49934e4c3fc85d589eadde860155\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22203.1 to 7.0.0-preview.4.22203.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22203.1 to 7.0.0-preview.4.22203.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/03a5349...b105cc4\r\n[2]: https://github.com/dotnet/runtime/compare/c3843c5...c3e4495\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6348","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6348)"},{"Id":"1191271541","IsPullRequest":true,"CreatedAt":"2022-04-04T05:47:20","Actor":"dotnet-maestro[bot]","Number":"6347","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220403.1\r\n- **Date Produced**: April 4, 2022 4:59:39 AM UTC\r\n- **Commit**: 03a5349a0a9292ce7283e92927294d238c146389\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22201.2 to 7.0.0-preview.4.22203.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22201.2 to 7.0.0-preview.4.22203.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/7ea91b0...03a5349\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6347","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6347)"},{"Id":"1191027367","IsPullRequest":false,"CreatedAt":"2022-04-03T19:48:48","Actor":"miloush","Number":"6346","RawContent":null,"Title":"OpenFileDialog.ShowReadOnly does not work","State":"open","Body":"* .NET Core Version: 7.0.0-preview.2.22152.2\r\n* Windows version: 22581.1.amd64fre.ni_release.220318-1623\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:**\r\n\r\nThe `OpenFileDialog` ignores the `ShowReadOnly` property on the Vista code path.\r\n \r\n**Actual behavior:**\r\n\r\nNo check box in the dialog.\r\n \r\n **Expected behavior:**\r\n\r\nA check box in the dialog as per documentation.\r\n\r\nA dropdown option on the Open button would also be acceptable:\r\n<img src=\"https://user-images.githubusercontent.com/10546952/161445476-4e0af62e-5353-43d3-ab72-eda6425bda84.png\">\r\n\r\n **Minimal repro:**\r\n\r\n```C#\r\nOpenFileDialog ofd = new OpenFileDialog();\r\nofd.ShowReadOnly = true;\r\nofd.ShowDialog();\r\n```\r\n","Url":"https://github.com/dotnet/wpf/issues/6346","RelatedDescription":"Open issue \"OpenFileDialog.ShowReadOnly does not work\" (#6346)"},{"Id":"1190986858","IsPullRequest":true,"CreatedAt":"2022-04-03T17:02:42","Actor":"miloush","Number":"6345","RawContent":null,"Title":"Account for optional out parameters in IStream","State":"open","Body":"Fixes #6344 \r\n\r\n## Description\r\n\r\n`System.Windows.Media.StreamAsIStream.Write(byte[] buffer, uint cb, out uint cbWritten)` throws `NullReferenceException` when trying to set `cbWritten` because the `out int cbWritten` parameter has been passed in as null.\r\n\r\nAccording to the documentation, caller can pass `NULL` as `pcbWritten` to [IStream::Write](https://docs.microsoft.com/en-us/windows/win32/api/objidl/nf-objidl-isequentialstream-write) when they are not interested in the number of bytes written.\r\n\r\nThe `CManagedStreamWrapper` does not expect that and [simply passes](https://github.com/dotnet/wpf/blob/89d172db0b7a192de720c6cfba5e28a1e7d46123/src/Microsoft.DotNet.Wpf/src/WpfGfx/core/api/exports.cpp#L775-L782) the pointer to the managed assembly, however, CLR is not happy with writing to null out parameters.\r\n\r\nThe PR fixes the issue by always passing a valid reference to the managed assembly. If an output argument was omitted, a reference to a local variable on stack is passed instead, and the output value is thrown away.\r\n\r\nThe same convention applies to `IStream::Seek` and `IStream::CopyTo` methods.\r\n\r\n## Customer Impact\r\n\r\nCustomers are unable to use WIC encoders (and potentially decoders) that call `IStream` without the optional parameters (i.e. passing `NULL`). In the case of #6344, customers cannot save HEIF files using a paid encoder provided by Microsoft (built-in in previous Windows builds).\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nCompiled an updated _wpfgfx_cor3.dll_ and tested in .NET 6.0.2 x86 WPF application with the repro code in #6344.\r\n\r\n## Risk\r\n\r\nI am not aware of any risks, the fix does not affect any currently working scenario.\r\n","Url":"https://github.com/dotnet/wpf/pull/6345","RelatedDescription":"Open PR \"Account for optional out parameters in IStream\" (#6345)"},{"Id":"1190981201","IsPullRequest":false,"CreatedAt":"2022-04-03T16:41:39","Actor":"miloush","Number":"6344","RawContent":null,"Title":"BitmapEncoder.Save throws NullReferenceException","State":"open","Body":"* .NET Core Version: 6.0.300-preview.22154.4\r\n* Windows version: 22581.1.amd64fre.ni_release.220318-1623\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:**\r\n\r\nWhen using HEIF encoder, the `BitmapEncoder.Save` method throws a `NullReferenceException`. User cannot avoid this codepath.\r\n\r\nDiscovered in #6337. \r\n \r\n **Actual behavior:**\r\n\r\n```\r\nSystem.NullReferenceException\r\n  HResult=0x80004003\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=PresentationCore\r\n  StackTrace:\r\n   at System.Windows.Media.StreamAsIStream.Write(Byte[] buffer, UInt32 cb, UInt32& cbWritten) in f:\\dd\\wpf\\src\\Core\\CSharp\\System\\Windows\\Media\\StreamAsIStream.cs:line 533\r\n```\r\n \r\n **Expected behavior:**\r\n\r\nNo exception.\r\n \r\n **Minimal repro:**\r\n\r\n```C#\r\nGuid heif = new Guid(0xe1e62521, 0x6787, 0x405b, 0xa3, 0x39, 0x50, 0x07, 0x15, 0xb5, 0x76, 0x3f);\r\nvar enc = BitmapEncoder.Create(heif);\r\nenc.Frames.Add(BitmapFrame.Create(BitmapSource.Create(100, 100, 96, 96, PixelFormats.Bgr32, null, new int[100 * 100], 100 * 4)));\r\nenc.Save(new MemoryStream());\r\n```\r\n\r\nRequires HEIF encoder to be installed, e.g. via _HEVC Video Extensions_ from store (`COMException` is thrown instead if encoder is not installed).","Url":"https://github.com/dotnet/wpf/issues/6344","RelatedDescription":"Open issue \"BitmapEncoder.Save throws NullReferenceException\" (#6344)"},{"Id":"1190654379","IsPullRequest":false,"CreatedAt":"2022-04-02T14:51:07","Actor":"AArnott","Number":"6343","RawContent":null,"Title":"FrameworkTemplate.FindName should provide a way to avoid InvalidOperationException","State":"open","Body":"The `FrameworkTemplate.FindName` method throws `InvalidOperationException` when the template doesn't match:\r\n\r\nhttps://github.com/dotnet/wpf/blob/559ca9bfc2b47691e9966fcb28c7378e7c1521fc/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/FrameworkTemplate.cs#L317-L320\r\n\r\nBut there appears to be no way for the caller to check this condition beforehand in order to avoid the exception. The `TemplateInternal` property is internal. And the actual object I have is `ContentPresenter`, whose `TemplateInternal` implementation just returns its `Template` property, which is *private*. That property is a dependency property backed by an internal field. So I appear to be cut off in all ways.\r\n\r\nFix ideas:\r\n1. Add a `TryFindName` method that won't throw. This would solve the whole problem.\r\n2. Expose the `ContentPresenter.Template` property. This would solve *my* problem but doesn't guarantee that the exception can be avoided for all control types.","Url":"https://github.com/dotnet/wpf/issues/6343","RelatedDescription":"Open issue \"FrameworkTemplate.FindName should provide a way to avoid InvalidOperationException\" (#6343)"},{"Id":"1190475970","IsPullRequest":true,"CreatedAt":"2022-04-02T03:05:05","Actor":"ThomasGoulet73","Number":"6342","RawContent":null,"Title":"Remove SecurityCriticalDataForMultipleGetAndSet","State":"open","Body":"## Description\r\nRemoves SecurityCriticalDataForMultipleGetAndSet which is unused since the removal of CAS attributes in #994.\r\n\r\nRemoves these 2 allocations from an empty new WPF application:\r\n![image](https://user-images.githubusercontent.com/51839772/161363392-2b9aa559-9a23-478f-92c6-2d37560d3335.png)\r\n\r\n## Customer Impact\r\nRemoves unnecessary allocations.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nTested locally + CI.\r\n\r\n## Risk\r\nLow.","Url":"https://github.com/dotnet/wpf/pull/6342","RelatedDescription":"Open PR \"Remove SecurityCriticalDataForMultipleGetAndSet\" (#6342)"},{"Id":"1190144400","IsPullRequest":true,"CreatedAt":"2022-04-01T18:58:39","Actor":"dotnet-maestro[bot]","Number":"6341","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220401.2\r\n- **Date Produced**: April 1, 2022 6:03:50 PM UTC\r\n- **Commit**: 7ea91b02ce09e83616177bcc2bbf954e15f65a2b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22180.7 to 7.0.0-preview.4.22201.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/350a820...7ea91b0\r\n[2]: https://github.com/dotnet/runtime/compare/c0db07b...c3843c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6341","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6341)"},{"Id":"1189835807","IsPullRequest":true,"CreatedAt":"2022-04-01T14:38:14","Actor":"dotnet-maestro[bot]","Number":"6340","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220401.1\r\n- **Date Produced**: April 1, 2022 1:30:33 PM UTC\r\n- **Commit**: 350a820f8d10762ca6f6fbb863af8afe29a615c3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22181.1 to 7.0.0-preview.4.22201.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22181.1 to 7.0.0-preview.4.22201.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/05fbdd8...350a820\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6340","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6340)"},{"Id":"1189727870","IsPullRequest":true,"CreatedAt":"2022-04-01T12:54:49","Actor":"dotnet-maestro[bot]","Number":"6339","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220331.2\r\n- **Date Produced**: March 31, 2022 3:37:49 PM UTC\r\n- **Commit**: e0b311bcd81fc9e27bcf7715dcda62fa38dfa49a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22179.1 to 7.0.0-beta.22181.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22179.1 to 7.0.0-beta.22181.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22179.1 to 7.0.0-beta.22181.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22179.1 to 7.0.0-beta.22181.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22179.1 to 7.0.0-beta.22181.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1527dc8...e0b311b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 7.0.100-preview.2.22153.17\r\n  - Updates tools.dotnet to 7.0.100-preview.2.22153.17\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6339","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6339)"},{"Id":"1189472398","IsPullRequest":false,"CreatedAt":"2022-04-01T08:53:23","Actor":"petsuter","Number":"6337","RawContent":null,"Title":"JPEG XL / JPEG XR / AVIF / HEIF / Webp Encoders and Decoders","State":"open","Body":"System.Windows.Media.Imaging supports only e.g. Gif, Icon, Jpeg, Png, Tiff, Wmp encoders and decoders\r\nbut not e.g. JPEG XL, JPEG XR, AVIF, HEIF, Webp encoders and decoders.","Url":"https://github.com/dotnet/wpf/issues/6337","RelatedDescription":"Open issue \"JPEG XL / JPEG XR / AVIF / HEIF / Webp Encoders and Decoders\" (#6337)"},{"Id":"1188816742","IsPullRequest":false,"CreatedAt":"2022-04-01T07:43:20","Actor":"vsfeedback","Number":"6336","RawContent":null,"Title":"ToolTip no longer stable.","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/ToolTip-no-longer-stable/1691105)._\n\n---\n[severity:It's more difficult to complete my work]\r\nToolTip behaviour is now unstable. \n\nI tried resetting Visual Studio. Created a simple project with a Button and a ToolTip.  The 'ToolTip' is displayed so briefly as to be unusable. Movement of the mouse even whilst over the button the 'ToolTip' disappears.\n\n---\n### Original Comments\n\n#### Ray Wynn on 3/14/2022, 06:27 AM: \n\n(private comment, text removed)\n#### Feedback Bot on 3/14/2022, 09:14 AM: \n\n(private comment, text removed)\n#### Vicky Du [MSFT] on 3/15/2022, 10:07 AM: \n\n(private comment, text removed)\n#### Ray Wynn on 3/15/2022, 06:09 PM: \n\n(private comment, text removed)\n#### Ray Wynn on 3/15/2022, 08:15 PM: \n\n(private comment, text removed)\n#### Vicky Du [MSFT] on 3/16/2022, 09:47 AM: \n\n(private comment, text removed)\n#### Ann Yang (Beyondsoft Corporation) [MSFT] on 3/18/2022, 07:04 AM: \n\n(private comment, text removed)\n#### Ann Yang (Beyondsoft Corporation) [MSFT] on 3/18/2022, 07:07 AM: \n\n(private comment, text removed)\n#### Ray Wynn on 3/18/2022, 07:23 AM: \n\n(private comment, text removed)\n#### Ann Yang (Beyondsoft Corporation) [MSFT] on 3/18/2022, 07:27 AM: \n\n(private comment, text removed)\n#### Ray Wynn on 3/18/2022, 01:54 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 3/21/2022, 07:23 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n\n#### Ray Wynn solved on 3/18/2022, 11:05 PM, 0 votes: \n\n<p>[Workaround]<br>\nWindows 11 <strong>System&gt;Display</strong><br>\n<strong>Scale</strong> must be set to 100%.</p>\n<p><em>Any other <strong>Scale</strong> value causes the ToolTip instability problem.</em></p>\n\n#### Ray Wynn solved on 3/18/2022, 11:07 PM, 0 votes: \n\n<p>[Workaround]<br>\nWindows 11 <strong>System&gt;Display</strong><br>\n<strong>Scale</strong> must be set to 100%.</p>\n<p><em>Any other <strong>Scale</strong> value causes the ToolTip instability problem.</em></p>\n","Url":"https://github.com/dotnet/wpf/issues/6336","RelatedDescription":"Closed issue \"ToolTip no longer stable.\" (#6336)"},{"Id":"1188132675","IsPullRequest":true,"CreatedAt":"2022-03-31T14:31:58","Actor":"dotnet-maestro[bot]","Number":"6335","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220331.1\r\n- **Date Produced**: March 31, 2022 1:37:41 PM UTC\r\n- **Commit**: 05fbdd877a08b5b2fd92ffabaa88fad331484c74\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22180.1 to 7.0.0-preview.4.22181.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22180.1 to 7.0.0-preview.4.22181.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/add0d95...05fbdd8\r\n[2]: https://github.com/dotnet/runtime/compare/cbf3f9c...c0db07b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6335","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6335)"},{"Id":"1188022807","IsPullRequest":true,"CreatedAt":"2022-03-31T12:42:54","Actor":"dipeshmsft","Number":"6334","RawContent":null,"Title":"Added correct WPFArtifactsPath for x64","State":"open","Body":"Fixes # <!-- Issue Number -->\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\n\r\nEarlier the wpf-debug.targets did not work with applications built on x64. In this fix, when the PlatformTarget is set to x64, correct WPF artifacts path is being pointed for loading the modules.\r\n\r\n## Regression\r\nNo\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nTested the loaded modules in both scenarios ( x86, x64 )\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nNone\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/6334","RelatedDescription":"Open PR \"Added correct WPFArtifactsPath for x64\" (#6334)"},{"Id":"1187499092","IsPullRequest":true,"CreatedAt":"2022-03-31T04:52:44","Actor":"ThomasGoulet73","Number":"6333","RawContent":null,"Title":"Replace resource constants with properties in System.Xaml","State":"open","Body":"Contributes to dotnet/wpf#1\r\n\r\n## Description\r\nReplace the use of resource constants with properties in System.Xaml. This follows the standard of other .Net projects, like [dotnet/runtime](https://github.com/dotnet/runtime).\r\n\r\n## Customer Impact\r\nNone.\r\n\r\n## Regression\r\nNo.\r\n\r\n## Testing\r\nI tested a few resources and made sure that the generated code in the property getter is the same as the original code.\r\n\r\n## Risk\r\nNone.","Url":"https://github.com/dotnet/wpf/pull/6333","RelatedDescription":"Open PR \"Replace resource constants with properties in System.Xaml\" (#6333)"},{"Id":"1187232228","IsPullRequest":true,"CreatedAt":"2022-03-31T00:21:47","Actor":"SamBent","Number":"6332","RawContent":null,"Title":"ToolTip closes immediately in high DPI","State":"open","Body":"Fixes #6220\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\nIn high DPI environment, most tooltips opened by the mouse close immediately.\r\n\r\nThis is because the SafeArea uses unscaled coordinates, while the current mouse point uses scaled coordinates.  In high DPI, these are different, leading to false negatives from the containment test \"is the mouse within the SafeArea\".\r\n\r\nFixed by using unscaled coordinates for the mouse point.  (And incidentally improving the perf by avoiding a lot of unnecessary transformations into, and out of, scaled coordinates.)\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nMake ToolTips great again (in high DPI).\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nRegression in PR #5931.\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nTested by hand, but thoroughly, in .NET 4.8.1.  The automated tests don't cover high DPI, unless you explicitly run them on a machine whose primary monitor is high DPI.\r\n\r\nThis is a straightforward port of the .NET Fx fix, but should be tested in .NET Core anyway.\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/6332","RelatedDescription":"Open PR \"ToolTip closes immediately in high DPI\" (#6332)"},{"Id":"1186510867","IsPullRequest":true,"CreatedAt":"2022-03-30T14:27:55","Actor":"dotnet-maestro[bot]","Number":"6330","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220330.1\r\n- **Date Produced**: March 30, 2022 1:32:56 PM UTC\r\n- **Commit**: add0d95f0ee5b46fa06fd202e04f4aeae59790a3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22179.5 to 7.0.0-preview.4.22180.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22179.5 to 7.0.0-preview.4.22180.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/6074310...add0d95\r\n[2]: https://github.com/dotnet/runtime/compare/14e6a41...cbf3f9c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6330","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6330)"},{"Id":"1186542884","IsPullRequest":true,"CreatedAt":"2022-03-30T14:24:21","Actor":"anjalisheel-wpf","Number":"6331","RawContent":null,"Title":"WPF DataGrid/GridView column width can be changed using the keyboard shortcut ALT+left or right arrow key","State":"open","Body":"Fixes # https://github.com/dotnet/wpf/issues/5880\r\n\r\nMain PR https://github.com/dotnet/wpf/pull/6054\r\n\r\nDescription\r\nIssue related to WPF DataGrid column width can now be changed using the keyboard shortcut \"ALT + left arrow key\" and \"ALT + right arrow key\".\r\n\r\nCustomer Impact\r\nFixes a regression.\r\n\r\nRegression\r\nYes.\r\n\r\nTesting\r\nIntegration tests are in progress.\r\n\r\nRisk\r\nLow. Add ability to adjust column width using keyboard for WPF DataGrid.","Url":"https://github.com/dotnet/wpf/pull/6331","RelatedDescription":"Open PR \"WPF DataGrid/GridView column width can be changed using the keyboard shortcut ALT+left or right arrow key\" (#6331)"},{"Id":"1186384098","IsPullRequest":true,"CreatedAt":"2022-03-30T12:46:51","Actor":"dotnet-maestro[bot]","Number":"6329","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20220329.1\r\n- **Date Produced**: March 29, 2022 10:42:41 AM UTC\r\n- **Commit**: 1527dc867ccb652def4c0f57fbd2ebbed3a94019\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c8a9529...1527dc8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6329","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6329)"},{"Id":"1185748172","IsPullRequest":true,"CreatedAt":"2022-03-30T02:38:33","Actor":"dotnet-maestro[bot]","Number":"6328","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220329.5\r\n- **Date Produced**: March 30, 2022 1:44:40 AM UTC\r\n- **Commit**: 607431069507dfcb8723772f14cf6fa7a9ebec6e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22179.4 to 7.0.0-preview.4.22179.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22179.4 to 7.0.0-preview.4.22179.5][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/c24da30...6074310\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6328","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6328)"},{"Id":"1185709756","IsPullRequest":true,"CreatedAt":"2022-03-30T02:05:53","Actor":"dotnet-maestro[bot]","Number":"6327","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220329.4\r\n- **Date Produced**: March 30, 2022 1:18:06 AM UTC\r\n- **Commit**: c24da302debd4af7c8cdba17b114ff9c805e8649\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22179.3 to 7.0.0-preview.4.22179.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22179.3 to 7.0.0-preview.4.22179.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/54f280c...c24da30\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6327","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6327)"},{"Id":"1185682314","IsPullRequest":true,"CreatedAt":"2022-03-30T01:39:51","Actor":"dotnet-maestro[bot]","Number":"6326","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20220329.3\r\n- **Date Produced**: March 30, 2022 12:20:36 AM UTC\r\n- **Commit**: 54f280c80be04dcc1f71c0e6923403878ecd9d4b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-preview.4.22179.2 to 7.0.0-preview.4.22179.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-preview.4.22179.2 to 7.0.0-preview.4.22179.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/1e103e4...54f280c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/6326","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#6326)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-04-05T03:30:38.7569369Z","RunDurationInMilliseconds":519}