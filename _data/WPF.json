{"Data":{"GitHub":{"Issues":[{"Id":"2731695165","IsPullRequest":true,"CreatedAt":"2024-12-11T03:00:34","Actor":"dotnet-maestro[bot]","Number":"10162","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241210.5\r\n- **Date Produced**: December 11, 2024 12:58:53 AM UTC\r\n- **Commit**: 230d3495651245f441ba85c1092915349ee94bc0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24609.4 to 10.0.0-alpha.1.24610.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24609.4 to 10.0.0-alpha.1.24610.5][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24609.4 to 10.0.0-alpha.1.24610.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/e50878fca2...230d349565\r\n[2]: https://github.com/dotnet/runtime/compare/b085dadd16...920a17ac91\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10162)","Url":"https://github.com/dotnet/wpf/pull/10162","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10162)"},{"Id":"2731406650","IsPullRequest":true,"CreatedAt":"2024-12-10T23:06:53","Actor":"JeremyKuhne","Number":"10161","RawContent":null,"Title":"Add readonly to members in Vector, Size, Int32Rect and Point ","State":"open","Body":"Follow up to #10156.\r\n\r\nThis is in multiple commits for clarity and history, should not be squashed.\r\n\r\n1. Collapse files\r\n2. Clean code\r\n3. Add readonly\r\n4. Make fields private\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10161)","Url":"https://github.com/dotnet/wpf/pull/10161","RelatedDescription":"Open PR \"Add readonly to members in Vector, Size, Int32Rect and Point \" (#10161)"},{"Id":"2730082556","IsPullRequest":true,"CreatedAt":"2024-12-10T14:47:47","Actor":"HotCakeX","Number":"10159","RawContent":null,"Title":"Fixed typo","State":"closed","Body":"Simply fixed a typo.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10159)","Url":"https://github.com/dotnet/wpf/pull/10159","RelatedDescription":"Closed or merged PR \"Fixed typo\" (#10159)"},{"Id":"2730098190","IsPullRequest":true,"CreatedAt":"2024-12-10T13:16:10","Actor":"dotnet-maestro[bot]","Number":"10160","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241210.1\r\n- **Date Produced**: December 10, 2024 10:03:25 AM UTC\r\n- **Commit**: bdea4c2fa4851874b372af1c90d4bd2ec51ad499\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/61b8f74642...bdea4c2fa4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10160)","Url":"https://github.com/dotnet/wpf/pull/10160","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#10160)"},{"Id":"2724290140","IsPullRequest":true,"CreatedAt":"2024-12-10T09:52:47","Actor":"dotnet-maestro[bot]","Number":"10152","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241209.4\r\n- **Date Produced**: December 10, 2024 1:40:56 AM UTC\r\n- **Commit**: e50878fca2173bed38cd4aba2767da86101ec8b8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24605.2 to 10.0.0-alpha.1.24609.4][6]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24605.2 to 10.0.0-alpha.1.24609.4][6]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24605.2 to 10.0.0-alpha.1.24609.4][6]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24609.1][7]\r\n\r\n[6]: https://github.com/dotnet/winforms/compare/6ecb29a0b3...e50878fca2\r\n[7]: https://github.com/dotnet/runtime/compare/e99557baff...b085dadd16\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10152)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10152","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10152)"},{"Id":"2729403117","IsPullRequest":false,"CreatedAt":"2024-12-10T08:37:12","Actor":"wvfeng","Number":"10158","RawContent":null,"Title":"dotnet 9.0 Publish SelfContained:true  Clipboard.SetImage is not available","State":"open","Body":"### Description\n\nversion: `9.0.101`\n\n\n### Reproduction Steps\n\n![Image](https://github.com/user-attachments/assets/2e75bd5d-b70e-49a1-93c8-443bf3d69851)\n![Image](https://github.com/user-attachments/assets/7279acac-e31a-41d9-9d31-4dc2f12f3cf1)\n\n\nNote that if you do not select Standalone for Standalone Deployment, this feature is available\n\n\n\n\n\n### Expected behavior\n\nClipboard.SetImage is available\n\n### Actual behavior\n\nClipboard.SetImage is not available\n\n### Regression?\n\nat dotnet 8.0 Clipboard.SetImage is available\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10158","RelatedDescription":"Open issue \"dotnet 9.0 Publish SelfContained:true  Clipboard.SetImage is not available\" (#10158)"},{"Id":"2729399464","IsPullRequest":false,"CreatedAt":"2024-12-10T08:35:16","Actor":"wvfeng","Number":"10157","RawContent":null,"Title":"Clipboard.SetImage is not available when publishing mode is standalone","State":"open","Body":"### Description\n\nversion: `9.0.101`\n\n\n### Reproduction Steps\n\n![Image](https://github.com/user-attachments/assets/2e75bd5d-b70e-49a1-93c8-443bf3d69851)\n![Image](https://github.com/user-attachments/assets/7279acac-e31a-41d9-9d31-4dc2f12f3cf1)\n\n\nNote that if you do not select Standalone for Standalone Deployment, this feature is available\n\n\n\n\n\n### Expected behavior\n\nClipboard.SetImage is available\n\n### Actual behavior\n\nClipboard.SetImage is not available\n\n### Regression?\n\nat dotnet 8.0 Clipboard.SetImage is available\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10157","RelatedDescription":"Open issue \"Clipboard.SetImage is not available when publishing mode is standalone\" (#10157)"},{"Id":"2728951467","IsPullRequest":true,"CreatedAt":"2024-12-10T04:13:31","Actor":"JeremyKuhne","Number":"10156","RawContent":null,"Title":"Add readonly to members in Rect","State":"open","Body":"Marking members as `readonly` allows the compiler to generate more efficient code.\r\n\r\nhttps://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/struct#readonly-instance-members\r\n\r\nThis is in two commits. The first collapses code into a single file and the second adds the `readonly`. Suggest looking at the second commit for the diff and do not squash the commits.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10156)","Url":"https://github.com/dotnet/wpf/pull/10156","RelatedDescription":"Open PR \"Add readonly to members in Rect\" (#10156)"},{"Id":"2728688106","IsPullRequest":true,"CreatedAt":"2024-12-10T01:22:01","Actor":"JeremyKuhne","Number":"10155","RawContent":null,"Title":"Convert to using CsWin32 HRESULT definition","State":"open","Body":"This converts to using the CsWin32 HRESULT definition. It creates two HRESULT helpers to provide compatible throw behavior for existing code (PresentationCore threw things one way, other assemblies threw a different way).\r\n\r\nAlso:\r\n\r\n- Remove dead interop defines (a lot)\r\n- Add Primitives test project\r\n- Force test projects to use open source key (which System.Private.Windows.Core expects)\r\n- Tweak build files a bit to try and ensure test dependencies are in place\r\n- Add strings to System.Windows.Primitives to facilitate unifying hresult handling in the future (need to redirect InvalidWmpVersionException)\r\n\r\nIt would be nice to always throw the same way, but that would change exceptions that currently get thrown. Combining the behavior from both would give whatever Marshal gives with special handling for WIC/MIL errors and unwrapping of Win32 COMExceptions into Win32Exceptions.\r\n\r\nConverting the existing interop to use CsWin32 types will make transitioning far easier. The next change I'm working on is using HWND.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10155)","Url":"https://github.com/dotnet/wpf/pull/10155","RelatedDescription":"Open PR \"Convert to using CsWin32 HRESULT definition\" (#10155)"},{"Id":"2727445229","IsPullRequest":true,"CreatedAt":"2024-12-09T15:29:31","Actor":"harshit7962","Number":"10154","RawContent":null,"Title":"[StyleCleanUp] Address IDE warnings Part 1","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThis PR addresses **IDE0017: Use object initializers.**\r\nLink to the issue: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nWill be taken in test pass\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10154)","Url":"https://github.com/dotnet/wpf/pull/10154","RelatedDescription":"Open PR \"[StyleCleanUp] Address IDE warnings Part 1\" (#10154)"},{"Id":"2723035624","IsPullRequest":true,"CreatedAt":"2024-12-09T05:22:16","Actor":"dotnet-maestro[bot]","Number":"10149","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241206.6\r\n- **Date Produced**: December 6, 2024 10:46:21 PM UTC\r\n- **Commit**: 61b8f746424762d2e3173ebfaab19346224d591c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24606.6][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24606.6][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24606.6][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24606.6][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/45d845e04c...61b8f74642\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 10.0.100-alpha.1.24573.1\r\n  - Updates tools.dotnet to 10.0.100-alpha.1.24573.1\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10149)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10149","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10149)"},{"Id":"2725213372","IsPullRequest":false,"CreatedAt":"2024-12-08T12:38:13","Actor":"aquinn39","Number":"10153","RawContent":null,"Title":"HwndHost temporarily reparents hosted window to SystemResourceNotifyWindow (SystemResources.Hwnd window) for no reason","State":"open","Body":"### Description\n\nIn response to certain events, such as toggling high contrast mode or RDPing into a machine, HwndHost will temporarily change the parent of the hosted child window to a special invisible 'SystemResourceNotifyWindow' window created by .NET. This behaviour is supposed to only happen if the child window is taken out of the visual tree (so no longer has a parent window). This causes an unfortunate side effect when using WinUI 3's Xaml Islands (DesktopWindowXamlSource) that the child window is destroyed, causing all sorts of issues. See https://github.com/microsoft/microsoft-ui-xaml/issues/10220. There is obviously also the question of if WinUI 3 should have this behaviour of destroying DesktopWindowXamlSource windows if they have their parent changed, so that is why I raised an issue for that as well. Still, HwndHost shouldn't be reparenting child windows for no reason.\n\nThis seems to be in response to the PresentationSource changing in reponse to these events for some reason. You can see exactly where it reparents the child window to the SystemResourceNotifyWindow (SystemResources.Hwnd window) here: https://github.com/dotnet/wpf/blob/c6bff274b42ea186c4a53aab6e6447cf92aeb1e1/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Interop/HwndHost.cs#L984. The method where that happens is called by the method which is added as a SourceChanged handler here: https://github.com/dotnet/wpf/blob/c6bff274b42ea186c4a53aab6e6447cf92aeb1e1/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Interop/HwndHost.cs#L834.\n\n### Reproduction Steps\n\n1. Debug the attached project in Visual Studio\n2. Toggle high contrast mode on or off in Windows Settings or RDP into the box\n3. The app will crash due to BuildWindowCore running again since the window was destroyed as a result of the parent changing\n4. Do not stop debugging\n5. Check the immediate window for a message that looks like the following:\n`onecoreuap\\windows\\moderncore\\inputv2\\inputhost\\outside\\lifted\\windowparentchain.cpp(326)\\Microsoft.UI.Input.dll!00007FF8A4985FCC: (caller: 00007FF8A4986AB1) ReturnHr(2) tid(15c88) 8007139F The group or resource is not in the correct state to perform the requested operation. Msg:[HWND 000000000088348A changed parent from 00000000017F11E4 to 000000000042392C. Unsupported scenario.]  Exception thrown at 0x00007FFA13D5FA4C (KernelBase.dll) in QPad.exe: WinRT originate error - 0x8007139F : 'WindowParentChain invalid state.'.`\n6. Using a tool like Spy++, look up the window handle which the above message says is the new parent\n7. You will notice that the new parent of the Xaml Islands child window is 'SystemResourceNotifyWindow'\n![Image](https://github.com/user-attachments/assets/cc24db46-90a4-4aed-b5a3-4c40ac2d3a2e)\n\n### Expected behavior\n\nThe parent of the hosted child window in the HwndHost should never change unless the HwndHost is moved to a different window, especially not in response to trivial events such as toggling high contrast.\n\n### Actual behavior\n\nCertain events like toggling high contrast and RDPing into the box cause the hosted child window to be reparented to the special invisible 'SystemResourceNotifyWindow' window temporarily.\n\n### Regression?\n\nNot sure, but I tested in .NET 8 and the issue is present there as well.\n\n### Known Workarounds\n\nNone at the moment. I have tried adding my own SourceChangedHandler and setting e.handled to true to stop it going through to the HwndHost's internal one, but the internal one always seems to run first.\n\n### Impact\n\nUnable to use WinUI 3 XamlIslands properly using a HwndHost in WPF. Could also cause issue with other types of child windows when hosted in a HwndHost.\n\n### Configuration\n\n- .NET 9\n- Windows 11 23H2 (22631.4460\n- x64 (OS and app)\n- Not sure\n\n### Other information\n\nMy guess is that for some reason, certain events cause a new PresentationSource to be created, and when it is first created, it isn't associated with a window handle, which causes the HwndHost to reparent the child window to the special invisible 'SystemResourceNotifyWindow'.","Url":"https://github.com/dotnet/wpf/issues/10153","RelatedDescription":"Open issue \"HwndHost temporarily reparents hosted window to SystemResourceNotifyWindow (SystemResources.Hwnd window) for no reason\" (#10153)"},{"Id":"2723340505","IsPullRequest":false,"CreatedAt":"2024-12-06T15:40:41","Actor":"digital-ember","Number":"10151","RawContent":null,"Title":"Setting the CaretPosition in a RichTextBox Control does not correctly initialize the internal TextEditor's state","State":"open","Body":"### Description\n\nWhen you set the CaretPosition property of a RichTextBox programmatically that contains wrapped text, subsequent keyboard movements to the next or previous \"line\" don't behave correctly.\nThis is due to the internal TextEditor's _suggestedX member not being cleared correctly (it has the default value 0 and should be double.NaN so that internal keyboard navigations (e.g. by \"OnMoveDownByLine(...)\") are handled correctly. This is because the GetSuggestedX method requires the current value to be set to double.NaN in order to re-calculate the value correctly.  \nI wonder if \"TextEditorSelection.ClearSuggestedX(TextEditor)\" needs to be called automatically whenever the CaretPosition setter is used.\n\n### Reproduction Steps\n\nBuild a WPF Application (I used .NET 8):\n\n```\n<Window x:Class=\"RTB_SuggestX_Issue.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:RTB_SuggestX_Issue\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"Auto\"/>\n            <RowDefinition Height=\"*\"/>\n        </Grid.RowDefinitions>\n        <Button Grid.Row =\"0\" Content=\"Click Me\" VerticalAlignment=\"Top\" Click=\"ButtonBase_OnClick\"/>\n        \n        <RichTextBox Name=\"rtb\"  Grid.Row =\"1\" HorizontalAlignment=\"Left\" Width=\"200\">\n            <FlowDocument>\n                <Paragraph>\n                    <Run Text=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua...\"/>\n                </Paragraph>\n            </FlowDocument>\n        </RichTextBox>\n\n    </Grid>\n</Window>\n```\n\n```\nusing System.Windows;\n\nnamespace RTB_SuggestX_Issue\n{\n\t/// <summary>\n\t/// Interaction logic for MainWindow.xaml\n\t/// </summary>\n\tpublic partial class MainWindow : Window\n\t{\n\t\tpublic MainWindow()\n\t\t{\n\t\t\tInitializeComponent();\n\t\t}\n\n\t\tprivate void ButtonBase_OnClick(object sender, RoutedEventArgs e)\n\t\t{\n\t\t\trtb.Focus();\n\t\t\trtb.CaretPosition = rtb.GetPositionFromPoint(new Point(100, 0), true);\n\t\t}\n\t}\n}\n```\n\n1. Click the Button\n2. Press the ArrowKey Down next and observe that the caret is placed at position 0 instead of 100\n\nNote that this problem also persists in other scenarios, e.g:\n1. Restart the application\n2. Click the button\n3. Press the ArrowKey Down next and observe that the caret is placed at position 0 instead of 100\n4. Move the Caret  left or right with the arrow keys (but stay in the second line)\n5. Click the button again\n6. Press the ArrowKey Down abd observe that the cache seems to have been cleared correctly for this movement\n7. move the caret left/right again with the arrow keys (but stay in the second line), remember this position, make it different from the starting position\n8. Click the button again\n9. Press the ArrowKey Down and observe that the caret is placed at the position of step 7\n\n### Expected behavior\n\nThe caret always behaves correctly, even if the CaretPosition was set programmatically.\n\n### Actual behavior\n\nSee reproduction section.\n\n### Regression?\n\nI never experienced this to work before, but I also never tried it before.\n\n### Known Workarounds\n\nUse reflection to call TextEditorSelection.ClearSuggestedX(TextEditor) after setting the CaretPosition.\n\n### Impact\n\nI cannot build keyboard navigation between different TextBoxBase controls without the mentioned workaround. \n\n### Configuration\n\n.NET 8\nWindows 11\nx64\n\nI don't think it is specific to any configuration.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10151","RelatedDescription":"Open issue \"Setting the CaretPosition in a RichTextBox Control does not correctly initialize the internal TextEditor's state\" (#10151)"},{"Id":"2723254617","IsPullRequest":false,"CreatedAt":"2024-12-06T14:57:41","Actor":"znakeeye","Number":"10150","RawContent":null,"Title":"BindingExpressionBase.UpdateNotifyDataErrorValidationErrors throws NullReferenceException","State":"open","Body":"### Description\n\nTargeting `.NET 6`. This happened twice, but I have no reliable way to reproduce it.\n\n```\nPresentationFramework.dll!System.Windows.Data.BindingExpressionBase.UpdateNotifyDataErrorValidationErrors(System.Collections.Generic.List<object> errors) Unknown\nPresentationFramework.dll!System.Windows.Data.BindingExpression.UpdateNotifyDataErrors(System.ComponentModel.INotifyDataErrorInfo indei, string propertyName, object value)   Unknown\nPresentationFramework.dll!System.Windows.Data.BindingExpression.OnErrorsChanged.AnonymousMethod__108_0(object arg)       Unknown\n               PresentationFramework.dll!MS.Internal.Data.DataBindEngine.ProcessCrossThreadRequests()                Unknown\n        WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs) Unknown\n               WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)               Unknown\n               WindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl()       Unknown\n               WindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(object obj)                Unknown\n> System.Private.CoreLib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 179           C#\nWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Unknown\n               WindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke()  Unknown\n               WindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue()      Unknown\n               WindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(nint hwnd, int msg, nint wParam, nint lParam, ref bool handled)             Unknown\n               WindowsBase.dll!MS.Win32.HwndWrapper.WndProc(nint hwnd, int msg, nint wParam, nint lParam, ref bool handled)      Unknown\n        WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs) Unknown\n               WindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)               Unknown\nWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)         Unknown\n               WindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(nint hwnd, int msg, nint wParam, nint lParam)              Unknown\n               [Native to Managed Transition]          \n               [Managed to Native Transition]          \nWindowsBase.dll!System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame frame) Unknown\n               PresentationFramework.dll!System.Windows.Application.RunDispatcher(object ignore)                Unknown\n               PresentationFramework.dll!System.Windows.Application.RunInternal(System.Windows.Window window)            Unknown\n```\n\n![Image](https://github.com/user-attachments/assets/0e37f778-00be-435f-abc0-6f15e885430e)\n\n\n### Reproduction Steps\n\nNo way to reproduce it. You will have to perform some static analysis...\n\n### Expected behavior\n\nWe should not get a `NullReferenceException` for each item in the rendered items control.\n\n### Actual behavior\n\nA `NullReferenceException` is thrown for each item in our bound list.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\nWe are using [BindingOperations.EnableCollectionSynchronization()](https://learn.microsoft.com/en-us/dotnet/api/system.windows.data.bindingoperations.enablecollectionsynchronization?view=windowsdesktop-9.0) on our custom `ObservableCollection`, if that matters. (This code has been in production for several years, and we never encountere this prior to `.NET Core` migration.)","Url":"https://github.com/dotnet/wpf/issues/10150","RelatedDescription":"Open issue \"BindingExpressionBase.UpdateNotifyDataErrorValidationErrors throws NullReferenceException\" (#10150)"},{"Id":"2722893551","IsPullRequest":false,"CreatedAt":"2024-12-06T12:01:21","Actor":"zlatanov","Number":"10148","RawContent":null,"Title":"Add a runtime switch option to disable ValueChangedEventManager","State":"open","Body":"When binding to objects which do not implement `INotifyPropertyChanged` interface, the underlying data binding engine will use an obscure mechanism to try and listen to changes in any .NET object - ValueChangedEventManager.\n\nPlease, add a switch which disables this functionality. All WPF developers know that if we want change notifications, we should implement `INotifyPropertyChanged`.\n\nThis will improve the overwall WPF data binding performance, because there are a lot of cases where we need to databind to something (e.g. Length property of an array) which doesn't implement INotifyPropertyChanged.","Url":"https://github.com/dotnet/wpf/issues/10148","RelatedDescription":"Open issue \"Add a runtime switch option to disable ValueChangedEventManager\" (#10148)"},{"Id":"2722545661","IsPullRequest":false,"CreatedAt":"2024-12-06T10:32:01","Actor":"bent-rasmussen","Number":"10147","RawContent":null,"Title":"Fluent Theme: `MessageBox` does not have fluent styling","State":"closed","Body":"### Description\n\nOf course we can create our own MessageBox window but this is a hole in the fluent styling update:\n\n![Image](https://github.com/user-attachments/assets/74b89f91-126b-4902-8776-07e907875a50)\n\n\n### Reproduction Steps\n\n1. Create a WPF app targeting .NET 9 with the fluent theme resource dictionary in App.xaml\n2. Open a MessageBox in the MainWindow.xaml.cs\n\n### Expected behavior\n\nAt a mimum, the MessageBox should follow the OS theme (light or dark) and ideally it should of course follow Fluent 2 with buttons, margins, etc.\n\n### Actual behavior\n\nOld styling, no dark mode support.\n\n### Regression?\n\nNo, this is just a hole in the rollout of Fluent 2 support in .NET 9.\n\n### Known Workarounds\n\n🤖 \"I'll build my own MessageBox, with...\"\n\n### Impact\n\nApplications have a subpar and inconsistent visual appearance.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10147","RelatedDescription":"Closed issue \"Fluent Theme: `MessageBox` does not have fluent styling\" (#10147)"},{"Id":"2722119807","IsPullRequest":false,"CreatedAt":"2024-12-06T05:41:24","Actor":"dotnet-maestro-bot","Number":"10146","RawContent":null,"Title":"[dnceng-bot] Branch `wpf/release/6.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/6.0](https://github.com/dotnet/wpf/commits/release/6.0/) in `dotnet/wpf` repo can't be mirrored from GitHub to Azure [internal/release/6.0](https://dev.azure.com/dnceng/internal/_git/dotnet-wpf?version=GBinternal%2Frelease%2F6.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/wpf/issues/10146","RelatedDescription":"Open issue \"[dnceng-bot] Branch `wpf/release/6.0` can't be merged to Azdo internal branch\" (#10146)"},{"Id":"2718469418","IsPullRequest":true,"CreatedAt":"2024-12-06T05:38:11","Actor":"dotnet-maestro[bot]","Number":"10141","RawContent":null,"Title":"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:934472a4-9da1-4b66-da04-08d961c27f17)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 934472a4-9da1-4b66-da04-08d961c27f17\r\n- **Build**: 20241204.3\r\n- **Date Produced**: December 4, 2024 8:33:31 PM UTC\r\n- **Commit**: 1a304f92ee9a0fbbf21b4c7fd5c581c11a03e77e\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng**: [from 6.0.0-rtm.24466.1 to 6.0.0-rtm.24604.3][2]\r\n\r\n[2]: https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int/branches?baseVersion=GCbb66af4286a3180f30152f1d8de98ae889f38ade&targetVersion=GC1a304f92ee9a0fbbf21b4c7fd5c581c11a03e77e&_a=files\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:934472a4-9da1-4b66-da04-08d961c27f17)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10141)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10141","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#10141)"},{"Id":"2719195103","IsPullRequest":true,"CreatedAt":"2024-12-06T05:37:45","Actor":"dotnet-maestro[bot]","Number":"10143","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241205.2\r\n- **Date Produced**: December 5, 2024 6:20:07 PM UTC\r\n- **Commit**: 6ecb29a0b34c73048062257c1cab74b219759260\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24603.5 to 10.0.0-alpha.1.24605.2][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24603.5 to 10.0.0-alpha.1.24605.2][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24603.5 to 10.0.0-alpha.1.24605.2][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24605.1][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/f432c76433...6ecb29a0b3\r\n[4]: https://github.com/dotnet/runtime/compare/12afdedd80...e99557baff\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10143)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10143","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10143)"},{"Id":"2720392264","IsPullRequest":true,"CreatedAt":"2024-12-06T05:37:18","Actor":"dotnet-maestro[bot]","Number":"10145","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241204.4\r\n- **Date Produced**: December 5, 2024 8:28:25 AM UTC\r\n- **Commit**: 45d845e04c05fbe5da9838c454bbc3af1df6be81\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e8de341512...45d845e04c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10145)","Url":"https://github.com/dotnet/wpf/pull/10145","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10145)"},{"Id":"2719966867","IsPullRequest":true,"CreatedAt":"2024-12-05T10:14:37","Actor":"himgoyalmicro","Number":"10144","RawContent":null,"Title":"[StyleCleanUp] Addressing CA warnings Part 1","State":"open","Body":"## Description\r\n\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes address the following Errors/Warnings in the src folder of WPF:\r\n\r\n- **CA2249:** Consider using 'string.Contains' instead of 'string.IndexOf'\r\n- **CA2251**: Use String.Equals over String.Compare\r\n- **CA1847**: Use string.Contains(char) instead of string.Contains(string) with single characters\r\n- **CA1845**: Use span-based 'string.Concat'\r\n- **CA1846**: Prefer AsSpan over Substring\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings and hence easing out the overall understanding.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression\r\n\r\nNone\r\n\r\n## Testing\r\n\r\nLocal Build Pass\r\nThe current set of changes looks fairly mechanical and probably don't need a Test Pass, but these set of PRs can be clubbed to do so at a later stage.\r\n\r\n## Risk\r\n\r\nLow\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10144)","Url":"https://github.com/dotnet/wpf/pull/10144","RelatedDescription":"Open PR \"[StyleCleanUp] Addressing CA warnings Part 1\" (#10144)"},{"Id":"2718551251","IsPullRequest":false,"CreatedAt":"2024-12-04T18:51:44","Actor":"vsfeedback","Number":"10142","RawContent":null,"Title":"Issue: Unexpected Keyboard Behavior with WPF RichTextBox and Visual Studio","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Issue:-Unexpected-Keyboard-Behavior-with/10793784)._\n\n---\n[severity:It bothers me. A fix would be nice]\nWhen working with a WPF application containing a RichTextBox control, we are experiencing a strange behavior involving keyboard input. If the user types text into the RichTextBox and then presses the backspace or delete key, the expected behavior is for the text in the RichTextBox to be deleted.\n \nHowever, when a file is open and highlighted in Visual Studio behind the application window, pressing backspace or delete deletes text from the file in Visual Studio, rather than from the RichTextBox in the WPF application. This issue only occurs when the file in Visual Studio is focused, and the WPF window is in the foreground.\n \nSteps to Reproduce:\nOpen a WPF application containing a RichTextBox.\nType text into the RichTextBox.\nOpen a file in Visual Studio and highlight some text in the file.\nClick on the WPF window with the RichTextBox to focus it, and type text.\nPress backspace or delete.\nObserve that the text is deleted from the file in Visual Studio, not the RichTextBox in the WPF window.\nExpected Behavior:\nThe backspace and delete keys should only affect the RichTextBox content in the WPF window, regardless of whether a file is open and highlighted in Visual Studio behind the window.\n \nEnvironment:\nVisual Studio Version: VS2019/VS2022\n.NET Framework : 4.8\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/19/2024, 01:26 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Ann Yang [MSFT] on 11/19/2024, 07:13 PM: \n\n<p>Thank you for your feedback!<br>\nIs this still stable to reproduce on the latest version 17.12.1 downloading from  <a target='_blank' href=\"https://visualstudio.microsoft.com/downloads/\">https://visualstudio.microsoft.com/downloads/</a>?<br>\nIf yes, could you attach a video of the issue you describe using [ScreenToGif] (  <a target='_blank' href=\"https://www.screentogif.com/\">https://www.screentogif.com/</a>) or a similar tool?  A video can help us see the actions more directly.</p>\n<p>We are looking forward to hearing from you soon.<br>\nThanks</p>\n\n#### Rashmi H S on 11/19/2024, 09:02 PM: \n\n(private comment, text removed)\n#### Ann Yang [MSFT] on 11/19/2024, 11:05 PM: \n\n<p>Thanks for your reply, I used a blank WPF Framework project and target framework on 4.8, but this issue didn’t reproduce on myside, please see my screen recording.<br>\n<img src=\"https://aka.ms/dc/image?name=B261a20aa9bf246b9b2894bae4a604e79638676825813671036_RichTextBoxIssue.gif&amp;tid=261a20aa9bf246b9b2894bae4a604e79638676825813671036\" alt=\"RichTextBoxIssue.gif\"><br>\nplease note, I worked in Microsoft Visual Studio Professional 2019 Version 16.11.42, Could you upgrade your VS and try again? is there a sample project for us to investigate this issue?</p>\n\n#### Rashmi H S on 11/20/2024, 10:11 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 11/21/2024, 11:51 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Rashmi H S on 11/25/2024, 09:00 PM: \n\n(private comment, text removed)\n#### Rashmi H S on 12/2/2024, 00:35 AM: \n\n(private comment, text removed)","Url":"https://github.com/dotnet/wpf/issues/10142","RelatedDescription":"Open issue \"Issue: Unexpected Keyboard Behavior with WPF RichTextBox and Visual Studio\" (#10142)"},{"Id":"2716925110","IsPullRequest":false,"CreatedAt":"2024-12-04T08:31:25","Actor":"christian-clausen","Number":"10140","RawContent":null,"Title":"Contrast issues in Fluent color scheme","State":"open","Body":"### Description\n\nIt seems there is something fundamentally wrong with the color scheme. One example is `CardBackgroundFillColorDefault` versus `CardBackgroundFillColorSecondary`.\n\nIn both dark and light mode, when changing from `Default` to `Secondary`, the (background) color gets darker.\n\nConsequently, when changing from `Default` to `Secondary`, the contrast between text and background *increases* in dark mode and *decreases* in light mode.\n\nThe consequence of this is that if we want a certain UI design to have higher contrast in both dark and light modes, we cannot use these built-in definitions, but need to define our own, theme-dependent color scheme.\n\n### Reproduction Steps\n\n\n1. Create a WPF app with Fluent enabled, and add this to the main window:\n```xaml\n<Border\n    Background=\"{DynamicResource CardBackgroundFillColorDefaultBrush}\"\n    BorderBrush=\"Blue\"\n    BorderThickness=\"1\"\n    Height=\"60\"\n    Width=\"100\">\n    <StackPanel HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\">\n        <TextBlock Foreground=\"{DynamicResource TextFillColorSecondaryBrush}\" Text=\"Hello World\" />\n    </StackPanel>\n</Border>\n```\n2. Set Windows colors to *Dark*\n3. Set border background to `CardBackgroundFillColorDefaultBrush` and run\n4. Set border background to `CardBackgroundFillColorSecondaryBrush` and run\n5. Set Windows colors to *Light*\n6. Set border background to `CardBackgroundFillColorDefaultBrush` and run\n7. Set border background to `CardBackgroundFillColorSecondaryBrush` and run\n\n\n### Expected behavior\n\nIf `Secondary` is *darker* than `Default` in *dark mode*, then `Secondary` should *lighter* than `Default` in *light mode*.\n\n### Actual behavior\n\n`Secondary` is *darker* than `Default` in both *dark mode* and *light mode*.\n\nHere follows screenshots of code and results. All examples use the same text brush, `TextFillColorSecondaryBrush` and varies border background from `Default` to `Secondary` in dark mode and then light mode.\n\nDark mode and border background `CardBackgroundFillColorDefaultBrush`:\n![Image](https://github.com/user-attachments/assets/f53b86a9-09d2-4275-bc46-a7683a1a5e8b)\n\nDark mode and border background `CardBackgroundFillColorSecondaryBrush`:\n![Image](https://github.com/user-attachments/assets/380aaaa9-72c9-4d0e-8c1e-6eb58a08c4eb)\n\nLight mode and border background `CardBackgroundFillColorDefaultBrush`:\n![Image](https://github.com/user-attachments/assets/7e63c209-0da8-4604-b293-9ff3f70a3368)\n\nLight mode and border background `CardBackgroundFillColorSecondaryBrush`:\n![Image](https://github.com/user-attachments/assets/ac1912cd-1616-47e5-a565-4c02c969599b)\n\n\n\n### Regression?\n\nNot really because this is the first version of the Windows 11 Theme, but I did compare to WinUI where the color definitions are different.\n\nIn WinUI there seems to be a single definition covering both light and dark modes with alpha taking care of consistency:\n![Image](https://github.com/user-attachments/assets/7d50e19e-e5a5-4ab5-8f5d-b9008eeb70b0)\n\nIn WPF Fluent, light mode equals WinUI:\n![Image](https://github.com/user-attachments/assets/194290e0-e75e-4022-bffa-7338ee963cad)\n\nBut the dark mode is different:\n![Image](https://github.com/user-attachments/assets/6f1c30ec-bea2-47bf-957e-ea95e847584e)\n\n\n\n \n\n### Known Workarounds\n\nDefine our own theme-dependent color scheme.\n\n### Impact\n\nThis impacts everyone developing WPF apps with Windows 11 theming leading to lower developer productivity. When contrast issues are not discovered during development and quality assurance, this leads to WPF app solution accessibility issues for end users.\n\n### Configuration\n\n```\nC:\\tmp>dotnet --info\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.4a280210\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.19045\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100\\\n```\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10140","RelatedDescription":"Open issue \"Contrast issues in Fluent color scheme\" (#10140)"},{"Id":"2716924689","IsPullRequest":false,"CreatedAt":"2024-12-04T08:31:11","Actor":"JerryJian","Number":"10139","RawContent":null,"Title":"High-resolution images display abnormally in Software rendering mode","State":"open","Body":"### Description\n\nI have a png image with a height of more than 40,000 pixels, which is displayed in a WPF interface. When scrolling to the back part, the display is abnormal. \n\nWhen I set the render mode to software, the image will be blue on the screen when scrolling down.\n`RenderOptions.ProcessRenderMode = RenderMode.SoftwareOnly;`\n\nWhen I set the render mode to default, the program crashed with exception thrown:\n```\nSystem.Runtime.InteropServices.COMException\n  HResult=0x88980406\n  Message=UCEERR_RENDERTHREADFAILURE (异常来自 HRESULT:0x88980406)\n  Source=PresentationCore\n  StackTrace:\n   在 System.Windows.Media.Composition.DUCE.Channel.SyncFlush() 在 System.Windows.Media.Composition\\DUCE.cs 中: 第 241 行\n   在 System.Windows.Interop.HwndTarget.UpdateWindowSettings(Boolean enableRenderTarget, Nullable`1 channelSet) 在 System.Windows.Interop\\HwndTarget.cs 中: 第 1386 行\n   在 System.Windows.Interop.HwndTarget.UpdateWindowPos(IntPtr lParam) 在 System.Windows.Interop\\HwndTarget.cs 中: 第 1278 行\n   在 System.Windows.Interop.HwndTarget.HandleMessage(WindowMessage msg, IntPtr wparam, IntPtr lparam) 在 System.Windows.Interop\\HwndTarget.cs 中: 第 800 行\n   在 System.Windows.Interop.HwndSource.HwndTargetFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled) 在 System.Windows.Interop\\HwndSource.cs 中: 第 1018 行\n   在 MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n   在 MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n   在 System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n   在 System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\n   在 System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\n   在 MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\n```\n\n### Reproduction Steps\n\nThe source code is here: [JerryJian/LargeImageTest](https://github.com/JerryJian/LargeImageTest)\n\n1. Change App.xaml.cs: RenderOptions.ProcessRenderMode = RenderMode.Software;\n2. Compile the program, launch it\n3. Scroll down, the screen become blue\n\n1. Change App.xaml.cs: RenderOptions.ProcessRenderMode = RenderMode.Default;\n2. Compile the program, launch it\n3. Exception thrown on my computer\n\nMy system information:\n\nOperating System: Windows Pro 11 24H2, \nVersion: 26100.2454, \nExperience pack: 1000.26100.36.0\n\nGraphics Card: NVIDIA GeForce GTX 1650\nDriver version: 32.0.15.6094\nDirectX version: 12 (FL 12.1)\n\n\n\n### Expected behavior\n\nThe large image display well when render mode is software.\n\n### Actual behavior\n\nThe large image displays abnormally.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10139","RelatedDescription":"Open issue \"High-resolution images display abnormally in Software rendering mode\" (#10139)"},{"Id":"2713864124","IsPullRequest":true,"CreatedAt":"2024-12-04T07:16:17","Actor":"dotnet-maestro[bot]","Number":"10137","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241203.5\r\n- **Date Produced**: December 3, 2024 11:36:19 PM UTC\r\n- **Commit**: f432c76433d916d7c9762e50e6abf59d9ec41f2c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24578.1 to 10.0.0-alpha.1.24603.5][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24578.1 to 10.0.0-alpha.1.24603.5][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24578.1 to 10.0.0-alpha.1.24603.5][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24603.1][4]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/d02c89d400...f432c76433\r\n[4]: https://github.com/dotnet/runtime/compare/fe3d5b5f70...12afdedd80\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10137)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10137","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10137)"},{"Id":"2714363042","IsPullRequest":false,"CreatedAt":"2024-12-03T08:46:34","Actor":"PxC-MKias","Number":"10138","RawContent":null,"Title":"Why do Wpf TextBoxes only mark some Events as Handled","State":"open","Body":"### Description\n\nI work on some Interaction Detection and use the fact that Controls mark RoutedEvents as Handled when they handle them.\nUnfortunately, TextBoxes only mark `TextCompositionEventArgs` in the `OnTextInput` method and `ExecutedRoutedEventArgs` in the `OnSpace` as Handled (see [TextEditorTyping.cs#L386](https://github.com/dotnet/wpf/blob/227c5cfddb3b6098d56706c1c22161d1b6dbe88c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Documents/TextEditorTyping.cs#L386)). All other Events (Delete, Key Events, ...) that are also  implemented in `TextEditorTyping` are not marked as handled. Is there a Reason for that? It is a problem for my usecase.\n\n### Reproduction Steps\n\nRegister a ClassHandler for handled Events and debug what Controls handle the events.\n\n```\nKeyEventHandler keyEventHandler = /* please ask for the implementation if its necessary */\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.PreviewKeyDownEvent, keyEventHandler, true);\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.KeyDownEvent, keyEventHandler, true);\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.PreviewKeyUpEvent, keyEventHandler, true);\nEventManager.RegisterClassHandler(typeof(UIElement), UIElement.KeyUpEvent, keyEventHandler, true);\n```\n\n### Expected behavior\n\nTextBoxes handle all Events that change its text.\n\n### Actual behavior\n\nTextBoxes only mark `TextCompositionEventArgs` in the `OnTestInput` method and `ExecutedRoutedEventArgs` in the `OnSpace` as Handled.\nAll common KeyEvents do not mark events as Handled, as well as all other event handling methods OnBackspace, OnDelete, OnToggleInsert, ...\n\n [TextEditorTyping.cs#L386](https://github.com/dotnet/wpf/blob/227c5cfddb3b6098d56706c1c22161d1b6dbe88c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Documents/TextEditorTyping.cs#L386)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\nNot configuration specific as far as I know, but the target framework is net80-windows\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10138","RelatedDescription":"Open issue \"Why do Wpf TextBoxes only mark some Events as Handled\" (#10138)"},{"Id":"2706232694","IsPullRequest":true,"CreatedAt":"2024-12-03T07:19:50","Actor":"dipeshmsft","Number":"10136","RawContent":null,"Title":"[release/9.0] Fixes window backdrop and background in Windows 10 and window theme interactions with system changes","State":"closed","Body":"Fixes # <!-- Issue Number --> #10096 \r\n\r\n## Description\r\nIn Windows 10, when using Fluent theme the background of the window appears black. This PR fixes the issue by including a DataTrigger that checks the OS version and in case of Windows 10, it sets the background accordingly as Windows 10 doesn't support the backdrop operations through DWM.\r\n\r\nSecondly, when Application is Light / Dark ( not System ) the Window's with ThemeMode set to system didn't react to system theme changes. This was because, when application is in light or dark, the state of fluent theme state for application didn't change and we returned it from the function without checking the window's thememode. We enabled that behavior in this PR.\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\n\r\n## Customer Impact\r\nDevelopers can use Fluent theme in Windows 10 without using the backdrop switch. Enables the correct behavior for Window System theme mode when Application's theme mode is set to Light and Dark. \r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\n\r\n## Regression\r\nYes. This worked in .NET 9 Preview 4\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nSample app testing + Unit tests\r\n<!-- What kind of testing has been done with the fix. -->\r\n\r\n## Risk\r\nMinimal. Fixes the behavior of Fluent theme in Windows 10 and when application theme is set to Light / Dark\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10136)","Url":"https://github.com/dotnet/wpf/pull/10136","RelatedDescription":"Closed or merged PR \"[release/9.0] Fixes window backdrop and background in Windows 10 and window theme interactions with system changes\" (#10136)"},{"Id":"2705944116","IsPullRequest":true,"CreatedAt":"2024-12-03T07:19:12","Actor":"github-actions[bot]","Number":"10135","RawContent":null,"Title":"[release/9.0] Modified Expander animation mechanism in Fluent to avoid Argument Null Exception","State":"closed","Body":"Backport of #10130 to release/9.0\r\n/cc @dipeshmsft\r\n\r\nFixes https://github.com/microsoft/WPF-Samples/issues/672\r\n\r\n## Description\r\nWhile changing the ResourceDictionaries, during the invalidation, Tag property was being set to null ( default value ) which was causing an error with the animation. Replaced it with a dummy border and instead of using Tag, now I use Width property of the border which is a double and it's default value is not null. This avoids the ArgumentNullException when the expander is expanded and the Theme is changed.\r\n\r\n## Customer Impact\r\nNot taking this fix would cause a ArgumentNullException when the Expander is expanded, and the Theme is changed\r\n\r\n## Regression\r\nNo\r\n\r\n## Testing\r\nSample App Testing + Manual UI Testing through test team\r\n\r\n## Risk\r\nLow\r\n\r\n**IMPORTANT**: If this backport is for a servicing release, please verify that:\r\n- The PR target branch is `release/X.0-staging`, not `release/X.0`.\r\n- If the change touches code that ships in a NuGet package, you have added the necessary [package authoring](https://github.com/dotnet/runtime/blob/main/docs/project/library-servicing.md) and gotten it explicitly reviewed.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10135)","Url":"https://github.com/dotnet/wpf/pull/10135","RelatedDescription":"Closed or merged PR \"[release/9.0] Modified Expander animation mechanism in Fluent to avoid Argument Null Exception\" (#10135)"},{"Id":"2704598284","IsPullRequest":true,"CreatedAt":"2024-12-03T07:19:03","Actor":"dipeshmsft","Number":"10133","RawContent":null,"Title":"[.NET 9 ] Fluent Style Fixes : HC.xaml loading, disabled radiobutton UI etc.","State":"closed","Body":"Fixes # <!-- Issue Number -->\r\nhttps://github.com/microsoft/WPF-Samples/issues/673\r\n#10054 , #10043 \r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n#10094 , #10129 , #10116 , #10132\r\n\r\n## Description\r\nIn this PR, I have backported the fixes from other Fluent style fixing PRs which need to go in .NET 9. It includes the following :\r\n- Fixing HighContrast theme in Fluent\r\n- Matching the list of color resource keys in Light, Dark and HC files for Fluent\r\n- Fixes UI for RadioButton in disabled state\r\n- Adds resource keys for TabControl and TabItem\r\n\r\n## Customer Impact\r\nDevelopers will be able to use HighContrast mode, use color resource keys without issues and will receive correct UI for RadioButton. For developers who want to customize TabControl and TabItem deafult styles will be able to now do it without redefining the complete style.\r\n\r\n## Regression\r\nYes, first three of the above are regressions.\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\n\r\n## Testing\r\nLocal testing with sample apps + Unit testing\r\n\r\n## Risk\r\nMinimal. None of the originally available resource keys are removed. A few resources have been added.\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10133)","Url":"https://github.com/dotnet/wpf/pull/10133","RelatedDescription":"Closed or merged PR \"[.NET 9 ] Fluent Style Fixes : HC.xaml loading, disabled radiobutton UI etc.\" (#10133)"},{"Id":"2705078484","IsPullRequest":true,"CreatedAt":"2024-12-02T05:03:26","Actor":"dotnet-maestro[bot]","Number":"10134","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241128.2\r\n- **Date Produced**: November 28, 2024 6:27:21 PM UTC\r\n- **Commit**: e8de3415124309210e4cbd0105e4a9da8dc01696\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d0f89c635d...e8de341512\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10134)","Url":"https://github.com/dotnet/wpf/pull/10134","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10134)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-11T03:30:29.2655902Z","RunDurationInMilliseconds":444}