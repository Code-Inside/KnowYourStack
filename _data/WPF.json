{"Data":{"GitHub":{"Issues":[{"Id":"2743814532","IsPullRequest":true,"CreatedAt":"2024-12-17T03:00:21","Actor":"dotnet-maestro[bot]","Number":"10183","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241216.3\r\n- **Date Produced**: December 17, 2024 2:24:19 AM UTC\r\n- **Commit**: 79a1bfbfa9b508b4ff1108f89c29157a68e48de1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24614.1 to 10.0.0-alpha.1.24616.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24614.1 to 10.0.0-alpha.1.24616.3][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24614.1 to 10.0.0-alpha.1.24616.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/a5281d9a60...79a1bfbfa9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10183)","Url":"https://github.com/dotnet/wpf/pull/10183","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/winforms\" (#10183)"},{"Id":"2743785489","IsPullRequest":false,"CreatedAt":"2024-12-17T02:29:51","Actor":"YkTru","Number":"10182","RawContent":null,"Title":"[TreeView] - Deselects/Defocus when source changes","State":"open","Body":"### Description\n\nAs you can see in the video, I can press MoveUp/MoveDown repeatedly and the source updates TwoWay, though the \"blue background\" (which represents SelectedItem? FocusedItem?) disappear which is quite confusing visually.\n\nhttps://github.com/user-attachments/assets/b7ad5dfb-c7b5-45b7-9391-2b093c9a43c0\n\n\n\n### Reproduction Steps\n\nI added a `TreeViewSelectedItemBehavior` (_WPF Behavior_) to enable SelectedItem-like functionality on the TreeView. (I intentionally avoided using `SelectedPath/Value/Index`.)\n\nHere's the code for the WPF Behavior, there a lot of GPT-o1 generated code since I couldnt make the TreeView select/focus the selected item after data source update:\n```cs\nusing System;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Media;\nusing Microsoft.Xaml.Behaviors;\n\nnamespace MRE.WPF.Custom\n{\n    public class TreeViewSelectedItemBehavior : Behavior<TreeView>\n    {\n        public static readonly DependencyProperty SelectedItemProperty =\n            DependencyProperty.Register(\n                nameof(SelectedItem),\n                typeof(object),\n                typeof(TreeViewSelectedItemBehavior),\n                new FrameworkPropertyMetadata(\n                    null,\n                    FrameworkPropertyMetadataOptions.BindsTwoWayByDefault,\n                    OnSelectedItemChanged));\n\n        public object SelectedItem\n        {\n            get => GetValue(SelectedItemProperty);\n            set => SetValue(SelectedItemProperty, value);\n        }\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n            if (AssociatedObject != null)\n            {\n                AssociatedObject.SelectedItemChanged += OnTreeViewSelectedItemChanged;\n                Console.WriteLine(\"TreeViewSelectedItemBehavior attached.\");\n            }\n        }\n\n        protected override void OnDetaching()\n        {\n            if (AssociatedObject != null)\n            {\n                AssociatedObject.SelectedItemChanged -= OnTreeViewSelectedItemChanged;\n                Console.WriteLine(\"TreeViewSelectedItemBehavior detached.\");\n            }\n\n            base.OnDetaching();\n        }\n\n        private void OnTreeViewSelectedItemChanged(object sender, RoutedPropertyChangedEventArgs<object> e)\n        {\n            SelectedItem = e.NewValue;\n            Console.WriteLine($\"TreeView SelectedItem changed to: {SelectedItem}\");\n        }\n\n        private static void OnSelectedItemChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            if (d is TreeViewSelectedItemBehavior behavior && behavior.AssociatedObject != null)\n            {\n                var treeView = behavior.AssociatedObject;\n                var newSelectedItem = e.NewValue;\n\n                Console.WriteLine($\"DependencyProperty SelectedItem changed to: {newSelectedItem}\");\n\n                if (newSelectedItem != null)\n                {\n                    SelectAndFocusTreeViewItem(treeView, newSelectedItem);\n                    treeView.Focus();\n                }\n            }\n        }\n\n        private static void SelectAndFocusTreeViewItem(TreeView treeView, object itemToSelect)\n        {\n            if (treeView == null || itemToSelect == null)\n                return;\n\n            Console.WriteLine($\"Attempting to select item: {itemToSelect}\");\n\n            foreach (var item in treeView.Items)\n            {\n                if (SelectTreeViewItemRecursive(treeView.ItemContainerGenerator.ContainerFromItem(item) as TreeViewItem,\n                        itemToSelect))\n                {\n                    break;\n                }\n            }\n        }\n\n        private static bool SelectTreeViewItemRecursive(TreeViewItem treeViewItem, object itemToSelect)\n        {\n            if (treeViewItem == null)\n                return false;\n\n            Console.WriteLine($\"Checking TreeViewItem: {treeViewItem.DataContext}\");\n\n            if (treeViewItem.DataContext == itemToSelect)\n            {\n                Console.WriteLine($\"TreeViewItem matched and selected: {itemToSelect}\");\n                treeViewItem.IsSelected = true;\n                treeViewItem.Focus();\n                treeViewItem.BringIntoView();\n                return true;\n            }\n\n            treeViewItem.IsExpanded = true;\n            treeViewItem.ApplyTemplate();\n\n            var itemsHostPanel = (Panel)VisualTreeHelper.GetChild(treeViewItem, 0);\n            if (itemsHostPanel != null)\n            {\n                for (int i = 0; i < treeViewItem.Items.Count; i++)\n                {\n                    var childItem = (TreeViewItem)treeViewItem.ItemContainerGenerator.ContainerFromIndex(i);\n                    if (SelectTreeViewItemRecursive(childItem, itemToSelect))\n                    {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n    }\n}\n\n```\n\n```xaml\n        <TreeView\n            Grid.Row=\"1\"\n            ItemsSource=\"{Binding TopChildren}\">\n            <TreeView.ItemContainerStyle>\n                <Style\n                    TargetType=\"{x:Type TreeViewItem}\">\n                    <Setter\n                        Property=\"IsExpanded\"\n                        Value=\"True\" />\n                </Style>\n            </TreeView.ItemContainerStyle>\n            <TreeView.ItemTemplate>\n                <HierarchicalDataTemplate\n                    ItemsSource=\"{Binding Children}\">\n                    <StackPanel\n                        Orientation=\"Horizontal\">\n                        <TextBlock\n                            Text=\"{Binding Data}\" />\n                    </StackPanel>\n                </HierarchicalDataTemplate>\n            </TreeView.ItemTemplate>\n            <b:Interaction.Behaviors>\n                <custom:TreeViewSelectedItemBehavior\n                    SelectedItem=\"{Binding SelectedItem, Mode=TwoWay}\" />\n            </b:Interaction.Behaviors>\n        </TreeView>\n```\n\n### Expected behavior\n\nThe \"blue background\" should remain visible when an item is still selected after the source updates.\n\n### Actual behavior\n\n\nThe model and UI data source are updating, but it seems the selected or focused item (I’m not sure which \"triggers\" the blue background) is not. What’s odd is that the property editor updates correctly and allows me to change its content, so it always knows which item is selected. However, the TreeView itself doesn’t appear to be aware of this.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\nThank you","Url":"https://github.com/dotnet/wpf/issues/10182","RelatedDescription":"Open issue \"[TreeView] - Deselects/Defocus when source changes\" (#10182)"},{"Id":"2734751147","IsPullRequest":true,"CreatedAt":"2024-12-16T13:47:23","Actor":"JeremyKuhne","Number":"10167","RawContent":null,"Title":"Start System.Printing test project","State":"closed","Body":"Add test project for System.Printing along with a few starter tests.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10167)","Url":"https://github.com/dotnet/wpf/pull/10167","RelatedDescription":"Closed or merged PR \"Start System.Printing test project\" (#10167)"},{"Id":"2738633022","IsPullRequest":true,"CreatedAt":"2024-12-16T05:52:58","Actor":"RaphProductions","Number":"10174","RawContent":null,"Title":"Make system backdrop interfaces visible","State":"closed","Body":"This commit changes the visibility for some functions, as this is crucial for WPF-based tabbed apps that aims to follow the Fluent Design guidelines.\r\n\r\nFixes [9496](https://github.com/dotnet/wpf/issues/9496)\r\n\r\nMain PR <!-- Link to PR if any that fixed this in the main branch. -->\r\n\r\n## Description\r\nThis commit changes the visibility for 2 methods, and a field in WindowBackdropManager.\r\n\r\n## Customer Impact\r\nCustomers may change the backdrop without P/Invoking themselves. This is useful for tabbed apps, as\r\nthey can now switch over to Mica Alt without declaring any P/Invoke methods.\r\n\r\n## Regression\r\nOn November 14th, .NET 9 released, with a brand new Fluent theme.\r\n\r\n## Testing\r\nSince WindowBackdropManager is known to be working, this fix doesn't need to be tested.\r\n\r\n## Risk\r\nI don't see any risks of exposing these APIs.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10174)","Url":"https://github.com/dotnet/wpf/pull/10174","RelatedDescription":"Closed or merged PR \"Make system backdrop interfaces visible\" (#10174)"},{"Id":"2739494047","IsPullRequest":true,"CreatedAt":"2024-12-16T05:48:55","Actor":"dotnet-maestro[bot]","Number":"10176","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241214.1\r\n- **Date Produced**: December 14, 2024 2:23:25 PM UTC\r\n- **Commit**: a5281d9a6011c880b612076399251565897b95ad\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24612.3 to 10.0.0-alpha.1.24614.1][3]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24612.3 to 10.0.0-alpha.1.24614.1][3]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24612.3 to 10.0.0-alpha.1.24614.1][3]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/8cea3f36c3...a5281d9a60\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10176)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10176","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10176)"},{"Id":"2738374200","IsPullRequest":true,"CreatedAt":"2024-12-16T05:48:35","Actor":"dotnet-maestro[bot]","Number":"10173","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241213.2\r\n- **Date Produced**: December 13, 2024 7:51:52 PM UTC\r\n- **Commit**: 255d5e0c89958af276883a988108c2d616438805\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24612.1 to 10.0.0-beta.24613.2][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24612.1 to 10.0.0-beta.24613.2][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24612.1 to 10.0.0-beta.24613.2][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24612.1 to 10.0.0-beta.24613.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/2c4eeabbea...255d5e0c89\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10173)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10173","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10173)"},{"Id":"2741274214","IsPullRequest":false,"CreatedAt":"2024-12-16T04:06:21","Actor":"Symbai","Number":"10181","RawContent":null,"Title":"Datagrid column sort is not reacting to databinding changes","State":"open","Body":"### Description\n\nHas this been always the case? When I sort a column in a Datagrid by clicking on it, it only sorts the column once. If anything in the cells of the column changes, the column is not sorted again. I tried with and without CollectionView (but I didn't used the collectionview sort because if the Datagrid already has sorting I expect it to work on its own)\n\nShouldn't the column sort react to databinding changes? What's the purpose of allowing sort in WPF when, if it has to react on databinding changes, we have to add our own sorting instead?\n\n### Reproduction Steps\n\n1. Use code below\n2. Launch app\n3. Click on the column to sort\n4. Press the button\n\n```XAML\n<Window\n    x:Class=\"WpfApp12.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:local=\"clr-namespace:WpfApp12\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    Title=\"MainWindow\"\n    Width=\"800\"\n    Height=\"450\"\n    mc:Ignorable=\"d\">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"Auto\" />\n            <RowDefinition Height=\"*\" />\n        </Grid.RowDefinitions>\n        <Button\n            Grid.Row=\"0\"\n            Click=\"Button_Click\"\n            Content=\"Make Changes\" />\n        <DataGrid\n            Grid.Row=\"1\"\n            AutoGenerateColumns=\"False\"\n            ItemsSource=\"{Binding Items}\">\n            <DataGrid.Columns>\n                <DataGridTextColumn\n                    Width=\"200\"\n                    Binding=\"{Binding Name}\"\n                    CanUserSort=\"True\"\n                    Header=\"Name\" />\n            </DataGrid.Columns>\n        </DataGrid>\n    </Grid>\n</Window>\n\n```\n\n```C#\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        DataContext = this;\n        InitializeComponent();\n        Items.Add(new MyData { Name = \"Item 1\" });\n        Items.Add(new MyData { Name = \"Item 2\" });\n        Items.Add(new MyData { Name = \"Item 3\" });\n        Items.Add(new MyData { Name = \"Item 4\" });\n        Items.Add(new MyData { Name = \"Item 5\" });\n    }\n\n    public ObservableCollection<MyData> Items { get; } = new();\n\n    private void Button_Click(object sender, RoutedEventArgs e)\n    {\n        Items[2].Name = \"Changed\";\n    }\n}\npublic class MyData : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    protected void OnPropertyChanged(string propertyName)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n\n    string _Name;\n    public string Name\n    {\n        get => _Name;\n        set\n        {\n            if (value == _Name) return;\n            _Name = value;\n            OnPropertyChanged(nameof(Name));\n        }\n    }\n}\n```\n\n### Expected behavior\n\n![Image](https://github.com/user-attachments/assets/62fb0335-e180-4fdb-8d06-7c8cfddf1bc9)\n\n\n### Actual behavior\n\n![Image](https://github.com/user-attachments/assets/0cc16e20-3fb4-425e-be38-27bb5937370a)\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n.NET 8.0\nx64\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10181","RelatedDescription":"Open issue \"Datagrid column sort is not reacting to databinding changes\" (#10181)"},{"Id":"2740776113","IsPullRequest":false,"CreatedAt":"2024-12-15T17:24:20","Actor":"fraluderin","Number":"10180","RawContent":null,"Title":"Delete button in Win 11 themed TextBox","State":"open","Body":"I'm starting using new Win 11 theming for my new WPF projects.\nI noticed that a \"delete button\" was added by default in the `TextBox` control:\n\n![Image](https://github.com/user-attachments/assets/0af07a01-f48b-41c5-83e4-28ec64e06fea)\n\nIs there a simple way to remove that button, e.g. with a property `DisplayDeleteButton`? I think this should be customizable to allow easy usage in scenarios that don't require a delete button.\n\nIf this has not been implemented yet, I'm available to contribute (but I'd need to be pointed in the right direction).","Url":"https://github.com/dotnet/wpf/issues/10180","RelatedDescription":"Open issue \"Delete button in Win 11 themed TextBox\" (#10180)"},{"Id":"2740492277","IsPullRequest":false,"CreatedAt":"2024-12-15T09:59:22","Actor":"rosjat","Number":"10179","RawContent":null,"Title":"TreeView Virtualisation broken in .Net 8","State":"open","Body":"### Description\n\nThe Issue decribed in #7321 seems to persist in .Net 8\n\n\n### Reproduction Steps\n\n1. Using Treeview with Virtualisation false  -> All items get rendered but of course slow\n``\n3. Using Treeview with Virtualisation true ->  nested items seem to get created but not rendered correctly\n![Image](https://github.com/user-attachments/assets/4abe1977-4df5-442a-990f-9d89add49acc)\n\n\n### Expected behavior\n\nThe TreeViewItems should be all  rendered\n\n### Actual behavior\n\nThe TreeViewItems are not all rendered\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10179","RelatedDescription":"Open issue \"TreeView Virtualisation broken in .Net 8\" (#10179)"},{"Id":"2740458993","IsPullRequest":false,"CreatedAt":"2024-12-15T09:29:01","Actor":"Perpete","Number":"10178","RawContent":null,"Title":"The bitmap image associated with the ToolboxBitmap property does not appear in the toolbox.","State":"open","Body":"### Description\n\nWhen creating a custom control, if you use the ToolboxBitmap property, the bitmap image associated with this attribute does not appear in the toolbox.\nFor the program test, the bitmap image is included in a folder.\nI also tested with the image included in a resource file.\nThe problem remains the same.\n\nThe same test with a winforms project works perfectly.\n\nHere is the code\n'----------------------------------\nImports System.Drawing\nImports System.Windows.Controls.Primitives\n\n**<ToolboxBitmap(\"D:\\Documents\\Visual Studio 2022\\Projects\\WpfApp1\\Images\\ToggleButton.bmp\")>**\nPublic Class CustomControl1\n    Inherits System.Windows.Controls.Control\n\n    Shared Sub New()\n        'Cet appel OverrideMetadata indique au système que cet élément souhaite apporter un style différent de celui de sa classe de base.\n        'Ce style est défini dans themes\\generic.xaml\n        DefaultStyleKeyProperty.OverrideMetadata(GetType(CustomControl1), New FrameworkPropertyMetadata(GetType(CustomControl1)))\n    End Sub\n\nEnd Class\n'---------------------------\n\nHere is the image of the ToolboxBitmap attribute.\n\n![Image](https://github.com/user-attachments/assets/329cb59d-ce1f-42b6-b954-83379547326c)\n\nYou see the image not present in the toolbox.\n\n![Image](https://github.com/user-attachments/assets/4a4e9002-6a5a-407b-a272-fa8705e085e6)\n\nWith the same project in winforms, the image is visible.\n\n`---------------------------------------\n**<ToolboxBitmap(\"D:\\Documents\\Visual Studio 2022\\Projects\\WinFormsApp1\\Images\\ToggleButton.bmp\")>**\nPublic Class CustomControl1\n\n    Protected Overrides Sub OnPaint(ByVal e As System.Windows.Forms.PaintEventArgs)\n        MyBase.OnPaint(e)\n\n        'Ajoutez ici votre code de dessin personnalisé\n    End Sub\n\nEnd Class\n`--------------------------------------\n\n![Image](https://github.com/user-attachments/assets/fd3eecf4-5a6c-4de2-8f66-4fe400c1e8d5)\n\n### Reproduction Steps\n\nCreate a project with a custom control.\nAdded the ToolboxBitmap attribute whose value is a path to a bitmap file to the custom control.\nBuild the project.\n\n### Expected behavior\n\nView of the ToolboxBitmap attribute image in the toolbar.\n\n### Actual behavior\n\nNo view of ToolboxBitmap attribute image in toolbar.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\nVisual studio 2022 Version 17.12.1\n.Net 9\nProject in VB.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10178","RelatedDescription":"Open issue \"The bitmap image associated with the ToolboxBitmap property does not appear in the toolbox.\" (#10178)"},{"Id":"2740319962","IsPullRequest":false,"CreatedAt":"2024-12-15T06:34:42","Actor":"Gaoyifei1011","Number":"10177","RawContent":null,"Title":"After setting the Window.TaskbarItemInfo property, the taskbar widget does not appear","State":"open","Body":"### Description\n\nAfter setting the Window.TaskbarItemInfo property, the taskbar widget does not appear\n\n##### ---------------------------\n\n在设置了 Window.TaskbarItemInfo 属性后，任务栏小窗显示不出来了\n\n---------------------------\n\nAfter the TaskbarItemInfo property is set for the WPF Window instance in Windows 11 26100, the application window does not appear when the mouse moves over the taskbar icon\n\n##### ---------------------------\n\n在 Windows 11 26100 为 WPF Window 实例设置了 TaskbarItemInfo 属性后，鼠标移动到任务栏图标上，应用程序小窗显示不出来\n\n---------------------------\n\nSet the TaskbarItemInfo property in the WPF Window instance\n\n在 WPF Window 实例设置 TaskbarItemInfo 属性\n![Image](https://github.com/user-attachments/assets/c5e6bdda-f869-4989-b1bb-30d53d7e8688)\n\nWhen the mouse moves over the taskbar icon, the WPF program does not display the taskbar window\n\n鼠标移动到任务栏图标上，WPF 程序显示不出任务栏小窗\n![Image](https://github.com/user-attachments/assets/7ac4d0fc-b5f8-4fb1-bbef-b535d8fb84d1)\n\nMove the mouse over another program icon, and a small taskbar window will normally appear\n\n鼠标移动到其他程序图标上，正常显示出任务栏小窗\n![Image](https://github.com/user-attachments/assets/f43562b4-2c01-4e34-a1fb-824bce55f8ed)\n\n\n### Reproduction Steps\n\n1. Create WPF programs (.NET Framework and.NET Core)\n2. Add a TaskbarItemInfo instance to the newly created MainWindow class.\n3. Move the mouse to the taskbar icon window\n\n##### ---------------------------\n\n1.创建 WPF 程序（.NET Framework 和 .NET  Core）\n2.为新建的 MainWindow 类添加 TaskbarItemInfo 实例。\n3.鼠标移动到任务栏图标小窗上\n\n---------------------------\n\n### Expected behavior\n\nAfter the TaskbarItemInfo property is set, the Taskbar window appears normally\n\n##### ---------------------------\n\n在设置 TaskbarItemInfo 属性后，任务栏小窗能正常显示\n\n---------------------------\n\n### Actual behavior\n\nAfter the TaskbarItemInfo property is set for the WPF Window instance in Windows 11 26100, the application window does not appear when the mouse moves over the taskbar icon\n\n##### ---------------------------\n\n在 Windows 11 26100 为 WPF Window 实例设置了 TaskbarItemInfo 属性后，鼠标移动到任务栏图标上，应用程序小窗显示不出来\n\n---------------------------\n\n### Regression?\n\nDo not set the TaskbarItemInfo property\n\n##### ---------------------------\n\n不设置 TaskbarItemInfo 属性\n\n### Known Workarounds\n\nNone\n\n### Impact\n\nNone\n\n### Configuration\n\n.NET Framework 4.8.1，.NET Core 9\nWindows 11 26120.2702\nWindows X64\n![Image](https://github.com/user-attachments/assets/8555c762-776b-4b7f-8b5c-92c0cfbea822)\n\n\n### Other information\n\nNone","Url":"https://github.com/dotnet/wpf/issues/10177","RelatedDescription":"Open issue \"After setting the Window.TaskbarItemInfo property, the taskbar widget does not appear\" (#10177)"},{"Id":"2738949280","IsPullRequest":false,"CreatedAt":"2024-12-13T14:36:45","Actor":"ZzZombo","Number":"10175","RawContent":null,"Title":"`System.Text.Json` SG is run twice in WPF projects","State":"open","Body":"### Description\n\nSimilar to https://github.com/dotnet/extensions/issues/4969, the SG is included twice in a compilation, resulting in duplicate definition errors and build failure due to the way WPF is built, involving a temporary project.\n\n### Reproduction Steps\n\n* Start a new WPF project.\n* Create a SG-enabled JSON serialization context, the target type and options do not matter, it should just be minimally functional.\n* Try to build. The Output pane lists the errors twice, once for the temporary project and once, verbatim, for the actual one.\n\n### Expected behavior\n\nSG is included only once.\n\n### Actual behavior\n\nSG is included twice and prevents the build from finishing successfully.\n\n### Regression?\n\nI can't say, sorry. There was one other issue previously but because of two SGs being active at once.\n\n### Known Workarounds\n\nI can't say, unless switching back to reflection is considered one.\n\n### Configuration\n\nI target `net9-windows` on Windows 10 x64. It shouldn't be specific to that configuration but I don't know for sure.\n\n### Other information\n\nAS I said already, it shows up twice in output, once per each project in the compilation, even though IMO the temp. WPF project shouldn't run the JSON SG at all, so preventing it from running in either when building a WPF application should fix the issue.","Url":"https://github.com/dotnet/wpf/issues/10175","RelatedDescription":"Open issue \"`System.Text.Json` SG is run twice in WPF projects\" (#10175)"},{"Id":"2732874296","IsPullRequest":false,"CreatedAt":"2024-12-13T05:27:28","Actor":"sudharsan-narayanan","Number":"10163","RawContent":null,"Title":"Duplicate tabs added in SmartTag","State":"closed","Body":"### Description\n\nOnce we created a new project in NetCore or Framework and install with NuGet package. Now, add a control in designer view page. The control shows the smart tag properly without any issue. Once we upgrade or downgrade the NuGet package in the project. And If I try to change the property value though smart tag. Once open the designer page, the smart tag adds duplicate tabs as shown below,\n\nOnce we create a new project in .NET Core or .NET Framework and install it with a NuGet package, we add a control in the designer view page. The control shows the smart tag properly without any issues. However, once we upgrade or downgrade the NuGet package in the project, and if I try to change the property value through the smart tag, once open the designer page, the smart tag adds duplicate tabs as shown below.\n\n![Image](https://github.com/user-attachments/assets/0a20be32-83fb-4947-814a-545e97d8f81d)\n\nIf the project is cleaned by removing the **Bin and Obj** and we try to access the designer view page. The control properly shows the smart tag without any duplicate tabs.\n\n![Image](https://github.com/user-attachments/assets/1593ba3a-ed4a-49a0-a5ff-2da49997716c)\n\n**Note:** If the issue occurs only when we use the NuGet package.\n\nPlease find the sample below,\n\n[Smartag.zip](https://github.com/user-attachments/files/18095531/Smartag.zip)\n \n\n### Reproduction Steps\n\n1. Run the Sample.\n2. Ensure the designer issue occur or not.\n3. If not occur, please upgrade or downgrade the NuGet package.\n4. Now build the solution.\n5. Note: the designer issue occurs as shown in the image.\n\n![Image](https://github.com/user-attachments/assets/0a20be32-83fb-4947-814a-545e97d8f81d)\n\n### Expected behavior\n\nDuplicate tabs not shown when we upgrade or downgrade the NuGet.\n\n### Actual behavior\n\nDuplicate tabs are shown when we upgrade or downgrade the NuGet.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nRemove Bin and Obj files, if the issue occurs again.\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10163","RelatedDescription":"Closed issue \"Duplicate tabs added in SmartTag\" (#10163)"},{"Id":"2737270205","IsPullRequest":true,"CreatedAt":"2024-12-13T05:21:27","Actor":"dotnet-maestro[bot]","Number":"10172","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241212.3\r\n- **Date Produced**: December 13, 2024 1:56:10 AM UTC\r\n- **Commit**: 8cea3f36c304a752bc257979401729b0aa92fcd7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24611.4 to 10.0.0-alpha.1.24612.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24611.4 to 10.0.0-alpha.1.24612.3][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24611.4 to 10.0.0-alpha.1.24612.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/f091e7b5c1...8cea3f36c3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10172)","Url":"https://github.com/dotnet/wpf/pull/10172","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10172)"},{"Id":"2732952300","IsPullRequest":true,"CreatedAt":"2024-12-13T05:21:07","Actor":"dotnet-maestro[bot]","Number":"10164","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241212.1\r\n- **Date Produced**: December 12, 2024 10:31:25 AM UTC\r\n- **Commit**: 2c4eeabbeab30dfe532190f7e5c448078231cdd0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24610.1 to 10.0.0-beta.24612.1][2]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24610.1 to 10.0.0-beta.24612.1][2]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24610.1 to 10.0.0-beta.24612.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24610.1 to 10.0.0-beta.24612.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/bdea4c2fa4...2c4eeabbea\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10164)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/10164","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10164)"},{"Id":"2736989043","IsPullRequest":false,"CreatedAt":"2024-12-12T22:21:47","Actor":"jaybyrd42","Number":"10171","RawContent":null,"Title":"Infinite Recursion Crash in WPF Window Containing WindowsFormsHost After Upgrading From .NET 6 to .NET 8","State":"open","Body":"### Description\n\nAfter upgrading a WPF application from .NET 6 to .NET 8, windows that contain a WindowsFormsHost element now cause a hard crash when the window is closed. Prior to the upgrade, these windows closed without error on .NET 6.\n\nThis issue only arises on windows that include a WindowsFormsHost. If the WindowsFormsHost is removed from the XAML or the entire window, the exception does not occur. No code changes other than upgrading the target framework from .NET 6 to .NET 8 were made.\n\nExplicitly disposing of the WindowsFormsHost on closing resolves the issue.\n\nException message: System.InvalidOperationException: Encountered infinite recursion while looking up resource '{key}' in {\"System.Private.CoreLib\"}. Verify the installation of .NET is complete and does not need repairing, and that the state of the process has not become corrupted.\n\n\n### Reproduction Steps\n\n- Create a new WPF application targeting .NET 8.\n- Add a WindowsFormsHost control to a WPF Window. \n- Add Forms control to WindowsFormsHost \n- Run the application.\n- Open the window that contains the WindowsFormsHost.\n- Close the window.\n\n### Expected behavior\n\nThe window should close cleanly without any exceptions, as it did on .NET 6.\n\n### Actual behavior\n\nThe application throws an unhandled exception and crashes when closing the window containing a WindowsFormsHost on .NET 8.\n\n### Regression?\n\nThis behaviour was not present in .NET 6.\n\n### Known Workarounds\n\nRemoving the WindowsFormsHost from the window avoids the crash, but this is not feasible for the full application since we are in the process of migrating Windows Forms code to WPF incrementally.\n\nTargeting .NET 6 instead of .NET 8 also avoids the issue, but we need .NET 8 for new features and performance improvements.\n\n### Impact\n\nThis issue severely impacts application stability and user experience. Because the crash occurs when closing windows that contain critical embedded Windows Forms components, end-users experience sudden and unexplained application terminations. In a production environment, the crash undermines confidence in the software’s reliability and can negatively affect the application's reputation.\n\n### Configuration\n\n_No response_\n\n### Other information\n\nThe issue seems to be machine dependant as some users are able to reproduce the exception while others are not. Those that can reproduce can reliably reproduce.\n\nThe issue does not appear to be related to any third-party libraries.\n\nWe have tried with clean installs of .NET 8 and verified no installation corruption.\n\nThe infinite recursion message suggests a resource lookup issue within System.Private.CoreLib, triggered specifically by shutting down a WPF window hosting WinForms controls.","Url":"https://github.com/dotnet/wpf/issues/10171","RelatedDescription":"Open issue \"Infinite Recursion Crash in WPF Window Containing WindowsFormsHost After Upgrading From .NET 6 to .NET 8\" (#10171)"},{"Id":"2735093889","IsPullRequest":true,"CreatedAt":"2024-12-12T07:34:08","Actor":"harshit7962","Number":"10170","RawContent":null,"Title":"[StyleCleanUp] Address IDE warnings Part 2","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThe current changes addresses the following Errors/Warnings in the src folder of WPF:\r\n- **IDE0019:** Use pattern matching to avoid as followed by a null check\r\n- **IDE0020:** Use pattern matching to avoid is check followed by a cast (with variable)\r\n- **IDE0029:** Use coalesce expression\r\n\r\nA good way to go about reviewing this is to go commit by commit which pans over individual errors/warnings, and hence easing out the overall understanding. \r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nWill be taken in the next test pass\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10170)","Url":"https://github.com/dotnet/wpf/pull/10170","RelatedDescription":"Open PR \"[StyleCleanUp] Address IDE warnings Part 2\" (#10170)"},{"Id":"2735050990","IsPullRequest":true,"CreatedAt":"2024-12-12T07:10:03","Actor":"siagupta0202","Number":"10169","RawContent":null,"Title":"Updates styling for different controls in ToolBar","State":"open","Body":"Fixes #9938 \r\n\r\n## Description\r\n\r\nFixes styling and usability of controls inside ToolBar\r\n## Customer Impact\r\n\r\nUnable to properly make use of controls inside ToolBar\r\n## Regression\r\n\r\nYes\r\n## Testing\r\n\r\nLocal build pass, Tested with sample applications \r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10169)","Url":"https://github.com/dotnet/wpf/pull/10169","RelatedDescription":"Open PR \"Updates styling for different controls in ToolBar\" (#10169)"},{"Id":"2735044835","IsPullRequest":true,"CreatedAt":"2024-12-12T07:06:18","Actor":"harshit7962","Number":"10168","RawContent":null,"Title":"[StyleCleanUp] Address IDE Warnings Part 1","State":"open","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThis PR addresses **IDE0017: Use object initializers.**\r\nLink to the issue: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nWill be taken in test pass\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10168)","Url":"https://github.com/dotnet/wpf/pull/10168","RelatedDescription":"Open PR \"[StyleCleanUp] Address IDE Warnings Part 1\" (#10168)"},{"Id":"2734604581","IsPullRequest":true,"CreatedAt":"2024-12-12T07:05:13","Actor":"dotnet-maestro[bot]","Number":"10166","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241211.4\r\n- **Date Produced**: December 12, 2024 1:31:59 AM UTC\r\n- **Commit**: f091e7b5c19190de7d4166fffabb8aebe1199470\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24610.5 to 10.0.0-alpha.1.24611.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24610.5 to 10.0.0-alpha.1.24611.4][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24610.5 to 10.0.0-alpha.1.24611.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/230d349565...f091e7b5c1\r\n[2]: https://github.com/dotnet/runtime/compare/920a17ac91...aa9cd3b323\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10166)","Url":"https://github.com/dotnet/wpf/pull/10166","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10166)"},{"Id":"2734192040","IsPullRequest":false,"CreatedAt":"2024-12-11T22:53:38","Actor":"yowl","Number":"10165","RawContent":null,"Title":"[Question] Extract BamlRecordReader feasability","State":"open","Body":"Hi, I contribute to the NativeAOT-LLVM project which is a NAOT compiler for LLVM and WebAssembly.  I am currently bringing up a WPF applicaation in the browser using Avalonia's XPF bridge and have a question.  As you may know NAOT is an AOT compiler that uses roots to establish a dependency tree of required types and methods that need compiling.  WPF presents a challenge in that a some types/properties (get/set methods) may only be used in Xaml or Baml.  So it would be advantageous from the goal of gathering dependencies to read the Baml resources and root the necessary types and methods.  To that end I was looking at BamlRecordReader.cs and wondering if it could be extracted from the PresentationFramework assembly.  Most things are possible, but is this going to be really hard do you think?\n\nThanks!","Url":"https://github.com/dotnet/wpf/issues/10165","RelatedDescription":"Open issue \"[Question] Extract BamlRecordReader feasability\" (#10165)"},{"Id":"2727445229","IsPullRequest":true,"CreatedAt":"2024-12-11T15:00:57","Actor":"harshit7962","Number":"10154","RawContent":null,"Title":"[StyleCleanUp] Address IDE warnings Part 1","State":"closed","Body":"## Description\r\nThis work is a part of our initiative to set code-style guidelines, align WPF and WinForms, and ensure PR standards with respect to styles. This in turn will help us in better maintainability and readability of the repo overall. The changes follow up from the PR #10080 and references to the issue #10017.\r\n\r\nThis PR addresses **IDE0017: Use object initializers.**\r\nLink to the issue: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017\r\n\r\n## Customer Impact\r\n_None_\r\n\r\n## Regression\r\n_None_\r\n\r\n## Testing\r\nLocal Build Pass\r\nWill be taken in test pass\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10154)","Url":"https://github.com/dotnet/wpf/pull/10154","RelatedDescription":"Closed or merged PR \"[StyleCleanUp] Address IDE warnings Part 1\" (#10154)"},{"Id":"2729399464","IsPullRequest":false,"CreatedAt":"2024-12-11T09:41:41","Actor":"wvfeng","Number":"10157","RawContent":null,"Title":"Clipboard.SetImage is not available when publishing mode is standalone","State":"closed","Body":"### Description\n\nversion: `9.0.101`\n\n\n### Reproduction Steps\n\n![Image](https://github.com/user-attachments/assets/2e75bd5d-b70e-49a1-93c8-443bf3d69851)\n![Image](https://github.com/user-attachments/assets/7279acac-e31a-41d9-9d31-4dc2f12f3cf1)\n\n\nNote that if you do not select Standalone for Standalone Deployment, this feature is available\n\n\n\n\n\n### Expected behavior\n\nClipboard.SetImage is available\n\n### Actual behavior\n\nClipboard.SetImage is not available\n\n### Regression?\n\nat dotnet 8.0 Clipboard.SetImage is available\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10157","RelatedDescription":"Closed issue \"Clipboard.SetImage is not available when publishing mode is standalone\" (#10157)"},{"Id":"2731695165","IsPullRequest":true,"CreatedAt":"2024-12-11T05:12:13","Actor":"dotnet-maestro[bot]","Number":"10162","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.Reflection.MetadataLoadContext**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Serialization.Formatters**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.Win32.SystemEvents**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.CodeDom**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.Odbc**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Data.OleDb**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.PerformanceCounter**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.AccountManagement**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices.Protocols**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Formats.Nrbf**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Ports**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Management**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.Context**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Runtime.Caching**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Pkcs**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.ProtectedData**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceModel.Syndication**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ServiceProcess.ServiceController**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Speech**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Text.Encoding.CodePages**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Threading.AccessControl**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.ComponentModel.Composition.Registration**: from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20241210.5\r\n- **Date Produced**: December 11, 2024 12:58:53 AM UTC\r\n- **Commit**: 230d3495651245f441ba85c1092915349ee94bc0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 10.0.0-alpha.1.24609.4 to 10.0.0-alpha.1.24610.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 10.0.0-alpha.1.24609.4 to 10.0.0-alpha.1.24610.5][1]\r\n  - **System.Drawing.Common**: [from 10.0.0-alpha.1.24609.4 to 10.0.0-alpha.1.24610.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/e50878fca2...230d349565\r\n[2]: https://github.com/dotnet/runtime/compare/b085dadd16...920a17ac91\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10162)","Url":"https://github.com/dotnet/wpf/pull/10162","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#10162)"},{"Id":"2730098190","IsPullRequest":true,"CreatedAt":"2024-12-11T05:11:20","Actor":"dotnet-maestro[bot]","Number":"10160","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20241210.1\r\n- **Date Produced**: December 10, 2024 10:03:25 AM UTC\r\n- **Commit**: bdea4c2fa4851874b372af1c90d4bd2ec51ad499\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24610.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/61b8f74642...bdea4c2fa4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10160)","Url":"https://github.com/dotnet/wpf/pull/10160","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10160)"},{"Id":"2731406650","IsPullRequest":true,"CreatedAt":"2024-12-10T23:06:53","Actor":"JeremyKuhne","Number":"10161","RawContent":null,"Title":"Add readonly to members in Vector, Size, Int32Rect and Point ","State":"open","Body":"Follow up to #10156.\r\n\r\nThis is in multiple commits for clarity and history, should not be squashed.\r\n\r\n1. Collapse files\r\n2. Clean code\r\n3. Add readonly\r\n4. Make fields private\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10161)","Url":"https://github.com/dotnet/wpf/pull/10161","RelatedDescription":"Open PR \"Add readonly to members in Vector, Size, Int32Rect and Point \" (#10161)"},{"Id":"2730082556","IsPullRequest":true,"CreatedAt":"2024-12-10T14:47:47","Actor":"HotCakeX","Number":"10159","RawContent":null,"Title":"Fixed typo","State":"closed","Body":"Simply fixed a typo.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10159)","Url":"https://github.com/dotnet/wpf/pull/10159","RelatedDescription":"Closed or merged PR \"Fixed typo\" (#10159)"},{"Id":"2729403117","IsPullRequest":false,"CreatedAt":"2024-12-10T08:37:12","Actor":"wvfeng","Number":"10158","RawContent":null,"Title":"dotnet 9.0 Publish SelfContained:true  Clipboard.SetImage is not available","State":"open","Body":"### Description\n\nversion: `9.0.101`\n\n\n### Reproduction Steps\n\n![Image](https://github.com/user-attachments/assets/2e75bd5d-b70e-49a1-93c8-443bf3d69851)\n![Image](https://github.com/user-attachments/assets/7279acac-e31a-41d9-9d31-4dc2f12f3cf1)\n\n\nNote that if you do not select Standalone for Standalone Deployment, this feature is available\n\n\n\n\n\n### Expected behavior\n\nClipboard.SetImage is available\n\n### Actual behavior\n\nClipboard.SetImage is not available\n\n### Regression?\n\nat dotnet 8.0 Clipboard.SetImage is available\n\n### Known Workarounds\n\n_No response_\n\n### Impact\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/wpf/issues/10158","RelatedDescription":"Open issue \"dotnet 9.0 Publish SelfContained:true  Clipboard.SetImage is not available\" (#10158)"},{"Id":"2728951467","IsPullRequest":true,"CreatedAt":"2024-12-10T04:13:31","Actor":"JeremyKuhne","Number":"10156","RawContent":null,"Title":"Add readonly to members in Rect","State":"open","Body":"Marking members as `readonly` allows the compiler to generate more efficient code.\r\n\r\nhttps://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/struct#readonly-instance-members\r\n\r\nThis is in two commits. The first collapses code into a single file and the second adds the `readonly`. Suggest looking at the second commit for the diff and do not squash the commits.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10156)","Url":"https://github.com/dotnet/wpf/pull/10156","RelatedDescription":"Open PR \"Add readonly to members in Rect\" (#10156)"},{"Id":"2728688106","IsPullRequest":true,"CreatedAt":"2024-12-10T01:22:01","Actor":"JeremyKuhne","Number":"10155","RawContent":null,"Title":"Convert to using CsWin32 HRESULT definition","State":"open","Body":"This converts to using the CsWin32 HRESULT definition. It creates two HRESULT helpers to provide compatible throw behavior for existing code (PresentationCore threw things one way, other assemblies threw a different way).\r\n\r\nAlso:\r\n\r\n- Remove dead interop defines (a lot)\r\n- Add Primitives test project\r\n- Force test projects to use open source key (which System.Private.Windows.Core expects)\r\n- Tweak build files a bit to try and ensure test dependencies are in place\r\n- Add strings to System.Windows.Primitives to facilitate unifying hresult handling in the future (need to redirect InvalidWmpVersionException)\r\n\r\nIt would be nice to always throw the same way, but that would change exceptions that currently get thrown. Combining the behavior from both would give whatever Marshal gives with special handling for WIC/MIL errors and unwrapping of Win32 COMExceptions into Win32Exceptions.\r\n\r\nConverting the existing interop to use CsWin32 types will make transitioning far easier. The next change I'm working on is using HWND.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/wpf/pull/10155)","Url":"https://github.com/dotnet/wpf/pull/10155","RelatedDescription":"Open PR \"Convert to using CsWin32 HRESULT definition\" (#10155)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-17T03:30:29.5093705Z","RunDurationInMilliseconds":465}