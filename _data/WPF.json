{"Data":{"GitHub":{"Issues":[{"Id":"1087343530","IsPullRequest":false,"CreatedAt":"2021-12-23T03:32:04","Actor":"amirburbea","Number":"5870","RawContent":null,"Title":"Tooltips on ComboBoxItems in WPF for .NET 6 appear and immediately disappear","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)  6.0.101\r\n* Windows version: (`winver`) 22000.376\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No \r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019).\r\nNO\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/main/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:** In .NET 6, WPF tooltips on ComboBoxItems seem to close instantly, In .NET 4.8/5 this is not the case.\r\n \r\n **Actual behavior:** Popup appears but immediately vanishes\r\n \r\n **Expected behavior:** Popup on ComboBoxItem stays visible\r\n \r\n **Minimal repro:** https://github.com/amirburbea/PopupRepro\r\n","Url":"https://github.com/dotnet/wpf/issues/5870","RelatedDescription":"Open issue \"Tooltips on ComboBoxItems in WPF for .NET 6 appear and immediately disappear\" (#5870)"},{"Id":"1087183705","IsPullRequest":true,"CreatedAt":"2021-12-22T21:30:31","Actor":"dotnet-maestro[bot]","Number":"5869","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211222.8\r\n- **Date Produced**: December 22, 2021 8:33:44 PM UTC\r\n- **Commit**: a8da3b57279985a7f1dbc471e17f2f48c236552e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21622.6 to 7.0.0-alpha.1.21622.8][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21622.6 to 7.0.0-alpha.1.21622.8][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/0f430be...a8da3b5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5869","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5869)"},{"Id":"1087166063","IsPullRequest":true,"CreatedAt":"2021-12-22T20:53:35","Actor":"dotnet-maestro[bot]","Number":"5868","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211222.6\r\n- **Date Produced**: December 22, 2021 7:49:06 PM UTC\r\n- **Commit**: 0f430be707190239f8475a74c207142a80291d40\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21622.4 to 7.0.0-alpha.1.21622.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21622.4 to 7.0.0-alpha.1.21622.6][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8714a70...0f430be\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5868","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5868)"},{"Id":"1087150689","IsPullRequest":true,"CreatedAt":"2021-12-22T20:22:22","Actor":"dotnet-maestro[bot]","Number":"5867","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211222.4\r\n- **Date Produced**: December 22, 2021 7:28:46 PM UTC\r\n- **Commit**: 8714a70c98f2164a2294e206186d6e68968ef737\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21622.3 to 7.0.0-alpha.1.21622.4][3]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21622.3 to 7.0.0-alpha.1.21622.4][3]\r\n\r\n[3]: https://github.com/dotnet/winforms/compare/dd03003...8714a70\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5867","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5867)"},{"Id":"1087119141","IsPullRequest":true,"CreatedAt":"2021-12-22T19:51:26","Actor":"dotnet-maestro[bot]","Number":"5866","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211222.1\r\n- **Date Produced**: December 22, 2021 7:11:32 PM UTC\r\n- **Commit**: 404903f32e4e056a61323df05cf4b637691354f0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21621.5 to 7.0.0-alpha.1.21622.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21621.5 to 7.0.0-alpha.1.21622.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b2f12fd...404903f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5866","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5866)"},{"Id":"1086943387","IsPullRequest":false,"CreatedAt":"2021-12-22T15:35:05","Actor":"lanzhiquan","Number":"5865","RawContent":null,"Title":"Content has wrong display on Label","State":"closed","Body":"* .NET Core Version: 6.0\r\n* Windows version: Windows 11 Pro Dev, OS Build 22523.1000\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description: The first character '_' does not display on label\r\n\r\n<img width=\"644\" alt=\"1\" src=\"https://user-images.githubusercontent.com/11311878/147116624-2ae5a304-db7a-46a2-a16f-d4750311be56.png\">\r\n\r\n<img width=\"448\" alt=\"2\" src=\"https://user-images.githubusercontent.com/11311878/147116630-7ccd39ff-7312-4cf6-b369-c4335a57db32.png\">\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/5865","RelatedDescription":"Closed issue \"Content has wrong display on Label\" (#5865)"},{"Id":"1086815503","IsPullRequest":true,"CreatedAt":"2021-12-22T13:44:26","Actor":"dotnet-maestro[bot]","Number":"5864","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20211221.3\r\n- **Date Produced**: December 21, 2021 2:28:07 PM UTC\r\n- **Commit**: 0cd94b1d02c03377d99f3739beb191591f6abee5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2af5dda...0cd94b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5864","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5864)"},{"Id":"1086512464","IsPullRequest":true,"CreatedAt":"2021-12-22T06:56:31","Actor":"dipeshmsft","Number":"5863","RawContent":null,"Title":"Updated sourceBufferStride's documentation","State":"open","Body":"Fixes Issue #5855 \r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\nUpdated the explanation for sourceBufferStride in WriteableBitmap.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nMakes it easier for developers to understand the parameter.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nNo\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nNo\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nNone. Documentation Change","Url":"https://github.com/dotnet/wpf/pull/5863","RelatedDescription":"Open PR \"Updated sourceBufferStride's documentation\" (#5863)"},{"Id":"1086216159","IsPullRequest":true,"CreatedAt":"2021-12-21T21:08:08","Actor":"dotnet-maestro[bot]","Number":"5862","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211221.5\r\n- **Date Produced**: December 21, 2021 8:28:48 PM UTC\r\n- **Commit**: b2f12fddc038c8e04717f895a63aae72778b0a28\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21621.4 to 7.0.0-alpha.1.21621.5][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21621.4 to 7.0.0-alpha.1.21621.5][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ae505c5...b2f12fd\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5862","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5862)"},{"Id":"1086196274","IsPullRequest":true,"CreatedAt":"2021-12-21T20:42:08","Actor":"dotnet-maestro[bot]","Number":"5861","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211221.4\r\n- **Date Produced**: December 21, 2021 7:48:14 PM UTC\r\n- **Commit**: ae505c58f63e176f0b90d418562ec89ed052de35\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21621.3 to 7.0.0-alpha.1.21621.4][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21621.3 to 7.0.0-alpha.1.21621.4][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ee4ed58...ae505c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5861","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5861)"},{"Id":"1086179420","IsPullRequest":true,"CreatedAt":"2021-12-21T20:11:10","Actor":"dotnet-maestro[bot]","Number":"5860","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211221.3\r\n- **Date Produced**: December 21, 2021 7:21:53 PM UTC\r\n- **Commit**: ee4ed584f149ecac0516d566675643eb3a9eb73b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21621.2 to 7.0.0-alpha.1.21621.3][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21621.2 to 7.0.0-alpha.1.21621.3][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/bbd59f6...ee4ed58\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5860","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5860)"},{"Id":"1086149715","IsPullRequest":true,"CreatedAt":"2021-12-21T19:40:36","Actor":"dotnet-maestro[bot]","Number":"5859","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211221.2\r\n- **Date Produced**: December 21, 2021 7:02:19 PM UTC\r\n- **Commit**: bbd59f64d6e01cfdda98b9b25a3eec67bb72667e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21620.2 to 7.0.0-alpha.1.21621.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21620.2 to 7.0.0-alpha.1.21621.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/1f61d8f...bbd59f6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5859","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5859)"},{"Id":"1085827035","IsPullRequest":true,"CreatedAt":"2021-12-21T13:50:35","Actor":"dotnet-maestro[bot]","Number":"5858","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20211220.2\r\n- **Date Produced**: December 20, 2021 5:56:33 PM UTC\r\n- **Commit**: 2af5dda2d48417982a6b90bf28e8b9a9b57f5ad4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/78659a1...2af5dda\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5858","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5858)"},{"Id":"1085285733","IsPullRequest":true,"CreatedAt":"2021-12-20T23:49:06","Actor":"dotnet-maestro[bot]","Number":"5857","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211220.2\r\n- **Date Produced**: December 20, 2021 11:09:56 PM UTC\r\n- **Commit**: 1f61d8f2612b8aab1d564aec76edffc4559cc23a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21620.1 to 7.0.0-alpha.1.21620.2][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21620.1 to 7.0.0-alpha.1.21620.2][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/cc53598...1f61d8f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5857","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5857)"},{"Id":"1085122416","IsPullRequest":true,"CreatedAt":"2021-12-20T19:42:01","Actor":"dotnet-maestro[bot]","Number":"5856","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211220.1\r\n- **Date Produced**: December 20, 2021 7:06:49 PM UTC\r\n- **Commit**: cc535989128555e7ceb890d1d7b307c1f0764d5e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21618.1 to 7.0.0-alpha.1.21620.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21618.1 to 7.0.0-alpha.1.21620.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/6766f3e...cc53598\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5856","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5856)"},{"Id":"1083851395","IsPullRequest":false,"CreatedAt":"2021-12-20T05:26:55","Actor":"voelklmichael","Number":"5852","RawContent":null,"Title":"Dispatcher not found","State":"closed","Body":"tl;dr  How to solve \"Reference to type 'DispatcherObject' claims it is defined in 'WindowsBase', but it could not be found\"\r\n\r\nHi,\r\nso I have this app which does the following:\r\n- takes some user-defined source code snippets\r\n- compiles it (using rosyln)\r\n- and executes it.\r\nYesterday a user wanted to run some source code which opens a window.\r\nThe source code uses \"System.Windows.Application.Current.Dispatcher.Invoke(() =>{…});\".\r\nNow I get an error during compilation of this source snippet:\r\n    ID CS7069: Reference to type 'DispatcherObject' claims it is defined in 'WindowsBase', but it could not be found\r\n    ID: CS1061: 'Application' does not contain a definition for 'Dispatcher' and no accessible extension method 'Dispatcher' accepting a first argument of type 'Application' could be found (are you missing a using directive or an assembly reference?)\r\nI'm tried to add several DLL references from \"C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\3.1.21\", but no success.\r\n\r\nSo: In which DLLs is the Dispatcher defined?\r\n\r\nNote: If I run the snippet in a minimal app, Visual Studio chooses the references automatically, and the code just works.\r\nOn stackoverflow I found some issues, which indicate that I've already loaded another version of \"WindowsBase\". Do you know how I can check this?\r\n\r\nThank you,\r\n\r\nMichael\r\n\r\nUpdate: I found the issue. I loaded WindowsBase from \"Microsoft.NETCore.App\" instead of \"Microsoft.WindowsDesktop.App\".\r\nPlease close this issue.\t\t\t\t","Url":"https://github.com/dotnet/wpf/issues/5852","RelatedDescription":"Closed issue \"Dispatcher not found\" (#5852)"},{"Id":"1084215688","IsPullRequest":false,"CreatedAt":"2021-12-19T23:11:56","Actor":"loicmorvan","Number":"5855","RawContent":null,"Title":"`ArgumentException` with `WriteableBitmap.WritePixels`","State":"open","Body":"* .NET Core Version: 6.0\r\n* Windows version: Windows 11 (21H2)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: I don't know\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No.\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nCalling `WriteableBitmap.WritePixels` just crashes with an `ArgumentException` without `paramName`.\r\n\r\nReproduced in this repos: https://github.com/loicmorvan/BugWriteableBitmap\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\nCrashes with an `ArgumentException` without `paramName`.\r\n\r\n **Expected behavior:**\r\n \r\nNo crash, and pixels updated into the bitmap.\r\n\r\n **Minimal repro:**\r\n\r\nhttps://github.com/loicmorvan/BugWriteableBitmap","Url":"https://github.com/dotnet/wpf/issues/5855","RelatedDescription":"Open issue \"`ArgumentException` with `WriteableBitmap.WritePixels`\" (#5855)"},{"Id":"1084067098","IsPullRequest":false,"CreatedAt":"2021-12-19T10:41:16","Actor":"BieleckiLtd","Number":"5854","RawContent":null,"Title":"Epic feature request: Window should be totally customizable","State":"open","Body":"What we, developers need in late 2021 is to have full control over the Windows that we design without having to spend hours to fix all gotchas or use third-party libraries. What I mean by control over the Window is being able to simply customize the caption area and window borders (or lack of thereof if we wish). One could say all you need to do is to set `WindowStyle=\"None\"` which is partially true, because now we have to reinvent the wheel by fixing lots of issues and re-implement lost functionality.\r\n\r\n1. Allow customizing appearance and content. See Edge, VS Code or Teams - application real estate is not wasted; there are menus, search fields, tabs and custom buttons in the window caption. WPF gives us icon, window title and min/max/close buttons. Can't even choose colours.\r\n2. With `WindowStyle=\"None\"` one has to re-create min/max/close buttons and implement them (which is not that hard), but W11's snapping tooltip will not be supported anyway (I believe there is already an open issue to add this).\r\n3. Allow to easily set window draggable area or control (where you can click and drag the window around)\r\n4. Fix window placement when maximized. Currently, window will cover the taskbar and will ever so slightly be bigger than what we can actually fit on the screen - we have to add about 7px of padding or border when maximized to fix that.\r\n\r\nTo summarize, the amount of work we have to do for our apps to feel nice and modern is crazy and we would like to have a better experience without the need to re-invent the wheel. For anyone wanting to challenge themself here is the most-comprehensive walkthrough I could find to achieve what I described: https://engy.us/blog/2020/01/01/implementing-a-custom-window-title-bar-in-wpf/","Url":"https://github.com/dotnet/wpf/issues/5854","RelatedDescription":"Open issue \"Epic feature request: Window should be totally customizable\" (#5854)"},{"Id":"1083976231","IsPullRequest":false,"CreatedAt":"2021-12-19T00:43:07","Actor":"1ctinus","Number":"5853","RawContent":null,"Title":" Apps with a custom background flash a white background for a couple frames on some devices","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)   6.0.100\r\n* Windows version: (`winver`) Windows 11 10.0.22000\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: \r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019).\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/main/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n Apps with a custom background flash a white background for a couple frames on some devices (previously asked Stack overflow to no avail, pointed to likely a software issue)\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nWindow flashes white before fully loading.\r\n **Expected behavior:**\r\n  Window opens with the correct background color instantly\r\n **Minimal repro:**\r\n```\r\ndotnet new wpf\r\n```\r\nedit MainWindow.xaml to have a background attribute\r\n```\r\ndotnet build\r\n```\r\nand run the app.","Url":"https://github.com/dotnet/wpf/issues/5853","RelatedDescription":"Open issue \" Apps with a custom background flash a white background for a couple frames on some devices\" (#5853)"},{"Id":"1083842828","IsPullRequest":true,"CreatedAt":"2021-12-18T14:46:51","Actor":"dotnet-maestro[bot]","Number":"5851","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211218.1\r\n- **Date Produced**: December 18, 2021 2:14:11 PM UTC\r\n- **Commit**: 6766f3edf0ab99bf64aa0243f6125caa5fba7344\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21616.1 to 7.0.0-alpha.1.21618.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21616.1 to 7.0.0-alpha.1.21618.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/76dedba...6766f3e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5851","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5851)"},{"Id":"1083831066","IsPullRequest":true,"CreatedAt":"2021-12-18T13:51:58","Actor":"dotnet-maestro[bot]","Number":"5850","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20211217.4\r\n- **Date Produced**: December 17, 2021 10:25:38 PM UTC\r\n- **Commit**: 78659a1d4831ce9d62ea817fe13e4e2e70a52961\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/943d03f...78659a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5850","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5850)"},{"Id":"1082700192","IsPullRequest":false,"CreatedAt":"2021-12-16T22:34:13","Actor":"vsfeedback","Number":"5848","RawContent":null,"Title":"Cancelling RequestPurchaseAsync immediately on device with Windows Hello does not cancel face recognition","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Cancelling-RequestPurchaseAsync-immediat/1332731)._\n\n---\n[severity:It's more difficult to complete my work]\n**Description:**\nWhen using a Windows Hello enabled device, cancelling a purchase dialog immediately, by clicking the **X** (close) button in the dialog frame, before it has loaded, will leave Windows Hello running after the dialog is closed.\n\n**Expected behavior:**\nWhen the **X** button is pressed, Windows Hello, and all authentication related activities, should cease.\n\n**Actual behavior:**\nThe Windows Hello camera and the LEDs continue to blink after the dialog is cancelled/closed. The camera activity LED also stays lit.\n\n**Repro steps:**\nA Windows device with Windows Hello is REQUIRED to reproduce this issue.\n\n1. Create a new .NET Core 3 WPF project.\n2. Change the TFM to `net5.0-windows10.0.17763.0`.\n3. Invoke the `StoreContext.RequestPurchaseAsync(string storeId)` method using a valid addon ID.\n4. Package the project with a packaging project, and run the packaged app.\n5. Once the host window pops up, close it immediately.\n\n**Repro example**\nI recommend binding the `Bug()` method to a click or keyboard event, so you are prepared to close the purchase dialog once it opens.\n\nExample `Reproduce.cs`:\n``` csharp\nusing System;\nusing System.Runtime.InteropServices;\nusing Windows.Services.Store;\nusing WinRT;\nclass Reproduce\n{\n    [ComImport]\n    [Guid(\"3E68D4BD-7135-4D10-8018-9FB6D9F33FA1\")]\n    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n    public interface IInitializeWithWindow\n    {\n        void Initialize(IntPtr hwnd);\n    }\n\n    public async void Bug(IntPtr hostHWND)\n    {\n        var context = StoreContext.GetDefault();\n        IInitializeWithWindow initWindow = context.As();\n        initWindow.Initialize(hostHWND);\n        StorePurchaseResult result = await context.RequestPurchaseAsync(\"MYADDONID\");\n    }\n}\n```\n\nExample `MainWindow.xaml.cs`:\n``` csharp\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n        SomeButton.Click += (sender, e) => Button_Click();\n    }\n\n    public async void Button_Click()\n    {\n        IntPtr ownerWindow = System.Diagnostics.Process.GetCurrentProcess().MainWindowHandle;\n        await new Reproduce().Bug(ownerWindow).ConfigureAwait(false);\n    }\n}\n```\n\n**Environment:**\n.NET SDK: 5.0.102\nRuntime: 5.0.2\nVisual Studio: 16.8.4\nWinver: 19042.789\nWindows Hello Face driver version: 10.0.19041.662\n\n---\n### Original Comments\n\n#### Feedback Bot on 2/7/2021, 06:54 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Feedback Bot on 5/11/2021, 01:04 AM: \n\nI detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/5848","RelatedDescription":"Open issue \"Cancelling RequestPurchaseAsync immediately on device with Windows Hello does not cancel face recognition\" (#5848)"},{"Id":"1082279638","IsPullRequest":true,"CreatedAt":"2021-12-16T15:24:55","Actor":"dotnet-maestro[bot]","Number":"5847","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211216.1\r\n- **Date Produced**: December 16, 2021 2:32:21 PM UTC\r\n- **Commit**: 76dedba0e22119fb170098b51911a83ab004c1ee\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21615.7 to 7.0.0-alpha.1.21616.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21615.7 to 7.0.0-alpha.1.21616.1][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/fe12fe1...76dedba\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5847","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5847)"},{"Id":"1082189503","IsPullRequest":true,"CreatedAt":"2021-12-16T13:45:08","Actor":"dotnet-maestro[bot]","Number":"5846","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 840bf684-917a-4879-f62c-08d8e93a0c51\r\n- **Build**: 20211215.1\r\n- **Date Produced**: December 15, 2021 4:26:14 PM UTC\r\n- **Commit**: 943d03f62955c771825dfa1f1bdeb8f853a2d7dd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/cc0fa94...943d03f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:840bf684-917a-4879-f62c-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5846","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#5846)"},{"Id":"1081939987","IsPullRequest":false,"CreatedAt":"2021-12-16T09:07:08","Actor":"fo40225","Number":"5845","RawContent":null,"Title":"System.Windows.Markup.XamlParseException: 'Constructor on type 'System.Windows.Forms.TextBoxAutoCompleteSourceConverter' not found.'","State":"open","Body":"* .NET Core Version: 6.0.100 (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: 10.0.19042.1348 (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019). No\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/main/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n System.Windows.Markup.XamlParseException: 'Constructor on type 'System.Windows.Forms.TextBoxAutoCompleteSourceConverter' not found.'\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n```\r\nSystem.Windows.Markup.XamlParseException\r\n  HResult=0x80131501\r\n  Message=Constructor on type 'System.Windows.Forms.TextBoxAutoCompleteSourceConverter' not found.\r\n  Source=PresentationFramework\r\n  StackTrace: \r\n   於 System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri) 在 /_/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Markup/XamlReader.cs:行 527 中\r\n\r\n  此例外狀況原先在此呼叫堆疊擲回: \r\n    System.RuntimeType.CreateInstanceImpl(System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo) 位於 RuntimeType.CoreCLR.cs\r\n    System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[]) 位於 Activator.RuntimeType.cs\r\n    System.Xaml.Schema.SafeReflectionInvoker.CreateInstanceCritical(System.Type, object[]) 位於 SafeReflectionInvoker.cs\r\n    System.Xaml.Schema.XamlValueConverter<TConverterBase>.CreateInstance() 位於 XamlValueConverter.cs\r\n    System.Xaml.Schema.XamlValueConverter<TConverterBase>.ConverterInstance.get() 位於 XamlValueConverter.cs\r\n    MS.Internal.Xaml.Runtime.ClrObjectRuntime.GetConverterInstance<TConverterBase>(System.Xaml.Schema.XamlValueConverter<TConverterBase>) 位於 ClrObjectRuntime.cs\r\n    System.Xaml.XamlObjectWriter.Logic_CreatePropertyValueFromValue(MS.Internal.Xaml.Context.ObjectWriterContext) 位於 XamlObjectWriter.cs\r\n    System.Xaml.XamlObjectWriter.WriteEndMember() 位於 XamlObjectWriter.cs\r\n    System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader) 位於 XamlWriter.cs\r\n    System.Windows.Markup.WpfXamlLoader.TransformNodes(System.Xaml.XamlReader, System.Xaml.XamlObjectWriter, bool, bool, bool, System.Xaml.IXamlLineInfo, System.Xaml.IXamlLineInfoConsumer, MS.Internal.Xaml.Context.XamlContextStack<System.Windows.Markup.WpfXamlFrame>, System.Windows.Markup.IStyleConnector) 位於 WpfXamlLoader.cs\r\n    ...\r\n    [呼叫堆疊已截斷]\r\n\r\n內部例外狀況 1:\r\nMissingMethodException: Constructor on type 'System.Windows.Forms.TextBoxAutoCompleteSourceConverter' not found.\r\n```\r\n **Expected behavior:**\r\n No crash.\r\n **Minimal repro:**\r\n```xaml\r\n<Window x:Class=\"WpfApp1.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:WpfApp1\"\r\n        xmlns:wf=\"clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n    <Grid>\r\n        <WindowsFormsHost>\r\n            <wf:TextBox AutoCompleteSource=\"CustomSource\"/>\r\n        </WindowsFormsHost>\r\n    </Grid>\r\n</Window>\r\n\r\n```","Url":"https://github.com/dotnet/wpf/issues/5845","RelatedDescription":"Open issue \"System.Windows.Markup.XamlParseException: 'Constructor on type 'System.Windows.Forms.TextBoxAutoCompleteSourceConverter' not found.'\" (#5845)"},{"Id":"1081743157","IsPullRequest":true,"CreatedAt":"2021-12-16T05:08:25","Actor":"dotnet-maestro[bot]","Number":"5844","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20211215.7\r\n- **Date Produced**: December 16, 2021 3:49:58 AM UTC\r\n- **Commit**: fe12fe1b90a19dba5136505b91172af39d06b09f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 7.0.0-alpha.1.21615.4 to 7.0.0-alpha.1.21615.7][1]\r\n  - **Microsoft.Private.Winforms**: [from 7.0.0-alpha.1.21615.4 to 7.0.0-alpha.1.21615.7][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/ac18802...fe12fe1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5844","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#5844)"},{"Id":"1081707803","IsPullRequest":true,"CreatedAt":"2021-12-16T02:40:23","Actor":"SamBent","Number":"5843","RawContent":null,"Title":"Port \"remove ContextMenu owner\" fix from 4.8","State":"open","Body":"Addresses #5835\r\nThis is a port of a servicing fix in .NET 4.7-4.8.\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\nThere are two reasons the context menu does not display.  The first reason is that its owner gets removed from the tree after the right-button-up gesture but before the PopupControlService initiates the display logic.  The logic notices that the owner is not being displayed, and therefore doesn't display the context menu.  This is by design - you shouldn't display a context menu for an element that isn't itself visible.\r\n\r\nThe second reason is that the (shared) context menu is in a bad state, where it's marked IsOpen=true, but isn't actually being displayed.  The display logic doesn't do anything, since it thinks the menu is already open.  This is a bug, left over from the first case, which doesn't reset IsOpen to false when it aborts the display logic.   The net effect is that once a context menu doesn't open because of reason 1, it will never open again, even in cases where it should.\r\n\r\nThe fix is to reset the context menu's state when aborting the display logic.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nContextMenus stop working\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nNo\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nAd-hoc around customer scenario.\r\nStandard regression testing.\r\n\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow. Port of a .NETFx servicing fix released earlier this year.","Url":"https://github.com/dotnet/wpf/pull/5843","RelatedDescription":"Open PR \"Port \"remove ContextMenu owner\" fix from 4.8\" (#5843)"},{"Id":"1081705255","IsPullRequest":true,"CreatedAt":"2021-12-16T02:34:31","Actor":"SamBent","Number":"5842","RawContent":null,"Title":"Port negative-height VSP fix from 4.8","State":"open","Body":"Addresses #2854\r\nThis is a port of a servicing fix in .NET 4.7-4.8.\r\n\r\n## Description\r\n\r\nThe crash arises when adding an item to the items-source collection underlying the ItemsControl, when the VSP is in an odd state: viewport.Y > extent.Height and <another relationship between viewport, extent, and last-computed \"extended viewport\", whose exact details I haven't yet determined>.  The logic that determines whether such an addition requires a re-measurement predicts the height of the new extended viewport;  in the odd state this sets the height to (extent.Height - viewport.Y), a negative number that's not allowed.\r\n\r\nThe first condition cannot happen during Measure, or immediately after;   Measure starts by initializing viewport.Y to a value <= extent.Height.  But it can occur after collection changes, as these can change extent.Height.  Collection changes can also affect the quantities in the second condition.  The first kind of change puts the height-assignment at risk;  the second kind of change can allow the logic to reach the height-assignment.  It's a Goldilocks situation - if the changes are too big or too small the logic doesn't need the height-assignment, which happens only when the changes are \"just right\".  In fact, I've been unable to produce a fully-deterministic repro suitable for use in a test case;  the \"just-rightness\" depends on the exact scrolling and virtualization history in a way that I've only seen in large datasets after non-deterministic scrolling (e.g. dragging the thumb when the data is so large that a single pixel of thumb motion corresponds to more than a screenful of data motion:  extent.Height > viewport.Height^2 ).\r\n\r\nThe fix is to replace negative height by 0 in the height-assignment.  This obviously avoids the crash, but it's not so obvious whether doing so can cause other problems later on.  In the collection-change case, we only care whether the predicted extended viewport is taller than the last-computed one, we don't actually use the new height in any other way.  So it's OK to use 0 instead of a negative number - they both have the same effect.\r\n\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nCrash while adding/removing items from the underlying collection.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nNo.\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nAd-hoc around customer scenario.\r\nStandard regression testing.\r\n\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow. Port of a .NETFx servicing fix released earlier this year.","Url":"https://github.com/dotnet/wpf/pull/5842","RelatedDescription":"Open PR \"Port negative-height VSP fix from 4.8\" (#5842)"},{"Id":"1081702664","IsPullRequest":true,"CreatedAt":"2021-12-16T02:28:41","Actor":"SamBent","Number":"5841","RawContent":null,"Title":"Port HighDPI/margin fix from 4.8","State":"open","Body":"Addresses #4834\r\nThis is a port of a servicing fix in .NET 4.7-4.8.\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\nThis hang arises when UseLayoutRounding is set, and the container's top margin is not a multiple of the rounding quantum.  VSP uses two offsets from the viewport to the container, one that includes the margin and one that doesn't.  It was computing the second and subtracting the margin to obtain the first, but that can give the wrong answer in the situation above.  This can lead to infinite re-measures in anchored scrolls.\r\n\r\nFixed by computing the first offset directly from layout information.  The two offsets will differ by an amount that is close to the margin size, and rounded to a quantum, but there's no way to know which of the nearby candidates is the right one.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nHang while scrolling an ItemsControl.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nno\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nAd-hoc around customer scenario.\r\nStandard regression testing.\r\n\r\n\r\n## Risk\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\nLow. Port of a .NETFx servicing fix released earlier this year.\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/5841","RelatedDescription":"Open PR \"Port HighDPI/margin fix from 4.8\" (#5841)"},{"Id":"1081698166","IsPullRequest":true,"CreatedAt":"2021-12-16T02:19:38","Actor":"SamBent","Number":"5840","RawContent":null,"Title":"Port IME/databinding fix from 4.8.","State":"open","Body":"Addresses #5444\r\nThis is a port of a servicing fix in .NET 4.7-4.8.\r\n\r\n## Description\r\n\r\n<!-- Give a brief summary of the issue and how the pull request is fixing it. -->\r\nA binding on TextBox.Text defers two kinds of work when an IME composition is in progress on the TextBox:\r\n1. When the text changes (and UpdateTrigger=PropertyChanged), write a new value into the source property.\r\n2. After writing a value into the source property, read the property's new value (which might be different), apply the customary conversions, and write the result into the TextBox.\r\n\r\nThe bug occurs when the IME starts a new composition before the previous composition's type 2 work happens.  This yields a situation where two tasks are deferred:  the older composition's type 2 task and the newer composition's type 1 task.  The type 2 task happens first, overwriting the text change that the type 1 task is supposed to handle.  This confusion of state leads to exceptions (caught and hidden from the IME, but visible in the debugger), and unexpected content entered into the TextBox.\r\n\r\nFixed by cancelling any pending type 2 work when new type 1 work is needed.\r\n\r\n## Customer Impact\r\n\r\n<!-- What is the impact to customers of not taking this fix? -->\r\nInput with certain IMEs (e.g. MS Quick) is broken.\r\n\r\n## Regression\r\n\r\n<!-- Is this fixing a problem that was introduced in the most recent release, ie., fixing a regression? -->\r\nNo.\r\n\r\n## Testing\r\n\r\n<!-- What kind of testing has been done with the fix. -->\r\nAd-hoc around customer scenario.\r\nStandard regression testing.\r\n\r\n## Risk\r\nLow. Port of a .NETFx servicing fix released earlier this year.\r\n\r\n\r\n<!-- Please assess the risk of taking this fix. Provide details backing up your assessment. -->\r\n","Url":"https://github.com/dotnet/wpf/pull/5840","RelatedDescription":"Open PR \"Port IME/databinding fix from 4.8.\" (#5840)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-23T05:30:36.6597815Z","RunDurationInMilliseconds":488}