{"Data":{"GitHub":{"Issues":[{"Id":"1451577419","IsPullRequest":true,"CreatedAt":"2022-11-16T13:45:46","Actor":"dotnet-maestro[bot]","Number":"7293","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20221115.6\r\n- **Date Produced**: November 16, 2022 6:35:36 AM UTC\r\n- **Commit**: 727e0adf3b3c21deb3a9e3f56c8a1c6cf59e8a91\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-alpha.1.22564.12 to 8.0.0-alpha.1.22565.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-alpha.1.22564.12 to 8.0.0-alpha.1.22565.6][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/8e6fc44...727e0ad\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7293)","Url":"https://github.com/dotnet/wpf/pull/7293","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7293)"},{"Id":"1451409360","IsPullRequest":true,"CreatedAt":"2022-11-16T11:26:53","Actor":"rchauhan18","Number":"7292","RawContent":null,"Title":"Fix build Release/3.0","State":"open","Body":"Fix build and updated pool images Release/3.0\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7292)","Url":"https://github.com/dotnet/wpf/pull/7292","RelatedDescription":"Open PR \"Fix build Release/3.0\" (#7292)"},{"Id":"1444976982","IsPullRequest":true,"CreatedAt":"2022-11-16T09:46:56","Actor":"rchauhan18","Number":"7277","RawContent":null,"Title":"Update Pool images release/3.0","State":"closed","Body":"Update Pool images release/3.0\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7277)","Url":"https://github.com/dotnet/wpf/pull/7277","RelatedDescription":"Closed or merged PR \"Update Pool images release/3.0\" (#7277)"},{"Id":"1449761935","IsPullRequest":true,"CreatedAt":"2022-11-15T13:46:00","Actor":"dotnet-maestro[bot]","Number":"7290","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20221114.12\r\n- **Date Produced**: November 15, 2022 4:11:29 AM UTC\r\n- **Commit**: 8e6fc4437db278201e5b610351389010893afdf9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-alpha.1.22563.6 to 8.0.0-alpha.1.22564.12][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-alpha.1.22563.6 to 8.0.0-alpha.1.22564.12][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/7f0a54d...8e6fc44\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7290)","Url":"https://github.com/dotnet/wpf/pull/7290","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7290)"},{"Id":"1449916968","IsPullRequest":false,"CreatedAt":"2022-11-15T12:07:42","Actor":"danielkaczmarek","Number":"7291","RawContent":null,"Title":"In the .net7 CollectionViewSource has a different behaviour than in the .net6","State":"open","Body":"Basically, in .net7 when you run the attached project and press the button, it will display a list of items. If you run the unit test it will throw an exception on this line \r\n\r\n` EntityCollectionView = new CollectionViewSource { Source = Entities }.View;`\r\n\r\nBecause the View is null.\r\n\r\nIf you change the TargetFramework to net6 the test passes because View contains an instance. \r\n\r\nIs this a bug?\r\n\r\nRegards\r\nDaniel Kaczmarek\r\n\r\n[WpfApp2.zip](https://github.com/dotnet/core/files/10012439/WpfApp2.zip)\r\n","Url":"https://github.com/dotnet/wpf/issues/7291","RelatedDescription":"Open issue \"In the .net7 CollectionViewSource has a different behaviour than in the .net6\" (#7291)"},{"Id":"1449091356","IsPullRequest":false,"CreatedAt":"2022-11-15T03:15:31","Actor":"kitgrose","Number":"7289","RawContent":null,"Title":"Using embedded font resources leaks memory","State":"open","Body":"* .NET Core Version: 7.0\r\n* Windows version: Windows 10 version 21H2 (OS Build 19044.2251)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\n **Problem description:**\r\nWhen a custom font is loaded as a Resource and used in the application, the application slowly leaks memory via an `UnmanagedMemoryStream` object that grows apparently without bounds, regardless of GC collection.\r\n\r\nThe issue does not appear to affect fonts with Build Action set to Content (although publishing fonts this way may be against their respective EULAs).\r\n\r\n **Actual behavior:**\r\nWhen a text block is rapidly changed between a series of embedded fonts, Visual Studio's Diagnostic Tools shows a `UnmanagedMemoryStream` object growing by approximately 35â€“40 KB per second.\r\n \r\n **Expected behavior:**\r\nOnce all the custom fonts are loaded, changing the `FontFamily` property of a `TextBlock` shouldn't increase memory usage at all.\r\n \r\n **Minimal repro:**\r\n1. Create a new WPF project (the issue can be reproduced in .NET 7.0 and .NET Framework v4.8 at least, but [I can find references to it online from earlier][1] referencing now-unavailable MS Connect posts).\r\n2. Add some typefaces to the project (I've got a combination of OTF and TTF fonts in my test app), and mark their Build Action as `Resource`.\r\n3. Add those fonts to your application resources in `App.xaml` (exact code will differ based on the fonts you choose):\r\n    ```xaml\r\n    <Application.Resources>\r\n      <FontFamily x:Key=\"Flama\">./Fonts/#Flama</FontFamily>\r\n      <FontFamily x:Key=\"FlamaMedium\">./Fonts/#Flama Medium</FontFamily>\r\n      <FontFamily x:Key=\"IntroCaps\">./Fonts/#Intro Caps</FontFamily>\r\n      <FontFamily x:Key=\"IntroBlackInline\">./Fonts/#Intro Inline Caps</FontFamily>\r\n      <FontFamily x:Key=\"Pacifico\">./Fonts/#Pacifico</FontFamily>\r\n    </Application.Resources>\r\n    ```\r\n4. In `MainWindow.xaml`, create a `TextBlock`:\r\n    ```xaml\r\n    <TextBlock x:Name=\"TestBlock\" FontSize=\"48\">Test block</TextBlock>\r\n    ```\r\n5. Add a new `Loaded` event handler for `MainWindow` that cycles through your embedded fonts to use as the text block's font family as fast as possible:\r\n    ```csharp\r\n    private void MainWindow_Loaded(object sender, RoutedEventArgs e)\r\n    {\r\n        var resourceEnumerator = Application.Current.Resources.GetEnumerator();\r\n        var fontChanger = new DispatcherTimer();\r\n        fontChanger.Tick += (s, e) =>\r\n        {\r\n            if (!resourceEnumerator.MoveNext())\r\n            {\r\n                resourceEnumerator.Reset();\r\n                resourceEnumerator.MoveNext();\r\n            }\r\n\r\n            if (resourceEnumerator.Value is FontFamily fontFamily)\r\n            {\r\n                TestBlock.FontFamily = fontFamily;\r\n            }\r\n        };\r\n        fontChanger.Start();\r\n    }\r\n    ```\r\n6. Run the app and observe the memory usage steadily increasing over time. Diagnostic tools will show the largest culprit for the growth being the `UnmanagedMemoryStream`:\r\n    <img width=\"1132\" alt=\"wpf-font-memory-leak\" src=\"https://user-images.githubusercontent.com/165977/201817300-5c033e99-9619-460f-b6ac-11f61c6af3c9.png\">\r\n7. Change the font resources to have a Build Action of `Content`, and set the Copy to Output Directory property to `Copy if newer`, and re-run the test.\r\n8. Observe that now the memory usage does not appear to grow over time.\r\n\r\n  [1]: https://stackoverflow.com/a/31452979/181495","Url":"https://github.com/dotnet/wpf/issues/7289","RelatedDescription":"Open issue \"Using embedded font resources leaks memory\" (#7289)"},{"Id":"1448921444","IsPullRequest":false,"CreatedAt":"2022-11-14T23:27:26","Actor":"RajeshAKumar","Number":"7288","RawContent":null,"Title":"Wpf DataGrid in .NET7 takes away F3 and automatically sorts. - Breaking change.","State":"open","Body":"Our application uses Wpf DataGrid and was working fine till .NET 6.0\r\nWhen upgraded to .NET 7, press F3 the application expectation is to take to Main window's Search box, but the grid takes over and does the sort of a column where F3 was pressed.\r\n\r\nThis breaks the functionality.\r\n\r\nIs there a way to disable this?","Url":"https://github.com/dotnet/wpf/issues/7288","RelatedDescription":"Open issue \"Wpf DataGrid in .NET7 takes away F3 and automatically sorts. - Breaking change.\" (#7288)"},{"Id":"1448762076","IsPullRequest":true,"CreatedAt":"2022-11-14T21:44:04","Actor":"dotnet-maestro[bot]","Number":"7287","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20221111.1\r\n- **Date Produced**: November 11, 2022 6:08:35 PM UTC\r\n- **Commit**: 0967701e5527a1be21d9473821077c3f4be7f9dc\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a0fd54b...0967701\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7287)","Url":"https://github.com/dotnet/wpf/pull/7287","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#7287)"},{"Id":"1448559869","IsPullRequest":true,"CreatedAt":"2022-11-14T21:05:38","Actor":"dotnet-maestro[bot]","Number":"7285","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 7.0.0 to 7.0.0 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: from 7.0.0-rtm.22518.5 to 7.0.0-rtm.22513.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:e96ced2d-df2c-460a-8163-08da7ef6284d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: e96ced2d-df2c-460a-8163-08da7ef6284d\r\n- **Build**: 20221111.2\r\n- **Date Produced**: November 11, 2022 6:35:12 PM UTC\r\n- **Commit**: f36ea231c234560514ede4c2747897a737ced28f\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **System.CodeDom**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.DirectoryServices**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Drawing.Common**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Security.Permissions**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Windows.Extensions**: [from 7.0.0 to 7.0.0][4]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.IO.Packaging**: [from 7.0.0 to 7.0.0][4]\r\n  - **System.Resources.Extensions**: [from 7.0.0 to 7.0.0][4]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0 to 7.0.0][4]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0 to 7.0.0][4]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-rtm.22518.5 to 7.0.0-rtm.22513.5][4]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/3f3c360...f36ea23\r\n[4]: https://github.com/dotnet/runtime/compare/d099f07...075e74e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:e96ced2d-df2c-460a-8163-08da7ef6284d)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7285)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/7285","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/arcade\" (#7285)"},{"Id":"1448567196","IsPullRequest":true,"CreatedAt":"2022-11-14T19:15:05","Actor":"dotnet-maestro[bot]","Number":"7286","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20221110.1\r\n- **Date Produced**: November 11, 2022 4:38:15 PM UTC\r\n- **Commit**: a0fd54b5c2dc3e23aa8466bd4638462df4303633\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a7773a9...a0fd54b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7286)","Url":"https://github.com/dotnet/wpf/pull/7286","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#7286)"},{"Id":"1448394067","IsPullRequest":false,"CreatedAt":"2022-11-14T16:43:09","Actor":"czdietrich","Number":"7284","RawContent":null,"Title":"File conflict with System.Diagnostics.EventLog.Messages.dll","State":"open","Body":"* .NET Version: 6.0.11\r\n \r\n **Problem description:**\r\nSelf-contained WPF apps seem to include a wrong version of `System.Diagnostics.EventLog.Messages.dll` in the output directory.\r\nStarting with .NET 6.0.9 the runtime for desktop applications now contains the `System.Diagnostics.EventLog.Messages.dll`.\r\nThat DLL is binary different to the one used by the ASP.NET Core runtime.\r\n\r\n \r\n **Actual behavior:**\r\nWhen a project uses both, the desktop runtime and the ASP.NET Core runtime, it randomly picks one of those DLLs.\r\n \r\n **Expected behavior:**\r\nThe desktop runtime and the ASP.NET Core runtime should contain binary identical native DLLs to prevent any file conflicts. \r\n\r\n **Minimal repro:**\r\n1. Install the latest .NET 6 SDK (currently 6.0.403)\r\n2. Create a new WPF project (`dotnet new wpf`)\r\n3. Add a reference to the ASP.NET Core framework to the .csproj file (`<ItemGroup><FrameworkReference Include=\"Microsoft.AspNetCore.App\" /></ItemGroup>`)\r\n4. Publish the app (`dotnet publish --self-contained true -r win-x64`)\r\n5. Compare the used runtime assets. They are different: \r\n`~\\.nuget\\packages\\microsoft.aspnetcore.app.runtime.win-x64\\6.0.11\\runtimes\\win-x64\\lib\\net6.0\\System.Diagnostics.EventLog.Messages.dll`\r\n`~\\.nuget\\packages\\microsoft.windowsdesktop.app.runtime.win-x64\\6.0.11\\runtimes\\win-x64\\lib\\net6.0\\System.Diagnostics.EventLog.Messages.dll`\r\n\r\nComparing both files using Beyond Compare hints that the DLL from the desktop runtime seems to be x86 even though win-x64 is used:\r\n![image](https://user-images.githubusercontent.com/43068830/201714969-313414ca-f724-4e2e-85d7-e4968c5a908f.png)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/7284","RelatedDescription":"Open issue \"File conflict with System.Diagnostics.EventLog.Messages.dll\" (#7284)"},{"Id":"1448210153","IsPullRequest":false,"CreatedAt":"2022-11-14T14:52:11","Actor":"vsfeedback","Number":"7283","RawContent":null,"Title":"The component does not have a resource identified by the URI","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/The-component-does-not-have-a-resource-i/10192205)._\n\n---\n[severity:It's more difficult to complete my work]\r\nEnvironment: Visual Studio 2022, Version 17.3.6\n.net 6.0 Long Term Support\n\nI was asked to resubmit this as a standalone issue as the posting I added to was using a different version of VS.\n\n[TestLib.zip](https://aka.ms/dc/file?name=B515a2f862e6546dd9d830e4cb86a475c638034358688157708_TestLib.zip&tid=515a2f862e6546dd9d830e4cb86a475c638034358688157708)\n\nWhen creating a subclass of a UserControl created in a separate WPF Library, the error \"The component '_name of control_' does not have a resource identified by the URI '/_libname_;component/_controlname.xaml_'\n\nThe error is reported by VS, but VS will allow you to build; use of the subclass in the UI will cause a runtime error.\n\nSteps to repeat:\n\nCreate a simple WPF library (\"TestLib\") - Windows Desktop, C#, WPF control library, .net 6.0\n- Create a UserControl (\"AControl\"). You don't need to bother adding anything to it.\n- Build.\n\n\nCreate a test application (\"TestApp\") - Windows Desktop, C#, WPF Application, .net 6.0\n- Add \"TestLib\" as a project reference.\n- Create a new class (\"ASubclassOfAControl\"):\n\n```\nusing System.Windows.Controls;\nusing TestLib;\n\nnamespace TestApp\n{\n    public class ASubclassOfAControl : AControl\n    {\n        public ASubclassOfAControl() : base() { }\n    }\n}\n```\n- Build the application to make \"ASubclasssOfAControl\" available in the XAML ToolBox for MainWindow.\n- Add \"ASublcassOfAControl\" to the MainWindow XAML:\n\n```\n\n    \n    \n\n```\n\nVS reports the aforementioned error.\n\nYou can still compile to an executable, but it will throw a runtime exception with the same error.\n\nThe important part here is I need to subclass the library control - I cannot simply add a reference to it as a member of another class; I cannot use it directly - I need to add functionality to it while still being considered a the base control (in the case of the example, there are other functions that require \"AControl,\" so \"ASubclassOfAControl\" needs to be considered a type of AControl - polymorphism is an important core concept of OOP).\n\nThere is a work-around that requires replacing \"InitializeComponent\" in the library, but it shouldn't happen to begin with, and it's only useful if I actually have control over the source code of the library, so it's not a very good solution to a problem that shouldn't exist to begin with.\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/7/2022, 06:57 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/7283","RelatedDescription":"Open issue \"The component does not have a resource identified by the URI\" (#7283)"},{"Id":"1448151292","IsPullRequest":false,"CreatedAt":"2022-11-14T14:15:50","Actor":"Abrynos","Number":"7282","RawContent":null,"Title":"Combination of `PublishSingleFile` and `PublishReadyToRun` prevents app from starting","State":"open","Body":"## Problem description\r\n\r\nSince changing the `TargetFramework` in our .csproj file from `net6.0-windows` to `net7.0-windows` our app crashes upon starting with a `System.TypeInitializationException` thrown in the initializer for `System.Windows.Media.FontFamily`.\r\n\r\nRemoving either the `PublishSingleFile` or the `PublishReadyToRun` tag from the projects .csproj file (or switching back to `net6.0-windows`) fixes the problem.\r\n\r\n## Stack-trace\r\n\r\n```\r\nSystem.TypeInitializationException: The type initializer for 'System.Windows.Media.FontFamily' threw an exception.\r\n ---> System.TypeInitializationException: The type initializer for 'MS.Internal.FontCache.DWriteFactory' threw an exception.\r\n ---> System.InvalidCastException: Specified cast is not valid.\r\n   at MS.Internal.Text.TextInterface.Native.Util.ConvertHresultToException(Int32 hr)\r\n   at MS.Internal.Text.TextInterface.Factory.Initialize(FactoryType factoryType)\r\n   at MS.Internal.Text.TextInterface.Factory..ctor(FactoryType factoryType, IFontSourceCollectionFactory fontSourceCollectionFactory, IFontSourceFactory fontSourceFactory)\r\n   at MS.Internal.FontCache.DWriteFactory..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.FontCache.DWriteFactory.get_SystemFontCollection()\r\n   at System.Windows.Media.FontFamily..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.Text.DynamicPropertyReader.GetTypeface(DependencyObject element)\r\n   at MS.Internal.Text.TextProperties.InitCommon(DependencyObject target)\r\n   at MS.Internal.Text.TextProperties..ctor(FrameworkElement target, Boolean isTypographyDefaultValue)\r\n   at System.Windows.Controls.TextBoxView.GetLineProperties()\r\n   at System.Windows.Controls.TextBoxView.TextCache..ctor(TextBoxView owner)\r\n   at System.Windows.Controls.TextBoxView.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ScrollContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.ScrollViewer.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Control.MeasureOverride(Size constraint)\r\n   at System.Windows.Controls.TextBox.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Decorator.MeasureOverride(Size constraint)\r\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Window.MeasureOverrideHelper(Size constraint)\r\n   at System.Windows.Window.MeasureOverride(Size availableSize)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at MyProject.App.Main()\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe app starts the same way it did when using `net6.0-windows` as `TargetFramework`.\r\n\r\n## net48\r\n\r\nNo idea whether this also reproduces in .NET Framework 4.8. We're using `net7.0` exclusively.\r\n\r\n## Relation to Visual Studio (or other tooling)\r\n\r\nNone. We did our testing using the `dotnet publish` command.\r\n\r\n\r\n## dotnet info:\r\n```\r\n.NET SDK:\r\n Version:   7.0.100\r\n Commit:    e12b7af219\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19044\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.100\\\r\n \r\n...\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n```\r\n\r\n<details>\r\n  <summary>Minimal reproduction</summary>\r\n  \r\nThere are no `Directory.Build.props` or `Directory.Packages.props` files present.\r\n\r\nExecuting the project results in a file named `ex.txt` with the stack-trace being left in the execution directory.\r\n\r\n  Project.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0-windows</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <UseWPF>true</UseWPF>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n    <PublishReadyToRun>true</PublishReadyToRun>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nApp.xaml\r\n\r\n```xml\r\n<Application x:Class=\"MyProject.App\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             StartupUri=\"TestView.xaml\"/>\r\n```\r\n\r\nApp.xaml.cs\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing System.Windows;\r\n\r\nnamespace MyProject;\r\n\r\npublic sealed partial class App\r\n{\r\n    protected override void OnStartup(StartupEventArgs e)\r\n    {\r\n        AppDomain.CurrentDomain.UnhandledException += OnUnhandledException;\r\n\r\n        base.OnStartup(e);\r\n    }\r\n\r\n    private void OnUnhandledException(object sender, UnhandledExceptionEventArgs e)\r\n    {\r\n        ArgumentNullException.ThrowIfNull(e);\r\n        ArgumentNullException.ThrowIfNull(e.ExceptionObject);\r\n\r\n        Exception exception = (Exception)e.ExceptionObject;\r\n\r\n        File.WriteAllText(\"ex.txt\", exception.ToString());\r\n\r\n        Environment.Exit(byte.MaxValue);\r\n    }\r\n}\r\n```\r\n\r\nTestView.xaml\r\n\r\n```xml\r\n<Window x:Class=\"MyProject.TestView\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        mc:Ignorable=\"d\">\r\n    <Grid>\r\n        <TextBox Text=\"Test\"/>\r\n    </Grid>\r\n</Window>\r\n```\r\n\r\nTestView.xaml.cs\r\n\r\n```csharp\r\nnamespace MyProject;\r\n\r\npublic partial class TestView\r\n{\r\n    public TestView() => InitializeComponent();\r\n}\r\n```\r\n</details>\r\n\r\nspecial thanks to @beagle1986 for lending me his ear.","Url":"https://github.com/dotnet/wpf/issues/7282","RelatedDescription":"Open issue \"Combination of `PublishSingleFile` and `PublishReadyToRun` prevents app from starting\" (#7282)"},{"Id":"1448039068","IsPullRequest":true,"CreatedAt":"2022-11-14T13:45:09","Actor":"dotnet-maestro[bot]","Number":"7281","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20221113.6\r\n- **Date Produced**: November 14, 2022 5:11:22 AM UTC\r\n- **Commit**: 7f0a54d5adb9e8d84d2c6f00a1bb521f4e53be95\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-alpha.1.22561.6 to 8.0.0-alpha.1.22563.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-alpha.1.22561.6 to 8.0.0-alpha.1.22563.6][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b2f6e00...7f0a54d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7281)","Url":"https://github.com/dotnet/wpf/pull/7281","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7281)"},{"Id":"1440722900","IsPullRequest":true,"CreatedAt":"2022-11-14T04:34:01","Actor":"vseanreesermsft","Number":"7264","RawContent":null,"Title":"Merging internal commits for release/3.1","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7264)","Url":"https://github.com/dotnet/wpf/pull/7264","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/3.1\" (#7264)"},{"Id":"1446446162","IsPullRequest":true,"CreatedAt":"2022-11-12T13:44:59","Actor":"dotnet-maestro[bot]","Number":"7280","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20221111.6\r\n- **Date Produced**: November 11, 2022 11:23:00 PM UTC\r\n- **Commit**: b2f6e00ec51c7e1e4af1fd08125327dfc7bdbe18\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-alpha.1.22561.1 to 8.0.0-alpha.1.22561.6][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-alpha.1.22561.1 to 8.0.0-alpha.1.22561.6][1]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/b545ab8...b2f6e00\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7280)","Url":"https://github.com/dotnet/wpf/pull/7280","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7280)"},{"Id":"1446106408","IsPullRequest":true,"CreatedAt":"2022-11-12T00:14:56","Actor":"dotnet-maestro[bot]","Number":"7279","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20221108.7\r\n- **Date Produced**: November 9, 2022 12:33:13 AM UTC\r\n- **Commit**: a7773a9828c67a9b1fba3d2daee061ec90db3505\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.22558.2 to 6.0.0-beta.22558.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22558.2 to 6.0.0-beta.22558.7][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.22558.2 to 6.0.0-beta.22558.7][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.22558.2 to 6.0.0-beta.22558.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22558.2 to 6.0.0-beta.22558.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/841e1fe...a7773a9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7279)","Url":"https://github.com/dotnet/wpf/pull/7279","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#7279)"},{"Id":"1445453707","IsPullRequest":true,"CreatedAt":"2022-11-11T13:40:41","Actor":"dotnet-maestro[bot]","Number":"7278","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20221111.1\r\n- **Date Produced**: November 11, 2022 11:00:40 AM UTC\r\n- **Commit**: b545ab83528a541fd9a2bf501c9dd6a533582277\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-alpha.1.22559.13 to 8.0.0-alpha.1.22561.1][1]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-alpha.1.22559.13 to 8.0.0-alpha.1.22561.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22559.1 to 8.0.0-alpha.1.22559.2][2]\r\n\r\n[1]: https://github.com/dotnet/winforms/compare/25a3497...b545ab8\r\n[2]: https://github.com/dotnet/runtime/compare/1366574...dd7fdb7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7278)","Url":"https://github.com/dotnet/wpf/pull/7278","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7278)"},{"Id":"1440182494","IsPullRequest":true,"CreatedAt":"2022-11-11T06:24:41","Actor":"dotnet-maestro[bot]","Number":"7263","RawContent":null,"Title":"[main] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **System.CodeDom**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Configuration.ConfigurationManager**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Diagnostics.EventLog**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.DirectoryServices**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Drawing.Common**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Reflection.MetadataLoadContext**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Cryptography.Xml**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Security.Permissions**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Windows.Extensions**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.Platforms**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.IO.Packaging**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **System.Resources.Extensions**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Ref**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: from 8.0.0-alpha.1.22555.3 to 8.0.0-alpha.1.22559.1 (parent: Microsoft.Private.Winforms)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: dd483b3f-65b0-44ab-f62d-08d8e93a0c51\r\n- **Build**: 20221109.13\r\n- **Date Produced**: November 10, 2022 6:20:34 AM UTC\r\n- **Commit**: 25a349781e4af9e5fba3a6ee877b53bdbf894cfd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Dotnet.WinForms.ProjectTemplates**: [from 8.0.0-alpha.1.22558.2 to 8.0.0-alpha.1.22559.13][4]\r\n  - **Microsoft.Private.Winforms**: [from 8.0.0-alpha.1.22558.2 to 8.0.0-alpha.1.22559.13][4]\r\n\r\n[4]: https://github.com/dotnet/winforms/compare/3feb7e8...25a3497\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:dd483b3f-65b0-44ab-f62d-08d8e93a0c51)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/7263","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/winforms\" (#7263)"},{"Id":"1444413506","IsPullRequest":false,"CreatedAt":"2022-11-10T18:59:05","Actor":"vsfeedback","Number":"7276","RawContent":null,"Title":"wpf Listview control ScrollIntoView() bug","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/wpf-Listview-control-ScrollIntoView-bu/10189680)._\n\n---\nContinuous addition of the same value to the listview causes scrolling to not last\n\ncode)\nWPF ListView Name: listBox_log\n....\n....\nvar index = listBox_log.SelectedIndex;\nvar item = listBox_log.Items.GetItemAt(index);\nlistBox_log.ScrollIntoView(item);\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/3/2022, 06:55 PM: \n\n(private comment, text removed)\n#### Dolly Wang [MSFT] on 11/7/2022, 02:42 AM: \n\n(private comment, text removed)\n#### devkang on 11/9/2022, 05:57 PM: \n\n(private comment, text removed)\n#### devkang on 11/9/2022, 05:58 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 11/9/2022, 07:02 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/7276","RelatedDescription":"Open issue \"wpf Listview control ScrollIntoView() bug\" (#7276)"},{"Id":"1442590262","IsPullRequest":false,"CreatedAt":"2022-11-09T18:54:29","Actor":"weiyoucheng","Number":"7273","RawContent":null,"Title":"I hope that the DataGrid in WPF can add the whole column selection function. It is better to also implement the pivot table function","State":"open","Body":"When to add the whole column selection function to DataGrid. Users often need to copy the contents of an entire column, and it would be great if you could add the whole column selection function.It would be perfect if you could also implement functions similar to Excel pivot tables. At present, wpf has not encountered that it is too difficult to define a slightly more complex report of an open source pivot table component. If it is not feasible, you can also add a column grouping function","Url":"https://github.com/dotnet/wpf/issues/7273","RelatedDescription":"Open issue \"I hope that the DataGrid in WPF can add the whole column selection function. It is better to also implement the pivot table function\" (#7273)"},{"Id":"1442553995","IsPullRequest":true,"CreatedAt":"2022-11-09T18:24:09","Actor":"dotnet-maestro[bot]","Number":"7272","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: f6560d32-4c6b-4ed3-5c71-08d72a4d3f20\r\n- **Build**: 20221108.6\r\n- **Date Produced**: November 8, 2022 11:26:32 PM UTC\r\n- **Commit**: 7120a7d1b74dcbce97e34dded2c9e9011639b175\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 1.0.0-beta.22512.2 to 1.0.0-beta.22558.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22512.2 to 1.0.0-beta.22558.6][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 1.0.0-beta.22512.2 to 1.0.0-beta.22558.6][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 1.0.0-beta.22512.2 to 1.0.0-beta.22558.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.22512.2 to 2.0.0-beta.22558.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/869528d...7120a7d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 3.1.425\r\n\r\n[marker]: <> (End:f6560d32-4c6b-4ed3-5c71-08d72a4d3f20)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7272)","Url":"https://github.com/dotnet/wpf/pull/7272","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#7272)"},{"Id":"1440772617","IsPullRequest":true,"CreatedAt":"2022-11-09T18:03:14","Actor":"vseanreesermsft","Number":"7266","RawContent":null,"Title":"Merging internal commits for release/7.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7266)","Url":"https://github.com/dotnet/wpf/pull/7266","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/7.0\" (#7266)"},{"Id":"1440728617","IsPullRequest":true,"CreatedAt":"2022-11-09T17:23:47","Actor":"vseanreesermsft","Number":"7265","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7265)","Url":"https://github.com/dotnet/wpf/pull/7265","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#7265)"},{"Id":"1442361412","IsPullRequest":true,"CreatedAt":"2022-11-09T16:32:17","Actor":"dotnet-maestro[bot]","Number":"7271","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e96ced2d-df2c-460a-8163-08da7ef6284d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: e96ced2d-df2c-460a-8163-08da7ef6284d\r\n- **Build**: 20221108.4\r\n- **Date Produced**: November 8, 2022 7:03:36 PM UTC\r\n- **Commit**: 3f3c360819c5c092d0e4505a67dfe59a33fba557\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 7.0.0-beta.22513.4 to 7.0.0-beta.22558.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22513.4 to 7.0.0-beta.22558.4][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 7.0.0-beta.22513.4 to 7.0.0-beta.22558.4][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 7.0.0-beta.22513.4 to 7.0.0-beta.22558.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22513.4 to 7.0.0-beta.22558.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/02e2831...3f3c360\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 7.0.100\r\n  - Updates tools.dotnet to 7.0.100\r\n\r\n[marker]: <> (End:e96ced2d-df2c-460a-8163-08da7ef6284d)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7271)","Url":"https://github.com/dotnet/wpf/pull/7271","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/arcade\" (#7271)"},{"Id":"1441779271","IsPullRequest":true,"CreatedAt":"2022-11-09T10:34:44","Actor":"rchauhan18","Number":"7270","RawContent":null,"Title":"Update Winforms version release/7.0","State":"closed","Body":"Update Winforms version release/7.0\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7270)","Url":"https://github.com/dotnet/wpf/pull/7270","RelatedDescription":"Closed or merged PR \"Update Winforms version release/7.0\" (#7270)"},{"Id":"1441742741","IsPullRequest":true,"CreatedAt":"2022-11-09T10:34:06","Actor":"rchauhan18","Number":"7269","RawContent":null,"Title":"Update Microsoft.Private.Winforms version","State":"closed","Body":"Update Microsoft.Private.Winforms version\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7269)","Url":"https://github.com/dotnet/wpf/pull/7269","RelatedDescription":"Closed or merged PR \"Update Microsoft.Private.Winforms version\" (#7269)"},{"Id":"1441152761","IsPullRequest":false,"CreatedAt":"2022-11-09T00:51:38","Actor":"lindexi","Number":"7268","RawContent":null,"Title":"WPF known issues: Separator does not apply the implicit style in Menu","State":"open","Body":"* .NET Core Version: All\r\n* Windows version: All\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/main/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nI'm not sure if this issues is designed this way. When the Separator in the Menu, such as ContextMenu or Menu, the Separator will not apply the implicit style. Just as the code:\r\n\r\n```xml\r\n            <ContextMenu>\r\n                <ContextMenu.Resources>\r\n                    <Style TargetType=\"Separator\">\r\n                        <Setter Property=\"Margin\" Value=\"10,10,10,10\"></Setter>\r\n                    </Style>\r\n                </ContextMenu.Resources>\r\n                <Separator></Separator>\r\n            </ContextMenu>\r\n```\r\n\r\nRun this code, and you can find the Separator do not use the style which margin do not be changed.\r\n\r\nBut when we set the key to the style resource and make the `Separator` reference this style by `StaticResource`, the `Separator` can apply the style and we can find the margin of `Separator` be changed.\r\n\r\n```xml\r\n            <ContextMenu>\r\n                <ContextMenu.Resources>\r\n                    <Style x:Key=\"SeparatorStyle\" TargetType=\"Separator\">\r\n                        <Setter Property=\"Margin\" Value=\"10,10,10,10\"></Setter>\r\n                    </Style>\r\n                </ContextMenu.Resources>\r\n                <Separator Style=\"{StaticResource SeparatorStyle}\"></Separator>\r\n            </ContextMenu>\r\n```\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nAs the  description says, the Separator does not apply the implicit style in Menu.\r\n\r\n **Expected behavior:**\r\n\r\nThe Separator can work as the other control.\r\n \r\n **Minimal repro:**\r\n\r\nMy demo code: https://github.com/lindexi/lindexi_gd/tree/b820847a1af20370de28a1e73e32df9561a98ecc/HayhachujedaKikunayreefee\r\n\r\n-----\r\n\r\n## Why\r\n\r\nBecause the WPF specially sets the Separator style in \r\n\r\nhttps://github.com/dotnet/wpf/blob/1aab9e3f42dbf550797bff97a32f2dbfb61a3198/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Controls/MenuItem.cs#L1344-L1353\r\n\r\nBut I can't understand why this code is doing this. Could any one tell me?","Url":"https://github.com/dotnet/wpf/issues/7268","RelatedDescription":"Open issue \"WPF known issues: Separator does not apply the implicit style in Menu\" (#7268)"},{"Id":"1441056816","IsPullRequest":true,"CreatedAt":"2022-11-08T23:41:27","Actor":"dotnet-maestro[bot]","Number":"7267","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:64ecc23e-064a-456b-da03-08d961c27f17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 64ecc23e-064a-456b-da03-08d961c27f17\r\n- **Build**: 20221108.2\r\n- **Date Produced**: November 8, 2022 6:49:00 PM UTC\r\n- **Commit**: 841e1fe0d2498a7ac6445e458ae521511ec226ca\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: [from 6.0.0-beta.22512.3 to 6.0.0-beta.22558.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22512.3 to 6.0.0-beta.22558.2][1]\r\n  - **Microsoft.DotNet.CodeAnalysis**: [from 6.0.0-beta.22512.3 to 6.0.0-beta.22558.2][1]\r\n  - **Microsoft.DotNet.GenAPI**: [from 6.0.0-beta.22512.3 to 6.0.0-beta.22558.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22512.3 to 6.0.0-beta.22558.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/bb1e721...841e1fe\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.111\r\n  - Updates tools.dotnet to 6.0.111\r\n\r\n[marker]: <> (End:64ecc23e-064a-456b-da03-08d961c27f17)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/wpf/pull/7267)","Url":"https://github.com/dotnet/wpf/pull/7267","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#7267)"},{"Id":"1440070388","IsPullRequest":false,"CreatedAt":"2022-11-08T12:19:50","Actor":"somapatrik","Number":"7262","RawContent":null,"Title":"Grid columns are not created automatically","State":"closed","Body":"* .NET Core Version: 6\r\n* Windows version: 10 21H2\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\n If you do not define column definitions inside a grid and only use it, it will not create columns automatically. \r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n Used columns (if there is no \"Columndefiniton\") are stacked on each other.\r\n\r\n **Expected behavior:**\r\n Used columns should be created automatically using width=\"*\"\r\n\r\n **Minimal repro:**\r\n    \r\n    <Grid>\r\n        <Label Grid.Column=\"1\" \r\n                   Content=\"PositionName\"/>\r\n\r\n        <Label Grid.Column=\"2\"\r\n                   Content=\"Time\"/>\r\n     </Grid>\r\n","Url":"https://github.com/dotnet/wpf/issues/7262","RelatedDescription":"Closed issue \"Grid columns are not created automatically\" (#7262)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-17T03:32:06.5313481Z","RunDurationInMilliseconds":500}