{"Data":{"Bulma-Issues":{"Issues":[{"Id":"3436538354","IsPullRequest":true,"CreatedAt":"2025-09-20T03:50:47","Actor":"allxsmith","Number":"4015","RawContent":null,"Title":"docs: Add Alex Smith to backers list","State":"open","Body":"This is a **documentation improvement**.\n\n### Proposed solution\n\nThis PR adds Alex Smith to the BACKERS.md file as a Generous backer ($10+ tier). Alex is currently contributing $10/month through GitHub Sponsors and is a huge fan of Jeremy's work on Bulma.\n\nAlex is also the author of the new bestax-bulma React package (https://bestax.io), which provides a complete TypeScript implementation of Bulma components for React.\n\nAdditionally, I wanted to ask: How can sponsors get added to the backers.json file that displays on https://bulma.io/backers/? It would be great to understand the process for keeping the website's backers page in sync with GitHub Sponsors.\n\n### Tradeoffs\n\nNo drawbacks - this is simply updating the backers documentation to reflect current GitHub Sponsors.\n\n### Testing Done\n\nVerified the markdown formatting is correct and consistent with existing entries in BACKERS.md.\n\n### Changelog updated?\n\nNo. Documentation-only change.\n\nKeep up the great work @jgthms!","Url":"https://github.com/jgthms/bulma/pull/4015","RelatedDescription":"Open PR \"docs: Add Alex Smith to backers list\" (#4015)"},{"Id":"3436490702","IsPullRequest":true,"CreatedAt":"2025-09-20T03:10:28","Actor":"allxsmith","Number":"4014","RawContent":null,"Title":"docs: Add Bestax-Bulma to related projects","State":"open","Body":"This is a **documentation improvement**.\n\n### Proposed solution\n\nThis PR adds Bestax-Bulma to the list of related projects in the README. Bestax-Bulma is a ReactJS component library that provides a complete implementation of Bulma with full TypeScript support.\n\nThe project offers:\n- 100% TypeScript support with comprehensive unit testing\n- Full support for the latest Bulma v1 features including CSS grids, CSS variables, skeletons, and more\n- Zero external dependencies  \n- Complete coverage of all Bulma elements, components, forms, layouts, and helpers as React components\n- Small bundle size while maintaining full functionality\n- Comprehensive documentation for all components\n\n### Tradeoffs\n\nNo drawbacks - this is simply adding a related project to the documentation to help developers discover available Bulma implementations for React.\n\n### Testing Done\n\nVerified the markdown table formatting is correct and consistent with existing entries.\n\n### Changelog updated?\n\nNo. Documentation-only change.","Url":"https://github.com/jgthms/bulma/pull/4014","RelatedDescription":"Open PR \"docs: Add Bestax-Bulma to related projects\" (#4014)"},{"Id":"3431903870","IsPullRequest":false,"CreatedAt":"2025-09-18T20:37:23","Actor":"stefcab","Number":"4013","RawContent":null,"Title":"No menu are","State":"open","Body":"\nAfter readind applying the examples menu from [](https://bulma.io/documentation/components/dropdown/)  None of the examples work in a simple HTML page where the CSS style is inserted.\n```\n\n<head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Bulma — Horizontal responsive menu (v1.x compatible)</title>\n    <!-- Bulma v1.0.4 CDN -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@1.0.4/css/bulma.min.css\">\n\n</head>\n```\n\nA serious lack of documentation of how work the menu and dropdown.\n\nRegards,\n\nStéphane","Url":"https://github.com/jgthms/bulma/issues/4013","RelatedDescription":"Open issue \"No menu are\" (#4013)"},{"Id":"3403733881","IsPullRequest":true,"CreatedAt":"2025-09-10T19:46:45","Actor":"dangowans","Number":"4012","RawContent":null,"Title":"Fix select icon brightening on label hover","State":"open","Body":"This is an **improvement**, maybe a **bug fix**.\r\n\r\nGiven the code below, when hovering over the corresponding label, the icon next to the select does not change to a brighter color. It works for input combinations, but not select.\r\n\r\n```html\r\n<div class=\"field\">\r\n\t<label class=\"label\" for=\"searchFilter\">Filter</label>\r\n\t<div class=\"control has-icons-left\">\r\n  \t\t<div class=\"select is-fullwidth\">\r\n    \t\t<select id=\"searchFilter\" name=\"searchFilter\">\r\n      \t\t\t<option value=\"\">(All)</option>\r\n\t\t\t\t<option value=\"1\">Filter 1</option>\r\n\t\t\t\t<option value=\"2\">Filter 2</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<span class=\"icon is-small is-left\">\r\n\t\t\t<i class=\"fa-solid fa-search\"></i>\r\n\t\t</span>\r\n\t</div>\r\n</div>\r\n```\r\n\r\n### Proposed solution\r\n\r\nAdd `&:has(select:hover)` to icon color code.\r\n\r\n```sass\r\n&:hover,\r\n&:has(select:hover) {\r\n  & ~ .#{iv.$class-prefix}icon {\r\n    color: cv.getVar(\"input-icon-hover-color\");\r\n  }\r\n}\r\n```\r\n\r\nResulting in the following fix:\r\n\r\n```css\r\n.control.has-icons-left .select:has(select:hover) ~ .icon,\r\n.control.has-icons-right .select:has(select:hover) ~ .icon {\r\n  color: var(--bulma-input-icon-hover-color)\r\n}\r\n```\r\n\r\n### Tradeoffs\r\n\r\nThe solution does create some junk, since the `input` and `select` classes are grouped together.\r\n\r\n```css\r\n// Bad selectors\r\n.control.has-icons-left .input:has(select:hover) ~ .icon,\r\n.control.has-icons-right .input:has(select:hover) ~ .icon {\r\n  color: var(--bulma-input-icon-hover-color)\r\n}\r\n```\r\n\r\n### Testing Done\r\n\r\n[Added the fix (as CSS)](https://github.com/cityssm/sunrise-cms/commit/904f7c6ccf417bba9ef5a4119613513fd9a58f6c) to an app I'm currently working on. Looks good.\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n","Url":"https://github.com/jgthms/bulma/pull/4012","RelatedDescription":"Open PR \"Fix select icon brightening on label hover\" (#4012)"},{"Id":"3384175679","IsPullRequest":false,"CreatedAt":"2025-09-04T15:41:56","Actor":"metasim","Number":"4011","RawContent":null,"Title":"Links in _Extensions_ page to \"wikiki.github.io\" are broken.","State":"closed","Body":"It appears that \"https://wikiki.github.io\" links referenced in \"https://bulma.io/extensions/\" no longer exist? ","Url":"https://github.com/jgthms/bulma/issues/4011","RelatedDescription":"Closed issue \"Links in _Extensions_ page to \"wikiki.github.io\" are broken.\" (#4011)"},{"Id":"3370123762","IsPullRequest":false,"CreatedAt":"2025-08-31T10:40:29","Actor":"mark-senne","Number":"4010","RawContent":null,"Title":"Documentation for columns in fixed-grid","State":"open","Body":"Hi, \nfirst time reporter here.\n\nOn page https://bulma.io/documentation/grid/fixed-grid/\nthe class **has-0-cols** is listed for grid with 0 columns.\n\nBut the table is described with\n\nYou can change the column count by adding the has-$n-cols modifier class with a value ranging from 1 to 12:\n\nI think the entry for **has-0-cols** is wrong and should be removed.\n\nRegards\n   Mark","Url":"https://github.com/jgthms/bulma/issues/4010","RelatedDescription":"Open issue \"Documentation for columns in fixed-grid\" (#4010)"},{"Id":"3338968679","IsPullRequest":false,"CreatedAt":"2025-08-20T17:25:34","Actor":"ElteHupkes","Number":"4009","RawContent":null,"Title":"Deprecated use of global `unquote` function in `getRgbaVar()`","State":"open","Body":"The function `getRgbaVar()` in `bulma/sass/utilities/css-variables.scss` ([current commit at the time of writing](https://github.com/jgthms/bulma/blob/82c5f33b96e873f88d9306cea35a38598e01edf5/sass/utilities/css-variables.scss), [current version in `main`](https://github.com/jgthms/bulma/blob/main/sass/utilities/css-variables.scss#L32)) uses the function `unquote()` without the `string.` namespace:\n\n```\n@function getRgbaVar($name, $alpha, $prefix: \"\", $suffix: \"\") {\n  $varName: buildVarName($name, $prefix, $suffix);\n  @return unquote(\"rgba(var(#{$varName}), #{$alpha})\");\n}\n```\n\nThis results in the following deprecation warning:\n\n```\nDeprecation Warning [global-builtin]: Global built-in functions are deprecated and will be removed in Dart Sass 3.0.0.\nUse string.unquote instead.\n\nMore info and automated migrator: https://sass-lang.com/d/import\n\n   ╷\n34 │   @return unquote(\"rgba(var(#{$varName}), #{$alpha})\");\n   │           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   ╵\n    node_modules/bulma/sass/utilities/css-variables.scss 34:11       getRgbaVar()\n    [....truncated....]\n```\n\nBulma version: 1.0.4\nSASS version: 1.86.3, but this likely occurs with 1.80.x and up.\n\nI'm guessing this one was missed when #3948 and #3907 were addressed.","Url":"https://github.com/jgthms/bulma/issues/4009","RelatedDescription":"Open issue \"Deprecated use of global `unquote` function in `getRgbaVar()`\" (#4009)"},{"Id":"3337908756","IsPullRequest":false,"CreatedAt":"2025-08-20T12:17:27","Actor":"vikasmanimc","Number":"4008","RawContent":null,"Title":"Sponsor Not Active","State":"open","Body":"Hello Dear Team, I have purchased a Sponsorship for 100$ from\nhttps://github.com/jgthms\nI am Already showing the sponsoring button in the profile and paid the amount on 12 August 2025.\nMy Logo is not still added to the https://bulma.io/ Home Page.\nEven i can't find any contact email or any contact method. I have waited 7-8 days but still my logo not showing.\nPlease give any email address to contact to https://github.com/jgthms or https://bulma.io/.\nMy Profile Link- https://github.com/vikasmanimc\nMy Website i Sponsor- https://damangameplay.in","Url":"https://github.com/jgthms/bulma/issues/4008","RelatedDescription":"Open issue \"Sponsor Not Active\" (#4008)"},{"Id":"3328030648","IsPullRequest":false,"CreatedAt":"2025-08-17T06:48:21","Actor":"sekedus","Number":"4007","RawContent":null,"Title":"Font Awesome 6/7","State":"open","Body":"It looks like the Bulma docs are already using Font Awesome v6 internally: \n\nhttps://github.com/jgthms/bulma/blob/f1fe176dfba46f36475686931a8db6c52ac1a3aa/docs/_includes/global/head.html#L18\n\nㅤ\nHowever, I couldn’t find any official documentation or guidance on how to properly integrate Font Awesome 6 or 7 with Bulma v1.x.x. Is there a recommended approach or configuration?\n","Url":"https://github.com/jgthms/bulma/issues/4007","RelatedDescription":"Open issue \"Font Awesome 6/7\" (#4007)"},{"Id":"3257894250","IsPullRequest":true,"CreatedAt":"2025-07-23T22:31:43","Actor":"wesdevpro","Number":"4006","RawContent":null,"Title":"Migrate Deprecated Sass Unquote to `String.unquote` for Dart Compatibility","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\n@jgthms this is a **bugfix**.\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\n\r\n### Proposed solution\r\n\r\nReplaces the deprecated global built-in `unquote()` function with `string.unquote()` to align with Dart Sass 3.0 requirements. This change affects the `getRgbaVar()` function in `utilities/css-variables.scss`, which supports Bulma’s CSS variable parsing.\r\n\r\n### Tradeoffs\r\n\r\n- Minimal impact to CSS output, but this assumes use of a modern Dart Sass environment.\r\n- Older Sass versions may not support namespaced functions, so contributors on legacy tooling should be aware.\r\n- Avoids future build warnings while preserving clarity for maintainers.\r\n\r\n### Testing Done\r\n\r\nNone.\r\n\r\n<!-- BEFORE SUBMITTING YOUR PR, MAKE SURE TO FOLLOW THESE STEPS: -->\r\n<!-- 1. Pull the latest `main` branch -->\r\n<!-- 2. Make sure your Sass code is compliant with the [Bulma Sass styleguide](https://github.com/jgthms/bulma/blob/main/.github/CONTRIBUTING.md#bulma-sass-styleguide) -->\r\n<!-- 3. Make sure your PR only affects `.sass` or documentation files -->\r\n<!-- 4. [Try your changes](https://github.com/jgthms/bulma/blob/main/.github/CONTRIBUTING.md#try-your-changes). -->\r\n\r\n<!-- How have you confirmed this feature works? -->\r\nFunction usage has been validated in Dart Sass and complies with modern syntax guidelines.\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n\r\n\r\nRelated: https://github.com/buefy/buefy/issues/4093\r\n<!-- Thanks! -->\r\n","Url":"https://github.com/jgthms/bulma/pull/4006","RelatedDescription":"Open PR \"Migrate Deprecated Sass Unquote to `String.unquote` for Dart Compatibility\" (#4006)"},{"Id":"3256787024","IsPullRequest":false,"CreatedAt":"2025-07-23T15:17:40","Actor":"steven-twerdochlib","Number":"4005","RawContent":null,"Title":"Overrides not working anymore","State":"open","Body":"Hi,\nI'm upgrading from bulma v0.9.4 to v1.0.4 and I've done what I can, there are no errors but my app is no longer using the variables in my variables.scss file.\n\nMy variables.scss is something like:\n ```\n  $column-gap: 0.94rem\n  $yellow: #ffbf47,\n  $widescreen-enabled: false,\n```\nand I import this into my main like so:\n```\n@use './variables' as *;\n@use \"bulma/sass/utilities/initial-variables\" as iv with (\n  $yellow: #ffbf47,\n  $widescreen-enabled: false,\n);\n@use \"bulma/sass/utilities/mixins\" as bulmaMixins;\n@use 'bulma/bulma' as *;\n```\nFor some reason I needed to import initial-variables individually because it couldn't find variables like $white-ter which I used. So after importing I turned it into iv.$white-ter.\nOverriding like I've done for $yellow in iv with (...) works in overriding but $column-gap isn't in utilities folder. It seems ridiculous that I'd have to individually import all the folders I need and override them separately for different variables. There must be a better way right?\n\nOld code for reference:\n```\n@import 'variables';\n@import 'bulma/bulma.sass';\n@import 'mixin';\n@import 'fcn';\n```\n\nSo ultimately my questions are:\nwhy do I have to call iv.$white-ter to use it now compared to 0.9.4 where $white-ter worked just fine?\nHow can I do overrides for all variables in all files instead of importing them all individually and overriding them individually?","Url":"https://github.com/jgthms/bulma/issues/4005","RelatedDescription":"Open issue \"Overrides not working anymore\" (#4005)"},{"Id":"3243906313","IsPullRequest":false,"CreatedAt":"2025-07-18T17:37:38","Actor":"sjoqvist","Number":"4004","RawContent":null,"Title":"Styles for 22 non-standard HTML elements: keep, change, or remove?","State":"open","Body":"The generated CSS file has 66 lines beginning with these kinds of tags (`has-*`)\nhttps://github.com/jgthms/bulma/blob/82c5f33b96e873f88d9306cea35a38598e01edf5/css/bulma.css#L16452-L16455\n\nAll in all, there are styles for `:active`, `:focus-visible`, `:hover` for each of the following elements.\n* `<has-background-black class=\"is-hoverable\" />`\n* `<has-background-danger class=\"is-hoverable\" />`\n* `<has-background-dark class=\"is-hoverable\" />`\n* `<has-background-info class=\"is-hoverable\" />`\n* `<has-background-light class=\"is-hoverable\" />`\n* `<has-background-link class=\"is-hoverable\" />`\n* `<has-background-primary class=\"is-hoverable\" />`\n* `<has-background-success class=\"is-hoverable\" />`\n* `<has-background-text class=\"is-hoverable\" />`\n* `<has-background-warning class=\"is-hoverable\" />`\n* `<has-background-white class=\"is-hoverable\" />`\n* `<has-text-black class=\"is-hoverable\" />`\n* `<has-text-danger class=\"is-hoverable\" />`\n* `<has-text-dark class=\"is-hoverable\" />`\n* `<has-text-info class=\"is-hoverable\" />`\n* `<has-text-light class=\"is-hoverable\" />`\n* `<has-text-link class=\"is-hoverable\" />`\n* `<has-text-primary class=\"is-hoverable\" />`\n* `<has-text-success class=\"is-hoverable\" />`\n* `<has-text-text class=\"is-hoverable\" />`\n* `<has-text-warning class=\"is-hoverable\" />`\n* `<has-text-white class=\"is-hoverable\" />`\n\nHere's where they are generated:\nhttps://github.com/jgthms/bulma/blob/82c5f33b96e873f88d9306cea35a38598e01edf5/sass/helpers/color.scss#L254-L256\nand\nhttps://github.com/jgthms/bulma/blob/82c5f33b96e873f88d9306cea35a38598e01edf5/sass/helpers/color.scss#L279-L281\n\n1. Are these elements used somewhere? I think that some browsers might not allow them to be active or focused.\n2. Or are they obsolete?\n3. Or were they supposed to have been class names? In that case, can they be removed since they haven't been missed?\n\nWhile the [documentation](https://bulma.io/documentation/helpers/color-helpers/) refers to most of these as classes, this doesn't seem to be the case with `has-background-text` and `has-text-text`.","Url":"https://github.com/jgthms/bulma/issues/4004","RelatedDescription":"Open issue \"Styles for 22 non-standard HTML elements: keep, change, or remove?\" (#4004)"},{"Id":"3236272897","IsPullRequest":false,"CreatedAt":"2025-07-16T14:47:30","Actor":"ynte","Number":"4003","RawContent":null,"Title":"Flex direction .level-left & .level-right not correct when used with .is-mobile","State":"open","Body":"When using an level with `.is-mobile` multiple items in `.level-left` or `level-right` are placed below each other:\n\n<img width=\"718\" height=\"192\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6f7a9a6b-e023-4609-b676-4edf9cda9284\" />\n\nI think this is because `flex-direction` is set as `column`.\n\nThe `.is-mobile` modifier sets `flex-direction: row` for `.level`, but not for `.level-left/right`.\n\nWhen I overwrite `flex-direction` the result is as expected:\n\n<img width=\"718\" height=\"109\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/860dd88d-5495-4828-bbb1-561b70adf5bf\" />","Url":"https://github.com/jgthms/bulma/issues/4003","RelatedDescription":"Open issue \"Flex direction .level-left & .level-right not correct when used with .is-mobile\" (#4003)"},{"Id":"3212037081","IsPullRequest":false,"CreatedAt":"2025-07-08T10:52:55","Actor":"yeya","Number":"4002","RawContent":null,"Title":"Table headers (th) not respecting RTL direction in Bulma 1.0.4","State":"open","Body":"# Table headers (th) not respecting RTL direction in Bulma 1.0.4\n\n## Description\nWhen using RTL direction (`<html dir=\"rtl\">`), table headers are left-aligned instead of right-aligned. Only affects `th` elements, `td` elements work correctly.\n\n## Root Cause\n`--bulma-table-cell-text-align` is set to `left` instead of respecting direction:\n```css\n.table th:not([align]) {\n    text-align: var(--bulma-table-cell-text-align);\n}\n```\n\n## Example\n```html\n<html dir=\"rtl\">\n<body>\n<div class=\"table-container\">\n  <table class=\"table is-fullwidth is-hoverable\">\n    <thead>\n      <tr>\n        <th>כותרת 1</th>\n        <th>כותרת 2</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>מידע 1</td>\n        <td>מידע 2</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n</body>\n</html>\n```\n\n## Expected\nTable headers should be right-aligned in RTL mode (like `td` elements)\n\n## Actual\nTable headers remain left-aligned in RTL mode","Url":"https://github.com/jgthms/bulma/issues/4002","RelatedDescription":"Open issue \"Table headers (th) not respecting RTL direction in Bulma 1.0.4\" (#4002)"},{"Id":"3210321956","IsPullRequest":true,"CreatedAt":"2025-07-07T21:43:22","Actor":"kght6123","Number":"4001","RawContent":null,"Title":"Fix: Increase specificity for icon sizes within controls","State":"open","Body":"Resolves #3985\r\n\r\nThe .control.has-icons-left .icon selector (0,3,0) was overriding the .icon.is-small selector (0,2,0) due to higher specificity.\r\n\r\nThis change introduces more specific selectors for icon sizes within .control.has-icons-left and .control.has-icons-right contexts, ensuring that .is-small, .is-medium, and .is-large classes applied directly to icons within these controls correctly set their dimensions.\r\n\r\nFor example, .control.has-icons-left .icon.is-small (0,4,0) will now correctly override the base styles for icons in controls.\r\n\r\n<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **bugfix**.\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\n\r\n### Proposed solution\r\n\r\nThis PR fixes a CSS specificity issue where size utility classes (like `.is-small`) applied to an `.icon` element within a `.control.has-icons-left` (or `.control.has-icons-right`) element were being overridden by the default icon styling for that control.\r\n\r\nThe solution adds more specific CSS rules in `sass/form/tools.scss` for `.icon.is-small`, `.icon.is-medium`, and `.icon.is-large` when they are descendants of `.control.has-icons-left` or `.control.has-icons-right`. These new rules ensure that the utility size classes take precedence, allowing developers to directly control the size of icons within input controls as intended.\r\n\r\n### Tradeoffs\r\n\r\nNo significant tradeoffs are introduced with this solution. The change is highly targeted and increases specificity in a logical way that aligns with the intended use of utility classes. It doesn't add complexity or affect other components.\r\n\r\n### Testing Done\r\n\r\nThe Sass code was successfully compiled using the project's build script (`npm run build-bulma`) to ensure there were no syntax errors. The logical change in CSS specificity directly addresses the reported bug. Visual confirmation would typically be done by inspecting an HTML page using these classes, but the fix is based on fundamental CSS specificity rules.\r\n\r\n<!-- BEFORE SUBMITTING YOUR PR, MAKE SURE TO FOLLOW THESE STEPS: -->\r\n<!-- 1. Pull the latest `main` branch -->\r\n<!-- 2. Make sure your Sass code is compliant with the [Bulma Sass styleguide](https://github.com/jgthms/bulma/blob/main/.github/CONTRIBUTING.md#bulma-sass-styleguide) -->\r\n<!-- 3. Make sure your PR only affects `.sass` or documentation files -->\r\n<!-- 4. [Try your changes](https://github.com/jgthms/bulma/blob/main/.github/CONTRIBUTING.md#try-your-changes). -->\r\n\r\n![スクリーンショット 2025-07-09 23 42 25](https://github.com/user-attachments/assets/0ac932e3-e80b-4d19-ad08-c5911fc3bb6c)\r\n\r\n![スクリーンショット 2025-07-09 23 46 05](https://github.com/user-attachments/assets/25dfb938-908c-497d-bfff-12f5e335edfe)\r\n\r\n### Changelog updated?\r\n\r\nNo. (This is a minor bugfix).\r\n\r\n<!-- Thanks! -->","Url":"https://github.com/jgthms/bulma/pull/4001","RelatedDescription":"Open PR \"Fix: Increase specificity for icon sizes within controls\" (#4001)"},{"Id":"3207253428","IsPullRequest":false,"CreatedAt":"2025-07-07T13:33:04","Actor":"MiaChan1024","Number":"4000","RawContent":null,"Title":"No natural space between 2 radios","State":"closed","Body":"Hi, there's no natural space between two radios next to each other. But the official document has. I use latest bulma v1.0.4\nMy project:\n<img width=\"175\" height=\"71\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c9966005-a28b-4d24-a85e-cb847af87847\" />\n\nMy code:\n```\n<div class=\"control\">\n  <label class=\"radio\">\n    <input type=\"radio\"\n      name=\"answer\">\n    AA\n  </label>\n  <label class=\"radio\">\n    <input type=\"radio\"\n      name=\"answer\">\n    \"BB\"\n  </label>\n</div>\n```\n\n","Url":"https://github.com/jgthms/bulma/issues/4000","RelatedDescription":"Closed issue \"No natural space between 2 radios\" (#4000)"},{"Id":"3206776127","IsPullRequest":false,"CreatedAt":"2025-07-06T16:54:27","Actor":"ghost","Number":"3999","RawContent":null,"Title":"importing light theme and dark theme leads to nothing","State":"open","Body":"```@use \"bulma/sass/base\";\n@use \"bulma/sass/themes/light\";\n@use \"bulma/sass/themes/dark\";\n```\n\nwhen i import themes like this it generates me no color scheme at all\n\nbut according to https://bulma.io/documentation/features/themes/ it should be possible","Url":"https://github.com/jgthms/bulma/issues/3999","RelatedDescription":"Open issue \"importing light theme and dark theme leads to nothing\" (#3999)"},{"Id":"3167173584","IsPullRequest":false,"CreatedAt":"2025-06-23T07:56:53","Actor":"saschamonteiro","Number":"3998","RawContent":null,"Title":"Not all styles are applied in web component","State":"open","Body":"I am using Bulma 1.0.4\n\nI looked at closed issue [#3895](https://github.com/jgthms/bulma/issues/3895), but I can't seem to get it working, not sure if I am missing a step?\nI created a scss file to use :host instead of :root, app.scss\n```\n @use \"bulma/sass\" with (\n    $variables-host: ':host'\n  );\n```\nit's compiled\n```\nsass --load-path=node_modules app.scss src/app.css\n```\nin my web component, my-wc.ce.vue I import the css file\n```\n<style>\n@import './app.css';\n</style>\n```\nthen a button has the right color, but the font hasn't\n```\n<button class=\"button is-primary\" @click=\"increment\">Count is: {{ count }}</button>\n```\nsame with a h1\n```\n<h1 class=\"title is-1\">WxccNotes</h1>\n```\nFYI, the project is build using Vite\n\n![Image](https://github.com/user-attachments/assets/5859019f-316e-44be-9f06-6cdf27becb0a)","Url":"https://github.com/jgthms/bulma/issues/3998","RelatedDescription":"Open issue \"Not all styles are applied in web component\" (#3998)"},{"Id":"3153157347","IsPullRequest":false,"CreatedAt":"2025-06-17T11:31:55","Actor":"RobMorga","Number":"3997","RawContent":null,"Title":"Bulma V1.0.4 bulma-focus-border-l-delta undefined","State":"open","Body":"This is about **Bulma**.\n\n### Overview of the problem\nThis is about the Bulma **CSS framework** I'm using Bulma **version** [1.0.4]\n\n### Description\n\nvariable --bulma-focus-border-l-delta is never defined but used.\n\n### Steps to Reproduce\n\n![Image](https://github.com/user-attachments/assets/676db70a-5546-4935-9f58-d1d13daf4aee)\n\nor search the project\n\nhttps://github.com/search?q=repo%3Ajgthms%2Fbulma%20bulma-focus-border-l-delta&type=code\n","Url":"https://github.com/jgthms/bulma/issues/3997","RelatedDescription":"Open issue \"Bulma V1.0.4 bulma-focus-border-l-delta undefined\" (#3997)"},{"Id":"3152844419","IsPullRequest":false,"CreatedAt":"2025-06-17T09:49:49","Actor":"RobMorga","Number":"3996","RawContent":null,"Title":"Bulma V1.0.4 is-outlined button bug","State":"open","Body":"This is about **Bulma**.\n\n### Overview of the problem\nThis is about the Bulma **CSS framework** I'm using Bulma **version** [1.0.4]\n\nsame or similar was already reported: https://github.com/jgthms/bulma/issues/3722\n\n### Description\nif I use a button in the style **is-outlined** is displayed wrong:\n\n![Image](https://github.com/user-attachments/assets/4b749196-e4e9-47e9-871b-82480a347592)\n\n![Image](https://github.com/user-attachments/assets/4769f7cd-8d02-4627-be6d-8424a690d358)\n\n### Steps to Reproduce\n\nhttps://codepen.io/RobMorga/pen/zxGLyoV\n\nhttps://bulma.io/documentation/elements/button/#styles\n\nAdd an outlined button without additional class like is-info or else.\n\n","Url":"https://github.com/jgthms/bulma/issues/3996","RelatedDescription":"Open issue \"Bulma V1.0.4 is-outlined button bug\" (#3996)"},{"Id":"3140172105","IsPullRequest":true,"CreatedAt":"2025-06-12T12:50:33","Actor":"Jetinho","Number":"3995","RawContent":null,"Title":"Fixes #3994 : focus on search input when clicking on js-search element","State":"open","Body":"This is a **documentation fix**.\r\n\r\n### Proposed solution\r\n\r\nFocusing on search input when it is displayed would enable to type directly one's search terms.\r\n\r\n### Tradeoffs\r\n\r\nIt adds a specific bit of js into `main.js`, which might be improved or better located ?","Url":"https://github.com/jgthms/bulma/pull/3995","RelatedDescription":"Open PR \"Fixes #3994 : focus on search input when clicking on js-search element\" (#3995)"},{"Id":"3140055502","IsPullRequest":false,"CreatedAt":"2025-06-12T12:13:38","Actor":"Jetinho","Number":"3994","RawContent":null,"Title":"[DOC] Search in documentation : when clicking on search icon, the input should be focused so that one can type directly","State":"open","Body":"I am new to Bulma, and I have used the documenation search feature a lot lately.\nI discovered a pain point in my use of the docs :\n\n**Problem**:\nCurrently, to search the documentation, you need to\n1. click on search icon\n2. click on the search input OR press tab, to focus on the search input.\n3. type your query\n\n![Image](https://github.com/user-attachments/assets/97093cd3-0d58-477c-b847-76bc4a5ada71)\n\n**Solution proposed**:\nWe could get rid of step 2.\nFocusing on search input when it is displayed would enable to type directly one's search terms.\n\n![Image](https://github.com/user-attachments/assets/61500c78-dd27-409d-81f8-41972648d607)","Url":"https://github.com/jgthms/bulma/issues/3994","RelatedDescription":"Open issue \"[DOC] Search in documentation : when clicking on search icon, the input should be focused so that one can type directly\" (#3994)"},{"Id":"3128496802","IsPullRequest":false,"CreatedAt":"2025-06-08T17:04:13","Actor":"Luciogi","Number":"3993","RawContent":null,"Title":"(n-1)th cards inside grid or flex layout, has uneven height","State":"closed","Body":"```html\n<div class=\"grid\">\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n        <div class=\"cell card\">\n            <header class=\"card-header\">\n                <p class=\"card-header-title\">Card header</p>\n                <button class=\"card-header-icon\" aria-label=\"more options\">\n                </button>\n            </header>\n        </div>\n    </div>\n\n```\n\n\n![Image](https://github.com/user-attachments/assets/c178d005-7233-4145-8488-542e4ad25276)","Url":"https://github.com/jgthms/bulma/issues/3993","RelatedDescription":"Closed issue \"(n-1)th cards inside grid or flex layout, has uneven height\" (#3993)"},{"Id":"3105462295","IsPullRequest":false,"CreatedAt":"2025-06-01T10:08:59","Actor":"achilleus68","Number":"3991","RawContent":null,"Title":"Configuration question: Undefined $variable","State":"closed","Body":"I have this structure, using Bulma 1.0.4\n```\n_config\n  - use \"bulma\"\n_main.scss\n  - use \"config\"\n  - use genealogy\n      - use \"dom\"\n            - use \"config\"\n```\n\nin _dom.scss I have\n\n```\n  .is-weight-semibold {\n    font-weight: $weight-semibold;\n  }\n```\n\nWhen compiling, I get an error\n\n```\nOriginal error stack trace: Error: Undefined variable.\n[11ty]    ╷\n[11ty] 21 │     font-weight: $weight-semibold;\n[11ty]    │                  ^^^^^^^^^^^^^^^^\n[11ty]    ╵\n[11ty]   sass\\_dom.scss 21:18      @use\n[11ty]   sass\\_genealogy.scss 4:1  @use\n[11ty]   sass\\_main.scss 3:1       root stylesheet\n```\n\nWhat am I doing wrong here?","Url":"https://github.com/jgthms/bulma/issues/3991","RelatedDescription":"Closed issue \"Configuration question: Undefined $variable\" (#3991)"},{"Id":"3100098869","IsPullRequest":true,"CreatedAt":"2025-05-29T11:45:56","Actor":"YorikHansen","Number":"3990","RawContent":null,"Title":"Fixes #3961","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **bugfix**.\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\nResolves #3961 \r\n\r\n### Proposed solution\r\n\r\n<!-- Which specific problem does this PR solve and how?  -->\r\n<!-- If it fixes a particular Issue, add \"Fixes #ISSUE_NUMBER\" in your title -->\r\nThe usage of [media range syntax](https://www.w3.org/TR/mediaqueries-4/#mq-range-context) fixes this issue. According to [Can  I use](https://caniuse.com/css-media-range-syntax), this syntax is baseline available since 2023.\r\n\r\n### Tradeoffs\r\n\r\n<!-- What are the drawbacks of this solution? Are there alternative ones? -->\r\n<!-- Think of performance, build time, usability, complexity, coupling…) -->\r\nThis is not as backwards compatible as the old `max-width`. Alternatively one could use the same workaround as [bootstrap](https://github.com/twbs/bootstrap/blob/29b45d4c28ac00b818891c541b1834b9320a9632/scss/mixins/_breakpoints.scss#L35-L39) and subtract only `0.02px`. See the alternative implementation [here](https://github.com/YorikHansen/bulma/blob/fix/3961-alternative/sass/utilities/mixins.scss).\r\n\r\n### Testing Done\r\n\r\n<!-- BEFORE SUBMITTING YOUR PR, MAKE SURE TO FOLLOW THESE STEPS: -->\r\n<!-- 1. Pull the latest `main` branch -->\r\n<!-- 2. Make sure your Sass code is compliant with the [Bulma Sass styleguide](https://github.com/jgthms/bulma/blob/main/.github/CONTRIBUTING.md#bulma-sass-styleguide) -->\r\n<!-- 3. Make sure your PR only affects `.sass` or documentation files -->\r\n<!-- 4. [Try your changes](https://github.com/jgthms/bulma/blob/main/.github/CONTRIBUTING.md#try-your-changes). -->\r\n\r\n<!-- How have you confirmed this feature works? -->\r\n<!-- Please explain more than \"Yes\". -->\r\n*(Note: due to a rounding error, my viewport has actually a width between `1023px` and `1024px`)*\r\n\r\n| Size     | Without this fix | With this fix |\r\n| -------- | ---------------- | ------------- |\r\n| `1022px` | ![Example navbar for a width of 1022px without this fix](https://github.com/user-attachments/assets/6247320c-84ad-4475-a57f-29fbabdd7a12) | ![Example navbar for a width of 1022px with the fix applied](https://github.com/user-attachments/assets/e19a214c-689b-465d-ac05-af51b0a02f19) |\r\n| `1023px` | ![Example navbar for a width of 1023px without this fix](https://github.com/user-attachments/assets/d9fd78e4-5289-41b9-94cf-d574917cb9b9) | ![Example navbar for a width of 1023px with the fix applied](https://github.com/user-attachments/assets/ad55b4a5-edbe-413d-8c5b-191f3c16f404) |\r\n| `1024px` | ![Example navbar for a width of 1024px without this fix](https://github.com/user-attachments/assets/8e373493-ab5a-4907-ade4-0c0ce7e46aa9) | ![Example navbar for a width of 1024px with the fix applied](https://github.com/user-attachments/assets/2aac1585-4659-4638-98d5-c18185c60b00) |\r\n\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n\r\n<!-- Thanks! -->\r\n","Url":"https://github.com/jgthms/bulma/pull/3990","RelatedDescription":"Open PR \"Fixes #3961\" (#3990)"},{"Id":"3089304981","IsPullRequest":false,"CreatedAt":"2025-05-26T23:16:28","Actor":"sniperadmin","Number":"3989","RawContent":null,"Title":"Apply Golden Ratio Principle (Phi ~= 1.618) in Bulma","State":"closed","Body":"\n### Problem to solve\nThis suggests applying exactly the design principles using Golden Ratio. This ensures harmonious visuals and of course it is an application of the nature rules.\n\n### Hypothesis\nFocusing on Data Visualization is an excellent choice for a practical application of the Golden Ratio's principles of harmony and balance.\n\nIn data visualization, the Golden Ratio `(φ ~=1.618)` is not about calculating performance, but about guiding the aesthetic and structural design to create visuals that are:\n\n**Visually Appealing**: Easier and more pleasant for the human eye to perceive.\n**Hierarchical**: Clearly guiding the viewer's attention to the most important information.\n**Balanced**: Creating a sense of order and professionalism.\n\n#### How the Golden Ratio is applied in Data Visualization:\n##### Layout and Composition:\n\n**Dividing Space**: A common application is to divide a dashboard or a chart area into two main sections (e.g., a dominant content area and a subordinate sidebar or detail panel) such that their widths or heights are in a Golden Ratio proportion (approximately 61.8% to 38.2%). This creates a natural visual hierarchy and guides the eye.\n\n**Content Placement**: Important elements can be placed at the intersections of a \"Golden Section Grid,\" similar to the rule of thirds but with Golden Ratio proportions.\nTypography:\n\n**Font Sizing**: Establishing a harmonious typographic scale. For example, if your base body text font size is `X`, then a subheading could be `X * φ`, and a main heading could be `X * φ^2`. This creates a proportional relationship between text elements, improving readability and visual flow.\nElement Sizing and Spacing:\n\n**Chart Elements**: While less common for raw data points, the proportions of legends, axis labels, or even the overall dimensions of charts within a dashboard can be designed using the Golden Ratio.\n\n**White Space (Padding/Margins)**: Using proportions based on `φ` for the empty space around and between elements can contribute to visual cleanliness and reduce clutter.\n\n### Proposed solution\nThis is a prototype to visualize the application of Golden Ratio in design:\n\nhttps://stackblitz.com/edit/stackblitz-starters-qrvhou5t?file=index.html\n\n#### How to Observe the Golden Ratio in the Prototype:\n**Layout Proportions**: The main content area will occupy approximately 61.8% of the dashboard's width, while the sidebar takes up the remaining 38.2%. This creates a visually dominant area and a supporting area in Golden Ratio proportion. Resize your browser window to see how they maintain their proportions.\n\n**Font Scaling**: The Dashboard Main View (H1) is significantly larger than the subheadings and body text, scaled by `φ^2`.\nSubheadings like Key Performance Indicators Overview (and main sidebar headings) are scaled by `φ` relative to the base paragraph text.\nSmaller text (like filter or detail descriptions) might be scaled down by `φ`.\n\nThis prototype provides a visual demonstration of how the Golden Ratio can be applied to structure and present information in data visualizations, aiming for a more balanced, harmonious, and aesthetically pleasing user experience.","Url":"https://github.com/jgthms/bulma/issues/3989","RelatedDescription":"Closed issue \"Apply Golden Ratio Principle (Phi ~= 1.618) in Bulma\" (#3989)"},{"Id":"3089183009","IsPullRequest":false,"CreatedAt":"2025-05-25T09:53:44","Actor":"Vollbrecht","Number":"3988","RawContent":null,"Title":"Theme customizer lag the ability to change text primary color","State":"open","Body":"I am talking about the \"customizer\" on the docs page. I hope here is the right place to bring it up.\n\nI am new to bulma and i am a bit confused, what the \"right\" way is to change global text colors. I see that with bulma v1 on the [color palette helpers](https://bulma.io/documentation/helpers/palette-helpers/) we have 7 primary colors. The Color Customizer only lets you modify 6 of the 7 values.\n\n","Url":"https://github.com/jgthms/bulma/issues/3988","RelatedDescription":"Open issue \"Theme customizer lag the ability to change text primary color\" (#3988)"},{"Id":"3073490986","IsPullRequest":true,"CreatedAt":"2025-05-19T13:17:39","Actor":"ManiShah7","Number":"3987","RawContent":null,"Title":"Fix docs: update text weight helper count and clean up CHANGELOG","State":"closed","Body":"### What this PR does\r\n\r\n- Updates the text helper count from 5 to 6 in the documentation to include `has-text-weight-extrabold`\r\n- Removes an empty bullet point in `CHANGELOG.md`\r\n- Removes an unnecessary trailing space in `CHANGELOG.md`\r\n\r\n\r\nLet me know if any of these changes need to be split into separate PRs.\r\n","Url":"https://github.com/jgthms/bulma/pull/3987","RelatedDescription":"Closed or merged PR \"Fix docs: update text weight helper count and clean up CHANGELOG\" (#3987)"},{"Id":"3062319971","IsPullRequest":false,"CreatedAt":"2025-05-14T08:43:25","Actor":"hiroweb","Number":"3986","RawContent":null,"Title":"Option to disable dark mode in SASS build via variable","State":"open","Body":"Hello, thank you for the great framework!\n\nI would like to suggest an improvement regarding the dark mode feature in Bulma.\n\nCurrently, dark mode styles are included in the build by default. It would be helpful if we could optionally disable dark mode when compiling Bulma via SASS.\n\n## Suggestion:\nIntroduce a configuration variable such as $enable-dark-mode in initial-variables with !default: true\n\nStructure the dark mode-related styles to be included conditionally based on this variable\n\nThis way, users who do not need dark mode support can compile a lighter CSS file\n\n```\n$enable-dark-mode: true !default;\n\n// prefers-color-scheme: dark\n@if $enable-dark-mode{\n  @include cv.system-theme($name: \"dark\") {\n    @include dark.dark-theme;\n  }\n}\n\n//[data-theme=dark], .theme-dark\n@if $enable-dark-mode{\n  @include cv.bulma-theme($name: \"dark\") {\n    @include dark.dark-theme;\n    @include setup.setup-theme;\n  }\n}\n```\n\nThis approach would provide flexibility and reduce the CSS output size for users not using dark mode.\nThanks for considering this enhancement!","Url":"https://github.com/jgthms/bulma/issues/3986","RelatedDescription":"Open issue \"Option to disable dark mode in SASS build via variable\" (#3986)"},{"Id":"3049991490","IsPullRequest":false,"CreatedAt":"2025-05-08T20:14:03","Actor":"prograngeldev","Number":"3985","RawContent":null,"Title":".control.has-icons-left .icon is overwriting .is-small class","State":"open","Body":".control.has-icons-left .icon has a specificity of (0,3,0)\n.is-small has a specificity of (0,2,0)\n\nSo we can't change the icons size by these components classes and have to make a custom class for the size instead.\n\nJust adding a !important to the .is-small values would work, or adding more specificity like a father class and then a son class just like the other one is doing.\n\n```jsx\n<div className=\"control has-icons-left\">\n    <input\n        onChange={handleDaysInputChange}\n        type=\"text\"\n        name={`${day}-title`}\n        id={`${day}-title`}\n        value={days[day]?.title || \"\"}\n        className='input is-primary is-radiusless'\n    />\n    <span className=\"icon is-small is-left\">\n        <i class=\"fa-solid fa-pen\"></i>\n    </span>\n</div>\n```\n\n![Image](https://github.com/user-attachments/assets/8e620d05-9ed2-4f3c-8ee7-122840c445fa)","Url":"https://github.com/jgthms/bulma/issues/3985","RelatedDescription":"Open issue \".control.has-icons-left .icon is overwriting .is-small class\" (#3985)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-24T03:30:10.3742687Z","RunDurationInMilliseconds":1287}