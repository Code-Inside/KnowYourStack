{"Data":{"Bulma-Issues":{"Issues":[{"Id":"755139030","IsPullRequest":false,"CreatedAt":"2020-12-02T10:20:10","Actor":"noraj","Number":"3205","RawContent":null,"Title":"New with-navbar modifier for small, medium and large heroes","State":"open","Body":"This is about **Bulma**. I is a feature request.\r\n\r\n### Overview\r\n\r\nThis is about the Bulma **CSS framework**.\r\n\r\nAdding new with-navbar modifier for small, medium and large heroes to deal with fixed navbar issues.\r\n\r\n### Description\r\n\r\nActually we have [is-fullheight-with-navbar](https://bulma.io/documentation/layout/hero/#fullheight-with-navbar) class that is very handy to be used with [fixed navbar](https://bulma.io/documentation/components/navbar/#fixed-navbar).\r\nThis does fullheight - navbar so the hero so it occupies the viewport height minus the navbar height and not having an extra bonus introducing a bad scrolling experience.\r\n\r\nWhat about introducing those new classes  with a similar but opposite behavior : \r\n\r\n- is-small-with-navbar\r\n- is-medium-with-navbar\r\n- is-large-with-navbar\r\n\r\n**Why?** and **To do what?** When you have a medium/large hero at the start of your body with a fixed navbar the issue is that the top of the hero is hidden behind the fixed navbar, so the with-navbar modifier class would add an extra height to the hero equal to navbar height  or maybe a top padding for top navbar and an extra bottom padding for bottom navbar.\r\n\r\n## Workaround\r\n\r\nActually I'm forced to do this, add a blank hero before the actual hero so the content at the top of the true hero is not cropped, the blank hero will be \"hidden under the fixed navbar\".\r\n\r\n```slim\r\n/ Fix for fixed navbar because there is only is-fullheight-with-navbar\r\nsection.hero\r\n  .hero-body\r\n\r\nsection.hero.is-large\r\n  .hero-body\r\n    .container\r\n```\r\n","Url":"https://github.com/jgthms/bulma/issues/3205","RelatedDescription":"Open issue \"New with-navbar modifier for small, medium and large heroes\" (#3205)"},{"Id":"753925214","IsPullRequest":true,"CreatedAt":"2020-12-01T01:21:59","Actor":"XiumingLee","Number":"3204","RawContent":null,"Title":"bulma-me","State":"closed","Body":"merge from bulma-me","Url":"https://github.com/jgthms/bulma/pull/3204","RelatedDescription":"Closed or merged PR \"bulma-me\" (#3204)"},{"Id":"751760810","IsPullRequest":false,"CreatedAt":"2020-11-30T17:41:04","Actor":"fingers10","Number":"3200","RawContent":null,"Title":"Missed semicolon error when running a gulp task with bulma","State":"closed","Body":"I'm new to `gulp` tasks. I'm practicing it now. After some googling I learned to write few tasks. I'm using `tailwind` and `bulma` css in my project.\r\n\r\nHere is my setup.\r\n\r\n**`package.json`:**\r\n```js\r\n{\r\n  \"devDependencies\": {\r\n    \"gulp\": \"^4.0.2\",\r\n    \"gulp-clean-css\": \"^4.3.0\",\r\n    \"gulp-postcss\": \"^9.0.0\",\r\n    \"gulp-purgecss\": \"^3.0.0\",\r\n    \"gulp-sourcemaps\": \"^3.0.0\",\r\n    \"precss\": \"^4.0.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@fortawesome/fontawesome-free\": \"^5.15.1\",\r\n    \"autoprefixer\": \"^9.8.6\",\r\n    \"bulma\": \"^0.9.1\",\r\n    \"postcss\": \"^7.0.35\",\r\n    \"tailwindcss\": \"npm:@tailwindcss/postcss7-compat@^2.0.1\"\r\n  }\r\n}\r\n```\r\n\r\n**`gulp` task:**\r\n```js\r\nconst gulp = require('gulp');\r\n\r\ngulp.task('css:dev', () => {\r\n    const postcss = require('gulp-postcss');\r\n\r\n    return gulp.src('./Styles/site.css')\r\n        .pipe(postcss([\r\n            require('precss'),\r\n            require('tailwindcss'),\r\n            require('autoprefixer')\r\n        ]))\r\n        .pipe(gulp.dest('./wwwroot/css/'));\r\n});\r\n```\r\n**site.css:**\r\n```css\r\n@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n@import '../node_modules/@fortawesome/fontawesome-free/css/all.css';\r\n@import '../node_modules/bulma/css/bulma.css'; --> This works\r\n```\r\n\r\nThis works fine when I run my gulp task `gulp css:dev` but fails when I remove entire `bulma.css` and load the separate components.\r\n\r\n**site.css:**\r\n```css\r\n@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n@import '../node_modules/@fortawesome/fontawesome-free/css/all.css';\r\n@import '../node_modules/bulma/sass/utilities/_all.sass';\r\n@import '../node_modules/bulma/sass/components/menu.sass'; --> This fails\r\n```\r\n**Error Message:**\r\n```cmd\r\n\" css:dev\r\n[00:49:18] Using gulpfile ~\\source\\repos\\BulmaTailwind\\BulmaTailwind\\Gulpfile.js\r\n[00:49:18] Starting 'css:dev'...\r\n[00:49:19] 'css:dev' errored after 1.53 s\r\n[00:49:19] CssSyntaxError in plugin \"gulp-postcss\"\r\nMessage:\r\n    precss: C:\\Users\\xxxx\\source\\repos\\BulmaTailwind\\BulmaTailwind\\node_modules\\bulma\\sass\\components\\menu.sass:1:25: Missed semicolon\r\n> 1 | $menu-item-color: $text !default\r\n    |                         ^\r\n  2 | $menu-item-radius: $radius-small !default\r\n  3 | $menu-item-hover-color: $text-strong !default\r\nProcess terminated with code 1.\r\n```\r\n\r\nI tried including the below imports,\r\n\r\n```css\r\n@import '../node_modules/bulma/sass/utilities/mixins.sass';\r\n@import '../node_modules/bulma/sass/components/menu.sass';\r\n```\r\n\r\nAnd I ended up with new error.\r\n\r\n```cmd\r\n[23:21:34] Starting 'css:dev'...\r\n[23:21:36] 'css:dev' errored after 1.53 s\r\n[23:21:36] CssSyntaxError in plugin \"gulp-postcss\"\r\nMessage:\r\n    precss: C:\\Users\\xxxx\\source\\repos\\BulmaTailwind\\BulmaTailwind\\node_modules\\bulma\\sass\\utilities\\mixins.sass:12:25: Unknown word\r\n  10 |   position: absolute\r\n  11 |   @if $height != 0\r\n> 12 |     left: calc(50% - (#{$width} / 2))\r\n     |                         ^\r\n  13 |     top: calc(50% - (#{$height} / 2))\r\n  14 |   @else\r\nProcess terminated with code 1.\r\n```\r\n\r\nI understood that I'm missing some imports. But now able to find those from `bulma` [official modularity docs](https://bulma.io/documentation/overview/modular/).\r\n\r\nI would be great if there is doc that says what and all imports needs to be added. This would help new comers.\r\n\r\nPlease assist on what I'm missing.\r\n","Url":"https://github.com/jgthms/bulma/issues/3200","RelatedDescription":"Closed issue \"Missed semicolon error when running a gulp task with bulma\" (#3200)"},{"Id":"753153872","IsPullRequest":false,"CreatedAt":"2020-11-30T09:00:34","Actor":"scheinercc","Number":"3203","RawContent":null,"Title":"[question] Shouldn't Tabs with `is-fullwidth` have equal width?","State":"closed","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is about **Bulma**.\r\n\r\n<!-- Is it about Bulma or about the Docs? -->\r\nIs it a question for a proposed change.\r\n<!-- If it's a bug, is it a browser bug? -->\r\n\r\n### Overview of the problem\r\n\r\n<!-- UNCOMMENT THE APPROPRIATE LINES -->\r\n\r\nThis is about the Bulma **CSS framework**\r\n<!-- This is about the Bulma **Docs** -->\r\nI'm using Bulma **version** [0.9.1]\r\nMy **browser** is: Firefox DevEdition\r\nI am sure this issue is **not a duplicate**.\r\n\r\n### Description & Steps to Reproduce\r\nUnder: https://bulma.io/documentation/components/tabs/#combining\r\n\r\nTabs set to `is-fullwidth` look in the example as if they were equal width, due to similar string lengths, while their lengths are indeed 264px, 248px, 254px, 288px:\r\n<img width=\"1129\" alt=\"image\" src=\"https://user-images.githubusercontent.com/817856/100571220-b7c75580-3326-11eb-89b8-efe165d454a8.png\">\r\n\r\nChanging the length of some of the strings to highlight what currently happens:\r\n<img width=\"1131\" alt=\"image\" src=\"https://user-images.githubusercontent.com/817856/100571271-de858c00-3326-11eb-8d65-c5da95a5bf30.png\">\r\n\r\nAdding `flex-basis: 0;` to `.tabs.is-fullwidth li` looks better IMHO:\r\n<img width=\"1135\" alt=\"image\" src=\"https://user-images.githubusercontent.com/817856/100571333-01b03b80-3327-11eb-94cf-08fd74782a4a.png\">\r\n\r\nhttps://github.com/jgthms/bulma/blob/0a1ef3c4fbf05d503ac626c7f53b1b7a93ac350b/sass/components/tabs.sass#L111\r\ncould then be shortened to `flex: 1 0 0`.\r\n\r\nMaybe with `px` value (`flex: 1 0 0px`) as per: https://stackoverflow.com/questions/29503227/how-to-make-flexbox-items-the-same-size#29503264\r\n","Url":"https://github.com/jgthms/bulma/issues/3203","RelatedDescription":"Closed issue \"[question] Shouldn't Tabs with `is-fullwidth` have equal width?\" (#3203)"},{"Id":"752493768","IsPullRequest":true,"CreatedAt":"2020-11-27T22:36:49","Actor":"letsbuildafire","Number":"3202","RawContent":null,"Title":"Fix responsive variable column gap","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **bugfix**.\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\nNo open issue that I could find references this bug. I ran into this issue when building a site, see the minimal example here: https://codepen.io/letsbuildafire/pen/ExgaYgy that illustrates how the column gap would not update correctly at different breakpoints.\r\n\r\n### Proposed solution\r\nLoop over variable gap sizes for each breakpoint include.\r\n<!-- Which specific problem does this PR solve and how?  -->\r\n<!-- If it fixes a particular Issue, add \"Fixes #ISSUE_NUMBER\" in your title -->\r\n\r\n### Tradeoffs\r\nNone that come to mind. Perhaps very very marginally slower build times as a result of the added loops.\r\n<!-- What are the drawbacks of this solution? Are there alternative ones? -->\r\n<!-- Think of performance, build time, usability, complexity, coupling…) -->\r\n\r\n### Testing Done\r\nMinimal test case built out here: https://codepen.io/letsbuildafire/pen/ExgaYgy\r\n\r\n<!-- BEFORE SUBMITTING YOUR PR, MAKE SURE TO FOLLOW THESE STEPS: -->\r\n<!-- 1. Pull the latest `master` branch -->\r\n<!-- 2. Make sure your Sass code is compliant with the [Bulma Sass styleguide](https://github.com/jgthms/bulma/blob/master/.github/CONTRIBUTING.md#bulma-sass-styleguide) -->\r\n<!-- 3. Make sure your PR only affects `.sass` or documentation files -->\r\n<!-- 4. [Try your changes](https://github.com/jgthms/bulma/blob/master/.github/CONTRIBUTING.md#try-your-changes). -->\r\n\r\n<!-- How have you confirmed this feature works? -->\r\n<!-- Please explain more than \"Yes\". -->\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n\r\n<!-- Thanks! -->\r\n","Url":"https://github.com/jgthms/bulma/pull/3202","RelatedDescription":"Open PR \"Fix responsive variable column gap\" (#3202)"},{"Id":"752478835","IsPullRequest":false,"CreatedAt":"2020-11-27T21:34:07","Actor":"kashalkar","Number":"3201","RawContent":null,"Title":"Bulma.css and editor.js - css not compatible","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\nusing bulma together with editor.js causes the editor.js elements like the + icon or the 'click to tune' icon to be shown incorrectly. Everything seems scaled up. \r\n\r\n<!-- Choose one of the following: -->\r\nThis is about **Bulma **.\r\n\r\n<!-- Is it about Bulma or about the Docs? -->\r\n<!-- Is it a bug/feature/question or do you need help? -->\r\nIt is a bug.\r\n<!-- If it's a bug, is it a browser bug? -->\r\nIt is not a browser bug.\r\n\r\n### Overview of the problem\r\n\r\n<!-- UNCOMMENT THE APPROPRIATE LINES -->\r\n\r\nThis is about the Bulma **CSS framework**\r\n\r\n I'm using Bulma **version** 0.9.1\r\n My **browser** is: google chrome / safari\r\n\r\nI am sure this issue is **not a duplicate**\r\n\r\n### Description\r\n\r\n<!-- Description of the bug, enhancement, or question -->\r\n\r\n### Steps to Reproduce\r\n\r\nCreate an angular project with bulma and editor.js. \r\nCreate a component that shows the editor. Run the app and compare the icons of the editor with how the icons look over here https://editorjs.io/\r\n\r\n### Expected behavior\r\nThe styling of editor.js should not be overriden by bulma.css\r\n\r\n### Actual behavior\r\n\r\nApparently, the styling for the editor is overwritten by bulma.css. Disabling bulma immediately fixes the problem.\r\n","Url":"https://github.com/jgthms/bulma/issues/3201","RelatedDescription":"Open issue \"Bulma.css and editor.js - css not compatible\" (#3201)"},{"Id":"750893618","IsPullRequest":true,"CreatedAt":"2020-11-25T15:02:52","Actor":"FeixuRuins","Number":"3199","RawContent":null,"Title":"Remove a space between anchor and exclamation mark","State":"open","Body":"![image](https://iili.io/FVXHsj.png)\r\n\r\nThis is a **documentation fix**.","Url":"https://github.com/jgthms/bulma/pull/3199","RelatedDescription":"Open PR \"Remove a space between anchor and exclamation mark\" (#3199)"},{"Id":"748372254","IsPullRequest":false,"CreatedAt":"2020-11-23T23:22:12","Actor":"lucasdavidferrero","Number":"3197","RawContent":null,"Title":"Can we import Delete Element with SASS?","State":"closed","Body":"This is about **Bulma **.\r\n\r\n### Overview of the problem\r\nHello, can we just import Delete Element on its own? I can't see its partial.\r\n\r\nThis is about the Bulma **CSS framework**\r\nI'm using Bulma **version** [0.9.1]\r\nI am sure this issue is **not a duplicate**?\r\n\r\n### Description\r\nUnable to import Delete element.","Url":"https://github.com/jgthms/bulma/issues/3197","RelatedDescription":"Closed issue \"Can we import Delete Element with SASS?\" (#3197)"},{"Id":"749003668","IsPullRequest":true,"CreatedAt":"2020-11-23T17:47:19","Actor":"FeixuRuins","Number":"3198","RawContent":null,"Title":"Added 's'","State":"open","Body":"This is a **documentation fix**.","Url":"https://github.com/jgthms/bulma/pull/3198","RelatedDescription":"Open PR \"Added 's'\" (#3198)"},{"Id":"746569007","IsPullRequest":false,"CreatedAt":"2020-11-19T13:08:26","Actor":"guettli","Number":"3196","RawContent":null,"Title":"Where to ask questions?","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is about **the Docs**.\r\n\r\nI have never used Bulma before.\r\n\r\nI look at: https://bulma.io/\r\n\r\nI would like to ask a question. But where? I could not find a link to a form, group or mailing list.\r\n\r\nPlease take this serious. New comers should have a place to ask questions.","Url":"https://github.com/jgthms/bulma/issues/3196","RelatedDescription":"Open issue \"Where to ask questions?\" (#3196)"},{"Id":"746249144","IsPullRequest":false,"CreatedAt":"2020-11-19T04:58:33","Actor":"nigel-dewar","Number":"3195","RawContent":null,"Title":"Does not working with CRA typescript","State":"open","Body":"Doesn't work with typescript and no proper documentation about how to make it work with CRA typescript either.\r\n\r\ncheers\r\n","Url":"https://github.com/jgthms/bulma/issues/3195","RelatedDescription":"Open issue \"Does not working with CRA typescript\" (#3195)"},{"Id":"746181919","IsPullRequest":false,"CreatedAt":"2020-11-19T02:01:56","Actor":"rschristian","Number":"3194","RawContent":null,"Title":"Ultrawide display breakpoint","State":"open","Body":"This is about **Bulma**.\r\nThis is a feature request / question\r\n\r\n### Overview of the problem\r\n\r\nThis is about the Bulma **CSS framework**\r\nI am sure this issue is **not a duplicate**\r\n\r\n### Description\r\n\r\nSo this might be a feature request, or possibly a request for your insight.\r\n\r\nI recently got an ultra wide monitor (3440x1440, so 21:9 aspect ratio) and while it's certainly nice to use, Bulma does look a bit odd. The `.container` class that I wrap my two-column page in has a max width of 1344px, which means that my monitor has more white space than content. (3440px monitor - 1344px of content = 2096px of whitespace)\r\n\r\nNow, I get that designing for these is difficult so I'd fully understand if they're just beyond the scope of what's reasonable to implement at this time (as they aren't super common, so diminishing returns on effort) but I'm wondering if there are any plans to add a larger breakpoint than fullscreen for monitors like mine?\r\n\r\nI do appreciate that I can edit these vars myself, and even if I did, widescreens would likely need an edited UI regardless. \r\n\r\nJust curious as towards your thoughts on if this is something worth implementing. ","Url":"https://github.com/jgthms/bulma/issues/3194","RelatedDescription":"Open issue \"Ultrawide display breakpoint\" (#3194)"},{"Id":"745492745","IsPullRequest":false,"CreatedAt":"2020-11-18T09:50:37","Actor":"iamnckblr","Number":"3193","RawContent":null,"Title":"Conditional Rendering of Icon with React not working","State":"closed","Body":"This is about **Bulma**.\r\n\r\n### Overview of the problem / Description\r\nI want to build a login form with bulma css and react js. Therefore, in my login form, I wanted to conditional render a right aligned Icon based on the user's input (if it is valid or not). However, the icon is not changing (even tho the javascript variable is changed to the correct css class).\r\n\r\nThis is about the Bulma **CSS framework**\r\nI'm using Bulma **version** [0.9.1]\r\nMy **browser** is: Chrome\r\nI am sure this issue is **not a duplicate**\r\n\r\n### Steps to Reproduce\r\n\r\n\r\n1. Clone the following project: https://gitlab.com/iamnckblr/auth-server-ui\r\n2. `yarn install` and `yarn start`\r\n3. Open `http://localhost:3000`\r\n4. Enter a valid email (e.q. asdfsdf@asdfadf.com)\r\n\r\n\r\n### Expected behavior\r\nDanger Icon changes to check icon\r\n\r\n### Actual behavior\r\n\r\nDanger Icon keeps showing.\r\n","Url":"https://github.com/jgthms/bulma/issues/3193","RelatedDescription":"Closed issue \"Conditional Rendering of Icon with React not working\" (#3193)"},{"Id":"745450836","IsPullRequest":true,"CreatedAt":"2020-11-18T08:34:55","Actor":"lionzeye","Number":"3192","RawContent":null,"Title":"Fix #3188 Inconsistent grouped button border behavior","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **bugfix**.\r\n\r\nFixes https://github.com/jgthms/bulma/issues/3188 which is an issue where we concluded that the z-index of borderless, grouped buttons should be lower than the z-index of grouped, bordered buttons.\r\n\r\n### Proposed solution\r\n\r\nSet the z-index of grouped, borderless buttons to a lower value than grouped, bordered buttons. While bumping the z-index values of :hover and :focus states etc.\r\n\r\n### Tradeoffs\r\n\r\nNone that I'm currently aware of.\r\n\r\n### Testing Done\r\n\r\nTested with example from issue https://github.com/jgthms/bulma/issues/3188 and different grouped button combinations.\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n\r\n<!-- Thanks! -->\r\n","Url":"https://github.com/jgthms/bulma/pull/3192","RelatedDescription":"Open PR \"Fix #3188 Inconsistent grouped button border behavior\" (#3192)"},{"Id":"744493673","IsPullRequest":false,"CreatedAt":"2020-11-17T07:44:20","Actor":"edenprojectde","Number":"3191","RawContent":null,"Title":"Documentation: Fix example code of column class.","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is about **the Docs**.\r\n\r\n<!-- Is it about Bulma or about the Docs? -->\r\n<!-- Is it a bug/feature/question or do you need help? -->\r\n<!-- If it's a bug, is it a browser bug? -->\r\n\r\n### Overview of the problem\r\n\r\n<!-- UNCOMMENT THE APPROPRIATE LINES -->\r\n\r\n<!-- This is about the Bulma **CSS framework** -->\r\nThis is about the Bulma **Docs**\r\n<!-- I'm using Bulma **version** [x.x.x] -->\r\n<!-- My **browser** is: -->\r\n<!-- This is a **Sass** issue: I'm using version [x.x.x] -->\r\n<!-- I am sure this issue is **not a duplicate**? -->\r\n\r\n### Description\r\n\r\nColumn's documentation always has a green/turquoise background color, which is never really mentioned why it has the color; new users will see a white background when using most of the code that is exampled for columns leading to some/many/.. misunderstandings.\r\n(ex. https://github.com/jgthms/bulma/issues/1300, https://jsfiddle.net/onigetoc/zar9yxhc/ , https://laracasts.com/discuss/channels/laravel/bulma-colomn-didnt-work-showing-on-laravel)\r\n\r\nSo what should be changed in the documentation:\r\n- The column example code should use notification class(not bd-notification as in some of the example codes)\r\n- There should be a note about the notification class being the primary tool to color columns in bulma. (or at least that this is the way used in the documentation of column's)\r\n","Url":"https://github.com/jgthms/bulma/issues/3191","RelatedDescription":"Open issue \"Documentation: Fix example code of column class.\" (#3191)"},{"Id":"743360245","IsPullRequest":true,"CreatedAt":"2020-11-16T19:01:54","Actor":"kevbarns","Number":"3187","RawContent":null,"Title":"**documentation fix** Update flexbox-helpers.html","State":"closed","Body":"Hey, I feel this would help a little 👍 \r\n\r\nCheers,\r\nKevin\r\n","Url":"https://github.com/jgthms/bulma/pull/3187","RelatedDescription":"Closed or merged PR \"**documentation fix** Update flexbox-helpers.html\" (#3187)"},{"Id":"743706731","IsPullRequest":true,"CreatedAt":"2020-11-16T10:14:18","Actor":"lionzeye","Number":"3190","RawContent":null,"Title":"Allow custom tile denominator","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **improvement**.\r\nThe default tile denominator is 12, but that can be a limiting factor. The ability to set it to 24 (or any other value) would allow us to use Bulma for front-end projects where a designer wouldn't be limited to 12 tiles (without having to split tiles in the same row into multiple groups of 12).\r\n\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\n\r\n### Proposed solution\r\nMake the tile denominator adjustable by moving the value to a sass variable.\r\n\r\n### Tradeoffs\r\n\r\nNone\r\n\r\n### Testing Done\r\n\r\nTested by adjusting the value to various values that aren't 12 and verified the results.\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n","Url":"https://github.com/jgthms/bulma/pull/3190","RelatedDescription":"Open PR \"Allow custom tile denominator\" (#3190)"},{"Id":"743701893","IsPullRequest":true,"CreatedAt":"2020-11-16T10:07:55","Actor":"lionzeye","Number":"3189","RawContent":null,"Title":"Allow custom column denominator","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **improvement**.\r\nThe default column denominator is 12, but that can be a limiting factor. The ability to set it to 24 (or any other value) would allow us to use Bulma for front-end projects where a designer wouldn't be limited to 12 columns.\r\n\r\nExample: if I place a default sidebar-menu in a column sized 3, the column would be too wide on breakpoint desktop-only, but a column sized 2 would be too small. Having more granularity in column sizings would be benificial.\r\n\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\n\r\n### Proposed solution\r\nMake the column denominator adjustable by moving the value to a sass variable.\r\n\r\n### Tradeoffs\r\n\r\nNone\r\n\r\n### Testing Done\r\n\r\nTested by adjusting the value to various values that aren't 12 and verified the results.\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n","Url":"https://github.com/jgthms/bulma/pull/3189","RelatedDescription":"Open PR \"Allow custom column denominator\" (#3189)"},{"Id":"743371406","IsPullRequest":false,"CreatedAt":"2020-11-15T23:24:56","Actor":"marcebdev","Number":"3188","RawContent":null,"Title":"[bug] Inconsistent button border behavior when grouped with .has-addons class","State":"open","Body":"This is about **Bulma**.\r\n\r\nIs it a bug/feature/question or do you need help? : It is a Bug\r\nIf it's a bug, is it a browser bug?: No\r\n\r\n### Overview of the problem\r\n\r\nThis is about the Bulma **CSS framework**\r\nI'm using Bulma **version** [0.9.1]\r\nI am sure this issue is **not a duplicate**? None that I could find\r\n\r\n### Description\r\n\r\nWhen 3 or more buttons are grouped (with `.has-addons`) certain patterns result in visual border bugs. I've found one of these patterns to be a when button with a border style is grouped with buttons without a border style.\r\n\r\n### Steps to Reproduce\r\n\r\nSimple example with addons\r\n```html\r\n<div class=\"buttons has-addons\">\r\n  <button type=\"button\" class=\"button is-primary is-light\">\r\n    <span>a</span>\r\n  </button>\r\n  <button type=\"button\" class=\"button\">\r\n    <span>b</span>\r\n  </button>\r\n  <button type=\"button\" class=\"button is-primary is-light\">\r\n    <span>c</span>\r\n  </button>\r\n</div>\r\n```\r\n\r\nAlso in fields\r\n```html\r\n<div class=\"field\">\r\n  <div class=\"field-body\">\r\n    <div class=\"field has-addons\">\r\n      <p class=\"control\">\r\n        <button type=\"button\" class=\"button is-danger is-light\">\r\n          <span>a</span>\r\n        </button>\r\n      </p>\r\n      <p class=\"control\">\r\n        <button type=\"button\" class=\"button\">\r\n          <span>b</span>\r\n        </button>\r\n      </p>\r\n      <p class=\"control\">\r\n        <button type=\"button\" class=\"button is-primary is-light\">\r\n          <span>c</span>\r\n        </button>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n```\r\n\r\nhttps://codepen.io/MarceDev/pen/NWrJqpM?editors=1011\r\n\r\n### Expected behavior\r\n\r\nThe left border should not be visible.\r\n\r\n### Actual behavior\r\n\r\nThe left border is visible while the right border is not visible, so this is inconsistent.\r\n","Url":"https://github.com/jgthms/bulma/issues/3188","RelatedDescription":"Open issue \"[bug] Inconsistent button border behavior when grouped with .has-addons class\" (#3188)"},{"Id":"743313325","IsPullRequest":true,"CreatedAt":"2020-11-15T18:50:21","Actor":"gragland","Number":"3186","RawContent":null,"Title":"Add Divjoy to related projects","State":"closed","Body":"This updates the readme to include [Divjoy](https://divjoy.com/?kit=bulma) under related projects.\r\n","Url":"https://github.com/jgthms/bulma/pull/3186","RelatedDescription":"Closed or merged PR \"Add Divjoy to related projects\" (#3186)"},{"Id":"743270109","IsPullRequest":false,"CreatedAt":"2020-11-15T14:37:52","Actor":"elgs","Number":"3185","RawContent":null,"Title":"global is-small","State":"open","Body":"I can apply the `is-small` class to individual components, which works great. I wonder if there is any way I can configure all component size in a global scale? Thanks.","Url":"https://github.com/jgthms/bulma/issues/3185","RelatedDescription":"Open issue \"global is-small\" (#3185)"},{"Id":"740662902","IsPullRequest":true,"CreatedAt":"2020-11-12T16:00:38","Actor":"lionzeye","Number":"3179","RawContent":null,"Title":"Responsive spacing helpers","State":"closed","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is an **improvement**.\r\n\r\n### Proposed solution\r\n\r\nResponsive spacing helpers are a much desired improvement.\r\nhttps://github.com/jgthms/bulma/issues/3016\r\nhttps://github.com/jgthms/bulma/issues/451#issuecomment-647723514\r\n\r\nThis pull request adds responsive spacing helpers for all the current spacing helpers.\r\n\r\nExample of use:\r\n.is-sidebar-menu has a default padding of 2.5 rem. If I want a more compact menu on a certain range of screen sizes, by reducing the padding, I'd immediately have to start writing exceptions in my css. I'd much rather add a single class to the component, like: .p-2-tablet, to get the desired result. If I want similar behaviour on 3 components, I'd have 3 exceptions in my css, when that could be replaced by simply adding classes. If I want different behaviour in a one case I can simply remove the class on that specific page instead of having to create an exception on the already created exception.\r\n\r\n### Tradeoffs\r\n\r\nThe only trade-off I see, is potentially bloating the bulma css output. I personally think the improvement outweighs this drawback, but I'm very eager to hear more opinions.\r\n\r\n### Testing Done\r\n\r\nI've tested multiple responsive spacing helpers per spacing type and direction (or axis).\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n","Url":"https://github.com/jgthms/bulma/pull/3179","RelatedDescription":"Closed or merged PR \"Responsive spacing helpers\" (#3179)"},{"Id":"741720528","IsPullRequest":true,"CreatedAt":"2020-11-12T16:00:04","Actor":"lionzeye","Number":"3184","RawContent":null,"Title":"Responsive spacing helpers v2","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is an **improvement**.\r\n\r\nThis is a fixed version of https://github.com/jgthms/bulma/pull/3179\r\n\r\n### Proposed solution\r\n\r\nResponsive spacing helpers are a much desired improvement.\r\nhttps://github.com/jgthms/bulma/issues/3016\r\nhttps://github.com/jgthms/bulma/issues/451#issuecomment-647723514\r\n\r\nThis pull request adds responsive spacing helpers for all the current spacing helpers.\r\n\r\nExample of use:\r\n.is-sidebar-menu has a default padding of 2.5 rem. If I want a more compact menu on a certain range of screen sizes, by reducing the padding, I'd immediately have to start writing exceptions in my css. I'd much rather add a single class to the component, like: .p-2-tablet, to get the desired result. If I want similar behaviour on 3 components, I'd have 3 exceptions in my css, when that could be replaced by simply adding classes. If I want different behaviour in a one case I can simply remove the class on that specific page instead of having to create an exception on the already created exception.\r\n\r\n### Tradeoffs\r\n\r\nThe only trade-off I see, is potentially bloating the bulma css output. I personally think the improvement outweighs this drawback, but I'm very eager to hear more opinions.\r\n\r\n### Testing Done\r\n\r\nI've tested multiple responsive spacing helpers per spacing type and direction (or axis).\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n","Url":"https://github.com/jgthms/bulma/pull/3184","RelatedDescription":"Open PR \"Responsive spacing helpers v2\" (#3184)"},{"Id":"741640330","IsPullRequest":true,"CreatedAt":"2020-11-12T14:20:55","Actor":"lionzeye","Number":"3183","RawContent":null,"Title":"Add .is-borderless helper class","State":"open","Body":"This is a **new feature**.\r\n\r\n### Proposed solution\r\n\r\nAdds an .is-borderless helper class to remove a border of a specific element\r\nSolves https://github.com/jgthms/bulma/issues/2966\r\n\r\n### Tradeoffs\r\n\r\nNone\r\n\r\n### Testing Done\r\n\r\nConfirmed this works on any bordered bulma element I tried.\r\n\r\n### Changelog updated?\r\n\r\nNo. Will do so if required\r\n","Url":"https://github.com/jgthms/bulma/pull/3183","RelatedDescription":"Open PR \"Add .is-borderless helper class\" (#3183)"},{"Id":"741496482","IsPullRequest":false,"CreatedAt":"2020-11-12T13:40:35","Actor":"scriptcoded","Number":"3181","RawContent":null,"Title":"Variable gap must not use CSS variables","State":"closed","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is about **Bulma**.\r\n\r\nThis is a thought about the implementation of the variable column gap feature.\r\n\r\n### Overview of the problem\r\n\r\n<!-- UNCOMMENT THE APPROPRIATE LINES -->\r\n\r\nThis is about the Bulma **CSS framework**\r\n<!-- This is about the Bulma **Docs** -->\r\nI'm using Bulma **version** [0.9.1]\r\n<!-- My **browser** is: -->\r\n<!-- This is a **Sass** issue: I'm using version [x.x.x] -->\r\nI am sure this issue is **not a duplicate**\r\n\r\n### Description\r\n\r\n<!-- Description of the bug, enhancement, or question -->\r\n\r\nThe [current implementation](https://github.com/jgthms/bulma/blob/0a1ef3c4fbf05d503ac626c7f53b1b7a93ac350b/sass/grid/columns.sass#L476-L513) of the variable gap feature uses CSS variables. While this might make the resulting CSS a bit more compact, I don't think it's strictly necessary.\r\n\r\nSomething like the following should work just fine. I'm not well versed in SASS, so this is in SCSS. Also, breakpoints aren't included.\r\n\r\n```scss\r\n.columns.is-variable {\r\n  @for $i from 0 through 8 {\r\n    &.is-#{$i} {\r\n      margin-left: $i * -0.25rem;\r\n      margin-right: $i * -0.25rem;\r\n\r\n      & > .column {\r\n        padding-left: $i * 0.25rem;\r\n        padding-right: $i * 0.25rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nSkipping CSS variables would mean IE browser compatibility. Although pretty much every other browser supports CSS variables, the more compatibility the better IMO.","Url":"https://github.com/jgthms/bulma/issues/3181","RelatedDescription":"Closed issue \"Variable gap must not use CSS variables\" (#3181)"},{"Id":"741604564","IsPullRequest":true,"CreatedAt":"2020-11-12T13:33:11","Actor":"lionzeye","Number":"3182","RawContent":null,"Title":"Display .dropdown-content as block by default","State":"open","Body":"This is an **improvement**.\r\n\r\nBecause .dropdown-content isn't set to display: block; by default, any non-block elements (span for example) would require a user to set display: block manually. Using a span without that addition causes issues (no background color visible).\r\n\r\n.dropdown-item does have its display attribute set to block already.\r\n\r\n### Proposed solution\r\n\r\nSetting the display attribute of .dropdown-content to block by default.\r\n\r\n### Tradeoffs\r\n\r\nNone.\r\n\r\n### Testing Done\r\n\r\nTested on block and non-block elements\r\n\r\n### Changelog updated?\r\n\r\nNo.","Url":"https://github.com/jgthms/bulma/pull/3182","RelatedDescription":"Open PR \"Display .dropdown-content as block by default\" (#3182)"},{"Id":"740899673","IsPullRequest":true,"CreatedAt":"2020-11-11T16:28:12","Actor":"moladukes","Number":"3180","RawContent":null,"Title":"Adds is-required to label","State":"open","Body":"Adds .is-required class to label adding a required star. \r\nUses the $danger color variable.\r\n\r\n<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is a **improvement**.\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\n\r\n### Proposed solution\r\n\r\nAdd a required class option to form labels\r\n\r\n```\r\n<div class=\"field\">\r\n  <label class=\"label is-required\">Email</label>\r\n  <div class=\"control\">\r\n    <input class=\"input\" type=\"text\" placeholder=\"Text input\">\r\n  </div>\r\n  <p class=\"help is-danger\">This email is invalid</p>\r\n</div>\r\n```\r\n\r\n\r\n\r\n\r\n<img width=\"382\" alt=\"Screen Shot 2020-11-11 at 8 20 39 AM\" src=\"https://user-images.githubusercontent.com/1104139/98836990-3fd8d000-23f7-11eb-9752-2b6643e2e007.png\">\r\n\r\n\r\n```\r\n\r\n<div class=\"field is-horizontal\">\r\n  <div class=\"field-label is-normal\">\r\n    <label class=\"label is-required\">Subject</label>\r\n  </div>\r\n  <div class=\"field-body\">\r\n    <div class=\"field\">\r\n      <div class=\"control\">\r\n        <input class=\"input is-danger\" type=\"text\" placeholder=\"e.g. Partnership opportunity\">\r\n      </div>\r\n      <p class=\"help is-danger\">\r\n        This field is required\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n```\r\n\r\n\r\n<img width=\"532\" alt=\"Screen Shot 2020-11-11 at 8 25 44 AM\" src=\"https://user-images.githubusercontent.com/1104139/98837193-829aa800-23f7-11eb-8fe0-d448ea26ee4a.png\">\r\n\r\n\r\n<!-- Which specific problem does this PR solve and how?  -->\r\n<!-- If it fixes a particular Issue, add \"Fixes #ISSUE_NUMBER\" in your title -->\r\n\r\n### Tradeoffs\r\n\r\nMay want to style your required labels differently than the classic star pattern and or move the star as an :after element. \r\nPerhaps an .is-required class on the .field wrapper could be more elegant?\r\n\r\n```\r\n<div class=\"field is-required\">\r\n  <label class=\"label\">Email</label>\r\n  <div class=\"control\">\r\n    <input class=\"input\" type=\"text\" placeholder=\"Text input\">\r\n  </div>\r\n  <p class=\"help is-danger\">This email is invalid</p>\r\n</div>\r\n```\r\n\r\n\r\n<!-- What are the drawbacks of this solution? Are there alternative ones? -->\r\n<!-- Think of performance, build time, usability, complexity, coupling…) -->\r\n\r\n### Testing Done\r\n\r\nTested on Standard and Horizontal form labels.\r\n\r\n<!-- BEFORE SUBMITTING YOUR PR, MAKE SURE TO FOLLOW THESE STEPS: -->\r\n<!-- 1. Pull the latest `master` branch -->\r\n<!-- 2. Make sure your Sass code is compliant with the [Bulma Sass styleguide](https://github.com/jgthms/bulma/blob/master/.github/CONTRIBUTING.md#bulma-sass-styleguide) -->\r\n<!-- 3. Make sure your PR only affects `.sass` or documentation files -->\r\n<!-- 4. [Try your changes](https://github.com/jgthms/bulma/blob/master/.github/CONTRIBUTING.md#try-your-changes). -->\r\n\r\n<!-- How have you confirmed this feature works? -->\r\n<!-- Please explain more than \"Yes\". -->\r\n\r\n### Changelog updated?\r\n\r\nNo.\r\n\r\n<!-- Thanks! -->\r\n","Url":"https://github.com/jgthms/bulma/pull/3180","RelatedDescription":"Open PR \"Adds is-required to label\" (#3180)"},{"Id":"740548679","IsPullRequest":false,"CreatedAt":"2020-11-11T07:46:37","Actor":"ryanlid","Number":"3178","RawContent":null,"Title":"table content  overflow in .content","State":"open","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is about **Bulma**.\r\n\r\n<!-- Is it about Bulma or about the Docs? -->\r\n<!-- Is it a bug/feature/question or do you need help? -->\r\n<!-- If it's a bug, is it a browser bug? -->\r\n\r\n### Overview of the problem\r\n\r\n<!-- UNCOMMENT THE APPROPRIATE LINES -->\r\n\r\nThis is about the Bulma **CSS framework**\r\n<!-- This is about the Bulma **Docs** -->\r\nI'm using Bulma **version** [0.9.1]\r\nMy **browser** is: Microsoft Edge 86\r\n<!-- This is a **Sass** issue: I'm using version [x.x.x] -->\r\n<!-- I am sure this issue is **not a duplicate**? -->\r\n\r\n### Description\r\n\r\n<!-- Description of the bug, enhancement, or question -->\r\n\r\n### Steps to Reproduce\r\n\r\n<!--\r\n1. First Step\r\n2. Second Step\r\n3. and so on...\r\n-->\r\n\r\n1. Copy the following into an html file:\r\n\r\n```\r\n<section class=\"section\">\r\n  <div class=\"box\">\r\n    <div class=\"content\">\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>2</td>\r\n            <td>3</td>\r\n            <td>4</td>\r\n            <td>5</td>\r\n            <td>6</td>\r\n            <td>7</td>\r\n            <td>8</td>\r\n            <td>9</td>\r\n            <td>10</td>\r\n            <td>11</td>\r\n            <td>12</td>\r\n            <td>13</td>\r\n            <td>14</td>\r\n            <td>15</td>\r\n            <td>16</td>\r\n            <td>17</td>\r\n            <td>18</td>\r\n            <td>19</td>\r\n            <td>20</td>\r\n            <td>21</td>\r\n            <td>22</td>\r\n            <td>23</td>\r\n            <td>24</td>\r\n            <td>25</td>\r\n            <td>26</td>\r\n            <td>27</td>\r\n            <td>28</td>\r\n            <td>29</td>\r\n            <td>30</td>\r\n            <td>31</td>\r\n            <td>32</td>\r\n            <td>33</td>\r\n            <td>34</td>\r\n            <td>35</td>\r\n            <td>36</td>\r\n            <td>37</td>\r\n            <td>38</td>\r\n            <td>39</td>\r\n            <td>40</td>\r\n            <td>41</td>\r\n            <td>42</td>\r\n            <td>43</td>\r\n            <td>44</td>\r\n            <td>45</td>\r\n            <td>46</td>\r\n            <td>47</td>\r\n            <td>48</td>\r\n            <td>49</td>\r\n            <td>50</td>\r\n          </tr>\r\n          <tr>\r\n            <td>2</td>\r\n            <td>4</td>\r\n            <td>6</td>\r\n            <td>8</td>\r\n            <td>10</td>\r\n            <td>12</td>\r\n            <td>14</td>\r\n            <td>16</td>\r\n            <td>18</td>\r\n            <td>20</td>\r\n            <td>22</td>\r\n            <td>24</td>\r\n            <td>26</td>\r\n            <td>28</td>\r\n            <td>30</td>\r\n            <td>32</td>\r\n            <td>34</td>\r\n            <td>36</td>\r\n            <td>38</td>\r\n            <td>40</td>\r\n            <td>42</td>\r\n            <td>44</td>\r\n            <td>46</td>\r\n            <td>48</td>\r\n            <td>50</td>\r\n            <td>52</td>\r\n            <td>54</td>\r\n            <td>56</td>\r\n            <td>58</td>\r\n            <td>60</td>\r\n            <td>62</td>\r\n            <td>64</td>\r\n            <td>66</td>\r\n            <td>68</td>\r\n            <td>70</td>\r\n            <td>72</td>\r\n            <td>74</td>\r\n            <td>76</td>\r\n            <td>78</td>\r\n            <td>80</td>\r\n            <td>82</td>\r\n            <td>84</td>\r\n            <td>86</td>\r\n            <td>88</td>\r\n            <td>90</td>\r\n            <td>92</td>\r\n            <td>94</td>\r\n            <td>96</td>\r\n            <td>98</td>\r\n            <td>100</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</section>\r\n```\r\n2.Open page in browser.\r\n\r\n### Expected behavior\r\n\r\n<!-- What you expected to happen -->\r\n\r\nif table content too much, It should be scrollable, not overflow\r\n\r\n### Actual behavior\r\n\r\n![codepen](https://user-images.githubusercontent.com/6867964/98783211-2a35cb80-2434-11eb-89d0-6f7a60d3bdcf.png)\r\n\r\n<!-- What actually happened -->\r\n","Url":"https://github.com/jgthms/bulma/issues/3178","RelatedDescription":"Open issue \"table content  overflow in .content\" (#3178)"},{"Id":"738339525","IsPullRequest":false,"CreatedAt":"2020-11-07T23:50:11","Actor":"marcebdev","Number":"3177","RawContent":null,"Title":"[Feature] Allow is-static chaining with color classes and disabled prop","State":"open","Body":"This is about **Bulma**.\r\nIt is a feature request to hopefully help improve styling.\r\n\r\n### Overview of the problem\r\n\r\nThis is about the Bulma **CSS framework**\r\nI'm using Bulma **version** [0.9.1]\r\nI am sure this issue is **not a duplicate**? Yes\r\n\r\n### Description\r\nCombining `.is-static` with another color class for instance as with `.is-primary` and `.is-disabled` or `.is-light` does not produce complementary behavior as `.is-static` overrides the color class' property.\r\n\r\n#### Why?\r\n1) For better flexibility and consistency I think it would make sense to have `is-static` be properly chainable with color classes as well as with `is-light` and `disabled` so developers can use it in combination to achieve a specific desired effect.`\r\n\r\n2) I believe `disabled` used to have this issue (not currently able to reproduce it) where this opens the door for color pallets that are hardly readable which is poor for accessibility, where it is difficult for any user to read.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add the `is-static` class along with a color class such as `is-primary` to any compatible element.\r\n\r\n### Expected behavior\r\n\r\nScenario 1:\r\nApplies static's `pointer-events` and `box-shadow` properties while matching with the selected color palette.\r\n\r\nScenario 2:\r\nApplying `<class=\"is-static is-primary\" disabled>` treats the button like `<class=\"is-static disabled>` but with the additional `is-static` properties so that there would be no `pointer` or `box-shadow`. These should work together because for one it causes it to be unreadable and a user might want an element to appear with the custom shaded disabled styling just without any `pointer-event`. \r\n\r\n### Actual behavior\r\n\r\nScenario 1:\r\nFor instance styling, a button with `\"is-primary is-static\" overpowers `is-primary`'s color palette. \r\n\r\nscenario 2:\r\nStyling a button as `<class=\"is-static is-primary\" disabled>` keeps the chosen color palette class but applies `is-static`'s `color` property which makes it unreadable.","Url":"https://github.com/jgthms/bulma/issues/3177","RelatedDescription":"Open issue \"[Feature] Allow is-static chaining with color classes and disabled prop\" (#3177)"},{"Id":"738287216","IsPullRequest":true,"CreatedAt":"2020-11-07T18:15:21","Actor":"jgthms","Number":"3176","RawContent":null,"Title":"Use imports everywhere","State":"closed","Body":"<!-- PLEASE READ THE FOLLOWING INSTRUCTIONS -->\r\n<!-- DO NOT REBUILD THE CSS OUTPUT IN YOUR PR -->\r\n\r\n<!-- Choose one of the following: -->\r\nThis is an **improvement**.\r\n\r\n<!-- New feature? Update the CHANGELOG.md too, and eventually the Docs. -->\r\n<!-- Improvement? Explain how and why. -->\r\n<!-- Bugfix? Reference that issue as well. -->\r\n\r\n### Proposed solution\r\n\r\nInstead of relying on the ancestor Sass file to import dependencies, each component file imports its own dependencies.\r\nFixes #2797\r\n\r\n### Tradeoffs\r\n\r\nNo real tradeoff, unless some old Sass version does not support importing the same file multiple times.\r\n\r\n### Testing Done\r\n\r\nTested with latest versions of:\r\n\r\n* Dart Sass `npm sass@1.29.0`\r\n* Node Sass (LibSass) `npm node-sass@5.0.0`\r\n* even Ruby Sass `sass-3.7.4.gem`\r\n\r\n### Changelog updated?\r\n\r\nYes.\r\n\r\n<!-- Thanks! -->\r\n","Url":"https://github.com/jgthms/bulma/pull/3176","RelatedDescription":"Closed or merged PR \"Use imports everywhere\" (#3176)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-03T05:30:18.4714724Z","RunDurationInMilliseconds":876}